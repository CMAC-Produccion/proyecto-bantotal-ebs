create or replace package pq_cr_Factura_Electronica is

  -- *****************************************************************
  -- Nombre                     : PAQUETE FACTURACION ELECTRONICA
  -- Sistema                    : BANTOTAL
  -- Módulo                     : Créditos - Activas
  -- Versión                    : 1.0
  -- Fecha de Creación          : 2018.05.17
  -- Autor de Creación          : RMOGROVEJO
  -- Uso                        : OBTENER INFORMACION PARA FACTURACION ELECTRONICA
  -- Estado                     : Activo
  -- Acceso                     : Público
  -- Fecha de Modificación      : 
  -- Autor de la Modificación   :  
  -- Descripción de Modificación: 2018.07.16 DCASTRO Modificacion de correo
  --                              2019.01.25 DCASTRO se modifico Sp_cr_proceso_bach
  --                              2019.01.25 DCASTRO se modifico sp_cr_transaccion_valida, sp_cr_Nota_credito_com           
  --                              2020.11.01 JRODRIGUEJ se modificarón los procedimientos para la generación de comprobantes electrónicos
  --                              2020.12.08 JRODRIGUEJ se modificó el procedimiento para la generación del NCE mediante el rubro
  --                              2020.12.29 JRODRIGUEJ se agregó un procedimiento para reprocesar NCE's de un día posterior a la fecha de proceso
  -- *****************************************************************

  procedure sp_Num_Documento(pn_cuenta in number,
                             pn_pendoc out character,
                             pc_penom  out character,
                             pc_tdoc   out character,
                             pn_pais   out number,
                             pn_petdoc out number,
                             pd_pgfape out date);
  procedure sp_Dir_cmac(pn_aosuc   in number,
                        pc_sccall2 out varchar2,
                        pn_sctelf2 out varchar2);
  procedure sp_Dir_cliente(pn_pendoc    in character,
                           pv_tdoc      in number,
                           pn_pais      in number,
                           pc_sngc13dir out char,
                           pc_fst071dsc out char,
                           pc_locnom    out char,
                           pc_depnom    out char,
                           pn_ubg       out char);

  procedure sp_Fecha_Sys(pc_fecha out varchar2);
  procedure sp_tra_validas(pd_pgfape in date);

  procedure sp_cr_Detalle_Factura_2(pd_pgfape in date);

  -- 
  -- Retrofitted 
  FUNCTION DinTex(x IN number) RETURN varchar2;
  -- 
  -- Retrofitted 
  FUNCTION NumTex(x IN number) RETURN varchar2;
  PRAGMA RESTRICT_REFERENCES(dintex, WNDS, WNPS);
  PRAGMA RESTRICT_REFERENCES(numtex, WNDS, WNPS);

  procedure sp_cr_Nota_Credito(pd_pgfape in date);

  procedure sp_cr_Nota_Credito_Montos(pd_pgfape in date);

  procedure sp_cr_Cabecera_factura(pd_pgfape in date);

  procedure sp_cr_Cabecera_notacredito(pd_pgfape in date);

  procedure sp_cr_detalle_predio(pc_aqpa463mod in number,
                                 pc_aqpa463suc in number,
                                 pc_aqpa463mda in number,
                                 pc_aqpa463pap in number,
                                 pc_aqpa463cta in number,
                                 pc_aqpa463ope in number,
                                 pc_aqpa463sbo in number,
                                 pc_aqpa463top in number,
                                 pc_partida    out varchar2,
                                 pc_contrato   out varchar2,
                                 pc_direccion  out varchar2,
                                 pc_urba       out varchar2,
                                 pc_dpto       out varchar2,
                                 pc_prov       out varchar2,
                                 pc_dist       out varchar2,
                                 pc_ubigeo     out varchar);

  function fn_fecha_desembolso(pc_aqpa463cta in number,
                               pc_aqpa463ope in number) return date;

  Procedure sp_cr_cobroEfectivo(pn_pgcod  in number,
                                pn_hcmod  in number,
                                pn_hsucor in number,
                                pn_htran  in number,
                                pn_hnrel  in number,
                                pn_hfcon  in date,
                                pc_serie  in char,
                                pn_corr   in number,
                                pn_mto    out number);
  --------------------------------
  Procedure sp_cr_cobroEfectivoNC(pn_pgcod  in number,
                                  pn_hcmod  in number,
                                  pn_hsucor in number,
                                  pn_htran  in number,
                                  pn_hnrel  in number,
                                  pd_hfcon  in date,
                                  pc_serie  in char,
                                  pn_corr   in number,
                                  pn_mto    out number);
  --------------------------------
  procedure sp_cr_Factura_E(pc_AQPA465SERIE    in char,
                            pc_AQPA465CORR     in number,
                            pc_AQPA465PGCOD    in number,
                            pc_AQPA465MOD      in number,
                            pc_AQPA465SUCOREND in number,
                            pc_AQPA465TRAN     in number,
                            pc_AQPA465REL      in number,
                            pc_AQPA465CON      in date,
                            pc_ESTADO          out char,
                            pc_MENSAJE         out char);

  --------------------------------
  procedure sp_cr_NUM_Factura(pc_AQPA465PGCOD    in number,
                              pc_AQPA465MOD      in number,
                              pc_AQPA465SUCOREND in number,
                              pc_AQPA465TRAN     in number,
                              pc_AQPA465REL      in number,
                              pc_AQPA465CON      in date,
                              pc_SERIE           out varchar2,
                              pc_NUMERO          out number);
  --------------------------------
  --------------------------------
  procedure sp_cr_NUM_NC(pc_AQPA465PGCOD    in number,
                         pc_AQPA465MOD      in number,
                         pc_AQPA465SUCOREND in number,
                         pc_AQPA465TRAN     in number,
                         pc_AQPA465REL      in number,
                         pc_AQPA465CON      in date,
                         pc_SERIE           out varchar2,
                         pc_NUMERO          out number);
  --------------------------------  
  --------------------------------
  --------------------------------
  procedure sp_cr_NOTACREDITO_E(pc_AQPA465SERIE    in char,
                                pc_AQPA465CORR     in number,
                                pc_AQPA465PGCOD    in number,
                                pc_AQPA465MOD      in number,
                                pc_AQPA465SUCOREND in number,
                                pc_AQPA465TRAN     in number,
                                pc_AQPA465REL      in number,
                                pc_AQPA465CON      in date,
                                pc_ESTADO          out char,
                                pc_MENSAJE         out char);
  --------------------------------  
  procedure sp_cr_Factura_R(pc_AQPA465SERIE    in char,
                            pc_AQPA465CORR     in number,
                            pc_AQPA465PGCOD    in number,
                            pc_AQPA465MOD      in number,
                            pc_AQPA465SUCOREND in number,
                            pc_AQPA465TRAN     in number,
                            pc_AQPA465REL      in number,
                            pc_AQPA465CON      in date,
                            pc_ESTADO          out char,
                            pc_MENSAJE         out char);

  --------------------------------
  procedure sp_tra_validas_Mov(pc_AQPA465PGCOD    in number,
                               pc_AQPA465MOD      in number,
                               pc_AQPA465SUCOREND in number,
                               pc_AQPA465TRAN     in number,
                               pc_AQPA465REL      in number,
                               pc_AQPA465CON      in date,
                               pc_NEWSERIE        out char,
                               pc_NEWCORR         out char);
  --------------------------------  
  procedure sp_cr_Atualiza_DOC(pc_AQPA465SERIE    in char,
                               pc_AQPA465CORR     in number,
                               pc_AQPA465PGCOD    in number,
                               pc_AQPA465MOD      in number,
                               pc_AQPA465SUCOREND in number,
                               pc_AQPA465TRAN     in number,
                               pc_AQPA465REL      in number,
                               pc_AQPA465CON      in date,
                               pc_AQAA465EST      in char,
                               pc_ESTADO          out char,
                               pc_MENSAJE         out char);
  --------------------------------
  procedure sp_cr_NOTACREDITO_R(pc_AQPA465SERIE    in char,
                                pc_AQPA465CORR     in number,
                                pc_AQPA465PGCOD    in number,
                                pc_AQPA465MOD      in number,
                                pc_AQPA465SUCOREND in number,
                                pc_AQPA465TRAN     in number,
                                pc_AQPA465REL      in number,
                                pc_AQPA465CON      in date,
                                pc_ESTADO          out char,
                                pc_MENSAJE         out char);

  --------------------------------
  procedure sp_cr_Nota_Credito_MOV(pc_AQPA465PGCOD    in number,
                                   pc_AQPA465MOD      in number,
                                   pc_AQPA465SUCOREND in number,
                                   pc_AQPA465TRAN     in number,
                                   pc_AQPA465REL      in number,
                                   pc_AQPA465CON      in date,
                                   pc_NEWSERIE        out char,
                                   pc_NEWCORR         out char);
  --------------------------------
  --------------------------------
  procedure sp_cr_pk_credito(pc_AQPA465PGCOD    in number,
                             pc_AQPA465MOD      in number,
                             pc_AQPA465SUCOREND in number,
                             pc_AQPA465TRAN     in number,
                             pc_AQPA465REL      in number,
                             pc_AQPA465ORD      in number,
                             pd_AQPA465CON      in date,
                             pn_cod             out number,
                             pn_mod             out number,
                             pn_suc             out number,
                             pn_mda             out number,
                             pn_pap             out number,
                             pn_cta             out number,
                             pn_ope             out number,
                             pn_sbo             out number,
                             pn_top             out number,
                             pc_FLAG            out char,
                             pn_rubro           out number);
  --------------------------------    
  procedure sp_cr_Dif_Red( --obtencion de diferido y redondeo
                          pc_AQPA465PGCOD    in number,
                          pc_AQPA465MOD      in number,
                          pc_AQPA465SUCOREND in number,
                          pc_AQPA465TRAN     in number,
                          pc_AQPA465REL      in number,
                          pd_AQPA465CON      in date,
                          pn_dif             out number,
                          pn_red             out number);
  ------------------------------
  --mod@abr20181207
  Procedure sp_job_TraValidas_HIS(pd_fecpro in varchar2);
  procedure sp_tra_validas_HIS( /*pn_numsuc in number, */pd_pgfape in date); --mod@abr20181207
  ------------------------------
  procedure sp_transaccion_valida(pd_pgfape in date);
  --------------------------------
  --------------------------------
  procedure sp_cr_cta_mda(pc_AQPA465PGCOD    in number,
                          pc_AQPA465MOD      in number,
                          pc_AQPA465SUCOREND in number,
                          pc_AQPA465TRAN     in number,
                          pc_AQPA465REL      in number,
                          pc_AQPA465ORD      in number,
                          pd_AQPA465CON      in date,
                          pn_mda             out number,
                          pn_cta             out number);
  ------------------------------

  function FN_FA_CUENTA(p_n_pgcod  number,
                        p_n_itsuc  number,
                        p_n_itmod  number,
                        p_n_ittran number,
                        p_n_itnrel number,
                        p_n_itord  number,
                        p_d_itfcon date) return number;
  --------------------------------
  procedure SP_PA_CUENTA(p_n_pgcod  number,
                         p_n_itsuc  in number,
                         p_n_itmod  in number,
                         p_n_ittran in number,
                         p_n_itnrel in number,
                         p_n_itord  in number,
                         p_d_itfcon in date,
                         p_n_cuenta out number,
                         p_n_moneda out number);
  --------------------------------
  procedure sp_fa_trx_COMISION(pd_pgfape in date);
  ------------------------------  
  procedure sp_fa_COMISION(pn_pgcod    in number,
                           pn_hcmod    in number,
                           pn_hsucor   in number,
                           pn_htran    in number,
                           pn_hnrel    in number,
                           pn_hfcon    in date,
                           pn_concepto in number);
  --------------------------------  
  procedure sp_cr_Detalle_Factura_CO(pd_pgfape      in date,
                                     pc_serie       in char,
                                     pn_correlativo in number,
                                     pn_concepto    in number);
  --------------------------------  
  procedure sp_cr_Cabecera_trx(pd_pgfape      in date,
                               pc_serie       in char,
                               pn_correlativo in number,
                               pn_concepto    in number);
  --------------------------------
  Procedure sp_cr_cobroIGV(pn_pgcod  in number,
                           pn_hcmod  in number,
                           pn_hsucor in number,
                           pn_htran  in number,
                           pn_hnrel  in number,
                           pn_hfcon  in date,
                           pc_serie  in char,
                           pn_corr   in number,
                           pn_mto    out number);
  --------------------------------    
  procedure sp_cr_Nota_Credito_COM(pd_pgfape in date);
  --------------------------------    
  -------------------------------------------------------------------------
  procedure sp_cr_datos_cliente(pn_pais    in fsr008.pepais%type, -- PE Pais del Cliente.
                                ln_petdoc  in fsr008.petdoc%type, -- PE Tipo de documento del Cliente.
                                lc_pendoc  in fst198.tp1desc%type, -- PE Numero de documento del Cliente.
                                lv_correo  out varchar, -- PS devuelve Correo del Cliente.
                                lv_cpai    out fst198.tp1desc%type, -- PS devuelve Pais del Cliente segun SUNAT - guia.
                                lv_codtdoc out fst198.tp1desc%type -- PS devuelve Codigo del Tipo de documento Cliente segun SUNAT - guia.
                                );
  -------------------------------------------------------------------------
  procedure sp_cr_datos_sunat(lvi_sucursal in fsd010.aosuc%type, -- Ingresa Sucursal del Credito.
                              ln_mda       in fsd010.aomda%type, -- Ingresa Moneda del Credito.
                              
                              lv_tipoope     out fst198.tp1desc%type, -- Tipo de Operacion
                              lc_oneroso     out fst198.tp1nro1%type, -- Codigo de Tipo de importe de afectaci?n.
                              lv_afecigv     out fst198.tp1desc%type, -- Afectacion del IGV.
                              lv_idtrbsunat  out fst198.tp1nro1%type, -- Identificaci?n del c?digo de tributo seg?n catalogo SUNAT
                              lv_nomtrbsunat out fst198.tp1desc%type, -- Identificaci?n de la descripci?n del tributo seg?n catalogo SUNAT
                              lv_destiptrb   out fst198.tp1desc%type, -- C?digo del Tipo de Atributo
                              lv_CPAIS       out fst198.tp1desc%type, -- Descripcion del Pais - SUNAT
                              --
                              pc_sccall out fst001.sccall%type, -- Direccion Agencia del Credito
                              pn_sctelf out fst001.sctelf%type, -- Telefono Agencia del Credito.
                              --------------------------------------------------------------------------
                              lv_tipomda out fst198.tp1desc%type, -- Codigo de la Moneda - SUNAT            
                              ln_docemp  out fst198.tp1nro1%type, -- Codigo tipo doc empresa 
                              lv_tipemp  out fst198.tp1nro1%type, -- Codigo tipo empresa SUNAT
                              lv_ruc     out fst198.tp1desc%type, -- RUC de la empresa CAJA AREQUIPA
                              lv_NCOM    out fst198.tp1desc%type, -- Nombre Comercial.
                              lv_ubg     out fst198.tp1nro1%type, -- Ubigeo Caja 
                              lv_CALLE   out fst198.tp1desc%type, -- Direccion Caja
                              lv_TELF    out fst198.tp1desc%type, -- Telefono Caja
                              lv_web     out fst198.tp1desc%type, -- Web Caja 
                              lv_DEPA    out fst198.tp1desc%type, -- Departamento Caja 
                              lv_PROV    out fst198.tp1desc%type, -- Provincia Caja
                              lv_DIST    out fst198.tp1desc%type, -- Distrito Caja 
                              lv_rzn1    out fst198.tp1desc%type, -- Razon Social Caja 1ra Parte
                              lv_rzn2    out fst198.tp1desc%type, -- Razon Social Caja 2da Parte
                              --Nota de Credito 
                              lv_codtipo out fst198.tp1nro1%type, -- Codigo del Tipo de Comprobante Nota de credito.
                              lc_codtipo out varchar, -- Codigo del Tipo de Comprobante Factura.
                              lv_codcmen out varchar, -- Codigo del Tipo de Comprobante Nota de Credito E.
                              --lc_nom1        out fst198.tp1desc%type,
                              --lc_nom2        out fst198.tp1desc%type
                              lc_codsunat      out fst198.tp1nro1%type, -- Codigo Sunat - Extornos 
                              ln_codtributario out fst198.tp1nro1%type, -- Codigo Tributario - Extornos
                              lc_sustento      out fst198.tp1desc%type, -- Sustento - Extornos 
                              lc_despago       out fst198.tp1desc%type, -- Observacion del Tipo de Pago- Extornos NC    
                              lc_desopera      out fst198.tp1desc%type -- Nota de operaci?n.                       
                              );
  -------------------------------------------------------------------------                      
  procedure sp_cr_datos_ncredito(lc_codtipo       out fst198.tp1nro1%type, -- ocdigo del Tipo de Tributo
                                 lv_codcmen       out varchar, -- Codigo del Tipo de Comprobante Nota de Credito E.
                                 ln_codtributario out fst198.tp1nro1%type, -- Codigo Tributario - Extornos
                                 lc_sustento      out fst198.tp1desc%type, -- Sustento - Extornos 
                                 lc_despago       out fst198.tp1desc%type, -- Observacion del Tipo de Pago- Extornos NC    
                                 lc_desopera      out fst198.tp1desc%type -- Nota de operaci?n. (No se usa comentar)
                                 );
  -------------------------------------------------------------------------
  procedure sp_cr_Nota_Credito_Detalle(pd_pgfape      in date,
                                       pc_serie       in char,
                                       pn_correlativo in number,
                                       pn_concepto    in number);
  -------------------------------------------------------------------------

  -----------------------------------------------------------
  procedure sp_fa_trx_COMISIONH(pd_pgfape in date);
  -----------------------------------------------------------
  procedure sp_fa_COMISIONH(pn_pgcod    in number,
                            pn_hcmod    in number,
                            pn_hsucor   in number,
                            pn_htran    in number,
                            pn_hnrel    in number,
                            pn_hfcon    in date,
                            pn_concepto in number);
  -----------------------------------------------------------
  procedure sp_cr_carga_documento(pn_pgcod  in number,
                                  pn_hcmod  in number,
                                  pn_hsucor in number,
                                  pn_htran  in number,
                                  pn_hnrel  in number,
                                  pn_hfcon  in date,
                                  pc_flag   out char);
  -----------------------------------------------------------  
  procedure sp_cr_COMISION_TRX(pn_pgcod  in number,
                               pn_hcmod  in number,
                               pn_hsucor in number,
                               pn_htran  in number,
                               pn_hnrel  in number,
                               pn_hfcon  in date);
  -----------------------------------------------------------  
  procedure sp_tra_validas_Trx(pn_pgcod       in number,
                               pn_hcmod       in number,
                               pn_hsucor      in number,
                               pn_htran       in number,
                               pn_hnrel       in number,
                               pn_hfcon       in date,
                               pc_serie       out char,
                               pn_correlativo out number);
  -----------------------------------------------------------
  procedure sp_tra_validas_TrH(pn_pgcod       in number,
                               pn_hcmod       in number,
                               pn_hsucor      in number,
                               pn_htran       in number,
                               pn_hnrel       in number,
                               pn_hfcon       in date,
                               pc_serie       out char,
                               pn_correlativo out number);
  -----------------------------------------------------------  
  procedure sp_cr_Detalle_Factura_trx(pd_pgfape      in date,
                                      pc_serie       in char,
                                      pn_correlativo in number);
  ---------------------------------------------------------------------------------------
  procedure sp_cr_Nota_Credito_trx(pc_AQPA465SERIE    in char,
                                   pc_AQPA465CORR     in number,
                                   pc_AQPA465PGCOD    in number,
                                   pc_AQPA465MOD      in number,
                                   pc_AQPA465SUCOREND in number,
                                   pc_AQPA465TRAN     in number,
                                   pc_AQPA465REL      in number,
                                   pc_AQPA465CON      in date);
  -----------------------------------------------------------  
  procedure sp_fa_LibroVentas_trx(pn_pgcod       in number,
                                  pn_hcmod       in number,
                                  pn_hsucor      in number,
                                  pn_htran       in number,
                                  pn_hnrel       in number,
                                  pn_hfcon       in date,
                                  pc_serie       in char,
                                  pn_correlativo in number);
  -----------------------------------------------------------  
  procedure sp_fa_LibroVentas(pd_pgfape in date);
  -----------------------------------------------------------  
  Procedure Sp_cr_proceso_bach(pd_fecpro in date);
  ---------------------------------------------------------------------------------------
  Procedure Sp_cr_proceso_bach_2(pd_fecpro in date);
  ---------------------------------------------------------------------------------------
  ---------------------------PROCESOS IGV------------------------------------
  procedure sp_tra_validas_IGV(pd_pgfape in date);
  procedure sp_cr_Detalle_Factura_IGV(pd_pgfape in date);
  procedure sp_cr_Cabecera_facturaIGV(pd_pgfape in date);
  Procedure Sp_cr_calculaTotal(pd_fecpro in date);
  --Procedure sp_job_CargaIni(pd_fecpro in varchar2);
  --Procedure Sp_cr_carga_ini (/*pn_numsuc in number,*/ ld_fecpro in varchar2);
  ---------------------------------------------------------
  procedure sp_cr_verificar_fin_mes(pc_fecha in date);
  ---------------------------------------------------------
  procedure sp_cr_guardar_historico(pc_fecha in date);
  ---------------------------------------------------------
  procedure sp_tra_validas_HIS_2(pd_pgfape in date, pc_sucurs in number);
  -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --   
  procedure sp_cr_Detalle_Factura_3(pd_pgfape in date, pc_sucurs in number);
  -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 
  procedure sp_cr_Nota_Credito_COM_3(pd_pgfape in date,
                                     pc_sucurs in number);
  -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --   
  procedure sp_cr_sch_dae(pd_fecpro in date);
  -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --  
  procedure sp_cr_sch_nce(pd_fecpro in date);
  -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --    
  Function fn_cr_verifica_tarea(P_C_NOMJOB IN VARCHAR2,
                                P_C_HOSTNA IN VARCHAR2) return number;
  -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 
  function fn_sumatoria_total(pn_pgc   number,
                              pn_mod   number,
                              pn_suc   number,
                              pn_trx   number,
                              pn_rel   number,
                              pn_fecha date) return number;
  -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --                                     
  procedure sp_tra_validas_HIS_M(pd_pgfape in date, pc_sucurs in number);
  -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --                                     
  procedure sp_cr_Detalle_Factura_M(pd_pgfape in date, pc_sucurs in number);
  -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --   
  procedure sp_cr_Cabecera_factura_M(pd_pgfape in date,
                                     pc_sucurs in number);
  -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --     
  procedure sp_cr_Nota_Credito_COM_M(pd_pgfape in date,
                                     pc_sucurs in number);
  -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --   
  procedure sp_cr_sch_dae_m(pd_fecpro in date);
  -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --  
  procedure sp_cr_sch_nce_m(pd_fecpro in date);
  -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --    
  Procedure sp_cr_proceso_inserta_M(pd_Fecpro in date, pc_sucurs in number);
  -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --      
  Procedure Sp_cr_proceso_bach_2M(pd_fecpro in date, pc_sucurs in number);
  -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --        
  --procedure sp_cr_sch_inserta_m(pd_fecpro in date);  
  -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --          
  -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --     
  procedure sp_cr_Detalle_Factura_COH(pd_pgfape      in date,
                                      pc_serie       in char,
                                      pn_correlativo in number,
                                      pn_concepto    in number);

  -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 
  Procedure sp_cr_proceso_inserta_CO(pd_Fecpro in date);
  -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 
  procedure sp_cr_Total_Comision(pc_serie       in char,
                                 pn_correlativo in number,
                                 pd_hfcon       in date); ---se 20221029 se agrego parametro

  procedure sp_cr_Total_Comision1(pc_serie       in char,
                                  pn_correlativo in number,
                                  pd_hfcon       in date); ---se 20221029 se agrego parametro
  ---------------------------
  procedure sp_cr_Nota_Cred_COM4(pd_pgfape in date);
  -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --                                    
  -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --      
  procedure sp_cr_NotaCred_REGU(pd_fecini in date,
                                pd_fecfin in date,
                                pd_fecenv in date,
                                pc_numdoc in character);
  -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --      
  procedure sp_cr_Comision_IND;
  -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --                                                                        
  procedure sp_cr_regulariza(pd_fecha in date);
  -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --                                       
  procedure sp_cr_NotaCred_IND;
  -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --                                       
  procedure sp_cr_Detalle_Fact_CO1(pd_pgfape      in date,
                                   pc_serie       in char,
                                   pn_correlativo in number,
                                   pn_concepto    in number);
  -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --                                       
  Procedure sp_cr_cobroEfectivo1(pn_pgcod  in number,
                                 pn_hcmod  in number,
                                 pn_hsucor in number,
                                 pn_htran  in number,
                                 pn_hnrel  in number,
                                 pn_hfcon  in date,
                                 pc_serie  in char,
                                 pn_corr   in number,
                                 pn_mto    out number);
  --------------------------------------- 

  -----------------------------------------------------------
  procedure valida_recaudacion(pc_ruc   in char,
                               pn_hcmod in number,
                               pn_htran in number,
                               pc_ind   out char);

  procedure sp_cr_NotaCred_UNI(pc_Serie  in varchar2,
                               pn_numero in number,
                               pd_fecenv in date);
  ------------------------------------------------------
  procedure sp_cr_Comision_REGU(p_pgcod  in number,
                                p_hcmod  in number,
                                p_hsucor in number,
                                p_htran  in number,
                                p_hnrel  in number,
                                p_hfcon  in date,
                                p_pcorr  out number);
  ----------------------------------------------------
  procedure sp_tra_genera_IGV(pc_AQPA465PGCOD in number,
                              pc_AQPA465MOD   in number,
                              pc_AQPA465SUCOR in number,
                              pc_AQPA465TRAN  in number,
                              pc_AQPA465REL   in number,
                              pc_AQPA465CON   in date);
  ------------------------------------------------------                             
procedure sp_cr_Det_Factura_IGV1(pd_pgfape in date,
                                AQPA463PGCOD  in number,
                                AQPA463HCMOD  in number,
                                AQPA463HSUCOR in number,
                                AQPA463HTRAN  in number,
                                AQPA463HNREL  in number
                                );
  ------------------------------------------------------ 
 procedure sp_cr_Cabecera_facturaIGV1(pd_pgfape in date,
                                AQPA463PGCOD  in number,
                                AQPA463HCMOD  in number,
                                AQPA463HSUCOR in number,
                                AQPA463HTRAN  in number,
                                AQPA463HNREL  in number);  
--------------------------------------------------------- 
procedure sp_actualizar_fecha(pd_fecpro in date);
--------------------------------------------------------- 
procedure sp_datos_campania (pd_fecha in date,
                             pn_cuenta in number,
                             pc_serie in varchar2,
                             pn_numero in number,
                             pn_emp in number,
                             pn_suc in number,
                             pn_mod in number,
                             pn_tra in number,
                             pn_rel in number,
                             pc_datos out varchar2
                            );
--------------------------------------------------------- 
procedure sp_datos_reporte ( pn_emp in number,
                             pn_suc in number,
                             pn_mod in number,
                             pn_tra in number,
                             pn_rel in number,
                             pd_fec in date
                            ) ;

Procedure sp_cr_cobroEfectivoTI(pn_pgcod  in number,
                                pn_hcmod  in number,
                                pn_hsucor in number,
                                pn_htran  in number,
                                pn_hnrel  in number,
                                pn_hfcon  in date,
                                pc_serie  in char,
                                pn_corr   in number,
                                pn_mto    out number);
                                                                                                
--------------------------------------------------------- 
procedure sp_cr_Envia_Factura(pc_Serie  in varchar2,
                              pn_numero in number
                              );

-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
   Procedure Sp_cr_calculaTotal2(PD_FECCON in date,
                                PN_AQPA463PGCOD  in number,
                                PN_AQPA463HCMOD  in number,
                                PN_AQPA463HSUCOR in number,
                                PN_AQPA463HTRAN  in number,
                                PN_AQPA463HNREL  in number,
                                pn_monto out number);                               
  -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --

procedure sp_cr_Detalle_Fact_CIGV(
                                   pc_serie       in char,
                                   pn_correlativo in number);

  procedure sp_cr_Detalle_Factura_IGV0(pd_pgfape in date);
  procedure sp_cr_Cabecera_facturaIGV0(pd_pgfape in date);

end pq_cr_Factura_Electronica;
/

create or replace package body pq_cr_Factura_Electronica is
  -- *****************************************************************
  -- Nombre                     : pq_cr_Factura_Electronica
  -- Sistema                    : BANTOTAL
  -- Módulo                     : Créditos - Activas
  -- Versión                    : 1.0
  -- Fecha de Creación          : 
  -- Uso                        : Procesos para carga de informacion de facturacion electronica
  -- Estado                     : Activo
  -- Acceso                     : Público
  -- Fecha de Modificación      : 10.06.2019
  -- Autor de la Modificación   : ABERNEDO
  -- Descripción de Modificación: Se agrego procceso de IGV
  --                              2022.05.27 DCASTRO se modifico consulta a tabla para obtener nombre de cliente
  -- *****************************************************************
  procedure sp_Num_Documento(pn_cuenta in number,
                             pn_pendoc out character,
                             pc_penom  out character,
                             pc_tdoc   out character,
                             pn_pais   out number,
                             pn_petdoc out number,
                             pd_pgfape out date) is
  
  begin
  
    begin
      ---se obtiene NDI/ TIPO de doc                  
      select a.pepais, a.petdoc, a.pendoc
        into pn_pais, pn_petdoc, pn_pendoc
        from fsr008 a
       where a.ctnro = pn_cuenta ---2034800 
         and a.cttfir = 'T';
    exception
      when others then
        null;
      
    end;
  
    begin
      --descripcion del tipo de documento de identidad
    
      select tdnom into pc_tdoc from fst014 where tdocum = pn_petdoc;
    exception
      when no_data_found then
        null;
      
    end;
  
    /*begin
      --Nombre de cliente
    
      select a.penom
        into pc_penom
        from FSd001 a
       where a.pepais = pn_pais
         and a.petdoc = pn_petdoc
         and a.pendoc = pn_pendoc;
    exception
      when no_data_found then
        null;
      
    end;*/
  
    -- 2022.05.27  
    if pn_petdoc = 9 then
      --RUC
    
      begin
        --Nombre de cliente
        select a.pjrazs
          into pc_penom
          from FSD003 a
         where a.pjpais = pn_pais
           and a.pjtdoc = pn_petdoc
           and a.pjndoc = pn_pendoc;
      exception
        when no_data_found then
          null;
        
      end;
    else
    
      begin
        --Nombre de cliente
        select trim(a.pfape1) || ' ' || trim(a.pfape2) || ' ' ||
               trim(a.pfnom1) || ' ' || trim(a.pfnom2)
          into pc_penom
          from FSD002 a
         where a.pfpais = pn_pais
           and a.pftdoc = pn_petdoc
           and a.pfndoc = pn_pendoc;
      exception
        when no_data_found then
          null;
        
      end;
    end if; ---2022.05.27
  
    begin
      select pgfape into pd_pgfape from fst017 where pgcod = 1;
    exception
      when others then
        null;
    end;
  
  end sp_Num_Documento;

  procedure sp_Dir_cmac(pn_aosuc   in number,
                        pc_sccall2 out varchar2,
                        pn_sctelf2 out varchar2) is
  
    --pn_aosuc number;
    pc_sccall varchar2(35); --character
    pn_sctelf varchar2(20);
    --pc_sccall2 varchar2(35);
    --pn_sctelf2 varchar2(20);
  
  begin
  
    /*begin--se obtiene sucursal de la cuenta
         
     select a.aosuc,a.aofval 
     into pn_aosuc, pd_aofval
     from fsd010 a where a.pgcod=1 and a.aocta=pn_cuenta and a.aooper=pn_itoper and rownum=1;
     
    end;*/
  
    begin
      --Direccion de empresa
    
      select a.sccall, a.sctelf
        into pc_sccall, pn_sctelf
        from fst001 a
       where a.sucurs = pn_aosuc;
    exception
      when others then
        null;
      
    end;
  
    pc_sccall2 := trim(pc_sccall);
    pn_sctelf2 := trim(pn_sctelf);
  
  end sp_Dir_cmac;

  procedure sp_Dir_cliente(pn_pendoc    in character,
                           pv_tdoc      in number,
                           pn_pais      in number,
                           pc_sngc13dir out char,
                           pc_fst071dsc out char,
                           pc_locnom    out char,
                           pc_depnom    out char,
                           pn_ubg       out char) is
    --char
  
    pn_sngc13dpto number;
    pn_sngc13prov number;
    pn_sngc13dist number;
  
    lc_depcod number; --2018.10.24
  
  begin
  
    --pn_pendoc2:=pn_pendoc;
  
    begin
    
      select a.sngc13dir,
             a.sngc13dpto,
             a.sngc13prov,
             a.sngc13dist,
             a.sngc13ugeo
        into pc_sngc13dir,
             pn_sngc13dpto,
             pn_sngc13prov,
             pn_sngc13dist,
             pn_ubg
        from sngc13 a
       where a.sngc13pais = pn_pais
         and a.sngc13tdoc = pv_tdoc
         and a.sngc13ndoc = pn_pendoc
         and a.sngc13est = 'H'
         and a.docod = 1;
    exception
      when no_data_found then
        null;
      when others then
        null;
      
    end;
  
    --pc_sngc13dir:=trim(pc_sngc13dir);
    begin
      --depsrtamento
      select a.depcod, a.depnom
        into lc_depcod, pc_depnom
        from fst068 a
       where a.pais = pn_pais --2018.10.24
         and a.depcod = pn_sngc13dpto;
    exception
      when no_data_found then
        null;
      when others then
        null;
      
    end;
  
    begin
      --provincia
    
      select a.locnom
        into pc_locnom
        from fst070 a
       where a.pais = pn_pais --2018.10.24
         and a.depcod = lc_depcod
         and a.loccod = pn_sngc13prov;
    exception
      when no_data_found then
        null;
      when others then
        null;
    end;
  
    begin
      --distrito
    
      select a.fst071dsc
        into pc_fst071dsc
        from fst071 a
       where a.fst071pai = pn_pais --2018.10.24
         and a.fst071dpt = lc_depcod
         and a.fst071col = pn_sngc13dist;
    exception
      when no_data_found then
        null;
      when others then
        null;
    end;
  
  end sp_Dir_cliente;

  procedure sp_Fecha_Sys(pc_fecha out varchar2) is
  
    pn_dia number;
    pn_mes number;
    pn_ano number;
    --pc_fecha varchar2(130);
    pn_dia2   varchar2(30);
    pn_mes2   varchar2(30);
    pn_ano2   varchar2(30);
    pv_nomMes varchar2(30);
  
  begin
  
    begin
    
      begin
        select extract(Day from sysdate) as Dia into pn_dia from dual;
      exception
        when others then
          null;
      end;
      pn_dia2 := trim(pn_dia);
    
      begin
        select extract(month from sysdate) as mes into pn_mes from dual;
      exception
        when others then
          null;
      end;
      pn_mes2 := trim(pn_mes);
    
      begin
      
        select to_char(to_date(to_char(pn_mes2), 'mm'),
                       'Month',
                       'NLS_DATE_LANGUAGE = SPANISH')
          into pv_nomMes
          from dual;
      exception
        when others then
          null;
      end;
      pv_nomMes := trim(pv_nomMes);
      begin
        select extract(year from sysdate) as ano into pn_ano from dual;
      exception
        when others then
          null;
      end;
      pn_ano2 := trim(pn_ano);
    end;
  
    pc_fecha := CONCAT(CONCAT(CONCAT(CONCAT(pn_dia2, ' de '), pv_nomMes),
                              ' del '),
                       pn_ano2); --muestra la fecha concatenada
  
  end sp_Fecha_Sys;

  ------------------construccion--------------
  procedure sp_tra_validas(pd_pgfape in date) is
    -----20180720 DCASTRO  se agrego condicion de optimizacion  
  
    pn_pgcod number;
    lc_serie char(4);
    lc_corre char(8);
    --Flag char(1):='N'; --md@abr 20180824
    ln_relant  number(4) := 0;
    lc_hipo    char(2);
    ln_emp     number(3);
    ln_mod     number(3);
    ln_suc     number(3);
    ln_mda     number(4);
    ln_pap     number(4);
    ln_cta     number(9);
    ln_ope     number(9);
    ln_sbo     number(3);
    ln_top     number(3);
    lc_flg     char(1) := 'N'; --controla que sea hipotecario
    pn_ordinal number(2);
    lc_flg465  char(1) := 'N'; --controla que no exista registro AQPA465
  
    ln_modulo number(3) := 0;
    ln_tran   number(3) := 0;
    ln_sucur  number(3) := 0;
  
    pn_pais    number(3);
    pn_petdoc  number(2);
    pn_pendoc  char(12);
    ln_rubro   number;
    lc_tipper  char(1);
    ln_contCom number(10) := 0;
    ln_tipfin  number(1) := 0;
  
    lc_coderr char(100);
    lc_msgerr char(1000);
  
    lc_indigv  char(1);
    
    ln_cpcod  number(2);
    cursor transacciones is
    
      select /* +all_rows*/ --2023.07.18 dcastro se agrego +all_rows
       f.txtrub,
       f.pgcod,
       f.hcmod,
       f.hsucor,
       f.htran,
       f.hnrel,
       f.hfcon,
       f.hcord,
       f.txoren,
       f.txtord,
       g.st171cpcod,
       g.se170vnro,
       g.se170vchr
        from fsx016 f, fse170 g
       where f.pgcod = 1
         and g.sd170doemp = 1 --20180720 se agrego condicion por optimizacion DCASTRO
         and f.pgcod = g.sd170doemp --20180720 se agrego condicion por optimizacion DCASTRO
         and g.sd170doid = f.txtrub
         and f.txoren = g.st171cpcod + 100
         and f.hfcon = pd_pgfape ---fecha del dia???? --sysdate
         and f.txcod = 200
      --and f.hcmod = 98
      --and f.htran in ( 80,85,90)--276 --(351)--,351,355)
      --and f.hnrel in ( 3,7,10)
      --and f.hsucor=18
      --and f.htran =977--in (251,252)
      --     and f.hnrel= 24---23
       order by f.pgcod, f.hcmod, f.hsucor, f.htran, f.hnrel, f.hfcon
      --and f.pgcod=1 and f.hsucor=11 and f.hcmod=30 and f.HTRAN in(100,150)
      -- and f.hnrel in(238,022,240,237,236,241,239,023,242,226,245,234,213)
      ;
  
  begin
    begin
    
      --mod@abr 20180824 
      /*begin
        SELECT 'S'
        into Flag
        FROM aqpa463 a WHERE a.aqpa463hfcon = pd_pgfape and rownum=1;
        exception when no_data_found then
          Flag:='N';
          
      end;  */ --mod@abr 20180824 
    
      for p in transacciones loop
      
        begin
          select count(*) --comision
            into ln_contCom
            from fsd016 a
           where a.pgcod = p.pgcod
             and a.itsuc = p.hsucor
             and a.itmod = p.hcmod
             and a.ittran = p.htran
             and a.itnrel = p.hnrel
             and a.modulo = 462; ---INGRESOS POR SERVICIOS
        
        exception
          when others then
            ln_contCom := 0;
        end;
      
        if ln_contCom = 0 then
        
          --Verifica que no exista en cabecera AQPA465 
          Begin
            select 'S'
              into lc_flg465
              from aqpa465 a
             where a.aqpa465pgcod = p.pgcod
               and a.aqpa465mod = p.hcmod
               and a.aqpa465sucor = p.hsucor
               and a.aqpa465tran = p.htran
               and a.aqpa465rel = p.hnrel
               and a.aqpa465con = p.hfcon
               and rownum = 1;
          exception
            when others then
              lc_flg465 := 'N';
          end;
        
          if lc_flg465 = 'N' then
          
          
               --
              lc_indigv := 'N';
              begin
                  select 'S', k.tp1imp2
                    into lc_indigv, ln_cpcod
                    from fst198 k
                   where k.tp1cod = 1
                     and k.tp1cod1 = 11120
                     and k.tp1corr1 = 3
                     and k.tp1corr2 = 1
                     and tp1corr3 > 0  
                     and tp1imp3 = 2  
                     and TP1NRO1 = p.hcmod
                     and TP1NRO2 = p.htran; 
              exception when others then
                lc_indigv := 'N';
              end;
     
             if lc_indigv = 'S' then -- si tiene indicador IGV
                --ln_rubro := 5; -- se agrego 984,986
                
                 Begin
                        
                    select a.sr171trord
                      into pn_ordinal
                      from fsr171 a
                     where a.st171cpcod = ln_cpcod
                       and a.sr171tremp = p.pgcod --1
                       and a.sr171trmod = p.hcmod --30
                       and a.sr171trnro = p.htran; --100;   
                  exception
                    when others then
                      null;
                  end;
                 
                 /*
                    ---if p.hcmod = 30 and p.htran = 977 then
                    if p.hcmod = 30 and p.htran in (405, 977, 984, 986) then
                      --22/07/2021 --se agrego 984,986 2021029
                    
                      if p.htran in (977, 984, 986) then
                        --se agrego 20221029
                        ---30: CRÉDITOS; 977: VENTA JOYA ADJUDICADA
                        Begin
                        
                          select a.sr171trord
                            into pn_ordinal
                            from fsr171 a
                           where a.st171cpcod = 50
                             and a.sr171tremp = p.pgcod --1
                             and a.sr171trmod = p.hcmod --30
                             and a.sr171trnro = p.htran; --100;   
                        exception
                          when others then
                            null;
                        end;
                      else
                        ---30: CRÉDITOS; 405: VENTA BIENES ADJUDICADOS --22/07/2021
                        Begin
                        
                          select a.sr171trord
                            into pn_ordinal
                            from fsr171 a
                           where a.st171cpcod = 47
                             and a.sr171tremp = p.pgcod --1
                             and a.sr171trmod = p.hcmod --30
                             and a.sr171trnro = p.htran; --;   
                        exception
                          when others then
                            null;
                        end;
                      
                      end if;
                
                else
                  --obtener cuenta moneda hora fecha
                  Begin
                  
                    select a.sr171trord
                      into pn_ordinal
                      from fsr171 a
                     where a.st171cpcod = 15
                       and a.sr171tremp = p.pgcod --1
                       and a.sr171trmod = p.hcmod --30
                       and a.sr171trnro = p.htran; --100;   
                  exception
                    when others then
                      null;
                  end;
                end if;*/
                
              
             else -- sino tiene indicador igv
                 Begin
                  
                    select a.sr171trord
                      into pn_ordinal
                      from fsr171 a
                     where a.st171cpcod = 15
                       and a.sr171tremp = p.pgcod --1
                       and a.sr171trmod = p.hcmod --30
                       and a.sr171trnro = p.htran; --100;   
                  exception
                    when others then
                      null;
                  end;
                 
             end if;

          
          
            begin
              pq_cr_factura_electronica.sp_cr_pk_credito(pc_aqpa465pgcod    => p.pgcod,
                                                         pc_aqpa465mod      => p.hcmod,
                                                         pc_aqpa465sucorend => p.hsucor,
                                                         pc_aqpa465tran     => p.htran,
                                                         pc_aqpa465rel      => p.hnrel,
                                                         pc_aqpa465ord      => pn_ordinal,
                                                         pd_aqpa465con      => p.hfcon,
                                                         pn_cod             => ln_emp, ----out
                                                         pn_mod             => ln_mod, ----out
                                                         pn_suc             => ln_suc, ----out
                                                         pn_mda             => ln_mda, ----out
                                                         pn_pap             => ln_pap, ----out
                                                         pn_cta             => ln_cta, ----out
                                                         pn_ope             => ln_ope, ----out
                                                         pn_sbo             => ln_sbo, ----out
                                                         pn_top             => ln_top, ----out
                                                         pc_flag            => lc_flg, ----out
                                                         pn_rubro           => ln_rubro); ----out
            end;
          
            if lc_flg = 'S' then
              pn_pgcod := p.pgcod;
              if ln_relant <> p.hnrel or p.hcmod <> ln_modulo or
                 p.htran <> ln_tran or p.hsucor <> ln_sucur then
                /*
                  begin
                    pq_cr_facturacion.sp_cr_fac_hipotecario(ln_rubro => 4,
                                                            lc_descripcion => 'SEQ_HIPOTECARIO_COR',
                                                            lc_serie => lc_serie,
                                                            lc_correlativo => lc_corre);
                    
                  end;
                */
              
                begin
                  ---se obtiene NDI/ TIPO de doc                  
                  select a.pepais, a.petdoc, a.pendoc
                    into pn_pais, pn_petdoc, pn_pendoc
                    from fsr008 a
                   where a.ctnro = ln_cta ---
                     and a.cttfir = 'T';
                exception
                  when others then
                    null;
                end;
              
                ---Verificar si el documento fue emitido con serie y número
                ---si IdDocumento = 13
                begin
                  select count(*)
                    into ln_tipfin
                    from aqpb056 a
                   where a.aqpb056pgc = p.pgcod
                     and a.aqpb056mod = p.hcmod
                     and a.aqpb056suc = p.hsucor
                     and a.aqpb056trx = p.htran
                     and a.aqpb056rel = p.hnrel
                        --and a.aqpb056femi = p.hfcon;    
                        --and a.aqpb056fcon = p.hfcon;    
                     and a.aqpb056fco = p.hfcon;
                
                exception
                  when others then
                    ln_tipfin := 0;
                end;
              
                if ln_tipfin = 0 then
                  ---Si no ha sido registrado en tipfin
                  ------>>>>>
                  begin
                    pq_cr_facturacion.sp_cr_tipo_cliente(pn_pais   => pn_pais,
                                                         pn_tipdoc => pn_petdoc,
                                                         pc_numdoc => pn_pendoc,
                                                         pc_tipper => lc_tipper); ---out
                  end;
                
                  begin
                    pq_cr_facturacion.sp_cr_factura(pn_rubro       => ln_rubro,
                                                    pc_tipcli      => lc_tipper,
                                                    pc_tipo        => 'MOV', --transaccion
                                                    pc_serie       => lc_serie, ---out
                                                    pc_correlativo => lc_corre); ---out
                  
                  exception
                    when others then
                    
                      lc_coderr := sqlcode;
                      lc_msgerr := trim(sqlerrm);
                    
                      insert into aqpa460E
                        (aqpa460eserie,
                         aqpa460ecorr,
                         aqpa460epgcod,
                         aqpa460emod,
                         aqpa460esucorend,
                         aqpa460etran,
                         aqpa460erel,
                         aqpa460econ,
                         aqpa460etip,
                         Aqpa460eacoe,
                         Aqpa460eamsge)
                      values
                        (null,
                         null,
                         p.pgcod,
                         p.hcmod,
                         p.hsucor,
                         p.htran,
                         p.hnrel,
                         p.hfcon,
                         'S',
                         lc_coderr,
                         lc_msgerr);
                      commit;
                    
                  end;
                  ------>>>>>
                else
                  ------>>>>>
                  begin
                    --select a.aqpb056seri, a.aqpb056num
                    select a.aqpb056ser, a.aqpb056num
                      into lc_serie, lc_corre
                      from aqpb056 a
                     where a.aqpb056pgc = p.pgcod
                       and a.aqpb056mod = p.hcmod
                       and a.aqpb056suc = p.hsucor
                       and a.aqpb056trx = p.htran
                       and a.aqpb056rel = p.hnrel
                          --and a.aqpb056femi = p.hfcon; 
                          --and a.aqpb056fcon = p.hfcon; 
                       and a.aqpb056fco = p.hfcon;
                  exception
                    when others then
                      -- 2022.11.18 dcastro se agrego excepcion
                      lc_serie := null;
                      lc_corre := null;
                  end;
                  ------>>>>>
                end if;
              
              end if;
            
              ln_relant := p.hnrel;
              ln_modulo := p.hcmod;
              ln_tran   := p.htran;
              ln_sucur  := p.hsucor;
            
              --if Flag='N' then --mod@abr 20180824
            
              begin
                ---aqpa463 cabecera de cada factura
                insert into aqpa463
                  (aqpa463txtrub,
                   aqpa463pgcod,
                   aqpa463hcmod,
                   aqpa463hsucor,
                   aqpa463htran,
                   aqpa463hnrel,
                   aqpa463hfcon,
                   aqpa463hcord,
                   aqpa463txoren,
                   aqpa463txtord,
                   aqpa463hcpcod,
                   aqpa463hvnro,
                   aqpa463hvchr,
                   aqpa463serie,
                   aqpa463corre,
                   aqpa463emp,
                   aqpa463mod,
                   aqpa463suc,
                   aqpa463mda,
                   aqpa463pap,
                   aqpa463cta,
                   aqpa463ope,
                   aqpa463sbo,
                   aqpa463top,
                   aqpa463hip
                   
                   )
                values
                  (p.txtrub,
                   p.pgcod,
                   p.hcmod,
                   p.hsucor,
                   p.htran,
                   p.hnrel,
                   p.hfcon,
                   p.hcord,
                   p.txoren,
                   p.txtord,
                   p.hcord,
                   p.se170vnro,
                   p.se170vchr,
                   lc_serie,
                   lc_corre,
                   ln_emp,
                   ln_mod,
                   ln_suc,
                   ln_mda,
                   ln_pap,
                   ln_cta,
                   ln_ope,
                   ln_sbo,
                   ln_top,
                   lc_hipo);
                commit;
              
              end;
              --end if; --mod@abr 20180824
            end if;
          end if;
        end if;
      end loop;
    
      begin
        ---agregado paso 2
        -- Call the procedure
        pq_cr_factura_electronica.sp_cr_Detalle_Factura_2(pd_pgfape);
        --  null;
      end;
    
    end;
  
  end sp_tra_validas;

  /*procedure sp_cr_Detalle_Factura(pd_pgfape in date) is 
    
  pc_flag character (1):='N';
  pc_flag2 character (1):='N';
  result character (100);
  pn_aqpa463pgcod number;
  pn_aqpa463hcmod number;
  pn_aqpa463hsucor number;
  pn_aqpa463htran number;
  pn_aqpa463hnrel number;
  pn_ctnro number;
  pn_itoper number;
  pd_aofval date;
  pn_aocta number;
  pn_aoimp number;
  pn_aqpa463hcord number;
  pc_aqpa463hvchr varchar(50);
  
  pn_aqpa463txtord_top number:=0;
  pn_aqpa463txtord number:=0;
  pn_aqpa463txtord_suc number:=0;
  pn_aqpa463txtord_CAP number:=0;
  pn_aqpa463txtord_IC number:=0;
  pn_aqpa463txtord_ICV number:=0;
  pn_aqpa463txtord_IM number:=0;
  pn_aqpa463txtord_SD number:=0;
  pn_aqpa463txtord_SG number:=0;
  pn_aqpa463txtord_MS number:=0;
  pn_aqpa463txtord_SM number:=0;
  pn_aqpa463txtord_FS number:=0;
  pn_aqpa463txtord_OR number:=0;
  pn_aqpa463txtord_ITF number:=0;
  pn_aqpa463txtord_USR varchar(25);
  pn_aqpa463txtord_ftr date;
  pn_aqpa463txtord_nom varchar(50);
  pn_aqpa463txtord_ccom varchar(70);
  pn_aqpa463txtord_mon number;
  pn_aqpa463txtord_CEF number:=0;
  
  pn_monto_total number;
  pn_monto_total2 number;
  pn_pendoc2 character(12);
  pd_pgfape2 date;
  pn_max_txoren number;
  
  cursor aqpa463 is
  
      select b.aqpa463pgcod,
             b.aqpa463hcmod,
             b.aqpa463hsucor,
             b.aqpa463htran,
             b.aqpa463hnrel,
             b.aqpa463hcord,
             b.aqpa463hvchr
        into pn_aqpa463pgcod,
             pn_aqpa463hcmod,
             pn_aqpa463hsucor,
             pn_aqpa463htran,
             pn_aqpa463hnrel,
             pn_aqpa463hcord,
             pc_aqpa463hvchr
        from aqpa463 b
       order by b.aqpa463hnrel  asc, b.aqpa463txoren asc;
  
  pn_st171cpcod number;
  pn_st171cpdsc char(30);
  pn_Transaccion char(30);
  pn_st171cpcod2 number;
  
  
  begin
    begin   
      
    for p in aqpa463 loop
       pn_aqpa463pgcod  := p.aqpa463pgcod;
       pn_aqpa463hcmod  := p.aqpa463hcmod;
       pn_aqpa463hsucor := p.aqpa463hsucor;
       pn_aqpa463htran  := p.aqpa463htran;
       pn_aqpa463hnrel  := p.aqpa463hnrel;
       pn_aqpa463hcord  := p.aqpa463hcord;
       pc_aqpa463hvchr  := p.aqpa463hvchr;
       
    begin
      select max(aqpa463txoren) as Max_txoren
      into pn_max_txoren
        from aqpa463 p
       where p.aqpa463pgcod = pn_aqpa463pgcod
         and p.aqpa463hcmod = pn_aqpa463hcmod
         and p.aqpa463hsucor = pn_aqpa463hsucor
         and p.aqpa463htran = pn_aqpa463htran
         and p.aqpa463hnrel = pn_aqpa463hnrel;
    end;
    
    begin
     select a.ctnro, a.itoper-- ,a.itmod --, a.ittran ,a.itnrel
       into pn_ctnro, pn_itoper
       from fsd016 a
      where a.pgcod = pn_aqpa463pgcod
        and a.itmod = pn_aqpa463hcmod
        and a.itsuc = pn_aqpa463hsucor
        and a.ittran = pn_aqpa463htran
        and a.itnrel = pn_aqpa463hnrel
        and rownum = 1;
  
    end;
   
   pc_aqpa463hvchr:=trim(pc_aqpa463hvchr);
  
    begin  --funcion  Obtener capital
      
        select g.st171cpcod,
                 g.st171cpdsc,
                 (select trnom
                    from fst034 h
                   where h.trmod = f.sr171trmod
                     and h.trnro = f.sr171trnro) as Transaccion,
                 f.st171cpcod
            into pn_st171cpcod,pn_st171cpdsc, pn_Transaccion, pn_st171cpcod2
            from fsr171 f, fst171 g, aqpa463 a
           where f.st171cpcod = g.st171cpcod
             and a.aqpa463hcmod = f.sr171trmod
             and a.aqpa463htran = f.sr171trnro
             and a.aqpa463txoren = g.st171cpcod + 100
             and f.sr171trnro =  pn_aqpa463htran--100
             and f.sr171trmod = pn_aqpa463hcmod--30
             and a.aqpa463hnrel = pn_aqpa463hnrel-- 153
             and a.aqpa463hsucor = pn_aqpa463hsucor-- 11
             and g.st171cpdsc = a.aqpa463hvchr 
             and a.aqpa463hvchr like '%'||pc_aqpa463hvchr||'%' 
             and rownum = 1;
             
             pn_st171cpcod2:=pn_st171cpcod2+100;
               
           exception
             WHEN NO_DATA_FOUND THEN
              pn_st171cpcod:=0;
              pn_st171cpdsc:= '';
              pn_Transaccion:='';
              pn_st171cpcod2 := -100;
           null;
         
             pn_st171cpcod2:=pn_st171cpcod2+100;
  
    end;
        
    begin
           
    select a.aqpa463txtord
      into pn_aqpa463txtord ---MUESTRA EL CAPITAL 
        from aqpa463 a
       where a.aqpa463htran = pn_aqpa463htran--100
         and a.aqpa463hcmod = pn_aqpa463hcmod--30
         and a.aqpa463hcord = pn_aqpa463hcord--10
         and a.aqpa463hnrel = pn_aqpa463hnrel--153
         and a.aqpa463txoren = pn_st171cpcod2;--115
         
      exception
         WHEN NO_DATA_FOUND THEN
         pn_st171cpcod2:=0;      
  
     end;
            
    if pn_st171cpcod2 <> 0 then
      
        if pn_st171cpcod2 = 101 then ---SUCURSAL
           pn_aqpa463txtord_suc := pn_aqpa463txtord;--SUCURSAL
           pc_flag :='N';  
           pc_flag2 :='N'; 
           Else
             if pn_aqpa463txtord_suc <> 0 then
               pn_aqpa463txtord_suc:=pn_aqpa463txtord_suc;  
                pc_flag :='N';  
                pc_flag2 :='N'; 
              else
                pn_aqpa463txtord_suc:=0;
                pc_flag :='N'; 
                pc_flag2 :='N'; 
             end if;
           end if;    
           
         if pn_st171cpcod2 = 102 then ---tipo de operacion
           pn_aqpa463txtord_top := pn_aqpa463txtord;--tipo de operacion
           Else
             if pn_aqpa463txtord_top <> 0 then
               pn_aqpa463txtord_top:=pn_aqpa463txtord_top;  
              else
                pn_aqpa463txtord_top:=0;
             end if;
           end if;   
  
        if pn_st171cpcod2 = 106 then ---Nombre de cuenta 
           pn_aqpa463txtord_nom := pn_aqpa463txtord;--Nombre de cuenta 
           Else
             if pn_aqpa463txtord_nom <> 0 then
               pn_aqpa463txtord_nom:=pn_aqpa463txtord_nom;  
              else
                pn_aqpa463txtord_nom:=0;
             end if;
           end if; 
           
          if pn_st171cpcod2 = 107 then ---concepto comision 
            pn_aqpa463txtord_ccom := pn_aqpa463txtord;--concepto comision 
           Else
             if pn_aqpa463txtord_ccom <> null then
               pn_aqpa463txtord_ccom:=pn_aqpa463txtord_ccom;  
              else
                pn_aqpa463txtord_ccom:=' ';
             end if;
           end if; 
           
        if pn_st171cpcod2 = 110 then ---usuario
            pn_aqpa463txtord_usr := pn_aqpa463txtord;--usuario
           Else
             if pn_aqpa463txtord_usr <> null then
               pn_aqpa463txtord_usr:=pn_aqpa463txtord_usr;  
              else
                pn_aqpa463txtord_usr:=' ';
             end if;
         end if; 
         
       if pn_st171cpcod2 = 113 then ---moneda
            pn_aqpa463txtord_mon := pn_aqpa463txtord;--CAPITAL
           Else
             if pn_aqpa463txtord_mon <> 999 then
               pn_aqpa463txtord_mon:=pn_aqpa463txtord_mon;  
              else
                pn_aqpa463txtord_mon:=999;
             end if;
         end if; 
      
         if pn_st171cpcod2 = 115 then----capital
           pn_aqpa463txtord_CAP := pn_aqpa463txtord;--CAPITAL
           Else
             if pn_aqpa463txtord_CAP <> 0 then
               pn_aqpa463txtord_CAP:=pn_aqpa463txtord_CAP;  
              else
                pn_aqpa463txtord_CAP:=0;
             end if;
           end if;               
  
         if pn_st171cpcod2= 116 then
           pn_aqpa463txtord_IC := pn_aqpa463txtord;--IC
            Else
             if pn_aqpa463txtord_CAP <> 0 then
               pn_aqpa463txtord_IC:=pn_aqpa463txtord_IC;  
              else
                pn_aqpa463txtord_IC:=0;
             end if;
         end if;
         if pn_st171cpcod2= 117 then
           pn_aqpa463txtord_ICV:=pn_aqpa463txtord;---ICV
            Else
             if pn_aqpa463txtord_ICV <> 0 then
               pn_aqpa463txtord_ICV:=pn_aqpa463txtord_ICV;  
              else
                pn_aqpa463txtord_ICV:=0;
             end if;   
         end if;
         if pn_st171cpcod2= 118 then
           pn_aqpa463txtord_IM:=pn_aqpa463txtord;--INT MORA
            Else
             if pn_aqpa463txtord_IM <> 0 then
               pn_aqpa463txtord_IM:=pn_aqpa463txtord_IM;  
              else
                pn_aqpa463txtord_IM:=0;
              end if;
         end if;
         if pn_st171cpcod2= 119 then
           pn_aqpa463txtord_SD:=pn_aqpa463txtord;----SEG DESGRA
            Else
               if pn_aqpa463txtord_SD <> 0 then
               pn_aqpa463txtord_SD:=pn_aqpa463txtord_SD;  
              else
                pn_aqpa463txtord_SD:=0;
              end if;
         end if;
         if pn_st171cpcod2= 121 then
           pn_aqpa463txtord_SG:=pn_aqpa463txtord;----SEG GARANTIA
            Else
               if pn_aqpa463txtord_SG <> 0 then
               pn_aqpa463txtord_SG:=pn_aqpa463txtord_SG;  
              else
                pn_aqpa463txtord_SG:=0;
              end if;
         end if;
         if pn_st171cpcod2= 122 then
           pn_aqpa463txtord_MS:=pn_aqpa463txtord;----MICRO SEGURO
            Else
             if pn_aqpa463txtord_MS <> 0 then
               pn_aqpa463txtord_MS:=pn_aqpa463txtord_MS;  
              else
                pn_aqpa463txtord_MS:=0;
              end if;
         end if;
         if pn_st171cpcod2= 120 then
           pn_aqpa463txtord_SM:=pn_aqpa463txtord;----SEG MOVIGAS
            Else
              if pn_aqpa463txtord_SM <> 0 then
               pn_aqpa463txtord_SM:=pn_aqpa463txtord_SM;  
              else
                pn_aqpa463txtord_SM:=0;
              end if;
         end if;
         if pn_st171cpcod2= 123 then
           pn_aqpa463txtord_FS:=pn_aqpa463txtord;----SEG FAMILIAR
            Else
               if pn_aqpa463txtord_FS <> 0 then
               pn_aqpa463txtord_FS:=pn_aqpa463txtord_FS;  
              else
                pn_aqpa463txtord_FS:=0;
              end if;   
         end if;
         if pn_st171cpcod2= 124 then
           pn_aqpa463txtord_OR:=pn_aqpa463txtord;----OTROS RUBROS
            Else
              if pn_aqpa463txtord_OR <> 0 then
               pn_aqpa463txtord_OR:=pn_aqpa463txtord_OR;  
              else
                pn_aqpa463txtord_OR:=0;
              end if;      
         end if;
         if pn_st171cpcod2= 125 then
           pn_aqpa463txtord_ITF:=pn_aqpa463txtord;----ITF
        --   pc_flag :='S';  
            Else
              if pn_aqpa463txtord_ITF <> 0 then
               pn_aqpa463txtord_ITF:=pn_aqpa463txtord_ITF;
             else
                pn_aqpa463txtord_ITF:=0;
              end if;      
         end if;
  
         if pn_st171cpcod2= pn_max_txoren then
               pn_aqpa463txtord_CEF:=pn_aqpa463txtord;----ITF
               pc_flag :='S';  
                Else
                  if pn_aqpa463txtord_CEF <> 0 then
                   pn_aqpa463txtord_CEF:=pn_aqpa463txtord_CEF;
                 else
                    pn_aqpa463txtord_CEF:=0;
               --     pc_flag :='S';  
                  end if;      
             end if;
      
     pn_monto_total := pn_aqpa463txtord_CAP+pn_aqpa463txtord_IC +pn_aqpa463txtord_ICV+pn_aqpa463txtord_IM +
     pn_aqpa463txtord_SD + pn_aqpa463txtord_SG +pn_aqpa463txtord_MS +pn_aqpa463txtord_SM +pn_aqpa463txtord_FS +
     pn_aqpa463txtord_OR + pn_aqpa463txtord_ITF;   
     
     if pc_flag='S' then  
       
      begin
    -- Call the function
        result := pq_cr_factura_electronica.dintex(pn_monto_total);
       end;
       
      begin
    -- Call the procedure
        pq_cr_factura_electronica.sp_num_documento(pn_ctnro,pn_pendoc2,pd_pgfape2);
      end;
      
      begin
          -- Call the procedure
          pq_cr_factura_electronica.sp_dir_cmac(pn_ctnro,pn_itoper);--mod
      end;--ok
  
      begin
          -- Call the procedure
          pq_cr_factura_electronica.sp_dir_cliente(pn_pendoc2);---dni  pn_pendoc
        end;
  
       begin
          -- Call the procedure
          pq_cr_factura_electronica.sp_fecha_sys(pn_pendoc2);--dni
       end;
        
       pc_flag2 := 'R';
       
    end if;
     
  end if;   
  
  if pc_flag2 = 'R' then
        pn_aqpa463txtord_CAP :=0;
        pn_aqpa463txtord_IC :=0;
        pn_aqpa463txtord_ICV :=0;
        pn_aqpa463txtord_IM :=0;
        pn_aqpa463txtord_SD :=0;
        pn_aqpa463txtord_SG :=0;
        pn_aqpa463txtord_MS :=0;
        pn_aqpa463txtord_SM :=0;
        pn_aqpa463txtord_FS :=0;
        pn_aqpa463txtord_OR :=0;
        pn_aqpa463txtord_ITF :=0;
  end if;
  ------------------------------------------------------------------------------------------------------------- 
  end loop;
   
  
  end;  
  end sp_cr_Detalle_Factura;*/
  ---------------------------------------------------------------------------------------
  ---------------------------------------------------------------------------------------

  procedure sp_cr_Detalle_Factura_2(pd_pgfape in date) is
  
    pc_fecha varchar2(80);
  
    cursor aqpa463 is
    
      select /* +all_rows*/ --2023.07.18 dcastro se agrego +all_rows
       *
        from aqpa463 b
       where b.aqpa463hfcon = pd_pgfape --mod@abr 20180707 
            
            ---
            
            --and b.aqpa463pgcod = 1
            --and b.aqpa463hcmod = 30
            --and b.aqpa463hsucor = 1
            --and b.aqpa463htran = 100
            --and b.aqpa463hnrel = 6
            --and b.aqpa463hfcon='03/09/2020'
            
            --
            
         and (b.aqpa463hcmod, b.aqpa463htran) not in ----EXCLUYE A LOS GRAVADOS
             (select k.tp1nro1, k.tp1nro2
                from fst198 k
               where k.tp1cod = 1 --- 2023.07.18 dcastro se agrego condicion tp1cod
                 and k.tp1cod1 = 11120
                 and k.tp1corr1 = 3
                 and k.tp1corr2 = 1
                 and tp1corr3 > 0)
      
      -- and b.aqpa463serie='BF01' --comentar despues
      -- and b.aqpa463corre =38679 
      /* or (b.aqpa463serie='FH01' --comentar despues
      and b.aqpa463corre in ( 10253) )
      */
       order by b.aqpa463hnrel asc, b.aqpa463txoren asc;
  
    lc_coderr char(100);
    lc_msgerr char(1000);
  
    ln_cta           number(9);
    lc_hor           char(8);
    ld_fec           date;
    lc_flg           char(1) := 'N';
    pn_pais          number;
    pn_monto_total_1 number(12, 2) := 0;
    result           character(100);
    pd_pgfape2       date;
    ln_mda           number(4);
    ln_nroitem       number(12) := 0;
    ln_cant          number(12, 10);
    lc_codpla        char(3);
    ln_docemp        number(2);
    pv_tdoc          char(25);
    lc_sistemi       char(6);
  
    lv_destiptrb varchar2(6);
    ln_MONTO     number;
  
    lc_contrato varchar2(50);
    lv_tipemp   varchar2(1);
    lv_ruc      varchar2(11);
    lv_rzn      varchar2(1500);
    lv_ubg      varchar2(6);
    lv_NCOM     varchar2(1500);
    lv_CALLE    varchar2(200);
    --lv_URBA        varchar2(25);
    lv_DEPA  varchar2(100);
    lv_PROV  varchar2(30);
    lv_DIST  varchar2(30);
    lv_TELF  varchar2(20);
    lv_WEB   varchar2(100);
    lv_CPAIS varchar2(2);
    --lv_CESUN       varchar2(4);
    lv_codtipo      varchar2(2);
    lv_tipomda      varchar2(3);
    lv_correo       varchar2(100);
    lv_glosa        varchar2(30);
    lv_COMA         varchar2(20);
    lv_TPLA         varchar2(3);
    lv_tipoope      varchar2(4);
    lv_TPLCO        varchar2(3);
    lv_CLOG         varchar2(3);
    lv_codtdoc      varchar2(1);
    lc_pendoc       char(12);
    lv_pendoc       varchar2(15);
    lv_penom        varchar2(1500);
    lv_hora         varchar2(8);
    ln_SIMC         number(12, 2) := 0;
    ln_SVITM        number(12, 2) := 0;
    ln_SPVI         number(12, 2) := 0;
    lv_TXML         varchar2(3);
    lv_ubgCli       varchar2(6);
    lv_sngc13dir    varchar2(500);
    lv_urb          varchar2(100);
    lv_fst071dsc1   varchar2(500);
    lv_locnom1      varchar2(500);
    lv_depnom1      varchar2(500);
    lv_cpai         varchar2(2);
    lv_PNETU        varchar2(3); ------------
    lc_oneroso      varchar2(1);
    ln_mtoconce     number; --(12,10):= 0;
    ln_mtoconce_ant number; --(12,10):= 0;
    ln_VVUIG        number; --(12):= 0;
    lv_desconce     varchar2(500);
    lv_infpredio    varchar2(500);
    ln_PRVIT        number(15, 2) := 0;
    lv_MEDEM        varchar2(50);
    lv_CSUNA        varchar2(8);
    lv_CPGS1        varchar2(14);
    ln_ITITM        number(12, 2) := 0; ---2018.10.19
    ln_IMPTB        number(12, 2) := 0;
    ln_IMPEX        number(12, 2) := 0;
    lv_afecigv      varchar2(2);
    lv_SISC         varchar2(2);
    lv_idtrbsunat   varchar2(4);
    lv_nomtrbsunat  varchar2(6);
    lv_codun        varchar2(3);
    ln_MBIM         number(12, 2) := 0;
    ln_TAIMP        number(12, 2) := 0; --2018.10.19
    ln_CDLEY        number(4) := 0;
    lv_TELEY        varchar2(200);
    lv_TEXT1        varchar2(1000);
    lv_TEXT2        varchar2(1000);
    lv_TRECV        varchar2(1000);
    lv_TEMPL        varchar2(3);
    lv_SUBJE        varchar2(100);
    lv_VPCVA        varchar2(15);
    lv_NEXP         varchar2(10);
    lv_CIND         varchar2(1);
    lv_partida      varchar2(50);
    lv_NCONT        varchar2(50);
    lv_fecoto       varchar2(10);
    ld_fecoto       date;
    lv_cdisn        varchar2(6);
    lv_direccionH   varchar2(100);
    lv_urbaH        varchar2(50);
    lv_dptoH        varchar2(50);
    lv_provH        varchar2(50);
    lv_distH        varchar2(500);
    ln_MTOTAL       number(12, 2) := 0;
    ln_BAIMP        number(12, 2) := 0;
    ln_MTIMP        number(12, 2) := 0;
    ln_PCIMA        number(12, 2) := 0;
    ln_BSIMP        number(12, 2) := 0;
    ln_VAIMP        number(12, 2) := 0;
    ln_MTINF        number(12, 2) := 0;
    ln_MTGRT        number(12, 2) := 0;
    ln_BSIMPS       number(12, 2) := 0;
    ln_MTOTI        number(12, 2) := 0;
    ln_petdoc       number(2);
    lv_CTPR         varchar(2);
    lv_rzn1         varchar2(30);
    lv_rzn2         varchar2(30);
    lc_codsunat     varchar2(4);
  
    lc_nomcaja char(70);
    lc_nom1    char(30);
    lc_nom2    char(30);
  
    ln_item number(12);
  
    ln_mtoDifer number(17, 2);
    ln_mtoRedon number(17, 2);
  
    ld_fecSis date; --mod@abr 20180709
  
    lc_existe char(1) := 'N'; --mod@abr 20180824
  
    lv_sngc13dirFin varchar2(500); --mod@abr 20180905
  
    ln_guiaCP      number; --2018.10.10
    ln_mtoImpuesto number; --2018.10.15
    lv_desmda      varchar2(30); --2018.10.18
  
    /*
    pc_AQPA465SERIE  aqpa460.aqpa460seri%type;
    pc_AQPA465CORR  aqpa460.aqpa460num%type;
    pc_AQPA465PGCOD aqpa460.
    pc_AQPA465MOD   ,
    pc_AQPA465SUCOREND
    pc_AQPA465TRAN    
    pc_AQPA465REL    ,
    pc_AQPA465CON,
    */
  
    lc_flr    char(1);
    lc_fcont  number;
    ln_tipfin char(1);
    lc_ftran  number;
  
    lv_codtdocC varchar2(1); --05/04/2023 dcastro 
  begin
    begin
    
      for p in aqpa463 loop
      
        --mod@abr 20180824
        --Verificar si existe en aqpa460
        lc_existe := 'N';
        Begin
          select 'S'
            into lc_existe
            from aqpa460 a
           where a.aqpa460seri = p.aqpa463serie
             and a.aqpa460num = p.aqpa463corre
             and a.aqpa460ore = P.AQPA463TXOREN
             and rownum = 1;
        exception
          when others then
            lc_existe := 'N';
        end;
        --mod@abr 20180824
        if lc_existe = 'N' then
          /*
           Pq_Cr_Factura_Electronica.sp_cr_cobroEfectivo(p.aqpa463pgcod,
                                                         p.aqpa463hcmod,
                                                         p.aqpa463hsucor,
                                                         p.aqpa463htran,
                                                         p.aqpa463hnrel,
                                                         p.aqpa463hfcon,
                                                         p.aqpa463serie,
                                                         p.aqpa463corre,
                                                         pn_monto_total_1);
          */
          begin
            -- Call the function
            pn_monto_total_1 := pq_cr_factura_electronica.fn_sumatoria_total(pn_pgc   => p.aqpa463pgcod,
                                                                             pn_mod   => p.aqpa463hcmod,
                                                                             pn_suc   => p.aqpa463hsucor,
                                                                             pn_trx   => p.aqpa463htran,
                                                                             pn_rel   => p.aqpa463hnrel,
                                                                             pn_fecha => p.aqpa463hfcon);
          end;
        
          --validar concepto 
          --11120 1 3 Codigos de conc no considerar 
          begin
            select 'S'
              into lc_flg
              from fst198 a
             where a.tp1cod = 1
               and a.tp1cod1 = 11120
               and a.tp1corr1 = 1
               and a.tp1corr2 = 3
               and a.tp1corr3 >= 1
               and a.tp1nro1 = p.aqpa463txoren - 100;
          exception
            when others then
              lc_flg := 'N';
          end;
        
          --obtener cuenta moneda hora fecha
          ln_cta := p.aqpa463cta;
          ln_mda := p.aqpa463mda;
        
          begin
            select a.ithora, a.itfcon
              into lc_hor, ld_fec
              from fsd015 a ----cabecera asiento
             where a.pgcod = p.aqpa463pgcod
               and a.itmod = p.aqpa463hcmod
               and a.itsuc = p.aqpa463hsucor
               and a.ittran = p.aqpa463htran
               and a.itnrel = p.aqpa463hnrel;
          exception
            when others then
              null;
          end;
        
          begin
          
            result := pq_cr_factura_electronica.dintex(pn_monto_total_1);
          end;
        
          ----------Obtener codigo de sunat
          begin
            select lpad(a.tp1nro2, 4, '0')
              into lc_codsunat
              from fst198 a
             where a.tp1cod = 1
               and a.tp1cod1 = 11120
               and a.tp1corr1 = 1
               and a.tp1corr2 = 500
               and a.tp1nro1 = p.aqpa463hsucor;
          exception
            when others then
              null;
          end;
        
          ----Obtener DNI
          begin
            -- Call the procedure
            pq_cr_factura_electronica.sp_fecha_sys(pc_fecha); --dni
          end;
        
          --mod@abr 20181219
          pq_cr_factura_electronica.sp_cr_Dif_Red(pc_AQPA465PGCOD    => p.aqpa463pgcod,
                                                  pc_AQPA465MOD      => p.aqpa463hcmod,
                                                  pc_AQPA465SUCOREND => p.aqpa463hsucor,
                                                  pc_AQPA465TRAN     => p.aqpa463htran,
                                                  pc_AQPA465REL      => p.aqpa463hnrel,
                                                  pd_AQPA465CON      => p.aqpa463hfcon,
                                                  pn_dif             => ln_mtoDifer,
                                                  pn_red             => ln_mtoRedon);
          --pn_monto_total_1 := pn_monto_total_1 - nvl(ln_mtoRedon, 0);
          --mod@abr 20181219
        
          if lc_flg = 'N' then
            --1:- SN
            --inserte conceptos de deuda como fila
          
            ln_mtoconce_ant := to_number(trim(p.aqpa463txtord),
                                         '99999999999999999.99'); --20180622
          
            if p.aqpa463txoren - 100 = 18 then
              ln_mtoconce := to_number(ln_mtoconce_ant) -
                             nvl(ln_mtoDifer, 0);
            else
              ln_mtoconce := to_number(ln_mtoconce_ant); ---verficar 222 
            end if;
          
            if ln_mtoconce <> 0 then
            
              --datos persona
              begin
              
                pq_cr_factura_electronica.sp_num_documento(ln_cta,
                                                           lc_pendoc,
                                                           lv_penom,
                                                           pv_tdoc,
                                                           pn_pais,
                                                           ln_petdoc,
                                                           pd_pgfape2);
              end;
            
              --datos direccion cliente
              begin
                -- Call the procedure
                pq_cr_factura_electronica.sp_dir_cliente(lc_pendoc,
                                                         ln_petdoc,
                                                         pn_pais,
                                                         lv_sngc13dir,
                                                         lv_fst071dsc1,
                                                         lv_locnom1,
                                                         lv_depnom1,
                                                         lv_ubgCli); ---dni  pn_pendoc
              end;
            
              --Codigo del Tipo de Comprobante
              --!!1 REVISAR AQUI: TIPO DE DOCUMENTO
              --2018.10.10
              /*if substr(p.aqpa463serie, 1, 1) = 'F' then
                ln_guiaCP := 1;    ----01: Factura
                --ln_guiaCP := 5;      ----13: Documento Financiero
              elsif substr(p.aqpa463serie, 1, 1) = 'B' then
                ln_guiaCP := 3;    ----03: Boleta
                --ln_guiaCP := 5;      ----13: Documento Financiero
              else
                ln_guiaCP := null;
              end if;*/
              --2018.10.10 
            
              -- >>> Inicio control
              ---ln_flag: Comision 
              -- 4: hipotecario
              -- 3: consumo
            
              begin
                select 'S'
                  into lc_flr
                  from fst198 t
                 where t.tp1cod = 1
                   and t.tp1cod1 = 11120
                   and t.tp1corr1 = 1
                   and t.tp1corr2 = 23
                   and t.tp1nro1 <> 0
                   and t.tp1nro1 = p.aqpa463tcre;
                --and t.tp1imp1 = 1;
              exception
                when others then
                  lc_flr := 'N';
              end;
            
              if lc_flr = 'S' then
              
                -- Se verifica si el rubro se encuentra activo para F. E.
                begin
                  select t.tp1imp1
                    into lc_fcont
                    from fst198 t
                   where t.tp1cod = 1
                     and t.tp1cod1 = 11120
                     and t.tp1corr1 = 1
                     and t.tp1corr2 = 23
                     and t.tp1nro1 <> 0
                     and t.tp1nro1 = p.aqpa463tcre
                     and t.tp1imp1 = 1;
                exception
                  when others then
                    -- 2022.11.18 dcastro se agrego excepcion
                    lc_fcont := null;
                end;
              
                if lc_fcont = 1 then
                  /*
                  if substr(p.aqpa463serie, 1, 1) in ('F','B') then
                    ln_guiaCP := 5;      ----13: Documento Financiero
                  else
                    ln_guiaCP := null;
                  end if;
                  */
                
                  ---Verificar si el documento fue emitido con serie y número
                  ---si IdDocumento = 13
                  begin
                    select 'S'
                      into ln_tipfin
                      from aqpb056 a
                     where a.aqpb056pgc = p.aqpa463pgcod
                       and a.aqpb056mod = p.aqpa463hcmod
                       and a.aqpb056suc = p.aqpa463hsucor
                       and a.aqpb056trx = p.aqpa463htran
                       and a.aqpb056rel = p.aqpa463hnrel
                       and a.aqpb056fco = p.aqpa463hfcon
                       and a.aqpb056tco = '13';
                  
                  exception
                    when others then
                    
                      begin
                      
                        select 'S'
                          into ln_tipfin
                          from aqpb056h a
                         where a.aqpb056hpgc = p.aqpa463pgcod
                           and a.aqpb056hmod = p.aqpa463hcmod
                           and a.aqpb056hsuc = p.aqpa463hsucor
                           and a.aqpb056htrx = p.aqpa463htran
                           and a.aqpb056hrel = p.aqpa463hnrel
                           and a.aqpb056hfcon = p.aqpa463hfcon
                           and a.aqpb056htcomf = '13';
                      
                      exception
                        when others then
                        
                          ln_tipfin := 'N';
                      end;
                    
                  end;
                
                  -- Verificar que el módulo/transacción estén habilitados
                  begin
                    select count(*)
                      into lc_ftran
                      from fst198 t
                     where t.tp1cod = 1
                       and t.tp1cod1 = 11120
                       and t.tp1corr1 = 10
                       and t.tp1corr2 = 1
                       and t.tp1corr3 <> 0
                       and t.tp1imp1 = 1
                       and t.tp1nro1 = p.aqpa463hcmod
                       and t.tp1nro2 = p.aqpa463htran;
                  exception
                    when others then
                      --2022.11.18 dcastro se agrego excepcion
                      lc_ftran := null;
                  end;
                  if ln_tipfin = 'S' and lc_ftran > 0 then
                  
                    if substr(p.aqpa463serie, 1, 1) in ('F', 'B') then
                      ln_guiaCP := 5; ----13: Documento Financiero
                    else
                      ln_guiaCP := null;
                    end if;
                  
                  end if;
                
                end if;
              
              end if;
            
              -- >>>>>>>>>
              /*
              if substr(p.aqpa463serie, 1, 1) in ('F','B') then
                ln_guiaCP := 5;      ----13: Documento Financiero
              else
                ln_guiaCP := null;
              end if;   
              */
              -- >>>>>>>>>
            
              begin
                --select '0' || to_char(a.tp1nro1)
                select lpad(trim(a.tp1nro1), 2, '0')
                  into lv_codtipo
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 7
                   and a.tp1corr3 = ln_guiaCP; --2018.10.10 se modifico codigo de guia para tipo comprobante
              exception
                when others then
                  null;
              end;
              -- >>>>>>>>>
            
              --Codigo tipo moneda
              begin
                select trim(a.tp1desc)
                  into lv_tipomda
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 8
                   and a.tp1corr3 >= 1
                   and a.tp1nro1 = ln_mda;
              exception
                when others then
                  null;
              end;
            
              --texto moneda  2018.10.18
              begin
                select trim(a.tp1desc)
                  into lv_desmda
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 2
                   and a.tp1corr2 = 5
                   and a.tp1corr3 >= 1
                   and a.tp1nro1 = ln_mda;
              exception
                when others then
                  null;
              end;
              ---  2018.10.18
            
              /*             --Codigo tipo documento cliente
                          begin
                            select to_char(a.tp1nro1)
                              into lv_codtdoc
                              from fst198 a
                             where a.tp1cod = 1
                               and a.tp1cod1 = 11120
                               and a.tp1corr1 = 1
                               and a.tp1corr2 = 4
                               and a.tp1nro2 = ln_petdoc;
                          exception
                            when others then
                              null;
                          end;
              */
              --Codigo tipo documento cliente
              begin
                select to_char(a.tp1nro1), substr(trim(TP1DESC), -1, 1)
                  into lv_codtdoc, lv_codtdocC
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 4
                   and a.tp1nro2 = ln_petdoc;
              exception
                when others then
                  null;
              end;
            
              --05/04/2023 dcastro se agrego nuevo tipo documento PTP
              if lv_codtdoc = 3 then
                lv_codtdoc := lv_codtdocC;
              end if;
              --05/04/2023 dcastro se agrego nuevo tipo documento PTP
            
              --Correo del cliente
              lv_correo := null;
              begin
                select substr(a.pextxt, 1, INSTR(a.pextxt, '\', 1) - 1)
                  into lv_correo
                  from fsx001 a
                 where a.pepais = pn_pais
                   and a.petdoc = ln_petdoc
                   and a.pendoc = lc_pendoc
                   and a.txcod = 0
                   and rownum = 1 --- 2021/11/11 dcastro se agrego condicion
                 order by a.pexren desc;
              exception
                when others then
                  null;
              end;
            
              --nro item
              ln_item := 0;
              begin
                select max(a.aqpa460item)
                  into ln_item
                  from aqpa460 a
                 where a.aqpa460seri = p.aqpa463serie
                   and a.aqpa460num = p.aqpa463corre;
              exception
                when too_many_rows then
                  begin
                    select max(a.aqpa460item)
                      into ln_item
                      from aqpa460 a
                     where a.aqpa460seri = p.aqpa463serie
                       and a.aqpa460num = p.aqpa463corre
                       and rownum = 1;
                  exception
                    when others then
                      null;
                  end;
                when no_data_found then
                  ln_item := 0;
                when others then
                  null;
              end;
              ln_nroitem := nvl(ln_item, 0) + 1;
            
              --monto conceptos
              --  ln_mtoconce := to_number(replace(trim(p.aqpa463txtord),'.',','));
            
              --       ln_mtoconce_ant:= round(trim(p.aqpa463txtord),2);
            
              --descripcion conceptos
              lv_desconce := trim(p.aqpa463hvchr);
            
              --Codigo de plantilla
              lc_codpla := 'EST';
            
              --- Sistema de Emicion 
              lc_sistemi := 'BANTOT';
            
              --Codigo tipo doc empresa
              begin
                select a.tp1nro1
                  into ln_docemp
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 4;
              exception
                when others then
                  null;
              end;
            
              begin
                select to_char(a.tp1nro1)
                  into lv_tipemp
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 4
                   and a.tp1corr3 >= 1
                   and a.tp1nro2 = ln_docemp;
              
              exception
                when others then
                  null;
              end;
              --ruc caja
              begin
                select trim(a.tp1desc)
                  into lv_ruc
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 1;
              exception
                when others then
                  null;
              end;
            
              --NOMBRE COMERCIAL caja
              begin
                select a.tp1desc
                  into lv_NCOM
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 5;
              exception
                when others then
                  null;
              end;
            
              --Ubigeo caja
              begin
                select trim(a.tp1desc)
                  into lv_ubg
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 6;
              exception
                when others then
                  null;
              end;
              ---------------------------------------campos parte 2
              ----------hora de transacion 
              begin
                select trim(a.aqpa463txtord)
                  into lv_hora
                  from aqpa463 a
                 where a.aqpa463pgcod = p.aqpa463pgcod
                   and a.aqpa463hcmod = p.aqpa463hcmod
                   and a.aqpa463hsucor = p.aqpa463hsucor
                   and a.aqpa463htran = p.aqpa463htran
                   and a.aqpa463hnrel = p.aqpa463hnrel
                   and a.aqpa463hfcon = p.aqpa463hfcon
                   and a.aqpa463serie = p.aqpa463serie
                   and a.aqpa463corre = p.aqpa463corre
                   and a.aqpa463txtord like '%:%';
              exception
                when others then
                  null;
              end;
            
              --mod@abr 20180907
              begin
                select pgfape into ld_fecSis from fst017 where pgcod = 1;
              exception
                when others then
                  null;
              end;
              if lv_hora is null then
              
                if ld_fecSis = p.aqpa463hfcon then
                
                  begin
                    select a.ithora
                      into lv_hora
                      from fsd015 a
                     where a.pgcod = p.aqpa463pgcod
                       and a.itsuc = p.aqpa463hsucor
                       and a.itmod = p.aqpa463hcmod
                       and a.ittran = p.aqpa463htran
                       and a.itnrel = p.aqpa463hnrel;
                  exception
                    when others then
                      null;
                  end;
                
                else
                  begin
                    select a.hhora
                      into lv_hora
                      from fsh015 a
                     where a.pgcod = p.aqpa463pgcod
                       and a.hsucor = p.aqpa463hsucor
                       and a.hcmod = p.aqpa463hcmod
                       and a.htran = p.aqpa463htran
                       and a.hnrel = p.aqpa463hnrel
                       and a.hfcon = p.aqpa463hfcon;
                  exception
                    when others then
                      null;
                  end;
                end if;
              
              end if;
              --mod@br 20180907
            
              --------tipo de operacion 
              begin
                select trim(a.tp1desc)
                  into lv_tipoope
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 11
                   and a.tp1corr3 = 1;
              exception
                when others then
                  null;
                
              end;
              -------Codigo de tipo de importe de afectacion
              Begin
                select to_char(a.tp1nro1)
                  into lc_oneroso
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 12
                   and a.tp1corr3 = 3;
              exception
                when others then
                  null;
              End;
            
              -----Afectaci?n del IGV  
              begin
                select to_char(a.tp1nro1)
                  into lv_afecigv
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 13
                   and a.tp1corr3 = 1;
              exception
                when others then
                  null;
                
              end;
            
              ---------Identificaci?n del tributo seg?n cat?logo SUNAT
              begin
                select to_char(a.tp1nro1), trim(a.tp1desc)
                  into lv_idtrbsunat, lv_nomtrbsunat
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 14
                   and a.tp1corr3 = 1;
              exception
                when others then
                  null;
              end; ---ojo
              ----------C?digo del Tipo de Tributo
              begin
                select trim(a.tp1desc)
                  into lv_destiptrb
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 14
                   and a.tp1corr3 = 2;
              exception
                when others then
                  null;
              end;
            
              /*2018.10.15 MONTO IGV */
              begin
                pq_cr_factura_electronica.sp_cr_cobroigv(pn_pgcod  => p.aqpa463pgcod,
                                                         pn_hcmod  => p.aqpa463hcmod,
                                                         pn_hsucor => p.aqpa463hsucor,
                                                         pn_htran  => p.aqpa463htran,
                                                         pn_hnrel  => p.aqpa463hnrel,
                                                         pn_hfcon  => p.aqpa463hfcon,
                                                         pc_serie  => p.aqpa463serie,
                                                         pn_corr   => p.aqpa463corre,
                                                         pn_mto    => ln_mtoImpuesto);
              
              end;
              /*2018.10.15 MONTO IGV */
            
              ---Monto del descuento o recargo
              ln_MONTO := 0;
            
              -----------------Descripcion del pais 
              begin
                Select trim(a.tp1desc)
                  Into lv_CPAIS
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 15
                   and a.tp1corr3 = 1;
              exception
                when others then
                  null;
              end;
            
              if ln_mtoImpuesto <> 0 then
                --2018.10.20
                lv_partida := null;
                --lc_contrato := null;   
                lv_direccionH := null;
                lv_urbaH      := null;
                lv_dptoH      := null;
                lv_provH      := null;
                lv_distH      := null;
                lv_cdisn      := null;
              
              else
                --2018.10.20
              
                ----------informacion del predio
                begin
                  pq_cr_factura_electronica.sp_cr_detalle_predio(pc_aqpa463mod => p.aqpa463mod,
                                                                 pc_aqpa463suc => p.aqpa463suc,
                                                                 pc_aqpa463mda => p.aqpa463mda,
                                                                 pc_aqpa463pap => p.aqpa463pap,
                                                                 pc_aqpa463cta => p.aqpa463cta,
                                                                 pc_aqpa463ope => p.aqpa463ope,
                                                                 pc_aqpa463sbo => p.aqpa463sbo,
                                                                 pc_aqpa463top => p.aqpa463top,
                                                                 pc_partida    => lv_partida,
                                                                 pc_contrato   => lc_contrato,
                                                                 pc_direccion  => lv_direccionH,
                                                                 pc_urba       => lv_urbaH,
                                                                 pc_dpto       => lv_dptoH,
                                                                 pc_prov       => lv_provH,
                                                                 pc_dist       => lv_distH,
                                                                 pc_ubigeo     => lv_cdisn);
                end;
              
              end if; --2018.10.20
            
              if lv_cdisn is null then
                --20180626
                lv_cdisn      := lv_ubgCli;
                lv_urbaH      := substr(lv_urb, 1, 25);
                lv_dptoH      := substr(lv_depnom1, 1, 30);
                lv_provH      := substr(lv_locnom1, 1, 30);
                lv_distH      := substr(lv_fst071dsc1, 1, 30);
                lv_direccionH := substr(lv_sngc13dir, 1, 100);
              end if;
            
              lc_contrato := lpad(to_char(p.aqpa463cta), 9, 0) ||
                             lpad(to_char(p.aqpa463mda), 3, 0) ||
                             lpad(to_char(p.aqpa463ope), 9, 0); --lv_text2; --numero credito
              lv_NCONT    := lc_contrato;
            
              ld_fecoto := pq_cr_factura_electronica.fn_fecha_desembolso(pc_aqpa463cta => p.aqpa463cta,
                                                                         pc_aqpa463ope => p.aqpa463ope);
            
              lv_fecoto := to_char(ld_fecoto, 'DD-MM-YYYY');
              --agregar a info predio G74.1, G74.2
              lv_infpredio := '0' || '0' || lv_partida || '|' ||
                              lc_contrato || '|' || lv_fecoto || '|' ||
                              lv_direccionH || '|' || lv_urbaH || '|' ||
                              lv_provH || '|' || lv_distH || '|' ||
                              lv_dptoH;
              lv_pendoc    := lc_pendoc;
            
              --Pais del cliente
            
              begin
                select trim(a.tp1desc)
                  into lv_cpai
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 20
                   and a.tp1NRO1 = pn_pais;
              exception
                when others then
                  null;
              end;
            
              --Producto del credito
              begin
                select to_char(p.aqpa463mod) || '-' || trim(a.tonom)
                  into lv_TEXT1
                  from fst004 a
                 where a.modulo = p.aqpa463mod
                   and a.totope = p.aqpa463top;
              
              exception
                when others then
                  null;
              end;
            
              --direccion
              begin
                select to_char(a.tp1desc)
                  into lv_CALLE
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 2;
              
              exception
                when others then
                  null;
              end;
            
              --telefono
              begin
                select trim(to_char(a.tp1desc))
                  into lv_TELF
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 3;
              exception
                when others then
                  null;
              end;
            
              Begin
                ---web de caja arequipa
                select trim(a.tp1desc)
                  into lv_web
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 12;
              exception
                when others then
                  null;
              End;
            
              --departamento
              begin
                select to_char(a.tp1desc)
                  into lv_DEPA
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 7;
              
              exception
                when others then
                  null;
              end;
            
              --provincia
              begin
                select to_char(a.tp1desc)
                  into lv_PROV
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 8;
              
              exception
                when others then
                  null;
              end;
            
              --distrito
              begin
                select to_char(a.tp1desc)
                  into lv_DIST
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 9;
              
              exception
                when others then
                  null;
              end;
            
              --razon social
            
              begin
                select to_char(a.tp1desc)
                  into lv_rzn1
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 10;
              
              exception
                when others then
                  null;
              end;
            
              begin
                select to_char(a.tp1desc)
                  into lv_rzn2
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 11;
              
              exception
                when others then
                  null;
              end;
              lv_rzn := trim(lv_rzn1) || ' ' || trim(lv_rzn2);
            
              lv_glosa := null;
              lv_TPLA  := 'EST';
              lv_TPLCO := 'EST';
              ln_SIMC  := null;
              ln_SVITM := pn_monto_total_1;
              ln_SPVI  := pn_monto_total_1;
              lv_TXML  := '2.1';
              lv_urb   := null;
              lv_PNETU := 'NIU';
              ln_cant  := 1;
              lv_CTPR  := '01';
              ln_VVUIG := ln_mtoconce;
              ln_PRVIT := ln_mtoconce;
              lv_MEDEM := 'UND';
              lv_CSUNA := '84121901';
              ln_ITITM := null;
              ln_IMPTB := null;
              ln_IMPEX := null;
              --lv_afecigv  := '9996';
              lv_SISC   := null;
              lv_codun  := 'FRE';
              ln_MBIM   := ln_mtoconce; --null; 20180623
              ln_TAIMP  := null;
              ln_CDLEY  := 1000;
              lv_TELEY  := trim(result) || ' ' || lv_desmda; --2018.10.17
              lv_TEXT2  := lpad(to_char(p.aqpa463cta), 9, 0) ||
                           lpad(to_char(p.aqpa463mda), 3, 0) ||
                           lpad(to_char(p.aqpa463ope), 9, 0);
              lv_TRECV  := lv_correo;
              lv_TEMPL  := 'EST';
              lv_SUBJE  := '0' || trim(lv_codtipo) || '-' || P.AQPA463SERIE || '-' ||
                           trim(to_char(P.AQPA463CORRE));
              lv_VPCVA  := null;
              lv_NEXP   := '0';
              lv_CIND   := '0';
              ln_MTOTAL := null;
              ln_BAIMP  := null;
              ln_MTIMP  := null;
              ln_PCIMA  := null;
              ln_BSIMP  := null;
              ln_VAIMP  := null;
              ln_MTINF  := pn_monto_total_1;
              ln_MTGRT  := null;
              ln_BSIMPS := null;
              ln_MTOTI  := null;
              lv_CPGS1  := null;
              lv_COMA   := to_char(p.aqpa463hfcon, 'yymmdd') ||
                           lpad(to_char(p.aqpa463hsucor), 3, 0) ||
                           lpad(to_char(p.aqpa463hcmod), 3, 0) ||
                           lpad(to_char(p.aqpa463htran), 3, 0) ||
                           lpad(to_char(p.aqpa463hnrel), 4, 0);
            
              /*2018.10.15 IGV*/
              if nvl(ln_mtoImpuesto, 0) <> 0 then
                --si existe impuesto
                ln_MTOTI  := null;
                ln_MTINF  := null;
                ln_MTGRT  := null;
                ln_BSIMPS := null;
                ln_MTIMP  := ln_mtoImpuesto;
                ln_IMPEX  := ln_mtoImpuesto;
                ln_ITITM  := ln_mtoImpuesto;
                ln_IMPTB  := ln_mtoImpuesto;
                ln_PCIMA  := 18;
                ln_TAIMP  := 18;
                ln_MTOTAL := ln_mtoconce;
                ln_BAIMP  := ln_mtoconce;
                ln_SVITM  := ln_mtoconce; --AQPA460SVITM
              
                lv_tipoope  := '0101'; --AQPA460TOPE  
                ln_SIMC     := ln_mtoImpuesto; --AQPA460SIMC   total impuesto
                lv_desconce := 'IGV'; --AQPA460DESC 
                lv_afecigv  := 10; --AQPA460AFIGV 
              
                lv_idtrbsunat  := 1000; -- AQPA460CODTB  
                lv_nomtrbsunat := 'IGV'; --AQPA460DSTRB  
                lv_codun       := 'VAT'; --AQPA460CODUN 
              
                ln_VVUIG := pn_monto_total_1;
              end if;
              /*2018.10.15 IGV*/
            
              ----------------------datos caja
              Begin
                ---razon social de caja arequipa
                select a.tp1desc
                  into lc_nom1
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 10;
              exception
                when others then
                  null;
              End;
            
              Begin
                ---razon social de caja arequipa
                select a.tp1desc
                  into lc_nom2
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 11;
              exception
                when others then
                  null;
              End;
            
              lc_nomcaja := trim(lc_nom1) || trim(lc_nom2);
            
              --mod@abr 20180903 modificacion de ubigeo TEMPORAL
              lv_sngc13dirFin := trim(lv_sngc13dir) || ' - ' ||
                                 trim(lv_fst071dsc1) || ' - ' ||
                                 trim(lv_locnom1) || ' - ' ||
                                 trim(lv_depnom1);
              lv_depnom1      := null;
              lv_locnom1      := null;
              lv_fst071dsc1   := null;
            
              --mod@abr 20180903 modificacion de ubigeo TEMPORAL
            
              --mod@abr 20180905
              if lv_correo is null then
                lv_correo := 'Reportefactele@cajaarequipa.pe';
              end if;
            
              if lv_TRECV is null then
                lv_TRECV := 'Reportefactele@cajaarequipa.pe';
              end if;
              --mod@abr 20180905
            
              ------insert detalle de factura
              BEGIN
                insert into AQPA460
                  (AQPA460TDOC, --Codigo del Tipo de Documento de Identidad oENEmpresa
                   AQPA460RUCC, --N?mero de documento de identidad del emisor oENEmpresa
                   AQPA460RSOC, --Apellidos y nombres o denominaci?n o raz?n social oENEmpresa
                   AQPA460CDIS, --Codigo de UBIGEO oENEmpresa
                   AQPA460NCOM, --Nombre Comercial oENEmpresa
                   AQPA460CALLE, --Direcci?n completa y detallada oENEmpresa
                   AQPA460URBA, --Urbanizacion o Zona  oENEmpresa
                   AQPA460DEPA, --Departamento, expresado textualmente  oENEmpresa
                   AQPA460PROV, --Provincia, expresarlo textualmente   oENEmpresa
                   AQPA460DIST, --Distrito, expresarlo textualmente oENEmpres
                   AQPA460TELF, --Telefono de la Empresa Emisora oENEmpres
                   AQPA460WEB, --Pagina Web del Emisor oENEmpres           
                   AQPA460CPAIS, --Codigo del Pais del Emisor oENEmpres
                   AQPA460CESUN, --C?digo del establecimiento de Sunat  oENEmpres
                   AQPA460SERI, --Serie del comprobante.  Datos del Comprobante
                   AQPA460NUM, --Numero Correlativo del comprobante. Datos del Comprobante
                   AQPA460FEMI, --Fecha de Emision del Comprobante Datos del Comprobante
                   AQPA460TCOMF, --Codigo del Tipo de Comprobante Datos del Comprobante
                   AQPA460MONE, --Codigo del Tipo de Moneda Datos del Comprobante
                   AQPA460CORRR, --El correo electr?nico del Receptor  Datos del Comprobante
                   AQPA460MGLO, --Multiples Informaci?n adicional u observacion del comprobante.  Datos del Comprobante
                   AQPA460COMA, --Numero Interno del Comprobante Datos del Comprobante
                   AQPA460TPLA, --Tiplo de Plantilla  Datos del Comprobante
                   AQPA460TOPE, --C?digo de Tipo de operaciones Datos del Comprobante
                   AQPA460TPLCO, --C?digo de plantilla de correo  Datos del Comprobante
                   AQPA460CLOG, --C?digo del tipo de Logo Datos del Comprobante
                   AQPA460TDOCR, --Codigo del tipo de documento de identificaci?n del Receptor Datos del Comprobante
                   AQPA460NRUC, --N?mero de documento de identificaci?n Datos del Comprobante
                   AQPA460RASOC, --Apellidos y nombres o denominaci?n o raz?n social Datos del Comprobante
                   AQPA460IMPT, --Importe total  a pagar Datos del Comprobante
                   AQPA460HEMI, --Hora de Emisi?n  Datos del Comprobante
                   AQPA460SIMC, --Suma de todos los impuestos del comprobante.  Datos del Comprobante
                   AQPA460SVITM, --Suma del valor de venta total de todos los items   Datos del Comprobante
                   AQPA460SPVI, --Suma de los precios de venta total de todos los items  Datos del Comprobante
                   AQPA460TXML, -- Indica el tipo de XML que se generar? Datos del Comprobante
                   --  no va para factura   --AQPA460SDREF, --Serie documento al que se aplica la nota. ENComprobanteMotivoDocumento
                   --  no va para factura   --AQPA460NDREF, --Numero  documento al que se aplica la nota.  ENComprobanteMotivoDocumento
                   --  no va para factura    --AQPA460CMEM,  --C?digo por el cual se emite la nota.  ENComprobanteMotivoDocumento
                   ---  no va para factura  --AQPA460SUST,  --Sustento ENComprobanteMotivoDocumentoSustento
                   --  no va para factura     AQPA460SERIE, --Serie del comprobante referenciado. Referencia a un comprobante
                   --  no va para factura     AQPA460NRO,   --N?mero del comprobante referenciado Referencia a un comprobante
                   ---  no va para factura   --AQPA460TCOMP, --C?digo del tipo de comprobante.  Referencia a un comprobante
                   ---  no va para factura  --AQPA460FDREF, --Fecha de emisi?n del comprobante referenciado. Referencia a un comprobante  
                   AQPA460CDIST, --C?digo de UBIGEO Datos adicionales del Receptor
                   AQPA460CALL, --Direcci?n completa y detallada Datos adicionales del Receptor
                   AQPA460URB, --Urbanizacion o Zona   Datos adicionales del Receptor
                   AQPA460DEP, --Departamento Datos adicionales del Receptor
                   AQPA460PRV, --Provincia   Datos adicionales del Receptor
                   AQPA460DST, --Distrito Datos adicionales del Receptor
                   AQPA460CPAI, --C?digo del Pa?s  Datos adicionales del Receptor
                   AQPA460ITEM, --N?mero de orden del Item ENComprobanteDetalle 
                   AQPA460PNETU, --Unidad de medida de los bienes vendidos por item (UN/ECE rec 20) ENComprobanteDetalle 
                   AQPA460CANTF, --Cantidad de unidades vendidas pot item (Q)  ENComprobanteDetalle 
                   AQPA460TOTAL, --Importe monetario que es el total de la l?nea de detalle, incluyendo variaciones de precio (subvenciones, cargos o descuentos) pero sin impuestos.  ENComprobanteDetalle 
                   AQPA460DETE, --Codigo de identificaci?n de Onerosidad del Item ENComprobanteDetalle 
                   AQPA460CTPR, --Codigo de tipo de importe de afectacion ENComprobanteDetalle 
                   /*ok */
                   AQPA460VVUN, --Valores de venta unitarios por item (VU) no incluye impuestos  ENComprobanteDetalle 
                   /*campos probl*/
                   AQPA460VVUIG, --Precio de Venta Unitario (Incluye impuestos)  ENComprobanteDetalle 
                   AQPA460DESC, -- Descripcion del producto ENComprobanteDetalle 
                   AQPA460MFUN, --Multi Descripcion,  puede tener varias desccripciones ENComprobanteDetalle 
                   AQPA460PRVIT, --Es el precio de venta ENComprobanteDetalle 
                   AQPA460MEDEM, --Unidad medida del emisor ENComprobanteDetalle 
                   AQPA460CSUNA, --C?digo producto establecido por Sunat   ENComprobanteDetalle 
                   AQPA460CPGS1, --C?digo de producto GS1  ENComprobanteDetalle 
                   AQPA460ITITM, --Impuesto total del item ENComprobanteDetalle 
                   AQPA460IMPTB, --Importe total de un tributo para este item Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460IMPEX, ---Importe expl?cito a tributar ( = Tasa Porcentaje * Base Imponible)   Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460AFIGV, --Afectaci?n del IGV  Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460SISC, --Sistema de ISC  (01=Especifico; 02= al valor; 03=PV al p?blico)  Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   /*ojo*/
                   AQPA460CODTB, --Identificaci?n del tributo seg?n cat?logo SUNAT Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460DSTRB, --Nombre del Tributo (IGV, IVAP, ISC)  Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460CODUN, --C?digo del Tipo de Tributo (UN/ECE 5153) Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460MBIM, --Monto base del impuesto Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460TAIMP, --Tasa aplicada del impuesto  Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460CDLEY, --Codigo de la Leyenda Utilizado para Leyendas
                   AQPA460TELEY, --Texto de la leyenda  Utilizado para Leyendas
                   AQPA460TEXT1, --Texto libre 1 : Producto  Informaci?n adicional para la visualizacion de representaciones impresas, antes definido por el integrador.
                   AQPA460TEXT2, --Texto libre 2 : N?mero de Cr?dito Informaci?n adicional para la visualizacion de representaciones impresas, antes definido por el integrador.
                   AQPA460TRECV, --Correo del receptor Utilizado para enviar correos adicionales con copia al Correo del Receptor, ingresado en ENComprobante.Correo
                   AQPA460TEMPL, --C?digo de Tipo de Plantilla  Utilizado para enviar correos adicionales con copia al Correo del Receptor, ingresado en ENComprobante.Correo
                   AQPA460SUBJE, --Asunto del correo Utilizado para enviar correos adicionales con copia al Correo del Receptor, ingresado en ENComprobante.Correo
                   AQPA460VPCVA, --Placa del vehiculo Informaci?n adicional del item
                   AQPA460NEXP, --N?mero de Expediente Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460CIND, --C?digo de indicador  Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460NPART, --N?mero de Partida Registral  Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460NCONT, --N?mero de contrato  Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460FOTRC, --Fecha de Otorgo de cr?dito   Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460CDISN, --C?digo de Ubigeo   Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460DIREH, --Direcci?n   Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460URBH, --Urbanizaci?n Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460PRVH, --Provincia   Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460DSTH, --Distrito   Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460DEPTH, --Departamento Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460MTOTAL, --Monto total Gravado (Sin impuesto)  Informaci?n de gravada                           
                   AQPA460BAIMP, --Base del impuesto  IGV del Gravado
                   AQPA460MTIMP, --Monto total solo del impuesto   IGV del Gravado
                   AQPA460PCIMA, --Porcentaje del impuesto aplicado  IGV del Gravado
                   AQPA460BSIMP, --Base del impuesto Otros impuestos del Gravado
                   AQPA460VAIMP, --Monto total solo del impuesto  Otros impuestos del Gravado
                   AQPA460MTINF, --Monto total Inafecto  Informaci?n de inafecto
                   AQPA460MTGRT, --Monto total Gratuito  Informaci?n de gratuito
                   AQPA460BSIMPS, --Base del impuesto Impuestos del Gratuito
                   AQPA460MTOTI, --Monto total de impuestos Impuestos del Gratuito
                   AQPA460PGC, --mod@abr 20180824
                   AQPA460MOD, --mod@abr 20180824  
                   AQPA460SUC, --mod@abr 20180824 
                   AQPA460TRX, --mod@abr 20180824
                   AQPA460REL, --mod@abr 20180824
                   AQPA460ORE, --mod@abr 20180824
                   AQPA460DOCU, --2023/07/18 dcastro
                   AQPA460FECHA --2023/09/07
                   )--
                
                Values
                  (lv_tipemp, --AQPA460TDOC,  ok
                   lv_ruc, --AQPA460RUCC,  ok
                   lv_rzn, --AQPA460RSOC,  ok
                   lv_ubg, --AQPA460CDIS,  ok
                   lv_NCOM, --AQPA460NCOM,  ok
                   lv_CALLE, --AQPA460CALLE  ok
                   lv_urb, --AQPA460URBA,  ok
                   lv_DEPA, --AQPA460DEPA,  ok
                   lv_PROV, --AQPA460PROV,  ok
                   lv_DIST, --AQPA460DIST,  ok
                   lv_TELF, --AQPA460TELF,  ok
                   lv_WEB, --AQPA460WEB,   ok
                   lv_CPAIS, --AQPA460CPAIS  ok
                   lc_codsunat, --lv_CESUN,        --AQPA460CESUN
                   p.aqpa463serie, --AQPA460SERI,  ok
                   p.aqpa463corre, --AQPA460NUM,   ok
                   p.aqpa463hfcon, --AQPA460FEMI,  ok
                   lv_codtipo, --AQPA460TCOMF  ok
                   lv_tipomda, --AQPA460MONE,  ok
                   lv_correo, --AQPA460CORRR  ok
                   lv_glosa, --AQPA460MGLO,  ok
                   lv_COMA, --AQPA460COMA,  ok
                   lv_TPLA, --AQPA460TPLA,  ok
                   lv_tipoope, --AQPA460TOPE,  ok
                   lv_TPLCO, --AQPA460TPLCO  ok
                   lv_CLOG, --AQPA460CLOG,
                   lv_codtdoc, --AQPA460TDOCR  ok
                   lv_pendoc, --AQPA460NRUC,  ok
                   lv_penom, --AQPA460RASOC  ok
                   pn_monto_total_1, --AQPA460IMPT,  ok
                   lv_hora, --AQPA460HEMI,  ok
                   ln_SIMC, --AQPA460SIMC,  ok
                   ln_SVITM, --AQPA460SVITM  ok
                   ln_SPVI, --AQPA460SPVI,  ok
                   lv_TXML, --AQPA460TXML,  ok
                   --AQPA460SDREF, --Serie documento al que se aplica la nota. ENComprobanteMotivoDocumento
                   --AQPA460NDREF, --Numero  documento al que se aplica la nota.  ENComprobanteMotivoDocumento
                   --AQPA460CMEM,  --C?digo por el cual se emite la nota.  ENComprobanteMotivoDocumento
                   --     no va para factura--      lc_sustento,  --Sustento ENComprobanteMotivoDocumentoSustento
                   --AQPA460SERIE, --Serie del comprobante referenciado. Referencia a un comprobante
                   --AQPA460NRO,   --N?mero del comprobante referenciado Referencia a un comprobante
                   --AQPA460TCOMP, --C?digo del tipo de comprobante.  Referencia a un comprobante
                   --AQPA460FDREF, --Fecha de emisi?n del comprobante referenciado. Referencia a un comprobante  
                   lv_ubgCli, --AQPA460CDIST,  ok
                   lv_sngc13dir, --AQPA460CALL,   ok
                   lv_urb, --AQPA460URB,    ok
                   lv_depnom1, --AQPA460DEP,    ok
                   lv_locnom1, --AQPA460PRV,    ok
                   lv_fst071dsc1, --AQPA460DST,    ok
                   lv_cpai, --AQPA460CPAI,   ok
                   ln_nroitem, --AQPA460ITEM,   ok
                   lv_PNETU, --AQPA460PNETU,  ok
                   /*ok*/
                   ln_cant, --AQPA460CANTF,  ok
                   ln_mtoconce, --AQPA460TOTAL,  ok
                   lc_oneroso, --AQPA460DETE,   ok
                   lv_CTPR, --AQPA460CTPR,   ok
                   ln_mtoconce, --AQPA460VVUN,   ok to number
                   ln_VVUIG, --AQPA460VVUIG,  ok
                   lv_desconce, --AQPA460DESC,   ok
                   lv_infpredio, --AQPA460MFUN,   ok
                   ln_PRVIT, --AQPA460PRVIT,  ok
                   lv_MEDEM, --AQPA460MEDEM,  ok
                   lv_CSUNA, --AQPA460CSUNA,  ok
                   lv_CPGS1, --AQPA460CPGS1,  ok
                   ln_ITITM, --AQPA460ITITM,  ok
                   ln_IMPTB, --AQPA460IMPTB,  ok
                   ln_IMPEX, --AQPA460IMPEX,  ok
                   lv_afecigv, --AQPA460AFIGV,  ok
                   lv_SISC, --AQPA460SISC,   ok
                   lv_idtrbsunat, --AQPA460CODTB,  ok
                   lv_nomtrbsunat, --AQPA460DSTRB,  ok
                   lv_codun, --AQPA460CODUN,  ok
                   ln_MBIM, --AQPA460MBIM,   ok
                   ln_TAIMP, --AQPA460TAIMP,  ok
                   ln_CDLEY, --AQPA460CDLEY,  ok
                   lv_TELEY, --AQPA460TELEY,  ok
                   lv_TEXT1, --AQPA460TEXT1,  ok
                   lv_TEXT2, --AQPA460TEXT2,  ok
                   lv_TRECV, --AQPA460TRECV,  ok
                   lv_TEMPL, --AQPA460TEMPL,  ok
                   lv_SUBJE, --AQPA460SUBJE,  ok
                   lv_VPCVA, --AQPA460VPCVA,  ok
                   lv_NEXP, --AQPA460NEXP,   ok
                   lv_CIND, --,        --AQPA460CIND,   ok
                   nvl(lv_partida, ' '), --G74.3  --AQPA460NPART,  ok
                   nvl(lv_NCONT, ' '), -- G74.4 NUMERO CONTRATO                AQPA460NCONT,  ok 
                   ld_fecoto, --G74.5  FECHA OTORGAMIENTO CREDITO   AQPA460FOTRC,  ok
                   nvl(lv_cdisn, ' '), --G74.6  Ubigeo                        AQPA460CDISN,  ok
                   nvl(lv_direccionH, ' '), --G74.7                           AQPA460DIREH,  ok
                   nvl(lv_urbaH, ' '), --G74.8                                 AQPA460URBH,   ok
                   nvl(lv_provH, ' '), --G74.9                                AQPA460PRVH,   ok
                   nvl(lv_distH, ' '), --G74.10                                AQPA460DSTH,   ok
                   nvl(lv_dptoH, ' '), --AQPA460DEPTH,  ok
                   ln_MTOTAL, --AQPA460MTOTAL  ok
                   ln_BAIMP, --AQPA460BAIMP,  ok
                   ln_MTIMP, --AQPA460MTIMP,  ok
                   ln_PCIMA, --AQPA460PCIMA,  ok
                   ln_BSIMP, --AQPA460BSIMP,  ok
                   ln_VAIMP, --AQPA460VAIMP,  ok
                   ln_MTINF, --AQPA460MTINF,  ok
                   ln_MTGRT, --AQPA460MTGRT,  ok
                   ln_BSIMPS, --AQPA460BSIMPS  ok
                   ln_MTOTI, --AQPA460MTOTI   ok
                   P.AQPA463PGCOD, --mod@abr 20180824
                   P.AQPA463HCMOD, --mod@abr 20180824
                   P.AQPA463HSUCOR, --mod@abr 20180824 
                   P.AQPA463HTRAN, --mod@abr 20180824
                   P.AQPA463HNREL, --mod@abr 20180824 
                   P.AQPA463TXOREN, --mod@abr 20180824
                   trim(lv_pendoc), --2023.07.18 dcastro se guarda documento sin espacios
                   p.aqpa463hfcon --- fecha de transaccione 2023.09.07
                   );
              
                commit;
              Exception
                when others then
                
                  lc_coderr := sqlcode;
                  lc_msgerr := sqlerrm;
                
                  insert into aqpa460E
                    (aqpa460eserie,
                     aqpa460ecorr,
                     aqpa460epgcod,
                     aqpa460emod,
                     aqpa460esucorend,
                     aqpa460etran,
                     aqpa460erel,
                     aqpa460econ,
                     aqpa460etip,
                     Aqpa460eacoe,
                     Aqpa460eamsge)
                  
                  values
                    (p.aqpa463serie,
                     p.aqpa463corre,
                     p.aqpa463pgcod,
                     p.aqpa463hcmod,
                     p.aqpa463hsucor,
                     p.aqpa463htran,
                     p.aqpa463hnrel,
                     p.aqpa463hfcon,
                     
                     'S',
                     lc_coderr,
                     lc_msgerr);
                  commit;
              END;
            
              ln_MTOTAL := 0;
              ln_BAIMP  := 0;
              ln_MTIMP  := 0;
              ln_PCIMA  := 0;
              ln_BSIMP  := 0;
              ln_VAIMP  := 0;
              ln_MTINF  := 0;
              ln_MTGRT  := 0;
              ln_BSIMPS := 0;
              ln_MTOTI  := 0;
            
            end if;
          
          end if; --1:- SN
        end if;
      
      ------------------------------------------------------------------------------------------------------------- 
      end loop;
    
      ----insert cabecera de factura aqpa465 
      begin
        -- Call the procedure
        pq_cr_factura_electronica.sp_cr_cabecera_factura(pd_pgfape);
      
      end;
    
    end;
  
  exception
    when others then
      null;
      /*
         lc_coderr := sqlcode;
        lc_msgerr := sqlerrm;
      
      --mod@abr 20180622 ---LOG DE ERRORES
      insert into aqpa460E(--aqpa460eserie,
                --aqpa460ecorr,
                --aqpa460epgcod,
                --aqpa460emod,
               -- aqpa460esucorend,
                ---aqpa460etran,
               -- aqpa460erel,
                --aqpa460econ,
                aqpa460etip,
                aqpa460eacoe,
                aqpa460eamsge)
      values(--pc_AQPA465SERIE ,
             --pc_AQPA465CORR  ,
             --pc_AQPA465PGCOD ,
            -- pc_AQPA465MOD   ,
             --pc_AQPA465SUCOREND,
             --pc_AQPA465TRAN    ,
             --pc_AQPA465REL    , 
             --pc_AQPA465CON,
             'I'      ,
             lc_coderr,
             lc_msgerr);
      
      commit;   
      --mod@abr 20180622
      */
  
  end sp_cr_Detalle_Factura_2;

  ----------------------------------------------------------num->letras
  --************************PACKAGES BODY**************************** 
  --CREATE OR REPLACE PACKAGE BODY Conversor_Numero_letras AS 
  -- 
  -- Retrofitted 
  FUNCTION Excepcion(i IN integer) RETURN varchar2;
  -- 
  -- Retrofitted 
  FUNCTION Decena(i IN integer) RETURN varchar2;
  -- 
  -- Retrofitted 
  FUNCTION Centena(i IN integer) RETURN varchar2;
  -- 
  -- Retrofitted 
  FUNCTION Diez(i IN integer) RETURN varchar2;
  -- 
  -- Retrofitted 
  FUNCTION Cien(i IN integer) RETURN varchar2;
  -- 
  -- Retrofitted 
  FUNCTION mil(i IN integer) RETURN varchar2;
  -- 
  -- Retrofitted 
  FUNCTION Millon(i IN integer) RETURN varchar2;
  -- 
  -- Retrofitted 
  FUNCTION Excepcion(i IN integer) RETURN varchar2 IS
    -- 
    -- 
    v_r VARCHAR2(15);
  BEGIN
    IF i < 10 THEN
      begin
        SELECT DECODE(i,
                      0,
                      '',
                      1,
                      'un',
                      2,
                      'dos',
                      3,
                      'tres',
                      4,
                      'cuatro',
                      5,
                      'cinco',
                      6,
                      'seis',
                      7,
                      'siete',
                      8,
                      'ocho',
                      9,
                      'nueve')
          INTO v_r
          FROM dual;
      exception
        when others then
          null;
      end;
    ELSIF i < 20 THEN
      begin
        SELECT DECODE(i,
                      10,
                      'diez',
                      11,
                      'once',
                      12,
                      'doce',
                      13,
                      'trece',
                      14,
                      'catorce',
                      15,
                      'quince',
                      16,
                      'dieciseis',
                      17,
                      'diecisiete',
                      18,
                      'dieciocho',
                      19,
                      'diecinueve')
          INTO v_r
          FROM dual;
      exception
        when others then
          null;
      end;
    ELSE
      begin
        SELECT DECODE(i,
                      20,
                      'veinte',
                      21,
                      'veintiun',
                      22,
                      'veintidos',
                      23,
                      'veintitres',
                      24,
                      'veinticuatro',
                      25,
                      'veinticinco',
                      26,
                      'veintiseis',
                      27,
                      'veintisiete',
                      28,
                      'veintiocho',
                      29,
                      'veintinueve')
          INTO v_r
          FROM dual;
      exception
        when others then
          null;
      end;
    END IF;
    RETURN v_r;
  END;
  -- 
  -- Retrofitted 
  FUNCTION Decena(i IN integer) RETURN varchar2 IS
    -- 
    -- 
    v_r VARCHAR2(15);
  BEGIN
    begin
      SELECT DECODE(i,
                    0,
                    '',
                    1,
                    '',
                    2,
                    '',
                    3,
                    'treinta',
                    4,
                    'cuarenta',
                    5,
                    'cincuenta',
                    6,
                    'sesenta',
                    7,
                    'setenta',
                    8,
                    'ochenta',
                    9,
                    'noventa')
        INTO v_r
        FROM dual;
    exception
      when others then
        null;
    end;
    RETURN v_r;
  END;
  -- 
  -- Retrofitted 
  FUNCTION Centena(i IN integer) RETURN varchar2 IS
    -- 
    -- 
    v_r VARCHAR2(15);
  BEGIN
    begin
      SELECT DECODE(i,
                    0,
                    '',
                    1,
                    'ciento',
                    2,
                    'doscientos',
                    3,
                    'trescientos',
                    4,
                    'cuatrocientos',
                    5,
                    'quinientos',
                    6,
                    'seiscientos',
                    7,
                    'setecientos',
                    8,
                    'ochocientos',
                    9,
                    'novecientos')
        INTO v_r
        FROM dual;
    exception
      when others then
        null;
    end;
    RETURN v_r;
  END;
  -- 
  -- Retrofitted 
  FUNCTION Diez(i IN integer) RETURN varchar2 IS
    -- 
    -- 
    TDiez VARCHAR2(50);
  BEGIN
    IF i < 30 THEN
      TDiez := Excepcion(i);
    ELSE
      TDiez := Decena(TRUNC(i / 10));
      IF MOD(i, 10) <> 0 THEN
        TDiez := TDiez || ' y ' || excepcion(i MOD 10);
      END IF;
    END IF;
    RETURN(TDiez);
  END;
  -- 
  -- Retrofitted 
  FUNCTION Cien(i IN integer) RETURN varchar2 IS
    -- 
    -- 
    TCien VARCHAR2(50);
  BEGIN
    IF i = 100 THEN
      TCien := 'cien';
    ELSE
      TCien := centena(TRUNC(i / 100));
      IF MOD(i, 100) <> 0 THEN
        IF TRUNC(i / 100) <> 0 THEN
          TCien := TCien || ' ';
        END IF;
        TCien := TCien || diez(MOD(i, 100));
      END IF;
    END IF;
    RETURN(TCien);
  END;
  -- 
  -- Retrofitted 
  FUNCTION mil(i IN integer) RETURN varchar2 IS
    -- 
    -- 
    TMil VARCHAR2(100);
  BEGIN
    IF TRUNC(i / 1000) = 1 THEN
      TMil := 'mil';
      IF MOD(i, 1000) <> 0 THEN
        TMil := TMil || ' ';
      END IF;
      TMil := TMil || Cien(MOD(i, 1000));
    ELSIF TRUNC(i / 1000) = 0 THEN
      TMil := Cien(i);
    ELSE
      TMil := Cien(TRUNC(i / 1000)) || ' mil';
      IF MOD(i, 1000) <> 0 THEN
        TMil := TMil || ' ';
      END IF;
      TMil := TMil || Cien(MOD(i, 1000));
    END IF;
    RETURN(TMil);
  END;
  -- 
  -- Retrofitted 
  FUNCTION Millon(i IN integer) RETURN varchar2 IS
    -- 
    -- 
    TMillon VARCHAR2(150);
  BEGIN
    IF i >= 0 THEN
      IF i = 0 THEN
        TMillon := 'cero';
      ELSIF TRUNC(i / 1000000) = 0 THEN
        TMillon := Mil(i);
      ELSIF TRUNC(i / 1000000) = 1 THEN
        TMillon := 'un millon';
        IF MOD(i, 1000000) <> 0 THEN
          TMillon := TMillon || ' ';
        END IF;
        TMillon := TMillon || Mil(MOD(i, 1000000));
      ELSE
        TMillon := Mil(TRUNC(i / 1000000)) || ' millones';
        IF (MOD(i, 1000000)) <> 0 THEN
          TMillon := TMillon || ' ';
        END IF;
        TMillon := TMillon || Mil(MOD(i, 1000000));
      END IF;
      IF (MOD(i, 10) = 1) AND (MOD(i, 100) <> 11) THEN
        TMillon := TMillon || 'o';
      END IF;
    END IF;
    RETURN(TMillon);
  END;
  -- 
  -- Retrofitted 
  FUNCTION DinTex(x IN number) RETURN varchar2 IS
    -- 
    -- 
    Texto VARCHAR2(150);
    -- 
    -- 
    IntX NUMBER;
    -- 
    -- 
    FraX INTEGER;
  BEGIN
    IF x < 2147483647 AND x >= 0 THEN
      Intx  := TRUNC(x);
      Texto := Millon(Intx);
      FraX  := TRUNC((x - Intx) * 100 + 0.5);
      Texto := upper(Texto || ' con ' || TO_CHAR(Frax, '00')) || '/100';
    END IF;
    RETURN(Texto);
  END;
  -- 
  -- Retrofitted 
  FUNCTION NumTex(x IN number) RETURN varchar2 IS
    -- 
    -- 
    Texto VARCHAR2(150);
    -- 
    -- 
    IntX NUMBER;
  BEGIN
    IF x < 2147483647 AND x >= 0 THEN
      Intx  := TRUNC(x);
      Texto := Millon(Intx);
    END IF;
    RETURN(Texto);
  END;
  --------------------------------------------------------------------------------------------
  ------------Nota de credito
  procedure sp_cr_Nota_Credito(pd_pgfape in date) is
  
    pn_hcmod        number;
    pn_hsucor       number;
    pn_htran        number;
    pn_hnrel        number;
    pd_hfcon        date;
    pn_NRO_RELACION number;
    pd_FECHA_TX     date;
    pn_hcmod2       number;
    pn_hcmod3       number;
    pn_hsucor3      number;
    pn_htran3       number;
    pn_hnrel3       number;
    pn_hfcon3       date;
    lc_serie        char(4);
    lc_correlativo  char(8);
  
    pn_pgcod number;
    --Flag char(1):='N';
    ln_relant  number(4) := 0;
    lc_hipo    char(2);
    ln_emp     number(3);
    ln_mod     number(3);
    ln_suc     number(3);
    ln_mda     number(4);
    ln_pap     number(4);
    ln_cta     number(9);
    ln_ope     number(9);
    ln_sbo     number(3);
    ln_top     number(3);
    lc_flg     char(1) := 'N'; --controla que sea hipotecario
    pn_ordinal number(2);
    lc_flg466  char(1) := 'N'; --controla que no exista en la aqpa466
  
    ln_modulo number(3) := 0;
    ln_tran   number(3) := 0;
    ln_sucur  number(3) := 0;
  
    pn_pais   number(3);
    pn_petdoc number(2);
    pn_pendoc char(12);
    ln_rubro  number;
    lc_tipper char(1);
  
    cursor fsx015 is
    
      select distinct a.pgcod, a.hcmod, a.hsucor, a.htran, a.hnrel, a.hfcon
        from fsx015 a
       inner join FSR170 b
          on a.hcmod = b.sr170trmod + 500
         and a.htran = b.sr170trnro
       where a.pgcod = 1
         and a.hcmod > 499
         and a.hfcon = pd_pgfape --to_date('20092017', 'ddmmyyyy')
         and a.txcod = 0 ---todas las transacciones extornadas
      -- and  a.hcmod= 530 and a.hsucor= 18  and a.htran=977 and a.hnrel in(17,23)
      -- and  a.hcmod= 550 and a.hsucor= 11  and a.htran=503 and a.hnrel in(1)
       order by a.pgcod, a.hcmod, a.hsucor, a.htran, a.hnrel, a.hfcon;
  
  begin
    begin
      for p in fsx015 loop
      
        --Verifica que no exista en cabecera AQPA466
        Begin
          select 'S'
            into lc_flg466
            from aqpa466 a
           where a.aqpa466pgcod = p.pgcod
             and a.aqpa466mod = p.hcmod
             and a.aqpa466sucor = p.hsucor
             and a.aqpa466tran = p.htran
             and a.aqpa466rel = p.hnrel
             and a.aqpa466con = p.hfcon
             and rownum = 1;
        exception
          when others then
            lc_flg466 := 'N';
        end;
        pn_pgcod  := p.pgcod;
        pn_hcmod  := p.hcmod;
        pn_hsucor := p.hsucor;
        pn_htran  := p.htran;
        pn_hnrel  := p.hnrel;
        pd_hfcon  := p.hfcon;
      
        if lc_flg466 = 'N' then
        
          begin
            select f.txtext as NRO_RELACION
              into pn_NRO_RELACION
              from fsx015 f
             where f.hfcon = pd_pgfape --to_date('20092017', 'ddmmyyyy')----cambiar fecha de proceso
               and f.hcmod = pn_hcmod --530
               and f.htran = pn_htran --100
               and f.hnrel = pn_hnrel --2
               and f.hsucor = pn_hsucor --mod@abr 20180707
               and f.txcod = 0
               and f.txreng = 1;
          exception
            --mod@abr 20180707
            when too_many_rows then
              begin
                select f.txtext as NRO_RELACION
                  into pn_NRO_RELACION
                  from fsx015 f
                 where f.hfcon = pd_pgfape --to_date('20092017', 'ddmmyyyy')----cambiar fecha de proceso
                   and f.hcmod = pn_hcmod --530
                   and f.htran = pn_htran --100
                   and f.hnrel = pn_hnrel --2
                   and f.hsucor = pn_hsucor
                   and f.txcod = 0
                   and f.txreng = 1
                   and rownum = 1 --mod@abr 20180707
                ;
              exception
                when others then
                  pn_NRO_RELACION := null;
              end;
          end;
        
          begin
            select to_date(f.txtext, 'DD/MM/RR') as FECHA_TX
              into pd_FECHA_TX
              from fsx015 f
             where f.hfcon = pd_pgfape --to_date('20092017', 'ddmmyyyy')
               and f.hcmod = pn_hcmod -- 530
               and f.htran = pn_htran --100
               and f.hnrel = pn_hnrel --2
               and f.hsucor = pn_hsucor --mod@abr 20180707
               and f.txcod = 0
               and f.txreng = 2;
          exception
            when others then
              pd_FECHA_TX := null;
          end;
        
          pn_hcmod2 := pn_hcmod - 500;
        
          --obtener cuenta moneda hora fecha
          Begin
          
            select a.sr171trord
              into pn_ordinal
              from fsr171 a
             where a.st171cpcod = 15
               and a.sr171tremp = pn_pgcod --p.pgcod--1
               and a.sr171trmod = pn_hcmod2 --p.hcmod--30
               and a.sr171trnro = pn_htran; --p.htran;--100;   
          exception
            when others then
              null;
          end;
        
          begin
            --obtener transaccion original
            select a.hcmod, a.hsucor, a.htran, a.hnrel, a.hfcon
              into pn_hcmod3, pn_hsucor3, pn_htran3, pn_hnrel3, pn_hfcon3 --clave de transaccion
              from fsx016 a
             where a.hcmod = pn_hcmod2 --30
               and a.htran = pn_htran --100
               and a.hfcon = pd_FECHA_TX --to_date('20092017', 'ddmmyyyy')
               and a.hnrel = pn_NRO_RELACION --164
               and a.hsucor = pn_hsucor --mod@abr 20180707
               and rownum = 1;
          exception
            when others then
              pn_hcmod3  := null;
              pn_hsucor3 := null;
              pn_htran3  := null;
              pn_hnrel3  := null;
              pn_hfcon3  := null;
            
          end;
        
          --  delete from aqpa464 where aqpa464hfcon=pd_FECHA_TX;
          /*
             begin
               select a.pgcod,
                      a.modulo,
                      a.itsucd,
                      a.moneda,
                      a.papel,
                      a.ctnro,
                      a.itoper,
                      a.itsubo,
                      a.ittope,
                      substr(a.rubro,5,2)
                 into ln_emp,
                      ln_mod,
                      ln_suc,
                      ln_mda,
                      ln_pap,
                      ln_cta,
                      ln_ope,
                      ln_sbo,
                      ln_top,
                      lc_hipo
                 from fsd016 a
                where a.pgcod  = p.pgcod
                  and a.itmod  = p.hcmod
                  and a.itsuc  = p.hsucor
                  and a.ittran = p.htran
                  and a.itnrel = p.hnrel
                  and a.itord  = pn_ordinal;
             exception
                  when others then null;
             end;
             
             if lc_hipo = '04' then
                lc_flg := 'S';
                  else
                lc_flg := 'N';
             end if;
          */
        
          begin
            pq_cr_factura_electronica.sp_cr_pk_credito(pc_aqpa465pgcod    => p.pgcod,
                                                       pc_aqpa465mod      => p.hcmod,
                                                       pc_aqpa465sucorend => p.hsucor,
                                                       pc_aqpa465tran     => p.htran,
                                                       pc_aqpa465rel      => p.hnrel,
                                                       pc_aqpa465ord      => pn_ordinal,
                                                       pd_aqpa465con      => p.hfcon,
                                                       pn_cod             => ln_emp,
                                                       pn_mod             => ln_mod,
                                                       pn_suc             => ln_suc,
                                                       pn_mda             => ln_mda,
                                                       pn_pap             => ln_pap,
                                                       pn_cta             => ln_cta,
                                                       pn_ope             => ln_ope,
                                                       pn_sbo             => ln_sbo,
                                                       pn_top             => ln_top,
                                                       pc_flag            => lc_flg,
                                                       pn_rubro           => ln_rubro);
          end;
        
          if lc_flg = 'S' then
          
            if ln_relant <> p.hnrel or p.hcmod <> ln_modulo or
               p.htran <> ln_tran or p.hsucor <> ln_sucur then
            
              ------------serie y correlativo NOTA DE CREDITO
              /* begin
                pq_cr_facturacion.sp_cr_nc_hipotecario(lc_descripcion => 'SEQ_NOTACREDITO_COR',
                                                       lc_serie => lc_serie,
                                                       lc_correlativo => lc_correlativo);
              end;
              */
            
              begin
                ---se obtiene NDI/ TIPO de doc                  
                select a.pepais, a.petdoc, a.pendoc
                  into pn_pais, pn_petdoc, pn_pendoc
                  from fsr008 a
                 where a.ctnro = ln_cta ---
                   and a.cttfir = 'T';
              exception
                when others then
                  null;
              end;
            
              begin
                pq_cr_facturacion.sp_cr_tipo_cliente(pn_pais   => pn_pais,
                                                     pn_tipdoc => pn_petdoc,
                                                     pc_numdoc => pn_pendoc,
                                                     pc_tipper => lc_tipper);
              end;
            
              begin
                pq_cr_facturacion.sp_cr_factura(pn_rubro       => ln_rubro,
                                                pc_tipcli      => lc_tipper,
                                                pc_tipo        => 'NC',
                                                pc_serie       => lc_serie,
                                                pc_correlativo => lc_correlativo);
              end;
            
            end if;
          
            ln_relant := p.hnrel;
            ln_modulo := p.hcmod;
            ln_tran   := p.htran;
            ln_sucur  := p.hsucor;
          
            begin
              --obtener montos
              --llamado al cursor
              insert into aqpa464
                (aqpa464txtrub,
                 aqpa464pgcod,
                 aqpa464hcmod,
                 aqpa464hsucor,
                 aqpa464htran,
                 aqpa464hnrel,
                 aqpa464hfcon,
                 aqpa464doid,
                 aqpa464cpcod,
                 aqpa464vnro,
                 aqpa464vchr,
                 aqpa464vfch,
                 aqpa464vimp,
                 aqpa464vtas,
                 aqpa464serie,
                 aqpa464nro,
                 aqpa464emp,
                 aqpa464mod,
                 aqpa464suc,
                 aqpa464mda,
                 aqpa464pap,
                 aqpa464cta,
                 aqpa464ope,
                 aqpa464sbo,
                 aqpa464top,
                 aqpa464hip,
                 AQPA464TXTORD,
                 AQPA464TXOREN,
                 aqpa464pgcode,
                 aqpa464hcmode,
                 aqpa464hsucore,
                 aqpa464htrane,
                 aqpa464hnrele,
                 aqpa464hfcone
                 
                 )
                select distinct (a.txtrub),
                                a.pgcod,
                                a.hcmod,
                                a.hsucor,
                                a.htran,
                                a.hnrel,
                                a.hfcon,
                                b.sd170doid,
                                b.st171cpcod,
                                b.se170vnro,
                                b.se170vchr,
                                b.se170vfch,
                                b.se170vimp,
                                b.se170vtas,
                                lc_serie,
                                lc_correlativo,
                                ln_emp,
                                ln_mod,
                                ln_suc,
                                ln_mda,
                                ln_pap,
                                ln_cta,
                                ln_ope,
                                ln_sbo,
                                ln_top,
                                lc_hipo,
                                a.txtord,
                                a.txoren,
                                pn_pgcod,
                                pn_hcmod,
                                pn_hsucor,
                                pn_htran,
                                pn_hnrel,
                                pd_hfcon
                  from fsx016 a, fse170 b
                 where a.pgcod = 1
                   and a.hcmod = pn_hcmod2 --30
                   and a.htran = pn_htran --100
                   and a.hfcon = pd_FECHA_TX --to_date('20092017', 'ddmmyyyy')
                   and a.hsucor = pn_hsucor --20180709 dcastro
                   and a.txcod = 200
                   and b.sd170doid = a.txtrub
                   and a.hnrel = pn_NRO_RELACION
                   and a.txoren = b.st171cpcod + 100;
              commit;
              /*  select distinct (a.txtrub),
                             a.pgcod,
                             a.hcmod,
                             a.hsucor,
                             a.htran,
                             a.hnrel,
                             a.hfcon,
                             b.sd170doid,
                             b.st171cpcod,
                             b.se170vnro,
                             b.se170vchr,
                             b.se170vfch,
                             b.se170vimp,
                             b.se170vtas
               from fsx016 a, fse170 b
              where a.pgcod = 1
                and a.hcmod = pn_hcmod2--30
                and a.htran = pn_htran--100
                and a.hfcon = pd_FECHA_TX--to_date('20092017', 'ddmmyyyy')
                and a.hnrel - 100 = b.sd170doid
                and a.txcod = 200
                and b.sd170doid = a.txtrub;*/
            exception
              when others then
                null;
            end;
          end if;
        end if;
      end loop;
    
      ------llamado a proceso de nota de credito llenado aqpa460 --descomentar
      begin
        -- Call the procedure
        pq_cr_factura_electronica.sp_cr_nota_credito_montos(pd_pgfape);
      end;
    
    end;
  
  end sp_cr_Nota_Credito;

  procedure sp_cr_Nota_Credito_Montos(pd_pgfape in date) is
  
    result character(100);
    -----------------------
    pd_pgfape2 date;
  
    pn_ctnro number;
  
    pv_tdoc character(25);
  
    pn_pais          number;
    pv_petdoc        number;
    lc_flg           char(1);
    ln_mda           number(4);
    pn_monto_total_1 number(12, 2) := 0;
    lc_codtipo       char(2);
    ln_docemp        number(2);
    pc_aqpa463serie  char(4);
    pc_aqpa463corre  char(8);
    ln_mtoconce      number;
    ln_mtoconce_ant  number;
    lv_codcmen       varchar2(2);
    lc_sustento      char(200);
    ln_nroitem       number(12) := 0;
    ln_cant          number(12, 10);
    lc_codpla        char(3);
    ln_codtributario number;
    lc_tpla          char(3);
    ln_tipope        number;
    lc_cdtpla        char(3);
    lc_sistemi       CHAR(6);
    ln_tpdocum       number;
    lc_desopera      char(200);
    ln_onero         number;
    ln_IMPTB         number;
    ln_afecigv       number;
    ln_IMPEX         number;
    ln_AFIGV         number;
    ln_idtrbsunat    number;
    lc_nomtrbsunat   char(6);
    pc_destiptrb     char(3);
    lc_forpag        char(30);
    pn_moneda        number;
    lc_despago       CHAR(30);
  
    ----------------------------------
    ln_ITITM  number(4) := 0;
    lv_tipemp varchar2(1);
    lv_ruc    varchar2(11);
    lv_rzn    varchar2(1500);
    lv_ubg    varchar2(6);
    lv_NCOM   varchar2(1500);
    lv_CALLE  varchar2(200);
    --lv_URBA        varchar2(25);
    lv_DEPA  varchar2(100);
    lv_PROV  varchar2(30);
    lv_DIST  varchar2(30);
    lv_TELF  varchar2(20);
    lv_WEB   varchar2(100);
    lv_CPAIS varchar2(2);
    --lv_CESUN       varchar2(4);
    lv_codtipo varchar2(2);
    lv_tipomda varchar2(3);
    lv_correo  varchar2(100);
    lv_glosa   varchar2(30);
    lv_COMA    varchar2(20);
    lv_TPLA    varchar2(3);
    --lv_tipoope     varchar2(4);  
    lv_TPLCO       varchar2(3);
    lv_CLOG        varchar2(3);
    lv_codtdoc     varchar2(1);
    lc_pendoc      char(12);
    lv_pendoc      varchar2(15);
    lv_penom       varchar2(1500);
    lv_hora        varchar2(8);
    ln_SIMC        number(12, 2) := 0;
    ln_SVITM       number(12, 2) := 0;
    ln_SPVI        number(12, 2) := 0;
    lv_TXML        varchar2(3);
    lv_ubgCli      varchar2(6);
    lv_sngc13dir   varchar2(500);
    lv_urb         varchar2(100);
    lv_fst071dsc1  varchar2(500);
    lv_locnom1     varchar2(500);
    lv_depnom1     varchar2(500);
    lv_cpai        varchar2(2);
    lv_PNETU       varchar2(3); ------------
    lc_oneroso     varchar2(1);
    ln_VVUIG       NUMBER; --(12):= 0;
    lv_desconce    varchar2(500);
    lv_infpredio   varchar2(500);
    ln_PRVIT       number(15, 2) := 0;
    lv_MEDEM       varchar2(50);
    lv_CSUNA       varchar2(8);
    lv_CPGS1       varchar2(14);
    lv_afecigv     varchar2(2);
    lv_SISC        varchar2(2);
    lv_idtrbsunat  varchar2(4);
    lv_nomtrbsunat varchar2(6);
    lv_codun       varchar2(3);
    ln_MBIM        number(12, 2) := 0;
    ln_TAIMP       number(3, 5) := 0;
    ln_CDLEY       number(4) := 0;
    lv_TELEY       varchar2(200);
    lv_TEXT1       varchar2(1000);
    lv_TEXT2       varchar2(1000);
    lv_TRECV       varchar2(1000);
    lv_TEMPL       varchar2(3);
    lv_SUBJE       varchar2(100);
    lv_VPCVA       varchar2(15);
    lv_NEXP        varchar2(10);
    lv_CIND        varchar2(1);
    lv_partida     varchar2(50);
    lv_NCONT       varchar2(50);
    lv_fecoto      varchar2(10);
    ld_fecoto      date;
    lv_cdisn       varchar2(6);
    lv_direccionH  varchar2(100);
    lv_urbaH       varchar2(50);
    lv_dptoH       varchar2(50);
    lv_provH       varchar2(50);
    lv_distH       varchar2(500);
    ln_MTOTAL      number(12, 2) := 0;
    ln_BAIMP       number(12, 2) := 0;
    ln_MTIMP       number(12, 2) := 0;
    ln_PCIMA       number(12, 2) := 0;
    ln_BSIMP       number(12, 2) := 0;
    ln_VAIMP       number(12, 2) := 0;
    ln_MTINF       number(12, 2) := 0;
    ln_MTGRT       number(12, 2) := 0;
    ln_BSIMPS      number(12, 2) := 0;
    ln_MTOTI       number(12, 2) := 0;
    ln_petdoc      number(2);
    lv_CTPR        varchar(2);
  
    lc_codsunat       varchar2(4);
    lc_nombre_empresa char(30);
    lc_urba           char(25);
  
    lc_contrato varchar2(50);
    lv_rzn1     varchar2(30);
    lv_rzn2     varchar2(30);
  
    ln_item number(12);
  
    lc_maxserie char(4); --20180623
    ln_maxcorre number(8);
  
    ln_mtoDifer number(17, 2);
    ln_mtoRedon number(17, 2);
  
    ld_fecSis date; --mod@abr 20180709
    lc_flg466 char(1); --mod@abr 20180905
  
    lv_codtdocC varchar2(1); --05/04/2023 dcastro 
    --------------------------
    cursor aqpa464 is
    
      select *
        from aqpa464 b
       where b.aqpa464hfcon = pd_pgfape ---20180709 dcastro
      --where b.aqpa464serie = 'FC02'   and b.aqpa464nro = 46    
       order by AQPA464PGCOD,
                AQPA464HCMOD,
                AQPA464HSUCOR,
                AQPA464HTRAN,
                AQPA464HNREL,
                AQPA464HFCON asc;
  
    --where b.aqpa464pgcod=1 and b.aqpa464hcmod=30and b.aqpa464hsucor=11 and b.aqpa464htran=100 and b.aqpa464hnrel= ---por mientras
    --   order by b.aqpa464hnrel  asc;
  
  begin
  
    begin
    
      for p in aqpa464 loop
      
        /*   Pq_Cr_Factura_Electronica.sp_cr_cobroEfectivo(p.aqpa464pgcod,
                                                            p.aqpa464hcmod,
                                                            p.aqpa464hsucor,
                                                            p.aqpa464htran ,
                                                            p.aqpa464hnrel ,
                                                            p.aqpa464hfcon ,
                                                            p.aqpa464serie ,
                                                            p.aqpa464nro ,
                                                            pn_monto_total_1);
        */
        --mod@abr 20180905 
        --Verifica que no exista en cabecera AQPA466
        lc_flg466 := 'N';
        Begin
          select 'S'
            into lc_flg466
            from aqpa466 a
           where a.aqpa466pgcod = p.aqpa464pgcod
             and a.aqpa466mod = p.aqpa464hcmod
             and a.aqpa466sucor = p.aqpa464hsucor
             and a.aqpa466tran = p.aqpa464htran
             and a.aqpa466rel = p.aqpa464hnrel
             and a.aqpa466con = p.aqpa464hfcon
             and rownum = 1;
        exception
          when others then
            lc_flg466 := 'N';
        end;
        --mod@abr 20180905
        if lc_flg466 = 'N' then
          --mod@abr 20180905
        
          Pq_Cr_Factura_Electronica.sp_cr_cobroEfectivoNC(p.aqpa464pgcod,
                                                          p.aqpa464hcmod,
                                                          p.aqpa464hsucor,
                                                          p.aqpa464htran,
                                                          p.aqpa464hnrel,
                                                          p.aqpa464hfcon,
                                                          p.aqpa464serie,
                                                          p.aqpa464nro,
                                                          pn_monto_total_1); --20180623
        
          --validar concepto 
          begin
            select 'S'
              into lc_flg
              from fst198 a
             where a.tp1cod = 1
               and a.tp1cod1 = 11120
               and a.tp1corr1 = 1
               and a.tp1corr2 = 3
               and a.tp1corr3 >= 1
               and a.tp1nro1 = p.aqpa464cpcod;
          exception
            when others then
              lc_flg := 'N';
          end;
        
          ----------Obtener codigo de sunat
          begin
            select lpad(a.tp1nro2, 4, '0')
              into lc_codsunat
              from fst198 a
             where a.tp1cod = 1
               and a.tp1cod1 = 11120
               and a.tp1corr1 = 1
               and a.tp1corr2 = 500
               and a.tp1nro1 = p.aqpa464hsucor;
          exception
            when others then
              null;
          end;
        
          begin
            -- Call the function
            result := pq_cr_factura_electronica.dintex(pn_monto_total_1);
          end;
        
          pn_ctnro := p.aqpa464cta;
          ln_mda   := p.aqpa464mda;
        
          if lc_flg = 'N' then
            --inserte conceptos de deuda como fila
          
            pq_cr_factura_electronica.sp_cr_Dif_Red(pc_AQPA465PGCOD    => p.aqpa464pgcod,
                                                    pc_AQPA465MOD      => p.aqpa464hcmod,
                                                    pc_AQPA465SUCOREND => p.aqpa464hsucor,
                                                    pc_AQPA465TRAN     => p.aqpa464htran,
                                                    pc_AQPA465REL      => p.aqpa464hnrel,
                                                    pd_AQPA465CON      => p.aqpa464hfcon,
                                                    pn_dif             => ln_mtoDifer,
                                                    pn_red             => ln_mtoRedon);
          
            ln_mtoconce_ant := to_number(trim(p.aqpa464txtord),
                                         '99999999999999999.99'); --20180622
          
            if p.aqpa464txoren - 100 = 18 then
              ln_mtoconce := to_number(ln_mtoconce_ant) -
                             nvl(ln_mtoDifer, 0) - nvl(ln_mtoRedon, 0);
            else
              ln_mtoconce := to_number(ln_mtoconce_ant); ---verficar 222 
            end if;
          
            if ln_mtoconce <> 0 then
              begin
                -- Call the procedure
                pq_cr_factura_electronica.sp_num_documento(p.aqpa464cta,
                                                           lc_pendoc,
                                                           lv_penom,
                                                           pv_tdoc,
                                                           pn_pais,
                                                           ln_petdoc,
                                                           pd_pgfape2);
              end;
            
              begin
                -- Call the procedure
                pq_cr_factura_electronica.sp_dir_cliente(lc_pendoc,
                                                         ln_petdoc,
                                                         pn_pais,
                                                         lv_sngc13dir,
                                                         lv_fst071dsc1,
                                                         lv_locnom1,
                                                         lv_depnom1,
                                                         lv_ubgCli); ---dni  pn_pendoc
              end;
            
              --Codigo del Tipo de Comprobante
              begin
                select '0' || trim(to_char(a.tp1nro1))
                  into lv_codtipo
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 7
                   and a.tp1corr3 = 2;
              exception
                when others then
                  null;
              end;
            
              --Codigo tipo moneda
              begin
                select trim(a.tp1desc)
                  into lv_tipomda
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 8
                   and a.tp1corr3 >= 1
                   and a.tp1nro1 = ln_mda;
              exception
                when others then
                  null;
              end;
            
              /*             --Codigo tipo documento cliente
                            begin
                              select to_char(a.tp1nro1), substr(trim(TP1DESC),-1,1)
                                into lv_codtdoc, lv_codtdocC
                                from fst198 a
                               where a.tp1cod = 1
                                 and a.tp1cod1 = 11120
                                 and a.tp1corr1 = 1
                                 and a.tp1corr2 = 4
                                 and a.tp1nro2 = ln_petdoc;
                            exception
                              when others then
                                null;
                            end;
              */
              --Codigo tipo documento cliente
              begin
                select to_char(a.tp1nro1), substr(trim(TP1DESC), -1, 1)
                  into lv_codtdoc, lv_codtdocC
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 4
                   and a.tp1nro2 = ln_petdoc;
              exception
                when others then
                  null;
              end;
            
              --05/04/2023 dcastro se agrego nuevo tipo documento PTP
              if lv_codtdoc = 3 then
                lv_codtdoc := lv_codtdocC;
              end if;
              --05/04/2023 dcastro se agrego nuevo tipo documento PTP
            
              --Correo del cliente
              lv_correo := null;
              begin
                select substr(a.pextxt, 1, INSTR(a.pextxt, '\', 1) - 1)
                  into lv_correo
                  from fsx001 a
                 where a.pepais = pn_pais
                   and a.petdoc = ln_petdoc
                   and a.pendoc = lc_pendoc
                   and a.txcod = 0
                   and rownum = 1 --- 2021/11/11 dcastro se agrego condicion
                 order by a.pexren desc;
              exception
                when others then
                  null;
              end;
            
              --nro item
              ln_item := 0;
              begin
                select max(a.aqpa460item)
                  into ln_item
                  from aqpa460 a
                 where a.aqpa460seri = p.aqpa464serie
                   and a.aqpa460num = p.aqpa464nro;
              exception
                when too_many_rows then
                  begin
                    select max(a.aqpa460item)
                      into ln_item
                      from aqpa460 a
                     where a.aqpa460seri = p.aqpa464serie
                       and a.aqpa460num = p.aqpa464nro
                       and rownum = 1;
                  exception
                    when others then
                      null;
                  end;
                when no_data_found then
                  ln_item := 0;
                when others then
                  null;
              end;
              ln_nroitem := nvl(ln_item, 0) + 1;
            
              --descripcion conceptos
              lv_desconce := trim(p.aqpa464vchr);
            
              --Codigo de plantilla
              lc_codpla := 'EST';
            
              --Codigo tipo doc empresa
              begin
                select trim(a.tp1nro1)
                  into ln_docemp
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 4;
              exception
                when others then
                  null;
              end;
            
              begin
                select to_char(a.tp1nro1)
                  into lv_tipemp
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 4
                   and a.tp1corr3 >= 1
                   and a.tp1nro2 = ln_docemp;
              
              exception
                when others then
                  null;
              end;
            
              --ruc caja
              begin
                select trim(a.tp1desc)
                  into lv_ruc
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 1;
              exception
                when others then
                  null;
              end;
            
              --NOMBRE COMERCIAL caja
              begin
                select a.tp1desc
                  into lv_NCOM
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 5;
              exception
                when others then
                  null;
              end;
            
              --Ubigeo caja
              begin
                select trim(a.tp1desc)
                  into lv_ubg
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 6;
              exception
                when others then
                  null;
              end;
            
              ----Obtener el numero y serie de la transaccion 
              begin
                select max(a.aqpa463serie), max(a.aqpa463corre)
                  into lc_maxserie, ln_maxcorre
                  from aqpa463 a
                 where a.aqpa463pgcod = p.aqpa464pgcod --1
                   and a.aqpa463hcmod = p.aqpa464hcmod --30
                   and a.aqpa463hsucor = p.aqpa464hsucor --98
                   and a.aqpa463htran = p.aqpa464htran --100
                   and a.aqpa463hnrel = p.aqpa464hnrel --5
                   and a.aqpa463hfcon = p.aqpa464hfcon;
              
              exception
                when others then
                  null;
              end;
            
              begin
                select trim(a.aqpa463serie),
                       trim(a.aqpa463corre),
                       a.aqpa463mda
                  into pc_aqpa463serie, pc_aqpa463corre, pn_moneda
                  from aqpa463 a
                 where a.aqpa463pgcod = p.aqpa464pgcod --1
                   and a.aqpa463hcmod = p.aqpa464hcmod --30
                   and a.aqpa463hsucor = p.aqpa464hsucor --98
                   and a.aqpa463htran = p.aqpa464htran --100
                   and a.aqpa463hnrel = p.aqpa464hnrel --5
                   and a.aqpa463hfcon = p.aqpa464hfcon
                   and a.aqpa463serie = lc_maxserie
                   and a.aqpa463corre = ln_maxcorre
                   and rownum = 1;
              
              exception
                when others then
                  null;
              end;
            
              begin
                select '0' || trim(to_char(a.tp1nro1))
                  into lv_codcmen
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 9
                   and a.tp1corr3 = 1;
              exception
                when others then
                  null;
              end;
            
              begin
                select trim(a.tp1desc)
                  into lc_sustento
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 9
                   and a.tp1corr3 = 3;
              exception
                when others then
                  null;
              end;
            
              begin
                select trim(a.tp1nro1)
                  into ln_codtributario
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 10
                   and a.tp1corr3 = 3;
              exception
                when others then
                  null;
              end;
            
              ------------------------------llenado 2 parte nc
            
              -----------------Descripcion del pais 
              begin
                Select trim(a.tp1desc)
                  Into lv_CPAIS
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 15
                   and a.tp1corr3 = 1;
              exception
                when others then
                  null;
              end;
            
              --tipo de plantilla
              lc_tpla := 'EST';
            
              ------C?digo de Tipo de operaciones
              begin
              
                select a.tp1nro1
                  into ln_tipope
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 11
                   and a.tp1corr3 = 1;
              exception
                when others then
                  null;
              end;
            
              --monto conceptos
              -- ln_mtoconce := to_number(replace(trim(p.aqpa463txtord),'.',','));
              -- ln_mtoconce := to_number(trim(p.aqpa464vimp));  COMENTADO 20160823
            
              --C?digo de plantilla de correo
              lc_cdtpla := 'EST';
            
              ---Sistema de emisi?n del comprobante por ejm ERP
              lc_sistemi := 'BANTOT';
            
              ----Codigo del tipo de documento de identificaci?n del Receptor
              begin
                select a.tp1nro1
                  into ln_tpdocum
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 4
                   and a.tp1nro2 = pv_petdoc;
              exception
                when others then
                  null;
              end;
            
              -----Nota de operacion 
              begin
                select a.tp1desc
                  into lc_desopera
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 9
                   and a.tp1corr3 = 3;
              exception
                when others then
                  null;
              end;
            
              -------onerosidad
              begin
              
                select a.tp1nro1
                  into ln_onero
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 12
                   and a.tp1corr3 = 3;
              exception
                when others then
                  null;
              end;
            
              --Importe total de un tributo para este item
            
              ln_AFIGV := 0;
            
              -----Afectaci?n del IGV  
              begin
                select a.tp1nro1
                  into ln_afecigv
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 13
                   and a.tp1corr3 = 1;
              exception
                when others then
                  null;
                
              end;
            
              ---------Identificaci?n del tributo seg?n cat?logo SUNAT
              begin
                select trim(a.tp1nro1), trim(a.tp1desc)
                  into ln_idtrbsunat, lc_nomtrbsunat
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 14
                   and a.tp1corr3 = 1;
              exception
                when others then
                  null;
              end;
            
              ----------C?digo del Tipo de Tributo
              begin
                select trim(a.tp1desc)
                  into pc_destiptrb
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 14
                   and a.tp1corr3 = 2;
              exception
                when others then
                  null;
              end;
            
              begin
                select a.tp1desc
                  into lc_forpag
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 8
                   and a.tp1nro1 = pn_moneda; ---asignar variable        
              exception
                when others then
                  null;
              end;
            
              ------Observacion del Termino de pago
              begin
                select a.tp1desc
                  into lc_despago
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 16
                   and a.tp1corr3 = 1;
              exception
                when others then
                  null;
                
              end;
              ---------------------------------------campos parte 2
              ----------hora de transacion 
              begin
                select trim(a.aqpa464vchr)
                  into lv_hora
                  from aqpa464 a
                 where a.aqpa464pgcod = p.aqpa464pgcod
                   and a.aqpa464hcmod = p.aqpa464hcmod
                   and a.aqpa464hsucor = p.aqpa464hsucor
                   and a.aqpa464htran = p.aqpa464htran
                   and a.aqpa464hnrel = p.aqpa464hnrel
                   and a.aqpa464hfcon = p.aqpa464hfcon
                   and a.aqpa464serie = p.aqpa464serie
                   and a.aqpa464nro = p.aqpa464nro
                   and a.aqpa464vchr like '%:%';
              exception
                when others then
                  null;
                
              end;
            
              --mod@abr 20180907
              begin
                select pgfape into ld_fecSis from fst017 where pgcod = 1;
              exception
                when others then
                  null;
              end;
              if lv_hora is null then
              
                if ld_fecSis = p.aqpa464hfcon then
                
                  begin
                    select a.ithora
                      into lv_hora
                      from fsd015 a
                     where a.pgcod = p.aqpa464pgcod
                       and a.itsuc = p.aqpa464hsucor
                       and a.itmod = p.aqpa464hcmod
                       and a.ittran = p.aqpa464htran
                       and a.itnrel = p.aqpa464hnrel;
                  exception
                    when others then
                      null;
                  end;
                
                else
                  begin
                    select a.hhora
                      into lv_hora
                      from fsh015 a
                     where a.pgcod = p.aqpa464pgcod
                       and a.hsucor = p.aqpa464hsucor
                       and a.hcmod = p.aqpa464hcmod
                       and a.htran = p.aqpa464htran
                       and a.hnrel = p.aqpa464hnrel
                       and a.hfcon = p.aqpa464hfcon;
                  exception
                    when others then
                      null;
                  end;
                end if;
              
              end if;
              --mod@br 20180907
            
              lv_glosa  := null;
              lv_TPLA   := 'EST';
              lv_TPLCO  := 'EST';
              ln_SIMC   := null;
              ln_SVITM  := pn_monto_total_1;
              ln_SPVI   := pn_monto_total_1;
              lv_TXML   := '2.1';
              lv_urb    := null;
              lv_PNETU  := 'NIU';
              ln_cant   := 1;
              lv_CTPR   := '01';
              ln_VVUIG  := ln_mtoconce;
              ln_PRVIT  := ln_mtoconce;
              lv_MEDEM  := 'UND';
              ln_ITITM  := null;
              ln_IMPTB  := null;
              ln_IMPEX  := null;
              lv_SISC   := null;
              lv_codun  := 'FRE';
              ln_MBIM   := ln_mtoconce;
              ln_TAIMP  := null;
              ln_CDLEY  := 1000;
              lv_TELEY  := trim(result);
              lv_TEXT2  := lpad(to_char(p.aqpa464cta), 9, 0) ||
                           lpad(to_char(p.aqpa464mda), 3, 0) ||
                           lpad(to_char(p.aqpa464ope), 9, 0);
              lv_TRECV  := lv_correo;
              lv_TEMPL  := 'EST';
              lv_SUBJE  := '0' || trim(lv_codtipo) || '-' ||
                           pc_aqpa463serie || '-' ||
                           trim(to_char(pc_aqpa463corre));
              lv_VPCVA  := null;
              lv_NEXP   := '0';
              lv_CIND   := '0';
              ln_MTOTAL := null;
              ln_BAIMP  := null;
              ln_MTIMP  := null;
              ln_PCIMA  := null;
              ln_BSIMP  := null;
              ln_VAIMP  := null;
              ln_MTINF  := pn_monto_total_1;
              ln_MTGRT  := null;
              ln_BSIMPS := null;
              ln_MTOTI  := null;
              lv_CSUNA  := '84121901';
              lc_urba   := NULL;
              lv_COMA   := to_char(p.aqpa464hfcon, 'yymmdd') ||
                           lpad(to_char(p.aqpa464hsucor), 3, 0) ||
                           lpad(to_char(p.aqpa464hcmod), 3, 0) ||
                           lpad(to_char(p.aqpa464htran), 3, 0) ||
                           lpad(to_char(p.aqpa464hnrel), 4, 0);
              --------------------------Datos empresa guia proceso
            
              Begin
                ---nombre de caja arequipa
                select a.tp1desc
                  into lc_nombre_empresa
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 5;
              exception
                when others then
                  null;
              End;
            
              --Producto del credito
              begin
                select to_char(p.aqpa464mod) || '-' || trim(a.tonom)
                  into lv_TEXT1
                  from fst004 a
                 where a.modulo = p.aqpa464mod
                   and a.totope = p.aqpa464top;
              
              exception
                when others then
                  null;
              end;
            
              --direccion
              begin
                select to_char(a.tp1desc)
                  into lv_CALLE
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 2;
              
              exception
                when others then
                  null;
              end;
            
              --telefono
              begin
                select trim(to_char(a.tp1desc))
                  into lv_TELF
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 3;
              exception
                when others then
                  null;
              end;
            
              Begin
                ---web de caja arequipa
                select trim(a.tp1desc)
                  into lv_web
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 12;
              exception
                when others then
                  null;
              End;
            
              --departamento
              begin
                select to_char(a.tp1desc)
                  into lv_DEPA
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 7;
              
              exception
                when others then
                  null;
              end;
            
              --provincia
              begin
                select to_char(a.tp1desc)
                  into lv_PROV
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 8;
              
              exception
                when others then
                  null;
              end;
            
              --distrito
              begin
                select to_char(a.tp1desc)
                  into lv_DIST
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 9;
              
              exception
                when others then
                  null;
              end;
            
              --razon social
            
              begin
                select to_char(a.tp1desc)
                  into lv_rzn1
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 10;
              
              exception
                when others then
                  null;
              end;
            
              begin
                select to_char(a.tp1desc)
                  into lv_rzn2
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 11;
              
              exception
                when others then
                  null;
              end;
              lv_rzn := trim(lv_rzn1) || ' ' || trim(lv_rzn2);
            
              --provincia
              begin
                select to_char(a.tp1desc)
                  into lv_PROV
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 8;
              
              exception
                when others then
                  null;
              end;
            
              --Pais del cliente
            
              begin
                select trim(a.tp1desc)
                  into lv_cpai
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 20
                   and a.tp1NRO1 = pn_pais;
              exception
                when others then
                  null;
              end;
            
              -------Codigo de tipo de importe de afectacion
              Begin
                select to_char(a.tp1nro1)
                  into lc_oneroso
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 12
                   and a.tp1corr3 = 3;
              exception
                when others then
                  null;
              End;
            
              ---------informacion del predio
              begin
                pq_cr_factura_electronica.sp_cr_detalle_predio(pc_aqpa463mod => p.aqpa464mod, --p.aqpa463mod,
                                                               pc_aqpa463suc => p.aqpa464suc,
                                                               pc_aqpa463mda => p.aqpa464mda,
                                                               pc_aqpa463pap => p.aqpa464pap,
                                                               pc_aqpa463cta => p.aqpa464cta,
                                                               pc_aqpa463ope => p.aqpa464ope,
                                                               pc_aqpa463sbo => p.aqpa464sbo,
                                                               pc_aqpa463top => p.aqpa464top,
                                                               pc_partida    => lv_partida,
                                                               pc_contrato   => lc_contrato,
                                                               pc_direccion  => lv_direccionH,
                                                               pc_urba       => lv_urbaH,
                                                               pc_dpto       => lv_dptoH,
                                                               pc_prov       => lv_provH,
                                                               pc_dist       => lv_distH,
                                                               pc_ubigeo     => lv_cdisn);
              
              end;
            
              if lv_cdisn is null then
                --20180626
                lv_cdisn      := lv_ubgCli;
                lv_urbaH      := substr(lv_urb, 1, 25);
                lv_dptoH      := substr(lv_depnom1, 1, 30);
                lv_provH      := substr(lv_locnom1, 1, 30);
                lv_distH      := substr(lv_fst071dsc1, 1, 30);
                lv_direccionH := substr(lv_sngc13dir, 1, 100);
              end if;
            
              lc_contrato := lpad(to_char(p.aqpa464cta), 9, 0) ||
                             lpad(to_char(p.aqpa464mda), 3, 0) ||
                             lpad(to_char(p.aqpa464ope), 9, 0); --lv_text2; --numero credito
              lv_NCONT    := lc_contrato;
            
              ld_fecoto := pq_cr_factura_electronica.fn_fecha_desembolso(pc_aqpa463cta => p.aqpa464cta,
                                                                         pc_aqpa463ope => p.aqpa464ope);
            
              lv_fecoto := to_char(ld_fecoto, 'DD-MM-YYYY');
              --agregar a info predio G74.1, G74.2
              lv_infpredio := '0' || '0' || lv_partida || '|' ||
                              lc_contrato || '|' || lv_fecoto || '|' ||
                              lv_direccionH || '|' || lv_urbaH || '|' ||
                              lv_provH || '|' || lv_distH || '|' ||
                              lv_dptoH;
              lv_pendoc    := lc_pendoc;
            
              -----Afectaci?n del IGV  
              begin
                select to_char(a.tp1nro1)
                  into lv_afecigv
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 13
                   and a.tp1corr3 = 1;
              exception
                when others then
                  null;
                
              end;
            
              ---------Identificaci?n del tributo seg?n cat?logo SUNAT
              begin
                select to_char(a.tp1nro1), trim(a.tp1desc)
                  into lv_idtrbsunat, lv_nomtrbsunat
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 14
                   and a.tp1corr3 = 1;
              
              exception
                when others then
                  -- 2022.11.18 dcastro se agrego excepcion
                  lv_idtrbsunat  := null;
                  lv_nomtrbsunat := null;
              end;
            
              ----------tipo de documento de referencia
              begin
              
                select '0' || to_char(a.tp1nro1)
                  into lc_codtipo
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 7
                   and a.tp1corr3 = 1; --Factura  
              exception
                when others then
                  null;
              end;
            
              --mod@abr 20180903 modificacion de ubigeo TEMPORAL
              lv_sngc13dir  := trim(lv_sngc13dir) || '- ' ||
                               trim(lv_fst071dsc1) || ' - ' ||
                               trim(lv_locnom1) || ' - ' ||
                               trim(lv_depnom1);
              lv_depnom1    := null;
              lv_locnom1    := null;
              lv_fst071dsc1 := null;
            
              --mod@abr 20180903 modificacion de ubigeo TEMPORAL
              --mod@abr 20180905
              if lv_correo is null then
                lv_correo := 'Reportefactele@cajaarequipa.pe';
              end if;
            
              if lv_TRECV is null then
                lv_TRECV := 'Reportefactele@cajaarequipa.pe';
              end if;
              --mod@abr 20180905
            
              insert into AQPA460
                (AQPA460TDOC, --Codigo del Tipo de Documento de Identidad oENEmpresa
                 AQPA460RUCC, --N?mero de documento de identidad del emisor oENEmpresa
                 AQPA460RSOC, --Apellidos y nombres o denominaci?n o raz?n social oENEmpresa
                 AQPA460CDIS, --Codigo de UBIGEO oENEmpresa
                 AQPA460NCOM, --Nombre Comercial oENEmpresa
                 AQPA460CALLE, --Direcci?n completa y detallada oENEmpresa
                 AQPA460URBA, --Urbanizacion o Zona  oENEmpresa
                 AQPA460DEPA, --Departamento, expresado textualmente  oENEmpresa
                 AQPA460PROV, --Provincia, expresarlo textualmente   oENEmpresa
                 AQPA460DIST, --Distrito, expresarlo textualmente oENEmpres
                 AQPA460TELF, --Telefono de la Empresa Emisora oENEmpres
                 AQPA460WEB, --Pagina Web del Emisor oENEmpres           
                 AQPA460CPAIS, --Codigo del Pais del Emisor oENEmpres
                 AQPA460CESUN, --C?digo del establecimiento de Sunat  oENEmpres
                 AQPA460SERI, --Serie del comprobante.  Datos del Comprobante
                 AQPA460NUM, --Numero Correlativo del comprobante. Datos del Comprobante
                 AQPA460FEMI, --Fecha de Emision del Comprobante Datos del Comprobante
                 AQPA460TCOMF, --Codigo del Tipo de Comprobante Datos del Comprobante
                 AQPA460MONE, --Codigo del Tipo de Moneda Datos del Comprobante
                 AQPA460CORRR, --El correo electr?nico del Receptor  Datos del Comprobante
                 AQPA460MGLO, --Multiples Informaci?n adicional u observacion del comprobante.  Datos del Comprobante
                 AQPA460COMA, --Numero Interno del Comprobante Datos del Comprobante
                 AQPA460TPLA, --Tiplo de Plantilla  Datos del Comprobante
                 --  AQPA460TOPE, --C?digo de Tipo de operaciones Datos del Comprobante
                 AQPA460TPLCO, --C?digo de plantilla de correo  Datos del Comprobante
                 AQPA460CLOG, --C?digo del tipo de Logo Datos del Comprobante
                 AQPA460TDOCR, --Codigo del tipo de documento de identificaci?n del Receptor Datos del Comprobante
                 AQPA460NRUC, --N?mero de documento de identificaci?n Datos del Comprobante
                 AQPA460RASOC, --Apellidos y nombres o denominaci?n o raz?n social Datos del Comprobante
                 AQPA460IMPT, --Importe total  a pagar Datos del Comprobante
                 AQPA460HEMI, --Hora de Emisi?n  Datos del Comprobante
                 AQPA460SIMC, --Suma de todos los impuestos del comprobante.  Datos del Comprobante
                 --  AQPA460SVITM, --Suma del valor de venta total de todos los items   Datos del Comprobante
                 --  AQPA460SPVI,  --Suma de los precios de venta total de todos los items  Datos del Comprobante
                 AQPA460TXML, -- Indica el tipo de XML que se generar? Datos del Comprobante
                 AQPA460SDREF, --Serie documento al que se aplica la nota. ENComprobanteMotivoDocumento
                 AQPA460NDREF, --Numero  documento al que se aplica la nota.  ENComprobanteMotivoDocumento
                 AQPA460CMEM, --C?digo por el cual se emite la nota.  ENComprobanteMotivoDocumento
                 AQPA460SUST, --Sustento ENComprobanteMotivoDocumentoSustento
                 AQPA460SERIE, --Serie del comprobante referenciado. Referencia a un comprobante
                 AQPA460NRO, --N?mero del comprobante referenciado Referencia a un comprobante
                 AQPA460TCOMP, --C?digo del tipo de comprobante.  Referencia a un comprobante
                 AQPA460FDREF, --Fecha de emisi?n del comprobante referenciado. Referencia a un comprobante  
                 AQPA460CDIST, --C?digo de UBIGEO Datos adicionales del Receptor
                 AQPA460CALL, --Direcci?n completa y detallada Datos adicionales del Receptor
                 AQPA460URB, --Urbanizacion o Zona   Datos adicionales del Receptor
                 AQPA460DEP, --Departamento Datos adicionales del Receptor
                 AQPA460PRV, --Provincia   Datos adicionales del Receptor
                 AQPA460DST, --Distrito Datos adicionales del Receptor
                 AQPA460CPAI, --C?digo del Pa?s  Datos adicionales del Receptor
                 AQPA460ITEM, --N?mero de orden del Item ENComprobanteDetalle 
                 AQPA460PNETU, --Unidad de medida de los bienes vendidos por item (UN/ECE rec 20) ENComprobanteDetalle 
                 AQPA460CANTF, --Cantidad de unidades vendidas pot item (Q)  ENComprobanteDetalle 
                 AQPA460TOTAL, --Importe monetario que es el total de la l?nea de detalle, incluyendo variaciones de precio (subvenciones, cargos o descuentos) pero sin impuestos.  ENComprobanteDetalle 
                 AQPA460DETE, --Codigo de identificaci?n de Onerosidad del Item ENComprobanteDetalle 
                 AQPA460CTPR, --Codigo de tipo de importe de afectacion ENComprobanteDetalle 
                 /*ok */
                 AQPA460VVUN, --Valores de venta unitarios por item (VU) no incluye impuestos  ENComprobanteDetalle 
                 /*campos probl*/
                 AQPA460VVUIG, --Precio de Venta Unitario (Incluye impuestos)  ENComprobanteDetalle 
                 AQPA460DESC, -- Descripcion del producto ENComprobanteDetalle 
                 AQPA460MFUN, --Multi Descripcion,  puede tener varias desccripciones ENComprobanteDetalle 
                 AQPA460PRVIT, --Es el precio de venta ENComprobanteDetalle 
                 AQPA460MEDEM, --Unidad medida del emisor ENComprobanteDetalle 
                 AQPA460CSUNA, --C?digo producto establecido por Sunat   ENComprobanteDetalle 
                 AQPA460CPGS1, --C?digo de producto GS1  ENComprobanteDetalle 
                 AQPA460ITITM, --Impuesto total del item ENComprobanteDetalle 
                 AQPA460IMPTB, --Importe total de un tributo para este item Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                 AQPA460IMPEX, ---Importe expl?cito a tributar ( = Tasa Porcentaje * Base Imponible)   Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                 AQPA460AFIGV, --Afectaci?n del IGV  Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                 AQPA460SISC, --Sistema de ISC  (01=Especifico; 02= al valor; 03=PV al p?blico)  Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                 /*ojo*/
                 AQPA460CODTB, --Identificaci?n del tributo seg?n cat?logo SUNAT Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                 AQPA460DSTRB, --Nombre del Tributo (IGV, IVAP, ISC)  Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                 AQPA460CODUN, --C?digo del Tipo de Tributo (UN/ECE 5153) Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                 AQPA460MBIM, --Monto base del impuesto Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                 AQPA460TAIMP, --Tasa aplicada del impuesto  Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                 AQPA460CDLEY, --Codigo de la Leyenda Utilizado para Leyendas
                 AQPA460TELEY, --Texto de la leyenda  Utilizado para Leyendas
                 AQPA460TEXT1, --Texto libre 1 : Producto  Informaci?n adicional para la visualizacion de representaciones impresas, antes definido por el integrador.
                 AQPA460TEXT2, --Texto libre 2 : N?mero de Cr?dito Informaci?n adicional para la visualizacion de representaciones impresas, antes definido por el integrador.
                 AQPA460TRECV, --Correo del receptor Utilizado para enviar correos adicionales con copia al Correo del Receptor, ingresado en ENComprobante.Correo
                 AQPA460TEMPL, --C?digo de Tipo de Plantilla  Utilizado para enviar correos adicionales con copia al Correo del Receptor, ingresado en ENComprobante.Correo
                 AQPA460SUBJE, --Asunto del correo Utilizado para enviar correos adicionales con copia al Correo del Receptor, ingresado en ENComprobante.Correo
                 --  AQPA460VPCVA, --Placa del vehiculo Informaci?n adicional del item
                 AQPA460NEXP, --N?mero de Expediente Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                 AQPA460CIND, --C?digo de indicador  Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                 AQPA460NPART, --N?mero de Partida Registral  Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                 AQPA460NCONT, --N?mero de contrato  Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                 AQPA460FOTRC, --Fecha de Otorgo de cr?dito   Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                 AQPA460CDISN, --C?digo de Ubigeo   Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                 AQPA460DIREH, --Direcci?n   Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                 AQPA460URBH, --Urbanizaci?n Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                 AQPA460PRVH, --Provincia   Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                 AQPA460DSTH, --Distrito   Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                 AQPA460DEPTH, --Departamento Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                 AQPA460MTOTAL, --Monto total Gravado (Sin impuesto)  Informaci?n de gravada                           
                 AQPA460BAIMP, --Base del impuesto  IGV del Gravado
                 AQPA460MTIMP, --Monto total solo del impuesto   IGV del Gravado
                 AQPA460PCIMA, --Porcentaje del impuesto aplicado  IGV del Gravado
                 AQPA460BSIMP, --Base del impuesto Otros impuestos del Gravado
                 AQPA460VAIMP, --Monto total solo del impuesto  Otros impuestos del Gravado
                 AQPA460MTINF, --Monto total Inafecto  Informaci?n de inafecto
                 AQPA460MTGRT, --Monto total Gratuito  Informaci?n de gratuito
                 AQPA460BSIMPS, --Base del impuesto Impuestos del Gratuito
                 AQPA460MTOTI, --Monto total de impuestos Impuestos del Gratuito
                 AQPA460PGC, --mod@abr 20180824
                 AQPA460MOD, --mod@abr 20180824  
                 AQPA460SUC, --mod@abr 20180824 
                 AQPA460TRX, --mod@abr 20180824
                 AQPA460REL, --mod@abr 20180824
                 AQPA460ORE, --mod@abr 20180824
                 AQPA460PGCE, --mod@abr 20180824  Ext
                 AQPA460MODE, --mod@abr 20180824  Ext 
                 AQPA460SUCE, --mod@abr 20180824  Ext
                 AQPA460TRXE, --mod@abr 20180824  Ext
                 AQPA460RELE, --mod@abr 20180824  Ext
                 AQPA460FCONE --mod@abr 20180824  Ext
                 )
              
              Values
                (lv_tipemp, --AQPA460TDOC,  ok
                 lv_ruc, --AQPA460RUCC,  ok
                 lv_rzn, --AQPA460RSOC,  ok
                 lv_ubg, --AQPA460CDIS,  ok
                 lv_NCOM, --AQPA460NCOM,  ok
                 lv_CALLE, --AQPA460CALLE  ok
                 lv_urb, --AQPA460URBA,  ok
                 lv_DEPA, --AQPA460DEPA,  ok
                 lv_PROV, --AQPA460PROV,  ok
                 lv_DIST, --AQPA460DIST,  ok
                 lv_TELF, --AQPA460TELF,  ok
                 lv_WEB, --AQPA460WEB,   ok
                 lv_CPAIS, --AQPA460CPAIS  ok
                 lc_codsunat, --lv_CESUN,        --AQPA460CESUN
                 p.aqpa464serie, --AQPA460SERI,  ok
                 p.aqpa464nro, --AQPA460NUM,   ok
                 pd_pgfape, --AQPA460FEMI,  ok
                 lv_codtipo, --AQPA460TCOMF  ok
                 lv_tipomda, --AQPA460MONE,  ok
                 lv_correo, --AQPA460CORRR  ok
                 lv_glosa, --AQPA460MGLO,  ok
                 lv_COMA, --AQPA460COMA,  ok
                 lv_TPLA, --AQPA460TPLA,  ok
                 -- lv_tipoope,      --AQPA460TOPE,  ok
                 lv_TPLCO, --AQPA460TPLCO  ok
                 lv_CLOG, --AQPA460CLOG,
                 lv_codtdoc, --AQPA460TDOCR  ok
                 lv_pendoc, --AQPA460NRUC,  ok
                 lv_penom, --AQPA460RASOC  ok
                 pn_monto_total_1, --AQPA460IMPT,  ok
                 lv_hora, --AQPA460HEMI,  ok
                 ln_SIMC, --AQPA460SIMC,  ok
                 --    ln_SVITM,        --AQPA460SVITM  ok
                 --  ln_SPVI ,        --AQPA460SPVI,  ok
                 lv_TXML, --AQPA460TXML,  ok
                 pc_aqpa463serie, --Serie documento al que se aplica la nota. ENComprobanteMotivoDocumento
                 pc_aqpa463corre, --Numero  documento al que se aplica la nota.  ENComprobanteMotivoDocumento
                 lv_codcmen, --C?digo por el cual se emite la nota.  ENComprobanteMotivoDocumento
                 lc_sustento, --Sustento ENComprobanteMotivoDocumentoSustento
                 pc_aqpa463serie, --Serie del comprobante referenciado. Referencia a un comprobante
                 pc_aqpa463corre, --N?mero del comprobante referenciado Referencia a un comprobante
                 lc_codtipo, --C?digo del tipo de comprobante.  Referencia a un comprobante
                 p.aqpa464hfcon, --Fecha de emisi?n del comprobante referenciado. Referencia a un comprobante  
                 lv_ubgCli, --AQPA460CDIST,  ok
                 lv_sngc13dir, --AQPA460CALL,   ok
                 lv_urb, --AQPA460URB,    ok
                 lv_depnom1, --AQPA460DEP,    ok
                 lv_locnom1, --AQPA460PRV,    ok
                 lv_fst071dsc1, --AQPA460DST,    ok
                 lv_cpai, --AQPA460CPAI,   ok
                 ln_nroitem, --AQPA460ITEM,   ok
                 lv_PNETU, --AQPA460PNETU,  ok
                 /*ok*/
                 ln_cant, --AQPA460CANTF,  ok
                 ln_mtoconce, --AQPA460TOTAL,  ok
                 lc_oneroso, --AQPA460DETE,   ok
                 lv_CTPR, --AQPA460CTPR,   ok
                 ln_mtoconce, --AQPA460VVUN,   ok to number
                 ln_VVUIG, --AQPA460VVUIG,  ok
                 lv_desconce, --AQPA460DESC,   ok
                 lv_infpredio, --AQPA460MFUN,   ok
                 ln_PRVIT, --AQPA460PRVIT,  ok
                 lv_MEDEM, --AQPA460MEDEM,  ok
                 lv_CSUNA, --AQPA460CSUNA,  ok
                 lv_CPGS1, --AQPA460CPGS1,  ok
                 ln_ITITM, --AQPA460ITITM,  ok
                 ln_IMPTB, --AQPA460IMPTB,  ok
                 ln_IMPEX, --AQPA460IMPEX,  ok
                 lv_afecigv, --AQPA460AFIGV,  ok
                 lv_SISC, --AQPA460SISC,   ok
                 lv_idtrbsunat, --AQPA460CODTB,  ok  
                 lv_nomtrbsunat, --AQPA460DSTRB,  ok
                 lv_codun, --AQPA460CODUN,  ok
                 ln_MBIM, --AQPA460MBIM,   ok
                 ln_TAIMP, --AQPA460TAIMP,  ok
                 ln_CDLEY, --AQPA460CDLEY,  ok
                 lv_TELEY, --AQPA460TELEY,  ok
                 lv_TEXT1, --AQPA460TEXT1,  ok
                 lv_TEXT2, --AQPA460TEXT2,  ok
                 lv_TRECV, --AQPA460TRECV,  ok
                 lv_TEMPL, --AQPA460TEMPL,  ok
                 lv_SUBJE, --AQPA460SUBJE,  ok
                 --   lv_VPCVA,           --AQPA460VPCVA,  ok
                 lv_NEXP, --AQPA460NEXP,   ok
                 lv_CIND, --,        --AQPA460CIND,   ok
                 nvl(lv_partida, ' '), --G74.3  --AQPA460NPART,  ok
                 nvl(lv_NCONT, ' '), -- G74.4 NUMERO CONTRATO                AQPA460NCONT,  ok 
                 ld_fecoto, --G74.5  FECHA OTORGAMIENTO CREDITO   AQPA460FOTRC,  ok
                 nvl(lv_cdisn, ' '), --G74.6  Ubigeo                        AQPA460CDISN,  ok
                 nvl(lv_direccionH, ' '), --G74.7                           AQPA460DIREH,  ok
                 nvl(lv_urbaH, ' '), --G74.8                                 AQPA460URBH,   ok
                 nvl(lv_provH, ' '), --G74.9                                AQPA460PRVH,   ok
                 nvl(lv_distH, ' '), --G74.10                                AQPA460DSTH,   ok
                 nvl(lv_dptoH, ' '), --AQPA460DEPTH,  ok
                 ln_MTOTAL, --AQPA460MTOTAL  ok
                 ln_BAIMP, --AQPA460BAIMP,  ok
                 ln_MTIMP, --AQPA460MTIMP,  ok
                 ln_PCIMA, --AQPA460PCIMA,  ok
                 ln_BSIMP, --AQPA460BSIMP,  ok
                 ln_VAIMP, --AQPA460VAIMP,  ok
                 ln_MTINF, --AQPA460MTINF,  ok
                 ln_MTGRT, --AQPA460MTGRT,  ok
                 ln_BSIMPS, --AQPA460BSIMPS  ok
                 ln_MTOTI, --AQPA460MTOTI   ok
                 P.AQPA464PGCOD, --mod@abr 20180824
                 P.AQPA464HCMOD, --mod@abr 20180824
                 P.AQPA464HSUCOR, --mod@abr 20180824 
                 P.AQPA464HTRAN, --mod@abr 20180824
                 P.AQPA464HNREL, --mod@abr 20180824 
                 P.AQPA464TXOREN, --mod@abr 20180824
                 P.AQPA464PGCOD, --mod@abr 20180824
                 P.AQPA464HCMODE, --mod@abr 20180824
                 P.AQPA464HSUCORE, --mod@abr 20180824 
                 P.AQPA464HTRANE, --mod@abr 20180824
                 P.AQPA464HNRELE, --mod@abr 20180824 
                 P.aqpa464hfcone --mod@abr 20180824
                 );
            
              commit;
            end if;
          end if;
        end if;
      end loop;
    
      begin
        -- Call the procedure
        pq_cr_factura_electronica.sp_cr_cabecera_notacredito(pd_pgfape);
      
      end;
    
    end;
  
  end sp_cr_Nota_Credito_Montos;

  procedure sp_cr_Cabecera_factura(pd_pgfape in date) is
  
    pc_aqpa465hash varchar2(250) := '';
    pc_estat       char(1);
    pc_tdoc        char(2);
  
    cursor aqpa463 is
    
      select distinct (b.aqpa463pgcod),
                      (b.aqpa463hcmod),
                      (b.aqpa463hsucor),
                      (b.aqpa463htran),
                      (b.aqpa463hnrel),
                      (b.aqpa463hcord),
                      (b.aqpa463hfcon),
                      (b.aqpa463serie),
                      (b.aqpa463corre)
        from aqpa463 b
       where b.aqpa463hfcon = pd_pgfape
      --and b.aqpa463pgcod = 1
      --and b.aqpa463hcmod = 30
      --and b.aqpa463hsucor = 1
      --and b.aqpa463htran = 97
      --and b.aqpa463hnrel = 1
      
      /*   and (b.aqpa463serie='BO01' --comentar despues
         and b.aqpa463corre in ( 6) )
      /*   or (b.aqpa463serie='BF01' --comentar despues
         and b.aqpa463corre in ( 4) )*/
      /*   and (b.aqpa463serie='BF01' --comentar despues
      and b.aqpa463corre in ( 20,21) )
      or (b.aqpa463serie='FH01' --comentar despues
      and b.aqpa463corre in ( 10253) ) */
      ; --order by b.aqpa463hnrel asc;
  
    lc_flag char(1);
  
  begin
    begin
    
      for p in aqpa463 loop
      
        --si no existe registro insertar
        begin
          select 'S'
            into lc_flag
            from aqpa465 b
           where b.aqpa465serie = p.aqpa463serie
             and b.aqpa465corr = p.aqpa463corre
             and b.aqpa465pgcod = p.aqpa463pgcod
             and b.aqpa465mod = p.aqpa463hcmod
             and b.aqpa465sucor = p.aqpa463hsucor
             and b.aqpa465tran = p.aqpa463htran
             and b.aqpa465rel = p.aqpa463hnrel
             and b.aqpa465con = p.aqpa463hfcon;
        exception
          when others then
            lc_flag := 'N';
        end;
      
        if nvl(lc_flag, 'N') = 'N' then
          begin
            select distinct t.aqpa460tcomf
              into pc_tdoc
              from aqpa460 t
             where t.aqpa460seri = p.aqpa463serie
               and t.aqpa460num = p.aqpa463corre;
          exception
            when others then
              -- 2022.11.18 dcastro se agrego excepcion
              pc_tdoc := null;
          end;
          pc_estat := null;
          if pc_tdoc = '13' then
            pc_estat := 'Z';
          end if;
        
          insert into aqpa465
            (aqpa465serie,
             aqpa465corr,
             aqpa465pgcod,
             aqpa465mod,
             aqpa465sucor,
             aqpa465tran,
             aqpa465rel,
             aqpa465con,
             aqpa465hash,
             aqpa465est)
          values
            (p.aqpa463serie,
             p.aqpa463corre,
             p.aqpa463pgcod,
             p.aqpa463hcmod,
             p.aqpa463hsucor,
             p.aqpa463htran,
             p.aqpa463hnrel,
             p.aqpa463hfcon,
             pc_aqpa465hash,
             pc_estat);
        
          commit;
        end if;
      
      end loop;
    
    end;
  
  end sp_cr_Cabecera_factura;

  procedure sp_cr_Cabecera_notacredito(pd_pgfape in date) is
  
    pc_aqpa466hash varchar2(250) := '';
  
    cursor aqpa464 is
    
      select distinct (b.aqpa464pgcod),
                      (b.aqpa464hcmod),
                      (b.aqpa464hsucor),
                      (b.aqpa464htran),
                      (b.aqpa464hnrel),
                      (b.aqpa464hfcon),
                      (b.aqpa464serie),
                      (b.aqpa464nro)
        from aqpa464 b
       where b.aqpa464hfcon = pd_pgfape
       order by b.aqpa464hnrel asc;
  
    lc_flag char(1);
  
  begin
    begin
    
      for p in aqpa464 loop
      
        --si no existe registro insertar
        begin
          select 'S'
            into lc_flag
            from aqpa466 b
           where b.aqpa466serie = p.aqpa464serie
             and b.aqpa466corr = p.aqpa464nro
             and b.aqpa466pgcod = p.aqpa464pgcod
             and b.aqpa466mod = p.aqpa464hcmod
             and b.aqpa466sucor = p.aqpa464hsucor
             and b.aqpa466tran = p.aqpa464htran
             and b.aqpa466rel = p.aqpa464hnrel
             and b.aqpa466con = p.aqpa464hfcon;
        exception
          when others then
            lc_flag := 'N';
        end;
      
        if nvl(lc_flag, 'N') = 'N' then
        
          insert into aqpa466
            (aqpa466serie,
             aqpa466corr,
             aqpa466pgcod,
             aqpa466mod,
             aqpa466sucor,
             aqpa466tran,
             aqpa466rel,
             aqpa466con,
             aqpa466hash)
          values
            (p.aqpa464serie,
             p.aqpa464nro,
             p.aqpa464pgcod,
             p.aqpa464hcmod,
             p.aqpa464hsucor,
             p.aqpa464htran,
             p.aqpa464hnrel,
             p.aqpa464hfcon,
             pc_aqpa466hash);
        
          commit;
        
          ---2023.07.18 dcastro
          update aqpa460 a
             set a.aqpa460fecha = p.aqpa464hfcon
           where a.aqpa460seri = p.aqpa464serie
             and a.aqpa460num = p.aqpa464nro;
          commit;
          --
        
        end if;
      end loop;
    
    end;
  
  end sp_cr_Cabecera_notacredito;

  procedure sp_cr_detalle_predio(pc_aqpa463mod in number,
                                 pc_aqpa463suc in number,
                                 pc_aqpa463mda in number,
                                 pc_aqpa463pap in number,
                                 pc_aqpa463cta in number,
                                 pc_aqpa463ope in number,
                                 pc_aqpa463sbo in number,
                                 pc_aqpa463top in number,
                                 pc_partida    out varchar2,
                                 pc_contrato   out varchar2,
                                 pc_direccion  out varchar2,
                                 pc_urba       out varchar2,
                                 pc_dpto       out varchar2,
                                 pc_prov       out varchar2,
                                 pc_dist       out varchar2,
                                 pc_ubigeo     out varchar) is
  
    cursor gara(ln_instancia number) is
    
      select p.ppg000pgc,
             p.ppg000mod,
             p.ppg000suc,
             p.ppg000mda,
             p.ppg000pap,
             p.ppg000cta,
             p.ppg000ope,
             p.ppg000sbo,
             p.ppg000top,
             p.ppg000tpg,
             p.ppg000tsc,
             p.ppg000tmd,
             p.ppg000ttr,
             p.ppg000tnr,
             p.ppg000tfc,
             p.ppg000frm
        from ppg000 p, sng122 s, fsh015 f
       where p.ppg000pgc = s.sng122pgc
         and p.ppg000mod = s.sng122mod
         and p.ppg000suc = s.sng122suc
         and p.ppg000mda = s.sng122mda
         and p.ppg000pap = s.sng122pap
         and p.ppg000cta = s.sng122cta
         and p.ppg000ope = s.sng122oper
         and p.ppg000sbo = s.sng122sbop
         and p.ppg000top = s.sng122tope
         and s.sng122tope in (10, 15)
         and p.ppg000tnr <> 0
         and s.sng122inst = ln_instancia
         and f.pgcod = p.ppg000tpg
         and f.hcmod = p.ppg000tmd
         and f.hsucor = p.ppg000tsc
         and f.htran = p.ppg000ttr
         and f.hnrel = p.ppg000tnr
         and f.hfcon = p.ppg000tfc
         and f.hccorr <> 99
      
      union
      select p.ppg000pgc,
             p.ppg000mod,
             p.ppg000suc,
             p.ppg000mda,
             p.ppg000pap,
             p.ppg000cta,
             p.ppg000ope,
             p.ppg000sbo,
             p.ppg000top,
             p.ppg000tpg,
             p.ppg000tsc,
             p.ppg000tmd,
             p.ppg000ttr,
             p.ppg000tnr,
             p.ppg000tfc,
             p.ppg000frm
        from ppg000 p, sng122 s
       where p.ppg000pgc = s.sng122pgc
         and p.ppg000mod = s.sng122mod
         and p.ppg000suc = s.sng122suc
         and p.ppg000mda = s.sng122mda
         and p.ppg000pap = s.sng122pap
         and p.ppg000cta = s.sng122cta
         and p.ppg000ope = s.sng122oper
         and p.ppg000sbo = s.sng122sbop
         and p.ppg000top = s.sng122tope
         and s.sng122tope in (10, 15)
         and s.sng122inst = ln_instancia
         and s.sng122fape < to_date('01/07/2013', 'dd/mm/yyyy')
         and p.ppg000tco = 'S';
  
    ln_pgc       sng122.sng122pgc%TYPE;
    ln_mod       sng122.sng122mod%TYPE;
    ln_suc       sng122.sng122suc%TYPE;
    ln_mda       sng122.sng122mda%TYPE;
    ln_pap       sng122.sng122pap%TYPE;
    ln_cta       sng122.sng122cta%TYPE;
    ln_oper      sng122.sng122oper%TYPE;
    ln_sbop      sng122.sng122sbop%TYPE;
    ln_tope      sng122.sng122tope%TYPE;
    ln_instancia sng122.sng122inst%TYPE;
    lc_partida   varchar2(50);
    lc_direccion varchar2(50);
    lc_ubigeo    varchar2(6);
    lc_dpto      varchar2(50);
    lc_prov      varchar2(50);
    lc_dist      varchar2(50);
    ln_frn01     number;
    --lc_indicador char(1);
    lc_partida1 varchar2(50);
    ln_largo    number := 0;
    --lc_coderr varchar2(1000);
    --lc_msgerr varchar2(1000);
  
  BEGIN
  
    ln_instancia := fn_instancia_credito(pc_aqpa463mod,
                                         pc_aqpa463suc,
                                         pc_aqpa463mda,
                                         pc_aqpa463pap,
                                         pc_aqpa463cta,
                                         pc_aqpa463ope,
                                         pc_aqpa463sbo,
                                         pc_aqpa463top);
  
    for i in gara(ln_instancia) loop
    
      ln_pgc   := i.ppg000pgc;
      ln_mod   := i.ppg000mod;
      ln_suc   := i.ppg000suc;
      ln_mda   := i.ppg000mda;
      ln_pap   := i.ppg000pap;
      ln_cta   := i.ppg000cta;
      ln_oper  := i.ppg000ope;
      ln_sbop  := i.ppg000sbo;
      ln_tope  := i.ppg000top;
      ln_frn01 := i.ppg000frm;
    
      begin
        select p.PPG001Dato
          into lc_partida1
          from ppg001 p
         where PPG001COD = ln_pgc
           and PPG001MOD = 470 --ln_mod 
           and PPG001SUC = ln_suc
           and PPG001MDA = ln_mda
           and PPG001PAP = ln_pap
           and PPG001CTA = ln_cta
           and PPG001OPE = ln_oper
           and PPG001SBO = ln_sbop
           and PPG001TOP = ln_tope
           and PPG001FRM = ln_frn01
           and PPG001CDAT = 129; --N? Partid/Cod Predio
      exception
        when others then
          lc_partida1 := null;
      end;
    
      if lc_partida1 is not null then
        lc_partida := lc_partida1;
      end if;
    
      begin
        select p.PPG001Dato
          into lc_direccion
          from ppg001 p
         where PPG001COD = ln_pgc
           and PPG001MOD = 70 --ln_mod 
           and PPG001SUC = ln_suc
           and PPG001MDA = ln_mda
           and PPG001PAP = ln_pap
           and PPG001CTA = ln_cta
           and PPG001OPE = ln_oper
           and PPG001SBO = ln_sbop
           and PPG001TOP = ln_tope
           and PPG001FRM = ln_frn01
           and PPG001CDAT = 41; --Direcci?n
      exception
        when others then
          lc_direccion := null;
      end;
    
      begin
        select length(p.ppg008cip),
               lpad(trim(to_char(p.ppg008cip)), 8, '0')
          into ln_largo, lc_ubigeo
          from ppg008 p
         where PPG008PGC = ln_pgc
           and PPG008MOD = 70 --ln_mod  
           and PPG008SUC = ln_suc
           and PPG008MDA = ln_mda
           and PPG008PAP = ln_pap
           and PPG008CTA = ln_cta
           and PPG008OPE = ln_oper
           and PPG008SBO = ln_sbop
           and PPG008TOP = ln_tope
           and PPG008FRM = ln_frn01
           and PPG008CDAT = 58; --Ubigeo
      exception
        when others then
          lc_ubigeo := null;
          ln_largo  := 0;
      end;
    
      if ln_largo = 7 then
        lc_ubigeo := substr(lc_ubigeo, 1, 6);
      else
        lc_ubigeo := null;
      end if;
    
      begin
        select depnom DPTO, locnom PROVINCIA, fst071dsc DISTRITO
          into lc_dpto, lc_prov, lc_dist
          from fst068 f, fst070 h, fst071 g
         where h.pais = f.pais
           and h.depcod = f.depcod
           and h.loccod = g.fst071loc
           and f.pais = g.fst071pai
           and f.depcod = g.fst071dpt
           and g.fst071col = lc_ubigeo;
      exception
        when others then
          lc_dpto := ' ';
          lc_prov := ' ';
          lc_dist := ' ';
      end;
    
      --  dbms_output.put_line(ln_pgc||'-'||ln_mod||'-'||ln_suc||'-'||ln_mda||'-'||ln_pap||'-'||ln_cta||'-'||ln_oper||'-'||ln_sbop||'-'||ln_tope); 
      -- dbms_output.put_line('i.instancia '||i.instancia||' ln_cta '||ln_cta|| ' ln_oper '||ln_oper||' ln_partida '||lc_partida||' lc_direccion '||lc_direccion||' lc_ubigeo '||lc_ubigeo);
      pc_contrato  := null;
      pc_partida   := nvl(lc_partida, '0000');
      pc_direccion := lc_direccion;
      pc_urba      := ' ';
      pc_dpto      := lc_dpto;
      pc_prov      := lc_prov;
      pc_dist      := lc_dist;
      pc_ubigeo    := lc_ubigeo;
    
    end loop;
  
  end sp_cr_detalle_predio;

  function fn_fecha_desembolso(pc_aqpa463cta in number,
                               pc_aqpa463ope in number) return date is
  
    ld_fecdes date;
    ln_sboMin number;
  
  begin
    /* 
    begin
            select f.aofval
              into ld_fecdes
              from fsd010 f
             where PGCOD =  pc_aqpa463pgcod
               and AOMOD =  pc_aqpa463mod
               and AOSUC =  pc_aqpa463suc
               and AOMDA =  pc_aqpa463mda
               and AOPAP =  pc_aqpa463pap
               and AOCTA =  pc_aqpa463cta
               and AOOPER = pc_aqpa463ope
               and AOSBOP = pc_aqpa463sbo 
               and AOTOPE = pc_aqpa463top;  
    exception when others then
         ld_fecdes := null;    
    end;*/
  
    begin
      select min(aosbop)
        into ln_sboMin
        from fsd010 a
       where a.aocta = pc_aqpa463cta
         and a.aooper = pc_aqpa463ope
         and a.aomod in (select modulo from fst111 where dscod = 50);
    exception
      when others then
        ld_fecdes := null;
    end;
  
    begin
      select min(aofval)
        into ld_fecdes
        from fsd010 a
       where a.aocta = pc_aqpa463cta
         and a.aooper = pc_aqpa463ope
         and a.aosbop = ln_sboMin
         and a.aomod in (select modulo from fst111 where dscod = 50);
    exception
      when others then
        ld_fecdes := null;
    end;
  
    return ld_fecdes;
  
  end fn_fecha_desembolso;

  Procedure sp_cr_cobroEfectivo(pn_pgcod  in number,
                                pn_hcmod  in number,
                                pn_hsucor in number,
                                pn_htran  in number,
                                pn_hnrel  in number,
                                pn_hfcon  in date,
                                pc_serie  in char,
                                pn_corr   in number,
                                pn_mto    out number) is
    cursor tipo is
      select trim(a.st171cpdsc) st171cpdsc
        from fst171 a
      -- where a.st171cpcod between 28 and 33;  
       where (a.st171cpcod between 28 and 33)
          or a.st171cpcod = 46;
  
    ln_mtoAux number(17, 2) := 0;
    ln_mtoAcu number(17, 2) := 0;
  begin
    for i in tipo loop
      ln_mtoAux := 0;
      begin
        select to_number(trim(a.aqpa463txtord), '99999999999999999.99') --to_number(trim(a.aqpa463txtord))
          into ln_mtoAux
          from aqpa463 a
         where a.aqpa463pgcod = pn_pgcod
           and a.aqpa463hcmod = pn_hcmod
           and a.aqpa463hsucor = pn_hsucor
           and a.aqpa463htran = pn_htran
           and a.aqpa463hnrel = pn_hnrel
           and a.aqpa463hfcon = pn_hfcon
           and a.aqpa463serie = pc_serie
           and a.aqpa463corre = pn_corr
           and trim(a.aqpa463hvchr) = i.st171cpdsc;
      exception
        when others then
          ln_mtoAux := 0;
      end;
    
      ln_mtoAcu := ln_mtoAcu + nvl(ln_mtoAux, 0);
    end loop;
  
    pn_mto := nvl(ln_mtoAcu, 0);
  end sp_cr_cobroEfectivo;
  --------------------------------

  Procedure sp_cr_cobroEfectivoNC(pn_pgcod  in number,
                                  pn_hcmod  in number,
                                  pn_hsucor in number,
                                  pn_htran  in number,
                                  pn_hnrel  in number,
                                  pd_hfcon  in date,
                                  pc_serie  in char,
                                  pn_corr   in number,
                                  pn_mto    out number) is
    cursor tipo is
      select trim(a.st171cpdsc) st171cpdsc
        from fst171 a
       where a.st171cpcod between 28 and 33;
  
    lc_maxserie aqpa463.aqpa463serie%type;
    ln_maxcorre aqpa463.aqpa463corre%type;
    ln_mtoAux   number(17, 2) := 0;
    ln_mtoAcu   number(17, 2) := 0;
  begin
  
    begin
      select max(a.aqpa463serie), max(a.aqpa463corre)
        into lc_maxserie, ln_maxcorre
        from aqpa463 a
       where a.aqpa463pgcod = pn_pgcod
         and a.aqpa463hcmod = pn_hcmod
         and a.aqpa463hsucor = pn_hsucor
         and a.aqpa463htran = pn_htran
         and a.aqpa463hnrel = pn_hnrel
         and a.aqpa463hfcon = pd_hfcon
         and rownum = 1;
    exception
      when others then
        lc_maxserie := null;
        ln_maxcorre := null;
    end;
  
    for i in tipo loop
      ln_mtoAux := 0;
      begin
        select to_number(trim(a.aqpa463txtord), '99999999999999999.99') --to_number(trim(a.aqpa463txtord))
          into ln_mtoAux
          from aqpa463 a
         where a.aqpa463pgcod = pn_pgcod
           and a.aqpa463hcmod = pn_hcmod
           and a.aqpa463hsucor = pn_hsucor
           and a.aqpa463htran = pn_htran
           and a.aqpa463hnrel = pn_hnrel
           and a.aqpa463hfcon = pd_hfcon
           and a.aqpa463serie = lc_maxserie
           and a.aqpa463corre = ln_maxcorre
           and trim(a.aqpa463hvchr) = i.st171cpdsc;
      exception
        when others then
          ln_mtoAux := 0;
      end;
      ln_mtoAcu := ln_mtoAcu + nvl(ln_mtoAux, 0);
    
    end loop;
    pn_mto := nvl(ln_mtoAcu, 0);
  end sp_cr_cobroEfectivoNC;
  --------------------------------
  procedure sp_cr_Factura_E(pc_AQPA465SERIE    in char,
                            pc_AQPA465CORR     in number,
                            pc_AQPA465PGCOD    in number,
                            pc_AQPA465MOD      in number,
                            pc_AQPA465SUCOREND in number,
                            pc_AQPA465TRAN     in number,
                            pc_AQPA465REL      in number,
                            pc_AQPA465CON      in date,
                            pc_ESTADO          out char,
                            pc_MENSAJE         out char) is
  
    cursor aqpa463 is
      select *
        from aqpa463 b
       where b.aqpa463serie = pc_AQPA465SERIE
         and b.aqpa463corre = pc_AQPA465CORR
         and b.aqpa463pgcod = pc_AQPA465PGCOD
         and b.aqpa463hcmod = PC_AQPA465MOD
         and b.aqpa463hsucor = pc_AQPA465SUCOREND
         and b.aqpa463htran = pc_AQPA465TRAN
         and b.aqpa463hnrel = pc_AQPA465REL
         and b.aqpa463hfcon = pc_AQPA465CON
       order by b.aqpa463hnrel asc, b.aqpa463txoren asc;
  
    pc_fecha date;
  
    lc_serieF  aqpa460.aqpa460seri%type;
    ln_numeroF aqpa460.aqpa460num%type;
  
    ln_concepto number;
  
  begin
    --mod@abr 20180622
    --insert into aqpa460E(aqpa460eserie,   --mod@abr 20180705
    --                       aqpa460ecorr,
    --                       aqpa460epgcod,
    --                       aqpa460emod,
    --                       aqpa460esucorend,
    --                       aqpa460etran,
    --                       aqpa460erel,
    --                       aqpa460econ)
    --             values(pc_AQPA465SERIE ,
    --                    pc_AQPA465CORR   ,
    --                    2 ,
    --                    pc_AQPA465MOD   ,
    --                    pc_AQPA465SUCOREND,
    --                    pc_AQPA465TRAN    ,
    --                    pc_AQPA465REL    , 
    --                    pc_AQPA465CON      );
    --             
    --             commit;               
    --mod@abr 20180622
  
    begin
    
      lc_serieF  := trim(pc_AQPA465SERIE);
      ln_numeroF := pc_AQPA465CORR;
    
      pc_fecha := pc_AQPA465CON;
    
      ---eliminar registro existente
      delete from AQPA460 a
       where a.aqpa460seri = lc_serieF
         and a.aqpa460num = ln_numeroF;
    
      commit;
    
      ---determinar si es comision
      begin
        select distinct a.aqpa465ord
          into ln_concepto
          from aqpa465 a
         where a.AQPA465SERIE = pc_AQPA465SERIE
           and a.AQPA465CORR = pc_AQPA465CORR
           and a.AQPA465PGCOD = pc_AQPA465PGCOD
           and a.AQPA465MOD = PC_AQPA465MOD
           and a.AQPA465SUCOR = pc_AQPA465SUCOREND
           and a.AQPA465TRAN = pc_AQPA465TRAN
           and a.AQPA465REL = pc_AQPA465REL
           and a.aqpa465con = pc_AQPA465CON
           and a.aqpa465ord is not null;
      exception
        when others then
          ln_concepto := null;
      end;
    
      if ln_concepto is null then
        --si es trx normal
        begin
          pq_cr_factura_electronica.sp_cr_detalle_factura_trx(pd_pgfape      => pc_fecha,
                                                              pc_serie       => lc_serieF,
                                                              pn_correlativo => ln_numeroF);
        end;
      
      else
        --si es comision 
      
        begin
          pq_cr_factura_electronica.sp_cr_Detalle_Factura_CO(pc_fecha,
                                                             lc_serieF,
                                                             ln_numeroF,
                                                             ln_concepto);
        end;
      
      end if;
    
      --actualiza cabecera
      pc_ESTADO := 'A';
    
      begin
        update aqpa465 a
           set a.aqpa465est = null, a.aqpa465msgs = null
         where a.AQPA465SERIE = lc_serieF
           and a.AQPA465CORR = ln_numeroF
           and a.AQPA465PGCOD = pc_AQPA465PGCOD
           and a.AQPA465MOD = PC_AQPA465MOD
           and a.AQPA465SUCOR = pc_AQPA465SUCOREND
           and a.AQPA465TRAN = pc_AQPA465TRAN
           and a.AQPA465REL = pc_AQPA465REL; --  and a.AQPA465CON =   pc_AQPA465CON; 
      exception
        when others then
          pc_ESTADO := 'E';
      end;
      commit;
    
    end;
  
  exception
    when others then
      pc_ESTADO  := 'F';
      PC_MENSAJE := SQLCODE || ' ' || SQLERRM;
    
      --mod@abr 20180622 ---LOG DE ERRORES
      insert into aqpa460E
        (aqpa460eserie,
         aqpa460ecorr,
         aqpa460epgcod,
         aqpa460emod,
         aqpa460esucorend,
         aqpa460etran,
         aqpa460erel,
         aqpa460econ,
         aqpa460etip)
      values
        (pc_AQPA465SERIE,
         pc_AQPA465CORR,
         pc_AQPA465PGCOD,
         pc_AQPA465MOD,
         pc_AQPA465SUCOREND,
         pc_AQPA465TRAN,
         pc_AQPA465REL,
         pc_AQPA465CON,
         'E');
    
      commit;
      --mod@abr 20180622
  
  end sp_cr_Factura_E;
  --------------------------------
  --------------------------------
  procedure sp_cr_NUM_Factura(pc_AQPA465PGCOD    in number,
                              pc_AQPA465MOD      in number,
                              pc_AQPA465SUCOREND in number,
                              pc_AQPA465TRAN     in number,
                              pc_AQPA465REL      in number,
                              pc_AQPA465CON      in date,
                              pc_SERIE           out varchar2,
                              pc_NUMERO          out number) is
  
  begin
  
    begin
      select distinct b.aqpa463serie, b.aqpa463corre
        into pc_SERIE, pc_NUMERO
        from aqpa463 b
       where b.aqpa463pgcod = pc_AQPA465PGCOD
         and b.aqpa463hcmod = PC_AQPA465MOD
         and b.aqpa463hsucor = pc_AQPA465SUCOREND
         and b.aqpa463htran = pc_AQPA465TRAN
         and b.aqpa463hnrel = pc_AQPA465REL
         and b.aqpa463hfcon = pc_AQPA465CON;
    exception
      when others then
        pc_SERIE  := null;
        pc_NUMERO := null;
    end;
  
  end sp_cr_NUM_Factura;
  --------------------------------
  --------------------------------
  procedure sp_cr_NUM_NC(pc_AQPA465PGCOD    in number,
                         pc_AQPA465MOD      in number,
                         pc_AQPA465SUCOREND in number,
                         pc_AQPA465TRAN     in number,
                         pc_AQPA465REL      in number,
                         pc_AQPA465CON      in date,
                         pc_SERIE           out varchar2,
                         pc_NUMERO          out number) is
  
  begin
  
    begin
      select distinct b.aqpa464serie, b.aqpa464nro
        into pc_SERIE, pc_NUMERO
        from aqpa464 b
       where b.aqpa464pgcod = pc_AQPA465PGCOD
         and b.aqpa464hcmod = PC_AQPA465MOD
         and b.aqpa464hsucor = pc_AQPA465SUCOREND
         and b.aqpa464htran = pc_AQPA465TRAN
         and b.aqpa464hnrel = pc_AQPA465REL
         and b.aqpa464hfcon = pc_AQPA465CON;
    exception
      when others then
        pc_SERIE  := null;
        pc_NUMERO := null;
    end;
  
  end sp_cr_NUM_NC;
  --------------------------------
  --------------------------------
  procedure sp_cr_NOTACREDITO_E(pc_AQPA465SERIE    in char,
                                pc_AQPA465CORR     in number,
                                pc_AQPA465PGCOD    in number,
                                pc_AQPA465MOD      in number,
                                pc_AQPA465SUCOREND in number,
                                pc_AQPA465TRAN     in number,
                                pc_AQPA465REL      in number,
                                pc_AQPA465CON      in date,
                                pc_ESTADO          out char,
                                pc_MENSAJE         out char) is
  
    pn_pgcod number;
  
    pn_hcmod3  number;
    pn_hsucor3 number;
    pn_htran3  number;
    pn_hnrel3  number;
    pn_hfcon3  date;
    pn_pgcode  number;
    pn_hcmode  number;
    pn_hsucore number;
    pn_htrane  number;
    pn_hnrele  number;
    pn_hfcone  date;
  
    --pc_fecha varchar2(80);
  
    -----------------------
    lv_codtipo varchar2(2);
  
    lc_serieF  aqpa460.aqpa460seri%type;
    ln_numeroF aqpa460.aqpa460num%type;
  
    lc_serieI       char(4);
    lc_correlativoI char(8);
    lv_tipodocu     char(1);
    lc_comision     char(1);
    lv_tipocre      varchar2(2);
  
    ln_guiaCP number;
    --ln_rubro number;
  
    --lc_coderr varchar2(1000);
    --lc_msgerr varchar2(1000);     
  
  begin
  
    lc_serieF  := trim(pc_AQPA465SERIE);
    ln_numeroF := pc_AQPA465CORR;
  
    ---eliminar registro existente para cargar informacion
    delete from AQPA460 a
     where a.aqpa460seri = lc_serieF
       and a.aqpa460num = ln_numeroF;
  
    commit;
  
    begin
      select distinct a.aqpa464pgcod,
                      a.aqpa464hcmod,
                      a.aqpa464hsucor,
                      a.aqpa464htran,
                      a.aqpa464hnrel,
                      a.aqpa464hfcon, --trx original
                      a.aqpa464pgcode,
                      a.aqpa464hcmode,
                      a.aqpa464hsucore,
                      a.aqpa464htrane,
                      a.aqpa464hnrele,
                      a.aqpa464hfcone --trx extorno
        into pn_pgcod,
             pn_hcmod3,
             pn_hsucor3,
             pn_htran3,
             pn_hnrel3,
             pn_hfcon3,
             pn_pgcode,
             pn_hcmode,
             pn_hsucore,
             pn_htrane,
             pn_hnrele,
             pn_hfcone
        from aqpa464 a
       where a.aqpa464serie = lc_serieF
         and a.aqpa464nro = ln_numeroF;
    exception
      when others then
        null;
    end;
  
    ---buscar transaccion en aqpa460 / aqpa463/ aqpa465
    begin
      select distinct a.aqpa463serie, a.aqpa463corre
        into lc_serieI, lc_correlativoI
        from aqpa463 a
       where a.aqpa463pgcod = pn_pgcod
         and a.aqpa463hcmod = pn_hcmod3
         and a.aqpa463hsucor = pn_hsucor3
         and a.aqpa463htran = pn_htran3
         and a.aqpa463hnrel = pn_hnrel3
         and a.aqpa463hfcon = pn_hfcon3;
    exception
      when too_many_rows then
        ---obtener ultimo documento enviado
        begin
          select max(a.aqpa463serie), max(a.aqpa463corre)
            into lc_serieI, lc_correlativoI
            from aqpa463 a
           where a.aqpa463pgcod = pn_pgcod
             and a.aqpa463hcmod = pn_hcmod3
             and a.aqpa463hsucor = pn_hsucor3
             and a.aqpa463htran = pn_htran3
             and a.aqpa463hnrel = pn_hnrel3
             and a.aqpa463hfcon = pn_hfcon3;
        
        exception
          when others then
            lc_serieI       := null;
            lc_correlativoI := null;
        end;
      when no_data_found then
        --si no existe trx origen
        lc_serieI := null;
    end;
  
    lv_tipodocu := substr(lc_serieI, 1, 1);
    --lv_tipocre := substr(lc_serieI,2,1);
  
    if lv_tipodocu is not null then
    
      --determinar tipo de cliente
      if lv_tipodocu = 'F' then
        --lc_tipper := 'J';
        ln_guiaCP := 1;
      else
        --lc_tipper := 'N';    
        ln_guiaCP := 3;
      end if;
    
      begin
        select '0' || to_char(a.tp1nro1)
          into lv_codtipo
          from fst198 a
         where a.tp1cod = 1
           and a.tp1cod1 = 11120
           and a.tp1corr1 = 1
           and a.tp1corr2 = 7
           and a.tp1corr3 = ln_guiaCP; --2018.10.10 se modifico codigo de guia para tipo comprobante
      exception
        when others then
          null;
      end;
    
      --determinar si es comision
      begin
        select 'S'
          into lc_comision
          from fst198 h
         where h.tp1cod = 1
           and h.tp1cod1 = 11120
           and h.tp1corr1 = 3
           and h.tp1corr2 = 1
           and h.tp1nro1 = pn_hcmod3
           and h.tp1nro2 = pn_htran3
           and rownum = 1;
      exception
        when others then
          --lc_comision := 'N';
          null;
      end;
    
      /*if lc_comision = 'S' then
         ln_rubro := 1;
      end if;*/
    
      --insertamos en AQPA460            
      begin
        insert into AQPA460
          (aqpa460tdoc,
           aqpa460rucc,
           aqpa460rsoc,
           aqpa460cdis,
           aqpa460ncom,
           aqpa460calle,
           aqpa460urba,
           aqpa460depa,
           aqpa460prov,
           aqpa460dist,
           aqpa460telf,
           aqpa460web,
           aqpa460cpais,
           aqpa460cesun,
           aqpa460seri,
           aqpa460num,
           aqpa460femi,
           aqpa460tcomf,
           aqpa460mone,
           aqpa460corrr,
           aqpa460mglo,
           aqpa460coma,
           aqpa460tpla,
           aqpa460tope,
           aqpa460tplco,
           aqpa460clog,
           aqpa460tdocr,
           aqpa460nruc,
           aqpa460rasoc,
           aqpa460impt,
           aqpa460hemi,
           aqpa460simc,
           aqpa460svitm,
           aqpa460spvi,
           aqpa460txml,
           aqpa460sdref,
           aqpa460ndref,
           aqpa460cmem,
           aqpa460sust,
           aqpa460serie,
           aqpa460nro,
           aqpa460tcomp,
           aqpa460fdref,
           aqpa460cdist,
           aqpa460call,
           aqpa460urb,
           aqpa460dep,
           aqpa460prv,
           aqpa460dst,
           aqpa460cpai,
           aqpa460item,
           aqpa460pnetu,
           aqpa460cantf,
           aqpa460total,
           aqpa460dete,
           aqpa460ctpr,
           aqpa460vvun,
           aqpa460vvuig,
           aqpa460desc,
           aqpa460mfun,
           aqpa460prvit,
           aqpa460medem,
           aqpa460csuna,
           aqpa460cpgs1,
           aqpa460ititm,
           aqpa460imptb,
           aqpa460impex,
           aqpa460afigv,
           aqpa460sisc,
           aqpa460codtb,
           aqpa460dstrb,
           aqpa460codun,
           aqpa460mbim,
           aqpa460taimp,
           aqpa460cdley,
           aqpa460teley,
           aqpa460text1,
           aqpa460text2,
           aqpa460trecv,
           aqpa460templ,
           aqpa460subje,
           aqpa460vpcva,
           aqpa460nexp,
           aqpa460cind,
           aqpa460npart,
           aqpa460ncont,
           aqpa460fotrc,
           aqpa460cdisn,
           aqpa460direh,
           aqpa460urbh,
           aqpa460prvh,
           aqpa460dsth,
           aqpa460depth,
           aqpa460mtotal,
           aqpa460baimp,
           aqpa460mtimp,
           aqpa460pcima,
           aqpa460bsimp,
           aqpa460vaimp,
           aqpa460mtinf,
           aqpa460mtgrt,
           aqpa460bsimps,
           aqpa460mtoti,
           aqpa460pgc,
           aqpa460mod,
           aqpa460suc,
           aqpa460trx,
           aqpa460rel,
           aqpa460ore,
           aqpa460pgce,
           aqpa460mode,
           aqpa460suce,
           aqpa460trxe,
           aqpa460rele,
           aqpa460fcone,
           aqpa460glos,
           aqpa460tipag,
           aqpa460text3,
           aqpa460text4,
           aqpa460conce)
          select aqpa460tdoc,
                 aqpa460rucc,
                 aqpa460rsoc,
                 aqpa460cdis,
                 aqpa460ncom,
                 aqpa460calle,
                 aqpa460urba,
                 aqpa460depa,
                 aqpa460prov,
                 aqpa460dist,
                 aqpa460telf,
                 aqpa460web,
                 aqpa460cpais,
                 aqpa460cesun,
                 pc_AQPA465SERIE,
                 pc_AQPA465CORR,
                 aqpa460femi,
                 '07',
                 aqpa460mone,
                 aqpa460corrr,
                 aqpa460mglo,
                 aqpa460coma,
                 aqpa460tpla,
                 aqpa460tope,
                 aqpa460tplco,
                 aqpa460clog,
                 aqpa460tdocr,
                 aqpa460nruc,
                 aqpa460rasoc,
                 aqpa460impt,
                 aqpa460hemi,
                 aqpa460simc,
                 aqpa460svitm,
                 aqpa460spvi,
                 aqpa460txml,
                 aqpa460seri,
                 aqpa460num,
                 '01',
                 'Extorno de la operacion',
                 aqpa460seri,
                 aqpa460num,
                 lv_codtipo,
                 pc_AQPA465CON,
                 aqpa460cdist,
                 aqpa460call,
                 aqpa460urb,
                 aqpa460dep,
                 aqpa460prv,
                 aqpa460dst,
                 aqpa460cpai,
                 aqpa460item,
                 aqpa460pnetu,
                 aqpa460cantf,
                 aqpa460total,
                 aqpa460dete,
                 aqpa460ctpr,
                 aqpa460vvun,
                 aqpa460vvuig,
                 aqpa460desc,
                 aqpa460mfun,
                 aqpa460prvit,
                 aqpa460medem,
                 aqpa460csuna,
                 aqpa460cpgs1,
                 aqpa460ititm,
                 aqpa460imptb,
                 aqpa460impex,
                 aqpa460afigv,
                 aqpa460sisc,
                 aqpa460codtb,
                 aqpa460dstrb,
                 aqpa460codun,
                 aqpa460mbim,
                 aqpa460taimp,
                 aqpa460cdley,
                 aqpa460teley,
                 aqpa460text1,
                 aqpa460text2,
                 aqpa460trecv,
                 aqpa460templ,
                 aqpa460subje,
                 aqpa460vpcva,
                 aqpa460nexp,
                 aqpa460cind,
                 aqpa460npart,
                 aqpa460ncont,
                 aqpa460fotrc,
                 aqpa460cdisn,
                 aqpa460direh,
                 aqpa460urbh,
                 aqpa460prvh,
                 aqpa460dsth,
                 aqpa460depth,
                 aqpa460mtotal,
                 aqpa460baimp,
                 aqpa460mtimp,
                 aqpa460pcima,
                 aqpa460bsimp,
                 aqpa460vaimp,
                 aqpa460mtinf,
                 aqpa460mtgrt,
                 aqpa460bsimps,
                 aqpa460mtoti,
                 aqpa460pgc,
                 aqpa460mod,
                 aqpa460suc,
                 aqpa460trx,
                 aqpa460rel,
                 aqpa460ore,
                 pn_pgcode,
                 pn_hcmode,
                 pn_hsucore,
                 pn_htrane,
                 pn_hnrele,
                 pn_hfcone,
                 aqpa460glos,
                 aqpa460tipag,
                 aqpa460text3,
                 aqpa460text4,
                 aqpa460conce
            from aqpa460 a
           where a.aqpa460pgc = pn_pgcod
             and a.aqpa460mod = pn_hcmod3
             and a.aqpa460suc = pn_hsucor3
             and a.aqpa460trx = pn_htran3
             and a.aqpa460rel = pn_hnrel3
             and a.aqpa460femi = pn_hfcon3
             and a.aqpa460seri = lc_serieI
             and a.aqpa460num = lc_correlativoI;
      
        commit;
      exception
        when others then
          --lc_coderr := sqlcode;
          --lc_msgerr := sqlerrm;     
          pc_ESTADO := 'E';
      end;
    
    end if;
  
    pc_ESTADO := 'A';
    begin
      update aqpa466 a
         set a.aqpa466est = null, a.aqpa466msgs = null
       where a.AQPA466SERIE = lc_serieF
         and a.AQPA466CORR = ln_numeroF
         and a.AQPA466PGCOD = pc_AQPA465PGCOD
         and a.AQPA466MOD = PC_AQPA465MOD
         and a.AQPA466SUCOR = pc_AQPA465SUCOREND
         and a.AQPA466TRAN = pc_AQPA465TRAN
         and a.AQPA466REL = pc_AQPA465REL; --  and a.AQPA465CON =   pc_AQPA465CON; 
    exception
      when others then
        pc_ESTADO := 'E';
    end;
    commit;
  
  exception
    when others then
      pc_ESTADO  := 'F';
      PC_MENSAJE := SQLCODE || ' ' || SQLERRM;
    
      --mod@abr 20180622 ---LOG DE ERRORES
      insert into aqpa460E
        (aqpa460eserie,
         aqpa460ecorr,
         aqpa460epgcod,
         aqpa460emod,
         aqpa460esucorend,
         aqpa460etran,
         aqpa460erel,
         aqpa460econ,
         aqpa460etip)
      values
        (pc_AQPA465SERIE,
         pc_AQPA465CORR,
         pc_AQPA465PGCOD,
         pc_AQPA465MOD,
         pc_AQPA465SUCOREND,
         pc_AQPA465TRAN,
         pc_AQPA465REL,
         pc_AQPA465CON,
         'E');
    
      commit;
      --mod@abr 20180622
  
  end sp_cr_NOTACREDITO_E;
  --------------------------------
  procedure sp_cr_Factura_R(pc_AQPA465SERIE    in char,
                            pc_AQPA465CORR     in number,
                            pc_AQPA465PGCOD    in number,
                            pc_AQPA465MOD      in number,
                            pc_AQPA465SUCOREND in number,
                            pc_AQPA465TRAN     in number,
                            pc_AQPA465REL      in number,
                            pc_AQPA465CON      in date,
                            pc_ESTADO          out char,
                            pc_MENSAJE         out char) is
  
    cursor aqpa463(pc_newserie in char, pc_newcorr in number) is
      select *
        from aqpa463 b
       where b.aqpa463pgcod = pc_AQPA465PGCOD
         and b.aqpa463hcmod = PC_AQPA465MOD
         and b.aqpa463hsucor = pc_AQPA465SUCOREND
         and b.aqpa463htran = pc_AQPA465TRAN
         and b.aqpa463hnrel = pc_AQPA465REL
         and b.aqpa463hfcon = pc_AQPA465CON
         and b.aqpa463serie = pc_newserie
         and b.aqpa463corre = pc_newcorr
       order by b.aqpa463hnrel asc, b.aqpa463txoren asc;
  
    lc_serieF  aqpa460.aqpa460seri%type;
    lc_numeroF aqpa460.aqpa460num%type;
  
    lc_flag char(1);
  
  begin
    --mod@abr 20180622
    /* insert into aqpa465_pr(pc_aqpa465serie,
              aqpa465corr,
              aqpa465pgcod,
              aqpa465mod,
              aqpa465sucorend,
              aqpa465tran,
              aqpa465rel,
              aqpa465con)
    values(pc_AQPA465SERIE ,
           pc_AQPA465CORR  ,
           pc_AQPA465PGCOD ,
           pc_AQPA465MOD   ,
           pc_AQPA465SUCOREND,
           pc_AQPA465TRAN    ,
           pc_AQPA465REL    , 
           pc_AQPA465CON      );
    
    commit;    */
    --mod@abr 20180622
    begin
    
      lc_serieF  := trim(pc_AQPA465SERIE);
      lc_numeroF := pc_AQPA465CORR;
    
      --Insertar en cabecera historica para rechazos
      begin
        insert into AQPA465H
          (aqpa465hserie,
           aqpa465hcorr,
           aqpa465hpgcod,
           aqpa465hmod,
           aqpa465hsucor,
           aqpa465htran,
           aqpa465hrel,
           aqpa465hcon,
           aqpa465hhash,
           aqpa465hmsgs,
           aqpa465hmsgt,
           aqpa465husu,
           aqpa465hfec,
           aqpa465hhor,
           aqpa465hest,
           aqpa465hord,
           aqpa465hursud,
           aqpa465hfecd,
           aqpa465hhord)
          select aqpa465serie,
                 aqpa465corr,
                 aqpa465pgcod,
                 aqpa465mod,
                 aqpa465sucor,
                 aqpa465tran,
                 aqpa465rel,
                 aqpa465con,
                 aqpa465hash,
                 aqpa465msgs,
                 aqpa465msgt,
                 aqpa465usu,
                 aqpa465fec,
                 aqpa465hor,
                 aqpa465est,
                 aqpa465ord,
                 aqpa465ursud,
                 aqpa465fecd,
                 aqpa465hord
            from AQPA465 a
           where a.aqpa465serie = lc_serieF
             and a.aqpa465corr = lc_numeroF;
        commit;
      exception
        when others then
          null;
      end;
    
      ---elimina registros en tablas
      delete from aqpa465 a
       where a.aqpa465serie = lc_serieF
         and a.aqpa465corr = lc_numeroF;
      delete from aqpa463 a
       where a.aqpa463serie = lc_serieF
         and a.aqpa463corre = lc_numeroF;
      delete from aqpa460 a
       where a.aqpa460seri = lc_serieF
         and a.aqpa460num = lc_numeroF;
      commit;
      ----
    
      begin
        pq_cr_factura_electronica.sp_cr_carga_documento(pn_pgcod  => pc_AQPA465PGCOD,
                                                        pn_hcmod  => PC_AQPA465MOD,
                                                        pn_hsucor => pc_AQPA465SUCOREND,
                                                        pn_htran  => pc_AQPA465TRAN,
                                                        pn_hnrel  => pc_AQPA465REL,
                                                        pn_hfcon  => pc_AQPA465CON,
                                                        pc_flag   => lc_flag);
      
        --actualiza cabecera
        pc_ESTADO := 'A';
      exception
        when others then
          pc_ESTADO := 'E';
      end;
    
    end;
  
  exception
    when others then
      pc_ESTADO  := 'F';
      PC_MENSAJE := SQLCODE || ' ' || SQLERRM;
    
      --mod@abr 20180622 ---LOG DE ERRORES
      insert into aqpa460E
        (aqpa460eserie,
         aqpa460ecorr,
         aqpa460epgcod,
         aqpa460emod,
         aqpa460esucorend,
         aqpa460etran,
         aqpa460erel,
         aqpa460econ,
         aqpa460etip)
      values
        (pc_AQPA465SERIE,
         pc_AQPA465CORR,
         pc_AQPA465PGCOD,
         pc_AQPA465MOD,
         pc_AQPA465SUCOREND,
         pc_AQPA465TRAN,
         pc_AQPA465REL,
         pc_AQPA465CON,
         'R');
    
      commit;
      --mod@abr 20180622
  end sp_cr_Factura_R;

  -------------------------

  --------------------------------
  procedure sp_tra_validas_Mov(pc_AQPA465PGCOD    in number,
                               pc_AQPA465MOD      in number,
                               pc_AQPA465SUCOREND in number,
                               pc_AQPA465TRAN     in number,
                               pc_AQPA465REL      in number,
                               pc_AQPA465CON      in date,
                               pc_NEWSERIE        out char,
                               pc_NEWCORR         out char) is
    pn_pgcod   number;
    lc_serie   char(4);
    lc_corre   char(8);
    ln_relant  number(4) := 0;
    lc_hipo    char(2);
    ln_emp     number(3);
    ln_mod     number(3);
    ln_suc     number(3);
    ln_mda     number(4);
    ln_pap     number(4);
    ln_cta     number(9);
    ln_ope     number(9);
    ln_sbo     number(3);
    ln_top     number(3);
    lc_flg     char(1) := 'N'; --controla que sea hipotecario
    pn_ordinal number(2);
    lc_flg465  char(1) := 'N'; --controla que no exista registro AQPA465
    ln_rubro   number;
  
    pn_pais   number(3); --2018.11.12
    pn_petdoc number(2);
    pn_pendoc char(12);
    lc_tipper char(1);
    lc_coderr char(100);
    lc_msgerr char(1000);
  
    cursor transacciones is
    
      select f.txtrub,
             f.pgcod,
             f.hcmod,
             f.hsucor,
             f.htran,
             f.hnrel,
             f.hfcon,
             f.hcord,
             f.txoren,
             f.txtord,
             g.st171hcpcod,
             g.se170hvnro,
             g.se170hvchr
        from fsx016 f, fse170h g
       where g.sd170hdoid = f.txtrub
         and f.txoren = g.st171hcpcod + 100
         and f.hfcon = pc_AQPA465CON ---FECHA DE LA TRANSACCION
         and f.txcod = 200
         and f.pgcod = pc_AQPA465PGCOD
         and f.hcmod = pc_AQPA465MOD
         and f.hsucor = pc_AQPA465SUCOREND
         and f.htran = pc_AQPA465TRAN
         and f.hnrel = pc_AQPA465REL
         and g.sd170hfecha = f.hfcon;
  
  begin
    begin
    
      for p in transacciones loop
      
        --Verifica que no exista en cabecera AQPA465 
        Begin
          select 'S'
            into lc_flg465
            from aqpa465 a
           where a.aqpa465pgcod = p.pgcod
             and a.aqpa465mod = p.hcmod
             and a.aqpa465sucor = p.hsucor
             and a.aqpa465tran = p.htran
             and a.aqpa465rel = p.hnrel
             and a.aqpa465con = p.hfcon
             and a.aqpa465est is null --no exista un registro con estado nulo               
             and rownum = 1;
        exception
          when others then
            lc_flg465 := 'N';
        end;
      
        if lc_flg465 = 'N' then
          --obtener cuenta moneda hora fecha
          Begin
          
            select a.sr171trord
              into pn_ordinal
              from fsr171 a
             where a.st171cpcod = 15
               and a.sr171tremp = p.pgcod --1
               and a.sr171trmod = p.hcmod --30
               and a.sr171trnro = p.htran; --100;   
          exception
            when others then
              null;
          end;
        
          begin
            pq_cr_factura_electronica.sp_cr_pk_credito(pc_aqpa465pgcod    => p.pgcod,
                                                       pc_aqpa465mod      => p.hcmod,
                                                       pc_aqpa465sucorend => p.hsucor,
                                                       pc_aqpa465tran     => p.htran,
                                                       pc_aqpa465rel      => p.hnrel,
                                                       pc_aqpa465ord      => pn_ordinal,
                                                       pd_aqpa465con      => p.hfcon,
                                                       pn_cod             => ln_emp,
                                                       pn_mod             => ln_mod,
                                                       pn_suc             => ln_suc,
                                                       pn_mda             => ln_mda,
                                                       pn_pap             => ln_pap,
                                                       pn_cta             => ln_cta,
                                                       pn_ope             => ln_ope,
                                                       pn_sbo             => ln_sbo,
                                                       pn_top             => ln_top,
                                                       pc_flag            => lc_flg,
                                                       pn_rubro           => ln_rubro);
          end;
        
          if lc_flg = 'S' then
            pn_pgcod := p.pgcod;
            if ln_relant <> p.hnrel then
              /*  
                     begin
                       pq_cr_facturacion.sp_cr_fac_hipotecario(ln_rubro => 4,
                                                               lc_descripcion => 'SEQ_HIPOTECARIO_COR',
                                                               lc_serie => lc_serie,
                                                               lc_correlativo => lc_corre);
                       
                     end;
              */
              begin
                ---se obtiene NDI/ TIPO de doc                  
                select a.pepais, a.petdoc, a.pendoc
                  into pn_pais, pn_petdoc, pn_pendoc
                  from fsr008 a
                 where a.ctnro = ln_cta ---
                   and a.cttfir = 'T';
              exception
                when others then
                  null;
              end;
            
              begin
                pq_cr_facturacion.sp_cr_tipo_cliente(pn_pais   => pn_pais,
                                                     pn_tipdoc => pn_petdoc,
                                                     pc_numdoc => pn_pendoc,
                                                     pc_tipper => lc_tipper);
              end;
            
              begin
                pq_cr_facturacion.sp_cr_factura(pn_rubro       => ln_rubro,
                                                pc_tipcli      => lc_tipper,
                                                pc_tipo        => 'MOV', --transaccion
                                                pc_serie       => lc_serie,
                                                pc_correlativo => lc_corre);
              
              exception
                when others then
                
                  lc_coderr := sqlcode;
                  lc_msgerr := trim(sqlerrm);
                
                  insert into aqpa460E
                    (aqpa460eserie,
                     aqpa460ecorr,
                     aqpa460epgcod,
                     aqpa460emod,
                     aqpa460esucorend,
                     aqpa460etran,
                     aqpa460erel,
                     aqpa460econ,
                     aqpa460etip,
                     Aqpa460eacoe,
                     Aqpa460eamsge)
                  values
                    (null,
                     null,
                     p.pgcod,
                     p.hcmod,
                     p.hsucor,
                     p.htran,
                     p.hnrel,
                     p.hfcon,
                     'S',
                     lc_coderr,
                     lc_msgerr);
                  commit;
                
              end;
            
            end if;
          
          end if;
        
          ln_relant := p.hnrel;
        
          begin
            insert into aqpa463
              (aqpa463txtrub,
               aqpa463pgcod,
               aqpa463hcmod,
               aqpa463hsucor,
               aqpa463htran,
               aqpa463hnrel,
               aqpa463hfcon,
               aqpa463hcord,
               aqpa463txoren,
               aqpa463txtord,
               aqpa463hcpcod,
               aqpa463hvnro,
               aqpa463hvchr,
               aqpa463serie,
               aqpa463corre,
               aqpa463emp,
               aqpa463mod,
               aqpa463suc,
               aqpa463mda,
               aqpa463pap,
               aqpa463cta,
               aqpa463ope,
               aqpa463sbo,
               aqpa463top,
               aqpa463hip
               
               )
            values
              (p.txtrub,
               p.pgcod,
               p.hcmod,
               p.hsucor,
               p.htran,
               p.hnrel,
               p.hfcon,
               p.hcord,
               p.txoren,
               p.txtord,
               p.hcord,
               p.se170hvnro,
               p.se170hvchr,
               lc_serie,
               lc_corre,
               ln_emp,
               ln_mod,
               ln_suc,
               ln_mda,
               ln_pap,
               ln_cta,
               ln_ope,
               ln_sbo,
               ln_top,
               lc_hipo);
            commit;
          
          end;
        
        end if;
      end loop;
    
      pc_NEWSERIE := lc_serie;
      pc_NEWCORR  := lc_corre;
    
    end;
  
  end sp_tra_validas_Mov;
  ----------------------------------------------
  --------------------------------
  procedure sp_cr_Atualiza_DOC(pc_AQPA465SERIE    in char,
                               pc_AQPA465CORR     in number,
                               pc_AQPA465PGCOD    in number,
                               pc_AQPA465MOD      in number,
                               pc_AQPA465SUCOREND in number,
                               pc_AQPA465TRAN     in number,
                               pc_AQPA465REL      in number,
                               pc_AQPA465CON      in date,
                               pc_AQAA465EST      in char,
                               pc_ESTADO          out char,
                               pc_MENSAJE         out char) is
    -- determina si la actualizacion es por Error en Factura/NC o Rechazo Factura/NC
  
    lc_tipodoc char(2);
  
  begin
  
    lc_tipodoc := substr(pc_AQPA465SERIE, 1, 2);
  
    if pc_AQAA465EST = 'E' then
      -- ERROR , mantener numeracion y cargar informacion
    
      if lc_tipodoc = 'FH' then
      
        begin
          pq_cr_factura_electronica.sp_cr_factura_e(pc_aqpa465serie    => pc_AQPA465SERIE,
                                                    pc_aqpa465corr     => pc_AQPA465CORR,
                                                    pc_aqpa465pgcod    => pc_AQPA465PGCOD,
                                                    pc_aqpa465mod      => pc_AQPA465MOD,
                                                    pc_aqpa465sucorend => pc_AQPA465SUCOREND,
                                                    pc_aqpa465tran     => pc_AQPA465TRAN,
                                                    pc_aqpa465rel      => pc_AQPA465REL,
                                                    pc_aqpa465con      => pc_AQPA465CON,
                                                    pc_estado          => pc_ESTADO,
                                                    pc_mensaje         => pc_MENSAJE);
        end;
      
      elsif lc_tipodoc = 'FC' then
      
        begin
        
          pq_cr_factura_electronica.sp_cr_notacredito_e(pc_aqpa465serie    => pc_AQPA465SERIE,
                                                        pc_aqpa465corr     => pc_AQPA465CORR,
                                                        pc_aqpa465pgcod    => pc_AQPA465PGCOD,
                                                        pc_aqpa465mod      => pc_AQPA465MOD,
                                                        pc_aqpa465sucorend => pc_AQPA465SUCOREND,
                                                        pc_aqpa465tran     => pc_AQPA465TRAN,
                                                        pc_aqpa465rel      => pc_AQPA465REL,
                                                        pc_aqpa465con      => pc_AQPA465CON,
                                                        pc_estado          => pc_ESTADO,
                                                        pc_mensaje         => pc_MENSAJE);
        end;
      end if;
    
    elsif pc_AQAA465EST = 'R' then
      -- RECHAZADO , generar nueva numeracion y cargar informacion
      if lc_tipodoc = 'FH' then
      
        begin
        
          pq_cr_factura_electronica.sp_cr_factura_r(pc_aqpa465serie    => pc_AQPA465SERIE,
                                                    pc_aqpa465corr     => pc_AQPA465CORR,
                                                    pc_aqpa465pgcod    => pc_AQPA465PGCOD,
                                                    pc_aqpa465mod      => pc_AQPA465MOD,
                                                    pc_aqpa465sucorend => pc_AQPA465SUCOREND,
                                                    pc_aqpa465tran     => pc_AQPA465TRAN,
                                                    pc_aqpa465rel      => pc_AQPA465REL,
                                                    pc_aqpa465con      => pc_AQPA465CON,
                                                    pc_estado          => pc_ESTADO,
                                                    pc_mensaje         => pc_MENSAJE);
        
        end;
      
      elsif lc_tipodoc = 'FC' then
      
        begin
          pq_cr_factura_electronica.sp_cr_notacredito_r(pc_aqpa465serie    => pc_AQPA465SERIE,
                                                        pc_aqpa465corr     => pc_AQPA465CORR,
                                                        pc_aqpa465pgcod    => pc_AQPA465PGCOD,
                                                        pc_aqpa465mod      => pc_AQPA465MOD,
                                                        pc_aqpa465sucorend => pc_AQPA465SUCOREND,
                                                        pc_aqpa465tran     => pc_AQPA465TRAN,
                                                        pc_aqpa465rel      => pc_AQPA465REL,
                                                        pc_aqpa465con      => pc_AQPA465CON,
                                                        pc_estado          => pc_ESTADO,
                                                        pc_mensaje         => pc_MENSAJE);
        end;
      end if;
    
    end if;
  
  end sp_cr_Atualiza_DOC;
  --------------------------------
  procedure sp_cr_NOTACREDITO_R(pc_AQPA465SERIE    in char,
                                pc_AQPA465CORR     in number,
                                pc_AQPA465PGCOD    in number,
                                pc_AQPA465MOD      in number,
                                pc_AQPA465SUCOREND in number,
                                pc_AQPA465TRAN     in number,
                                pc_AQPA465REL      in number,
                                pc_AQPA465CON      in date,
                                pc_ESTADO          out char,
                                pc_MENSAJE         out char) is
  
    pn_pgcode  number;
    pn_hcmode  number;
    pn_hsucore number;
    pn_htrane  number;
    pn_hnrele  number;
    pn_hfcone  date;
  
    --pc_fecha varchar2(80);
  
    --------------------------
  
    lc_serieF  aqpa460.aqpa460seri%type;
    lc_numeroF aqpa460.aqpa460num%type;
  
  begin
  
    lc_serieF  := trim(pc_AQPA465SERIE);
    lc_numeroF := pc_AQPA465CORR;
  
    --Insertar en cabecera historica para rechazos
    begin
      insert into AQPA466H
        (aqpa466hserie,
         aqpa466hcorr,
         aqpa466hpgcod,
         aqpa466hmod,
         aqpa466hsucor,
         aqpa466htran,
         aqpa466hrel,
         aqpa466hcon,
         aqpa466hmsgs,
         aqpa466hmsgt,
         aqpa466husu,
         aqpa466hhor,
         aqpa466hhash,
         aqpa466hfec,
         aqpa466hest,
         aqpa466husud,
         aqpa466hfecd,
         aqpa466hhord)
        select aqpa466serie,
               aqpa466corr,
               aqpa466pgcod,
               aqpa466mod,
               aqpa466sucor,
               aqpa466tran,
               aqpa466rel,
               aqpa466con,
               aqpa466msgs,
               aqpa466msgt,
               aqpa466usu,
               aqpa466hor,
               aqpa466hash,
               aqpa466fec,
               aqpa466est,
               aqpa466usud,
               aqpa466fecd,
               aqpa466hord
          from AQPA466 a
         where a.aqpa466serie = lc_serieF
           and a.aqpa466corr = lc_numeroF;
      commit;
    exception
      when others then
        null;
    end;
  
    ---obtiene transaccion de extorno
    begin
      select distinct a.aqpa464pgcode,
                      a.aqpa464hcmode,
                      a.aqpa464hsucore,
                      a.aqpa464htrane,
                      a.aqpa464hnrele,
                      a.aqpa464hfcone --trx extorno
        into pn_pgcode,
             pn_hcmode,
             pn_hsucore,
             pn_htrane,
             pn_hnrele,
             pn_hfcone
        from aqpa464 a
       where a.aqpa464serie = lc_serieF
         and a.aqpa464nro = lc_numeroF;
    exception
      when others then
        -- 2022.11.18 dcastro se agrego excepcion
        null;
    end;
  
    ---elimina registros en tablas
    begin
      delete from aqpa466 a
       where a.aqpa466serie = lc_serieF
         and a.aqpa466corr = lc_numeroF;
    exception
      when others then
        null;
    end;
    begin
      delete from aqpa464 a
       where a.aqpa464serie = lc_serieF
         and a.aqpa464nro = lc_numeroF;
    exception
      when others then
        null;
    end;
    begin
      delete from aqpa460 a
       where a.aqpa460seri = lc_serieF
         and a.aqpa460num = lc_numeroF;
      commit;
    exception
      when others then
        null;
    end;
    ----
  
    begin
    
      pq_cr_factura_electronica.sp_cr_nota_credito_trx(pc_aqpa465serie    => pc_aqpa465serie,
                                                       pc_aqpa465corr     => pc_aqpa465corr,
                                                       pc_aqpa465pgcod    => pn_pgcode,
                                                       pc_aqpa465mod      => pn_hcmode,
                                                       pc_aqpa465sucorend => pn_hsucore,
                                                       pc_aqpa465tran     => pn_htrane,
                                                       pc_aqpa465rel      => pn_hnrele,
                                                       pc_aqpa465con      => pn_hfcone);
      --actualiza cabecera
      pc_ESTADO := 'A';
    exception
      when others then
        pc_ESTADO := 'E';
    end;
  
  exception
    when others then
      pc_ESTADO  := 'F';
      PC_MENSAJE := SQLCODE || ' ' || SQLERRM;
    
      --mod@abr 20180622 ---LOG DE ERRORES
      insert into aqpa460E
        (aqpa460eserie,
         aqpa460ecorr,
         aqpa460epgcod,
         aqpa460emod,
         aqpa460esucorend,
         aqpa460etran,
         aqpa460erel,
         aqpa460econ,
         aqpa460etip)
      values
        (pc_AQPA465SERIE,
         pc_AQPA465CORR,
         pc_AQPA465PGCOD,
         pc_AQPA465MOD,
         pc_AQPA465SUCOREND,
         pc_AQPA465TRAN,
         pc_AQPA465REL,
         pc_AQPA465CON,
         'R');
    
      commit;
      --mod@abr 20180622
  
  end sp_cr_NOTACREDITO_R;

  --------------------------------
  procedure sp_cr_Nota_Credito_MOV(pc_AQPA465PGCOD    in number,
                                   pc_AQPA465MOD      in number,
                                   pc_AQPA465SUCOREND in number,
                                   pc_AQPA465TRAN     in number,
                                   pc_AQPA465REL      in number,
                                   pc_AQPA465CON      in date,
                                   pc_NEWSERIE        out char,
                                   pc_NEWCORR         out char) is
  
    pn_hcmod        number;
    pn_hsucor       number;
    pn_htran        number;
    pn_hnrel        number;
    pd_hfcon        date;
    pn_NRO_RELACION number;
    pd_FECHA_TX     date;
    pn_hcmod2       number;
    pn_hcmod3       number;
    pn_hsucor3      number;
    pn_htran3       number;
    pn_hnrel3       number;
    pn_hfcon3       date;
    lc_serie        char(4);
    lc_correlativo  char(8);
  
    pn_pgcod number;
    --Flag char(1):='N';
    ln_relant number(4) := 0;
  
    ln_emp     number(3);
    ln_mod     number(3);
    ln_suc     number(3);
    ln_mda     number(4);
    ln_pap     number(4);
    ln_cta     number(9);
    ln_ope     number(9);
    ln_sbo     number(3);
    ln_top     number(3);
    lc_flg     char(1) := 'N'; --controla que sea hipotecario
    pn_ordinal number(2);
    lc_flg466  char(1) := 'N'; --controla que no exista en la aqpa466
    pd_pgfape  date;
    ln_rubro   number;
  
    cursor fsx015(pn_NRO_RELACION in number, pn_NRO_MODULO in number) is
    
      select distinct a.pgcod, a.hcmod, a.hsucor, a.htran, a.hnrel, a.hfcon
        from fsx015 a
       inner join FSR170 b
          on a.hcmod = b.sr170trmod + 500
         and a.htran = b.sr170trnro
       where a.pgcod = 1
         and a.hcmod = pn_NRO_MODULO
         and a.txcod = 0 ---todas las transacciones extornadas
         and a.pgcod = pc_AQPA465PGCOD
         and a.hsucor = pc_AQPA465SUCOREND
         and a.htran = pc_AQPA465TRAN
         and a.hnrel = pn_NRO_RELACION
         and a.hfcon = pc_AQPA465CON
       order by a.pgcod, a.hcmod, a.hsucor, a.htran, a.hnrel, a.hfcon;
  
    ln_NRO_RELACION number;
    ln_NRO_MODULO   number;
  
  begin
    begin
    
      ln_NRO_MODULO := pc_AQPA465MOD + 500;
    
      ---obtiene datos de transaccion  ---RELACION de EXTORNO
      begin
        select hnrel
          into ln_NRO_RELACION
          from fsx015 f
         where f.hfcon = pc_AQPA465CON
           and f.hcmod = ln_NRO_MODULO
           and f.htran = 100
           and f.txreng = 1
           and f.txcod = 0
           and f.txtext = pc_AQPA465REL;
      exception
        when others then
          ln_NRO_RELACION := 0;
      end;
    
      for p in fsx015(ln_NRO_RELACION, ln_NRO_MODULO) loop
      
        --Verifica que no exista en cabecera AQPA466
        Begin
          select 'S'
            into lc_flg466
            from aqpa466 a
           where a.aqpa466pgcod = p.pgcod
             and a.aqpa466mod = p.hcmod
             and a.aqpa466sucor = p.hsucor
             and a.aqpa466tran = p.htran
             and a.aqpa466rel = p.hnrel
             and a.aqpa466con = p.hfcon
             and rownum = 1;
        exception
          when others then
            lc_flg466 := 'N';
        end;
        pn_pgcod  := p.pgcod;
        pn_hcmod  := p.hcmod;
        pn_hsucor := p.hsucor;
        pn_htran  := p.htran;
        pn_hnrel  := p.hnrel;
        pd_hfcon  := p.hfcon;
        pd_pgfape := p.hfcon;
      
        if lc_flg466 = 'N' then
        
          begin
            select f.txtext as NRO_RELACION
              into pn_NRO_RELACION
              from fsx015 f
             where f.hfcon = pd_pgfape --to_date('20092017', 'ddmmyyyy')----cambiar fecha de proceso
               and f.hcmod = pn_hcmod --530
               and f.htran = pn_htran --100
               and f.hnrel = pn_hnrel --2
               and f.txcod = 0
               and f.txreng = 1;
          exception
            when others then
              pn_NRO_RELACION := null;
          end;
        
          begin
            select to_date(f.txtext, 'DD/MM/RR') as FECHA_TX
              into pd_FECHA_TX
              from fsx015 f
             where f.hfcon = pd_pgfape --to_date('20092017', 'ddmmyyyy')
               and f.hcmod = pn_hcmod -- 530
               and f.htran = pn_htran --100
               and f.hnrel = pn_hnrel --2
               and f.txcod = 0
               and f.txreng = 2;
          exception
            when others then
              pd_FECHA_TX := null;
          end;
        
          pn_hcmod2 := pn_hcmod - 500;
        
          --obtener cuenta moneda hora fecha
          Begin
          
            select a.sr171trord
              into pn_ordinal
              from fsr171 a
             where a.st171cpcod = 15
               and a.sr171tremp = pn_pgcod --p.pgcod--1
               and a.sr171trmod = pn_hcmod2 --p.hcmod--30
               and a.sr171trnro = pn_htran; --p.htran;--100;   
          exception
            when others then
              null;
          end;
        
          /*  begin
            --obtener transaccion original
            select a.hcmod, a.hsucor, a.htran, a.hnrel, a.hfcon
              into pn_hcmod3, pn_hsucor3, pn_htran3, pn_hnrel3, pn_hfcon3 --clave de transaccion
              from fsx016 a
             where a.hcmod = pn_hcmod2 --30
               and a.htran = pn_htran --100
               and a.hfcon = pd_FECHA_TX --to_date('20092017', 'ddmmyyyy')
               and a.hnrel = pn_NRO_RELACION --164
               and rownum = 1;
          end;*/
        
          pn_hcmod3  := pc_AQPA465MOD;
          pn_hsucor3 := pc_AQPA465SUCOREND;
          pn_htran3  := pc_AQPA465TRAN;
          pn_hnrel3  := pc_AQPA465REL;
          pn_hfcon3  := pc_AQPA465CON;
        
          --  delete from aqpa464 where aqpa464hfcon=pd_FECHA_TX;
        
          /*     begin
            select a.pgcod,
                   a.modulo,
                   a.itsucd,
                   a.moneda,
                   a.papel,
                   a.ctnro,
                   a.itoper,
                   a.itsubo,
                   a.ittope,
                   substr(a.rubro,5,2)
              into ln_emp,
                   ln_mod,
                   ln_suc,
                   ln_mda,
                   ln_pap,
                   ln_cta,
                   ln_ope,
                   ln_sbo,
                   ln_top,
                   lc_hipo
              from fsd016 a
             where a.pgcod  = p.pgcod
               and a.itmod  = p.hcmod
               and a.itsuc  = p.hsucor
               and a.ittran = p.htran
               and a.itnrel = p.hnrel
               and a.itord  = pn_ordinal;
          exception
               when others then null;
          end;
          
          if lc_hipo = '04' then
             lc_flg := 'S';
               else
             lc_flg := 'N';
          end if;
          */
        
          begin
            pq_cr_factura_electronica.sp_cr_pk_credito(pc_aqpa465pgcod    => p.pgcod,
                                                       pc_aqpa465mod      => p.hcmod,
                                                       pc_aqpa465sucorend => p.hsucor,
                                                       pc_aqpa465tran     => p.htran,
                                                       pc_aqpa465rel      => p.hnrel,
                                                       pc_aqpa465ord      => pn_ordinal,
                                                       pd_aqpa465con      => p.hfcon,
                                                       pn_cod             => ln_emp,
                                                       pn_mod             => ln_mod,
                                                       pn_suc             => ln_suc,
                                                       pn_mda             => ln_mda,
                                                       pn_pap             => ln_pap,
                                                       pn_cta             => ln_cta,
                                                       pn_ope             => ln_ope,
                                                       pn_sbo             => ln_sbo,
                                                       pn_top             => ln_top,
                                                       pc_flag            => lc_flg,
                                                       pn_rubro           => ln_rubro);
          end;
        
          if lc_flg = 'S' then
          
            if ln_relant <> p.hnrel then
            
              ------------serie y correlativo NOTA DE CREDITO
              begin
                pq_cr_facturacion.sp_cr_nc_hipotecario(lc_descripcion => 'SEQ_NOTACREDITO_COR',
                                                       lc_serie       => lc_serie,
                                                       lc_correlativo => lc_correlativo);
              end;
            
            end if;
          
            begin
              --obtener montos
              --llamado al cursor
              insert into aqpa464
                (aqpa464txtrub,
                 aqpa464pgcod,
                 aqpa464hcmod,
                 aqpa464hsucor,
                 aqpa464htran,
                 aqpa464hnrel,
                 aqpa464hfcon,
                 aqpa464doid,
                 aqpa464cpcod,
                 aqpa464vnro,
                 aqpa464vchr,
                 aqpa464vfch,
                 aqpa464vimp,
                 aqpa464vtas,
                 aqpa464serie,
                 aqpa464nro,
                 aqpa464emp,
                 aqpa464mod,
                 aqpa464suc,
                 aqpa464mda,
                 aqpa464pap,
                 aqpa464cta,
                 aqpa464ope,
                 aqpa464sbo,
                 aqpa464top,
                 aqpa464hip,
                 aqpa464pgcode,
                 aqpa464hcmode,
                 aqpa464hsucore,
                 aqpa464htrane,
                 aqpa464hnrele,
                 aqpa464hfcone)
                select distinct (a.txtrub),
                                a.pgcod,
                                a.hcmod,
                                a.hsucor,
                                a.htran,
                                a.hnrel,
                                a.hfcon,
                                b.sd170doid,
                                b.st171cpcod,
                                b.se170vnro,
                                b.se170vchr,
                                b.se170vfch,
                                b.se170vimp,
                                b.se170vtas,
                                lc_serie,
                                lc_correlativo,
                                ln_emp,
                                ln_mod,
                                ln_suc,
                                ln_mda,
                                ln_pap,
                                ln_cta,
                                ln_ope,
                                ln_sbo,
                                ln_top,
                                '04', --lc_hipo
                                a.pgcod,
                                pn_hcmod,
                                a.hsucor,
                                a.htran,
                                pn_hnrel,
                                pd_hfcon
                  from fsx016 a, fse170 b
                 where a.pgcod = 1
                   and a.hcmod = pn_hcmod2 --30
                   and a.htran = pn_htran --100
                   and a.hfcon = pd_FECHA_TX --to_date('20092017', 'ddmmyyyy')
                   and a.txcod = 200
                   and b.sd170doid = a.txtrub
                   and a.hnrel = pn_NRO_RELACION;
              commit;
            
            end;
          end if;
        end if;
      end loop;
    
      pc_NEWSERIE := lc_serie;
      pc_NEWCORR  := lc_correlativo;
    
    end;
  
  end sp_cr_Nota_Credito_MOV;
  --------------------------------
  --------------------------------
  --------------------------------
  procedure sp_cr_pk_credito(pc_AQPA465PGCOD    in number,
                             pc_AQPA465MOD      in number,
                             pc_AQPA465SUCOREND in number,
                             pc_AQPA465TRAN     in number,
                             pc_AQPA465REL      in number,
                             pc_AQPA465ORD      in number,
                             pd_AQPA465CON      in date,
                             pn_cod             out number,
                             pn_mod             out number,
                             pn_suc             out number,
                             pn_mda             out number,
                             pn_pap             out number,
                             pn_cta             out number,
                             pn_ope             out number,
                             pn_sbo             out number,
                             pn_top             out number,
                             pc_FLAG            out char,
                             pn_rubro           out number) is
  
    ld_fecape date;
  
    lc_flgCom char(1) := 'N';
  BEGIN
  
    begin
      select f.pgfape into ld_fecape from fst017 f where f.pgcod = 1;
    exception
      when others then
        null;
    end;
  
    if pd_AQPA465CON = ld_fecape then
      -- DIARIO
    
      begin
        select a.pgcod,
               a.modulo,
               a.itsucd,
               a.moneda,
               a.papel,
               a.ctnro,
               a.itoper,
               a.itsubo,
               a.ittope,
               to_number(substr(a.rubro, 5, 2))
          into pn_cod,
               pn_mod,
               pn_suc,
               pn_mda,
               pn_pap,
               pn_cta,
               pn_ope,
               pn_sbo,
               pn_top,
               --lc_hipo,
               pn_rubro
          from fsd016 a
         where a.pgcod = pc_AQPA465PGCOD
           and a.itmod = pc_AQPA465MOD
           and a.itsuc = pc_AQPA465SUCOREND
           and a.ittran = pc_AQPA465TRAN
           and a.itnrel = pc_AQPA465REL
           and a.itord = pc_AQPA465ORD;
      exception
        when others then
          null;
      end;
    
      /*if lc_hipo = '04' then  2018.10.03
           pc_FLAG := 'S';
      else
           pc_FLAG := 'N';
      end if;  
      */
      pc_FLAG := 'S';
    
    else
      --HISTORICO
      begin
        select a.pgcod,
               a.hmodul,
               a.hsucur,
               a.hmda,
               a.hpap,
               a.hcta,
               a.hoper,
               a.hsubop,
               a.htoper,
               to_number(substr(a.hrubro, 5, 2)) ---C5: tipo de operacion
          into pn_cod,
               pn_mod,
               pn_suc,
               pn_mda,
               pn_pap,
               pn_cta,
               pn_ope,
               pn_sbo,
               pn_top,
               --lc_hipo,
               pn_rubro
          from fsh016 a
         where a.pgcod = pc_AQPA465PGCOD
           and a.hcmod = pc_AQPA465MOD
           and a.hsucor = pc_AQPA465SUCOREND
           and a.htran = pc_AQPA465TRAN
           and a.hnrel = pc_AQPA465REL
           and a.hfcon = pd_AQPA465CON
           and a.hcord = pc_AQPA465ORD;
      exception
        when others then
          null;
      end;
    
      pc_FLAG := 'S';
    
      --mod@abr 20180705
      if pn_cod is null then
        begin
          select a.jaqz659pgcod,
                 a.jaqz659modulo,
                 a.jaqz659itsucd,
                 a.jaqz659moneda,
                 a.jaqz659papel,
                 a.jaqz659ctnro,
                 a.jaqz659itoper,
                 a.jaqz659itsubo,
                 a.jaqz659ittope,
                 to_number(substr(a.jaqz659rubro, 5, 2))
            into pn_cod,
                 pn_mod,
                 pn_suc,
                 pn_mda,
                 pn_pap,
                 pn_cta,
                 pn_ope,
                 pn_sbo,
                 pn_top,
                 --lc_hipo
                 pn_rubro
            from jaqz659 a
           where a.jaqz659pgcod = pc_AQPA465PGCOD
             and a.jaqz659itmod = pc_AQPA465MOD
             and a.jaqz659itsuc = pc_AQPA465SUCOREND
             and a.jaqz659ittran = pc_AQPA465TRAN
             and a.jaqz659itnrel = pc_AQPA465REL
             and a.jaqz659fecpr = pd_AQPA465CON
             and a.jaqz659itord = pc_AQPA465ORD;
        exception
          when others then
            null;
        end;
      end if;
      --mod@abr 20180705
    
      /* if lc_hipo = '04' then
                pc_FLAG := 'S';
           else
                pc_FLAG := 'N';
           end if;  
      */
    
    end if;
  
    begin
      ----Transacciones comisiones
      select 'S'
        into lc_flgCom
        from fst198 a
       where a.tp1cod = 1
         and a.tp1cod1 = 11120
         and a.tp1corr1 = 3
         and a.tp1nro1 = pc_AQPA465MOD
         and a.tp1nro2 = pc_AQPA465TRAN;
    exception
      when others then
        lc_flgCom := 'N';
    end;
  
    if lc_flgCom = 'S' then
      pn_rubro := 15; --codigo de comision
    
    end if;
  
    ---modulo 30_ creditos corporativos
    --Transacciones: 977-Venta Joya Adjudicada    978-Devolución de Joyas      
    --if pc_AQPA465MOD = 30 and pc_AQPA465TRAN in (977, 978) then
    if pc_AQPA465MOD = 30 and pc_AQPA465TRAN in (977, 978, 405, 984, 986) then
      ---30/405   22/07/2021
      --se agrego 978 24/12/2018
      --se agrego 984 20221029
      pn_rubro := 5;
    end if;
  
    pc_FLAG := 'S'; ---por defecto se graban todas 
  
  end sp_cr_pk_credito;

  procedure sp_cr_Dif_Red( --obtencion de diferido y redondeo
                          pc_AQPA465PGCOD    in number,
                          pc_AQPA465MOD      in number,
                          pc_AQPA465SUCOREND in number,
                          pc_AQPA465TRAN     in number,
                          pc_AQPA465REL      in number,
                          pd_AQPA465CON      in date,
                          pn_dif             out number,
                          pn_red             out number) is
  
    ld_fecape date;
    lc_flg    char(1) := 'N'; --mod@abr 20181220
  
  BEGIN
  
    begin
      select f.pgfape into ld_fecape from fst017 f where f.pgcod = 1;
    exception
      when others then
        null;
    end;
  
    begin
      ----TRX CON MAS DE 2 REG MOD 461 
      select 'S'
        into lc_flg
        from fst198 a
       where a.tp1cod = 1
         and a.tp1cod1 = 11120
         and a.tp1corr1 = 6
         and a.tp1corr2 = 1
         and a.tp1nro1 = pc_AQPA465MOD
         and a.tp1nro2 = pc_AQPA465TRAN;
    exception
      when others then
        lc_flg := 'N';
    end;
  
    if lc_flg <> 'S' then
      if pd_AQPA465CON = ld_fecape then
        -- DIARIO
      
        begin
          select a.itimp1
            into pn_dif
            from fsd016 a
           where a.pgcod = pc_AQPA465PGCOD
             and a.itmod = pc_AQPA465MOD
             and a.itsuc = pc_AQPA465SUCOREND
             and a.ittran = pc_AQPA465TRAN
             and a.itnrel = pc_AQPA465REL
             and a.modulo = 419;
        exception
          when others then
            --null;
             pn_dif := 0; --2023.09.20
        end;
      
      else
        --HISTORICO
        begin
          select a.hcimp1
            into pn_dif
            from fsh016 a
           where a.pgcod = pc_AQPA465PGCOD
             and a.hcmod = pc_AQPA465MOD
             and a.hsucor = pc_AQPA465SUCOREND
             and a.htran = pc_AQPA465TRAN
             and a.hnrel = pc_AQPA465REL
             and a.hfcon = pd_AQPA465CON
             and a.hmodul = 419;
        exception
          when others then
            --null;
             pn_dif := 0; --2023.09.20
        end;
      
        --mod@abr 20180705
        if pn_dif is null then
          begin
            select a.jaqz659itimp1
              into pn_dif
              from jaqz659 a
             where a.jaqz659pgcod = pc_AQPA465PGCOD
               and a.jaqz659itmod = pc_AQPA465MOD
               and a.jaqz659itsuc = pc_AQPA465SUCOREND
               and a.jaqz659ittran = pc_AQPA465TRAN
               and a.jaqz659itnrel = pc_AQPA465REL
               and a.jaqz659fecpr = pd_AQPA465CON
               and a.jaqz659modulo = 419;
          exception
            when others then
              --null;
              pn_dif := 0; --2023.09.20
          end;
        end if;
        --mod@abr 20180705
      
      end if;
    end if;
  
    if pd_AQPA465CON = ld_fecape then
      -- DIARIO
      begin
        select a.itimp1
          into pn_red
          from fsd016 a
         where a.pgcod = pc_AQPA465PGCOD
           and a.itmod = pc_AQPA465MOD
           and a.itsuc = pc_AQPA465SUCOREND
           and a.ittran = pc_AQPA465TRAN
           and a.itnrel = pc_AQPA465REL
           and a.rubro = '4212290000007';
      exception
        when others then
          null;
      end;
    else
      begin
        select a.hcimp1
          into pn_red
          from fsh016 a
         where a.pgcod = pc_AQPA465PGCOD
           and a.hcmod = pc_AQPA465MOD
           and a.hsucor = pc_AQPA465SUCOREND
           and a.htran = pc_AQPA465TRAN
           and a.hnrel = pc_AQPA465REL
           and a.hfcon = pd_AQPA465CON
           and a.hrubro = '4212290000007';
      exception
        when others then
          null;
      end;
    
      --mod@abr 20180705
      if pn_red is null then
        begin
          select a.jaqz659itimp1
            into pn_red
            from jaqz659 a
           where a.jaqz659pgcod = pc_AQPA465PGCOD
             and a.jaqz659itmod = pc_AQPA465MOD
             and a.jaqz659itsuc = pc_AQPA465SUCOREND
             and a.jaqz659ittran = pc_AQPA465TRAN
             and a.jaqz659itnrel = pc_AQPA465REL
             and a.jaqz659fecpr = pd_AQPA465CON
             and a.jaqz659rubro = '4212290000007';
        exception
          when others then
            null;
        end;
      end if;
      --mod@abr 20180705
    
    end if;
  
  end sp_cr_Dif_Red;

  ------------------construccion--------------
  --mod@abr20181207
  Procedure sp_job_TraValidas_HIS(pd_fecpro in varchar2) is
    --ln_max number;
    --ln_inc number;
    ln_ini number;
    --ln_fin number;
    i           number;
    lc_variable varchar2(1000);
    ln_job      number := 0;
    lc_hostname varchar2(64);
    --lc_coderr varchar2(300);
    cursor sucursal is
      select sucurs from fst001 where pgcod = 1;
  begin
    begin
      select host_name into lc_hostname from v$instance;
    exception
      when others then
        null;
    end;
  
    delete Tab_jobs where c_Codage = 'FEI';
    commit;
    for i in sucursal loop
      ln_ini      := i.sucurs;
      lc_variable := ' begin ' ||
                     '  pq_cr_Factura_Electronica.sp_tra_validas_HIS(' ||
                     ln_ini || ',' || '''' || Pd_FECpro || '''' || ');' ||
                     ' End; ';
      ln_job      := ln_job + 1;
      --DBMS_JOB.SUBMIT(ln_job, lc_variable, sysdate+1/(24*180));
    
      --        if  UPPER(lc_hostname) in ('BTRAC2051','BTRAC2052')  then  
      --      if UPPER(lc_hostname) in ('SC01ZDBADM010101', 'SC01ZDBADM020101') then
      IF SYS.FN_BD_ISRAC = 'TRUE' THEN
        DBMS_JOB.SUBMIT(job       => ln_job,
                        what      => lc_variable,
                        next_date => sysdate + 1 / (24 * 180),
                        interval  => null,
                        no_parse  => false,
                        instance  => 2,
                        force     => false);
      else
        DBMS_JOB.SUBMIT(job       => ln_job,
                        what      => lc_variable,
                        next_date => sysdate + 1 / (24 * 180),
                        interval  => null,
                        no_parse  => false,
                        force     => false);
      end if;
      INSERT INTO Tab_jobs
        (c_Codage, n_Numer1, c_detjob)
      VALUES
        ('FEI', ln_ini, lc_variable);
      COMMIT;
    end loop;
  exception
    when others then
      --lc_coderr:=sqlerrm;
      /*INSERT INTO LOG_ERROR_BANDEJA
        (N_NRO, C_CODBDJ, C_DESERR, D_FECERR)
      VALUES
        (0, 'FEI', lc_variable, TRUNC(SYSDATE));
      COMMIT;*/
      null;
      --          p_c_error:=  lc_variable;
  
  end sp_job_TraValidas_HIS;
  --mod@abr20181207

  procedure sp_tra_validas_HIS( /*pn_numsuc in number,*/ pd_pgfape in date) is
    -----20180720 DCASTRO  se agrego condicion de optimizacion
    -----20180723 DCASTRO  se comento por optimizacion
  
    pn_pgcod number;
    lc_serie char(4);
    lc_corre char(8);
  
    ln_relant  number(4) := 0;
    lc_hipo    char(2);
    ln_emp     number(3);
    ln_mod     number(3);
    ln_suc     number(3);
    ln_mda     number(4);
    ln_pap     number(4);
    ln_cta     number(9);
    ln_ope     number(9);
    ln_sbo     number(3);
    ln_top     number(3);
    lc_flg     char(1) := 'N'; --controla que sea hipotecario
    lc_flgc    char(1);
    pn_ordinal number(2);
    lc_flg465  char(1) := 'N'; --controla que no exista registro AQPA465
  
    ln_modulo number(3) := 0;
    ln_tran   number(3) := 0;
    ln_sucur  number(3) := 0;
  
    ln_rubro number;
  
    pn_pais   number(3);
    pn_petdoc number(2);
    pn_pendoc char(12);
    lc_tipper char(1);
  
    lc_coderr char(100);
    lc_msgerr char(1000);
  
    pd_fecpro DATE := pd_pgfape;
    --pd_fecpro date;--mod@abr20181207
  
    ln_flag   number;
    ln_tipfin char(1);
    lc_flr    char(1);
    lc_fcont  number;
    lc_ftran  number;
  
    cursor transacciones is
    
    /*  select                                                                                                                                                                                                                     f.pgcod,
                                                                        f.hcmod,
                                                                        f.hsucor,
                                                                        f.htran,
                                                                        f.hnrel,
                                                                        f.hfcon,
                                                                        f.txtrub,
                                                                        f.hcord,
                                                                        f.txoren,
                                                                        f.txtord,
                                                                        g.st171hcpcod,
                                                                        g.se170hvnro,
                                                                        g.se170hvchr
                                                                   from fsx016 f, fse170h g
                                                                  where f.pgcod = 1
                                                                    and g.sd170hdoemp=1     --20180720 se agrego condicion por optimizacion DCASTRO
                                                                    and f.pgcod=g.sd170hdoemp --20180720 se agrego condicion por optimizacion DCASTRO
                                                                    and g.sd170hdoid = f.txtrub
                                                                    and f.txoren = g.st171hcpcod  + 100
                                                                    and f.hfcon =  pd_fecpro--pd_pgfape ---fecha del dia???? --sysdate mod@abr20181207
                                                                    and g.sd170hfecha = f.hfcon
                                                                    and g.sd170hfecha = pd_fecpro--pd_pgfape mod@abr20181207
                                                                    and f.txcod = 200
                                                                    AND F.HSUCOR = pn_numsuc--mod@abr 20181207
                                                                  order by f.pgcod,
                                                                           f.hcmod,
                                                                           f.hsucor,
                                                                           f.htran,
                                                                           f.hnrel,
                                                                           f.hfcon;*/
    
      select /* +all_rows */ --2023.07.18 dcastro se agrego all_rows
       a.jaqz675cod  pgcod,
       a.jaqz675mod  hcmod,
       a.jaqz675suc  hsucor,
       a.jaqz675trn  htran,
       a.jaqz675nre  hnrel,
       a.jaqz675fco  hfcon,
       a.jaqz675tru  txtrub,
       a.jaqz675cor  hcord,
       a.jaqz675toe  txoren,
       a.jaqz675tor  txtord,
       b.st171hcpcod st171hcpcod,
       b.se170hvnro  se170hvnro,
       b.se170hvchr  se170hvchr
        from jaqz675 a, fse170h b
       where a.jaqz675cod = b.sd170hdoemp
         and a.jaqz675tru = b.sd170hdoid
         and a.jaqz675cpc = b.st171hcpcod
         and a.jaqz675fco = b.sd170hfecha
         and a.jaqz675fco = pd_fecpro
            
            -----
            
            --and a.jaqz675cod = 1
            --and a.jaqz675mod = 30
            --and a.jaqz675suc = 1
            --and a.jaqz675trn = 100
            --and a.jaqz675nre in (6)
            
            ---
            
         and (a.jaqz675mod, a.jaqz675trn) not in ----EXCLUYE A LOS GRAVADOS
             (select k.tp1nro1, k.tp1nro2
                from fst198 k
               where k.tp1cod = 1 --2023.07.18 dcastro se agrego tp1cod
                 and k.tp1cod1 = 11120
                 and k.tp1corr1 = 3
                 and k.tp1corr2 = 1
                 and tp1corr3 > 0)
      
      /*and a.jaqz675mod = 50
      and a.jaqz675trn = 503 
      and a.jaqz675nre in (17,18,19,20,21,22,23,24)*/
      
       order by a.jaqz675cod,
                a.jaqz675mod,
                a.jaqz675suc,
                a.jaqz675trn,
                a.jaqz675nre,
                a.jaqz675fco;
  
  begin
    begin
    
      --mod@abr20181207
      update tab_jobs g
         set g.d_fecini = sysdate
       where g.n_numer1 = 1 --pn_numsuc
         and g.c_codage = 'FEI';
      commit;
      --pd_fecpro := to_date(ld_fecpro,'yyyymmdd');
      --mod@abr20181207
    
      --25012019 dcastro
      begin
        select c.tp1nro1
          into ln_flag
          from fst198 c
         where c.tp1cod = 1
           and c.tp1cod1 = 11120
           and c.tp1corr1 = 7
           and c.tp1corr2 = 1;
      exception
        when others then
          -- 2022.11.18 dcastro se agrego excepcion
          ln_flag := null;
      end;
      --25012019      
    
      for p in transacciones loop
      
        --Verifica que no exista en cabecera AQPA465 
        Begin
          select 'S'
            into lc_flg465
            from aqpa465 a
           where a.aqpa465pgcod = p.pgcod
             and a.aqpa465mod = p.hcmod
             and a.aqpa465sucor = p.hsucor
             and a.aqpa465tran = p.htran
             and a.aqpa465rel = p.hnrel
             and a.aqpa465con = p.hfcon
             and rownum = 1;
        exception
          when others then
            lc_flg465 := 'N';
        end;
      
        if lc_flg465 = 'N' then
        
          --validar concepto 
          --11120 1 3 Codigos de conc no considerar 
          /*
          begin
            select 'S'
              into lc_flgc
              from fst198 a
             where a.tp1cod = 1
               and a.tp1cod1 = 11120
               and a.tp1corr1 = 1
               and a.tp1corr2 = 3
               and a.tp1corr3 >= 1
               and a.tp1nro1 = p.txoren - 100;
          exception
            when others then
              lc_flgc := 'N';
          end;
          */
        
          --if lc_flgc = 'N' then
        
          --obtener cuenta moneda hora fecha
          Begin
          
            select a.sr171trord
              into pn_ordinal
              from fsr171 a
             where a.st171cpcod = 15
               and a.sr171tremp = p.pgcod --1
               and a.sr171trmod = p.hcmod --30
               and a.sr171trnro = p.htran; --100;   
          exception
            when others then
              null;
          end;
        
          /*20180625  
          begin
            select a.pgcod,
                   a.modulo,
                   a.itsucd,
                   a.moneda,
                   a.papel,
                   a.ctnro,
                   a.itoper,
                   a.itsubo,
                   a.ittope,
                   substr(a.rubro,5,2)
              into ln_emp,
                   ln_mod,
                   ln_suc,
                   ln_mda,
                   ln_pap,
                   ln_cta,
                   ln_ope,
                   ln_sbo,
                   ln_top,
                   lc_hipo
              from fsd016 a
             where a.pgcod  = p.pgcod
               and a.itmod  = p.hcmod
               and a.itsuc  = p.hsucor
               and a.ittran = p.htran
               and a.itnrel = p.hnrel
               and a.itord  = pn_ordinal;
          exception
               when others then null;
          end;
          if lc_hipo = '04' then
               lc_flg := 'S';
               else
                      lc_flg := 'N';
          end if;
          */
        
          begin
            pq_cr_factura_electronica.sp_cr_pk_credito(pc_aqpa465pgcod    => p.pgcod,
                                                       pc_aqpa465mod      => p.hcmod,
                                                       pc_aqpa465sucorend => p.hsucor,
                                                       pc_aqpa465tran     => p.htran,
                                                       pc_aqpa465rel      => p.hnrel,
                                                       pc_aqpa465ord      => pn_ordinal,
                                                       pd_aqpa465con      => p.hfcon,
                                                       pn_cod             => ln_emp,
                                                       pn_mod             => ln_mod,
                                                       pn_suc             => ln_suc,
                                                       pn_mda             => ln_mda,
                                                       pn_pap             => ln_pap,
                                                       pn_cta             => ln_cta,
                                                       pn_ope             => ln_ope,
                                                       pn_sbo             => ln_sbo,
                                                       pn_top             => ln_top,
                                                       pc_flag            => lc_flg,
                                                       pn_rubro           => ln_rubro);
          end;
        
          if lc_flg = 'S' then
          
            ---ln_flag: Comision 
            -- 3: consumo revolvente y no revolvente
          
            ---ln_flag: Comision 
            -- 4: hipotecario
            -- 3: consumo
          
            begin
              select 'S'
                into lc_flr
                from fst198 t
               where t.tp1cod = 1
                 and t.tp1cod1 = 11120
                 and t.tp1corr1 = 1
                 and t.tp1corr2 = 23
                 and t.tp1nro1 <> 0
                 and t.tp1nro1 = ln_rubro;
              --and t.tp1imp1 = 1;
            exception
              when others then
                lc_flr := 'N';
            end;
          
            --if (ln_flag = 0 and ln_rubro in (3,4)) or ln_flag = 1 then
            if (ln_flag = 0 and lc_flr = 'S') or ln_flag = 1 then
              --25012019
            
              -- Se verifica si el rubro se encuentra activo para F. E.
              BEGIN
                select t.tp1imp1
                  into lc_fcont
                  from fst198 t
                 where t.tp1cod = 1
                   and t.tp1cod1 = 11120
                   and t.tp1corr1 = 1
                   and t.tp1corr2 = 23
                   and t.tp1nro1 <> 0
                   and t.tp1nro1 = ln_rubro
                   and t.tp1imp1 = 1;
              exception
                when others then
                  -- 2022.11.18 dcastro se agrego excepcion
                  lc_fcont := null;
              end;
              --
            
              pn_pgcod := p.pgcod;
              /*
              if ln_relant <> p.hnrel or p.hcmod <> ln_modulo or p.htran <> ln_tran or  p.hsucor <> ln_sucur  then   
                     begin
                       pq_cr_facturacion.sp_cr_fac_hipotecario(ln_rubro => 4,
                                                               lc_descripcion => 'SEQ_HIPOTECARIO_COR',
                                                               lc_serie => lc_serie,
                                                               lc_correlativo => lc_corre);
                       
                     end;
              
              end if;
                      
              
              ln_relant := p.hnrel;
              ln_modulo := p.hcmod;
              ln_tran :=   p.htran;
              ln_sucur :=  p.hsucor;*/
            
              if ln_relant <> p.hnrel or p.hcmod <> ln_modulo or
                 p.htran <> ln_tran or p.hsucor <> ln_sucur then
              
                lc_serie := null;
                lc_corre := null;
                /*
                  begin
                    pq_cr_facturacion.sp_cr_fac_hipotecario(ln_rubro => 4,
                                                            lc_descripcion => 'SEQ_HIPOTECARIO_COR',
                                                            lc_serie => lc_serie,
                                                            lc_correlativo => lc_corre);
                    
                  end;
                */
              
                begin
                  ---se obtiene NDI/ TIPO de doc                  
                  select a.pepais, a.petdoc, a.pendoc
                    into pn_pais, pn_petdoc, pn_pendoc
                    from fsr008 a
                   where a.ctnro = ln_cta ---
                     and a.cttfir = 'T';
                exception
                  when others then
                    null;
                end;
              
                -- Se verifica activación para F. E.
                if lc_fcont = 1 then
                
                  ---Verificar si el documento fue emitido con serie y número
                  ---si IdDocumento = 13
                  begin
                    select 'S'
                      into ln_tipfin
                      from aqpb056 a
                     where a.aqpb056pgc = p.pgcod
                       and a.aqpb056mod = p.hcmod
                       and a.aqpb056suc = p.hsucor
                       and a.aqpb056trx = p.htran
                       and a.aqpb056rel = p.hnrel
                       and a.aqpb056fco = p.hfcon
                       and a.aqpb056tco = '13';
                  
                  exception
                    when others then
                    
                      begin
                      
                        select 'S'
                          into ln_tipfin
                          from aqpb056h a
                         where a.aqpb056hpgc = p.pgcod
                           and a.aqpb056hmod = p.hcmod
                           and a.aqpb056hsuc = p.hsucor
                           and a.aqpb056htrx = p.htran
                           and a.aqpb056hrel = p.hnrel
                           and a.aqpb056hfcon = p.hfcon
                           and a.aqpb056htcomf = '13';
                      
                      exception
                        when others then
                          ln_tipfin := 'N';
                      end;
                    
                    --
                  end;
                
                  -- Verificar que el módulo/transacción estén habilitados
                  BEGIN
                    select count(*)
                      into lc_ftran
                      from fst198 t
                     where t.tp1cod = 1
                       and t.tp1cod1 = 11120
                       and t.tp1corr1 = 10
                       and t.tp1corr2 = 1
                       and t.tp1corr3 <> 0
                       and t.tp1imp1 = 1
                       and t.tp1nro1 = p.hcmod
                       and t.tp1nro2 = p.htran;
                  exception
                    when others then
                      -- 2022.11.18 dcastro se agrego excepcion
                      lc_ftran := null;
                  end;
                  if ln_tipfin = 'S' and lc_ftran > 0 then
                    ---Si ha sido registrado en tipfin
                    ----->>> 
                    begin
                      --select to_char(a.aqpb056seri), a.aqpb056num
                      select to_char(a.aqpb056ser), a.aqpb056num
                        into lc_serie, lc_corre
                        from aqpb056 a
                       where a.aqpb056pgc = p.pgcod
                         and a.aqpb056mod = p.hcmod
                         and a.aqpb056suc = p.hsucor
                         and a.aqpb056trx = p.htran
                         and a.aqpb056rel = p.hnrel
                         and a.aqpb056fco = p.hfcon
                         and a.aqpb056tco = '13';
                    
                    exception
                      when others then
                      
                        begin
                        
                          select to_char(a.aqpb056hseri), a.aqpb056hnum
                            into lc_serie, lc_corre
                            from aqpb056h a
                           where a.aqpb056hpgc = p.pgcod
                             and a.aqpb056hmod = p.hcmod
                             and a.aqpb056hsuc = p.hsucor
                             and a.aqpb056htrx = p.htran
                             and a.aqpb056hrel = p.hnrel
                             and a.aqpb056hfcon = p.hfcon
                             and a.aqpb056htcomf = '13';
                        
                        exception
                          when others then
                            lc_coderr := sqlcode;
                            lc_msgerr := trim(sqlerrm);
                          
                            insert into aqpa460E
                              (aqpa460eserie,
                               aqpa460ecorr,
                               aqpa460epgcod,
                               aqpa460emod,
                               aqpa460esucorend,
                               aqpa460etran,
                               aqpa460erel,
                               aqpa460econ,
                               aqpa460etip,
                               Aqpa460eacoe,
                               Aqpa460eamsge)
                            values
                              (null,
                               null,
                               p.pgcod,
                               p.hcmod,
                               p.hsucor,
                               p.htran,
                               p.hnrel,
                               p.hfcon,
                               'S',
                               lc_coderr,
                               lc_msgerr);
                            commit;
                          
                        end;
                      
                    end;
                  
                  end if;
                
                end if;
              
                ----
              end if;
            
              ln_relant := p.hnrel;
              ln_modulo := p.hcmod;
              ln_tran   := p.htran;
              ln_sucur  := p.hsucor;
            
              --if Flag='N' then se comento
              --mod@abr 20181206
              if lc_serie is null then
              
                insert into aqpa460E
                  (aqpa460eserie,
                   aqpa460ecorr,
                   aqpa460epgcod,
                   aqpa460emod,
                   aqpa460esucorend,
                   aqpa460etran,
                   aqpa460erel,
                   aqpa460econ,
                   aqpa460etip,
                   Aqpa460eacoe,
                   Aqpa460eamsge)
                values
                  (null,
                   null,
                   p.pgcod,
                   p.hcmod,
                   p.hsucor,
                   p.htran,
                   p.hnrel,
                   p.hfcon,
                   'M',
                   lc_coderr,
                   lc_msgerr);
                commit;
              else
                begin
                  insert into aqpa463
                    (aqpa463txtrub,
                     aqpa463pgcod,
                     aqpa463hcmod,
                     aqpa463hsucor,
                     aqpa463htran,
                     aqpa463hnrel,
                     aqpa463hfcon,
                     aqpa463hcord,
                     aqpa463txoren,
                     aqpa463txtord,
                     aqpa463hcpcod,
                     aqpa463hvnro,
                     aqpa463hvchr,
                     aqpa463serie,
                     aqpa463corre,
                     aqpa463emp,
                     aqpa463mod,
                     aqpa463suc,
                     aqpa463mda,
                     aqpa463pap,
                     aqpa463cta,
                     aqpa463ope,
                     aqpa463sbo,
                     aqpa463top,
                     aqpa463hip,
                     aqpa463tcre -- guardar tipo de crédito
                     
                     )
                  values
                    (p.txtrub,
                     p.pgcod,
                     p.hcmod,
                     p.hsucor,
                     p.htran,
                     p.hnrel,
                     p.hfcon,
                     p.hcord,
                     p.txoren,
                     p.txtord,
                     p.hcord,
                     p.se170hvnro,
                     p.se170hvchr,
                     lc_serie,
                     lc_corre,
                     ln_emp,
                     ln_mod,
                     ln_suc,
                     ln_mda,
                     ln_pap,
                     ln_cta,
                     ln_ope,
                     ln_sbo,
                     ln_top,
                     lc_hipo,
                     ln_rubro);
                  commit;
                exception
                  when others then
                    lc_coderr := sqlerrm;
                    /*INSERT INTO LOG_ERROR_BANDEJA
                      (N_NRO, C_CODBDJ, C_DESERR, D_FECERR)
                    VALUES
                      (0,
                       'FEI',
                       1 \*n_numsuc*\
                       || lc_coderr,
                       TRUNC(SYSDATE));
                    COMMIT;*/
                end;
              end if;
            end if; --25012019 dcastro
          
          end if;
        
          --end if;
        
        end if;
        commit;
      end loop;
      Commit;
    
      --mod@abr 20181207
      begin
        ---agregado paso 2
        -- Call the procedure
        pq_cr_factura_electronica.sp_cr_Detalle_Factura_2(pd_pgfape);
      end;
      --mod@abr 20181207
    
    end;
  
    update tab_jobs g
       set g.d_fecfin = sysdate
     where g.n_numer1 = 1 -- pn_numsuc
       and g.c_codage = 'FEI';
    commit;
  EXCEPTION
    when others then
      lc_coderr := substr(sqlerrm, 1, 200);
      update tab_jobs g
         set g.c_inderr = 'S', g.c_deserr = lc_coderr
       where g.n_numer1 = 1 --pn_numsuc
         and g.c_codage = 'FEI';
      commit;
      return;
    
  end sp_tra_validas_HIS;

  --------------------------------
  procedure sp_transaccion_valida(pd_pgfape in date) is
  
    ld_fecha date;
    lc_fecha varchar2(8) := to_char(pd_pgfape, 'yyyymmdd');
    ln_flag  number;
  
  begin
  
    begin
      select pgfape into ld_fecha from fst017 where pgcod = 1;
    exception
      when others then
        null;
    end;
  
    --25012019 dcastro  // 12/12/2021 dcastro se modifico campo validacion comision tp1nro1 por tp1nro3
    begin
      ---Flag 0-Sin Comis/1-Todas trx
      select c.tp1nro3 -- c.tp1nro1
        into ln_flag
        from fst198 c
       where c.tp1cod = 1
         and c.tp1cod1 = 11120
         and c.tp1corr1 = 7
         and c.tp1corr2 = 1;
    exception
      when others then
        -- 2022.11.18 dcastro se agrego excepcion
        ln_flag := null;
      
    end;
    --25012019
  
    --registro en el histórico
    begin
      pq_cr_factura_electronica.sp_cr_guardar_historico(pc_fecha => pd_pgfape);
    end;
  
    if ld_Fecha = pd_pgfape then
      ---DIARIO
      begin
        pq_cr_factura_electronica.sp_tra_validas(pd_pgfape => pd_pgfape);
      end;
    
      begin
        pq_cr_factura_electronica.sp_fa_trx_comision(pd_pgfape => pd_pgfape);
      end;
    
    else
      --mod@abr20181207
      --FECHA ANTERIOR
    
      begin
        pq_cr_factura_electronica.sp_tra_validas_HIS(pd_pgfape => pd_pgfape);
      end;
    
      begin
        pq_cr_factura_electronica.sp_tra_validas_IGV(pd_pgfape => pd_pgfape);
      end; --MOD@ABR 20190610
    
      if ln_flag = 1 then
        --25012019 se agrego validacion de flag si es =1 incluye comision
        --mod@abr20181207  
        begin
          pq_cr_factura_electronica.sp_fa_trx_comisionh(pd_pgfape => pd_pgfape);
        end;
      
      end if;
    
    end if;
  
    --generando notas de credito
    begin
      pq_cr_factura_electronica.sp_cr_nota_credito_com(pd_pgfape => pd_pgfape);
    end;
  
    if ln_flag = 1 then
      --25012019 se agrego validacion de flag si es =1 incluye comision
      begin
        pq_cr_factura_electronica.sp_cr_nota_cred_com4(pd_pgfape => pd_pgfape);
      end;
    end if;
    --Verificar fin de mes
    begin
      pq_cr_factura_electronica.sp_cr_verificar_fin_mes(pc_fecha => pd_pgfape);
    
    end;
  
    --/*2023.06.24
    begin
      pq_cr_factura_login.sp_cr_inserta_aqpa470d(pd_fecpro => pd_pgfape);
    end;
    --2023.06.24
  
      begin
        pq_cr_factura_electronica.sp_actualizar_fecha(pd_fecpro => pd_pgfape);
      exception when others then
         null;
      end;
    --- generando informacion para libro de ventas
    /* POR DEFINIR
    begin
      pq_cr_factura_electronica.sp_fa_libroventas(pd_pgfape => :pd_pgfape);
    end;*/
  
  end sp_transaccion_valida;
  --------------------------------
  --------------------------------
  procedure sp_cr_cta_mda(pc_AQPA465PGCOD    in number,
                          pc_AQPA465MOD      in number,
                          pc_AQPA465SUCOREND in number,
                          pc_AQPA465TRAN     in number,
                          pc_AQPA465REL      in number,
                          pc_AQPA465ORD      in number,
                          pd_AQPA465CON      in date,
                          pn_mda             out number,
                          pn_cta             out number) is
  
    ld_fecape date;
  
  BEGIN
  
    begin
      select f.pgfape into ld_fecape from fst017 f where f.pgcod = 1;
    exception
      when others then
        null;
    end;
  
    if pd_AQPA465CON = ld_fecape then
      -- DIARIO
    
      begin
        select a.moneda, a.ctnro
          into pn_mda, pn_cta
          from fsd016 a
         where a.pgcod = pc_AQPA465PGCOD
           and a.itmod = pc_AQPA465MOD
           and a.itsuc = pc_AQPA465SUCOREND
           and a.ittran = pc_AQPA465TRAN
           and a.itnrel = pc_AQPA465REL
           and a.itord = pc_AQPA465ORD;
      exception
        when others then
          null;
      end;
    
    else
      --HISTORICO
      begin
        select a.hmda, a.hcta
          into pn_mda, pn_cta
          from fsh016 a
         where a.pgcod = pc_AQPA465PGCOD
           and a.hcmod = pc_AQPA465MOD
           and a.hsucor = pc_AQPA465SUCOREND
           and a.htran = pc_AQPA465TRAN
           and a.hnrel = pc_AQPA465REL
           and a.hfcon = pd_AQPA465CON
           and a.hcord = pc_AQPA465ORD;
      exception
        when others then
          null;
      end;
    
      --mod@abr 20180705
      if pn_cta is null then
        begin
          select a.jaqz659moneda, a.jaqz659ctnro
            into pn_mda, pn_cta
            from jaqz659 a
           where a.jaqz659pgcod = pc_AQPA465PGCOD
             and a.jaqz659itmod = pc_AQPA465MOD
             and a.jaqz659itsuc = pc_AQPA465SUCOREND
             and a.jaqz659ittran = pc_AQPA465TRAN
             and a.jaqz659itnrel = pc_AQPA465REL
             and a.jaqz659fecpr = pd_AQPA465CON
             and a.jaqz659itord = pc_AQPA465ORD;
        exception
          when others then
            null;
        end;
      end if;
      --mod@abr 20180705
    
    end if;
  
  end sp_cr_cta_mda;
  --------------------------------
  function FN_FA_CUENTA(p_n_pgcod  number,
                        p_n_itsuc  number,
                        p_n_itmod  number,
                        p_n_ittran number,
                        p_n_itnrel number,
                        p_n_itord  number,
                        p_d_itfcon date) return number is
    p_n_cuenta number := 0;
  
    cursor guia is
      select *
        from fst198
       where tp1cod = p_n_pgcod
         and tp1cod1 = 11120
         and tp1corr1 = 2
         and tp1corr2 = 1
         and tp1nro1 = p_n_itmod
         and tp1nro2 = p_n_ittran
         and tp1nro3 = p_n_itord;
  
    v_modulo number;
    v_itdbha number;
    v_pgfape date;
  
  begin
  
    begin
      select tp1nro3
        into p_n_cuenta
        from fst198
       where tp1cod = p_n_pgcod
         and tp1cod1 = 11120
         and tp1corr1 = 2
         and tp1corr2 = 3
         and tp1nro1 = p_n_itmod
         and tp1nro2 = p_n_ittran;
    
      return(p_n_cuenta);
    exception
      when others then
        p_n_cuenta := 0;
    end;
  
    begin
      select pgfape into v_pgfape from fst017 where pgcod = p_n_pgcod;
    exception
      when others then
        null;
    end;
  
    If p_d_itfcon = v_pgfape then
    
      for i in guia loop
        begin
          select decode(ctnro, 0, 999999999, ctnro)
            into p_n_cuenta
            from fsd016
           where pgcod = p_n_pgcod
             and itsuc = p_n_itsuc
             and itmod = p_n_itmod
             and ittran = p_n_ittran
             and itnrel = p_n_itnrel
             and itord in (i.tp1imp1, i.tp1imp2, i.tp1imp3);
        exception
          when others then
            p_n_cuenta := 0;
        end;
      end loop;
    
      If p_n_cuenta = 0 then
        begin
          select modulo, itdbha
            into v_modulo, v_itdbha
            from fsd016
           where pgcod = p_n_pgcod
             and itsuc = p_n_itsuc
             and itmod = p_n_itmod
             and ittran = p_n_ittran
             and itnrel = p_n_itnrel
             and itord = p_n_itord;
        exception
          when others then
            v_modulo := 0;
        end;
      
        If v_modulo <> 0 then
          BEGIN
            select ctnro
              into p_n_cuenta
              from fsd016
             where pgcod = p_n_pgcod
               and itsuc = p_n_itsuc
               and itmod = p_n_itmod
               and ittran = p_n_ittran
               and itnrel = p_n_itnrel
               and itord <> p_n_itord
               and ctnro <> 0
               and itdbha = case
                     when modulo in (461, 465) then
                      v_itdbha
                     else
                      decode(v_itdbha, 1, 2, 1)
                   end
               and rownum = 1;
          exception
            when others then
              -- 2022.11.18 dcastro se agrego excepcion
              p_n_cuenta := null;
          end;
        
        End If;
      End if;
    Else
      for i in guia loop
        begin
          select decode(hcta, 0, 999999999, hcta)
            into p_n_cuenta
            from fsh016 f
           where f.pgcod = p_n_pgcod
             and f.hsucor = p_n_itsuc
             and f.hcmod = p_n_itmod
             and f.htran = p_n_ittran
             and f.hnrel = p_n_itnrel
             and f.hfcon = v_pgfape
             and f.hcord in (i.tp1imp1, i.tp1imp2, i.tp1imp3);
        exception
          when others then
            p_n_cuenta := 0;
        end;
      end loop;
    
      If p_n_cuenta = 0 then
        begin
          select hmodul, HCODMO
            into v_modulo, v_itdbha
            from fsh016 f
           where f.pgcod = p_n_pgcod
             and f.hsucor = p_n_itsuc
             and f.hcmod = p_n_itmod
             and f.htran = p_n_ittran
             and f.hnrel = p_n_itnrel
             and f.hfcon = v_pgfape
             and f.hcord = p_n_itord;
        exception
          when others then
            v_modulo := 0;
        end;
      
        If v_modulo <> 0 then
          begin
            select hcta
              into p_n_cuenta
              from fsh016 f
             where f.pgcod = p_n_pgcod
               and f.hsucor = p_n_itsuc
               and f.hcmod = p_n_itmod
               and f.htran = p_n_ittran
               and f.hnrel = p_n_itnrel
               and f.hcord = p_n_itord
               and f.hcta <> 0
               and f.hfcon = v_pgfape
               and f.hcodmo = case
                     when f.hmodul in (461, 465) then
                      v_itdbha
                     else
                      decode(v_itdbha, 1, 2, 1)
                   end
               and rownum = 1;
          exception
            when others then
              v_modulo := 0;
          end;
        
        End If;
      End if;
    End If;
  
    return(p_n_cuenta);
  
  end FN_FA_CUENTA;

  ------------------------------
  --------------------------------
  procedure SP_PA_CUENTA(p_n_pgcod  number,
                         p_n_itsuc  in number,
                         p_n_itmod  in number,
                         p_n_ittran in number,
                         p_n_itnrel in number,
                         p_n_itord  in number,
                         p_d_itfcon in date,
                         p_n_cuenta out number,
                         p_n_moneda out number) is
  
    cursor guia is
      select *
        from fst198
       where tp1cod = p_n_pgcod
         and tp1cod1 = 11120
         and tp1corr1 = 2
         and tp1corr2 = 1
         and tp1nro1 = p_n_itmod
         and tp1nro2 = p_n_ittran
         and tp1nro3 = p_n_itord;
  
    v_modulo number;
    v_itdbha number;
    v_pgfape date;
  
  begin
  
    begin
      select tp1nro3
        into p_n_cuenta
        from fst198
       where tp1cod = p_n_pgcod
         and tp1cod1 = 11120
         and tp1corr1 = 2
         and tp1corr2 = 3
         and tp1nro1 = p_n_itmod
         and tp1nro2 = p_n_ittran;
    
    exception
      when others then
        p_n_cuenta := 0;
    end;
  
    begin
      select pgfape into v_pgfape from fst017 where pgcod = p_n_pgcod;
    exception
      when others then
        null;
    end;
  
    If p_d_itfcon = v_pgfape then
    
      if p_n_cuenta <> 0 then
        --inicio validacion cuenta
        begin
          select moneda
            into p_n_moneda
            from fsd016
           where pgcod = p_n_pgcod
             and itsuc = p_n_itsuc
             and itmod = p_n_itmod
             and ittran = p_n_ittran
             and itnrel = p_n_itnrel
             and itord <> p_n_itord
             and itdbha = case
                   when modulo in (461, 462, 465) then
                    v_itdbha
                   else
                    decode(v_itdbha, 1, 2, 1)
                 end
             and rownum = 1;
        exception
          when others then
            p_n_moneda := 0;
        end;
      
      else
        ---
      
        for i in guia loop
          begin
            select decode(ctnro, 0, 999999999, ctnro), moneda
              into p_n_cuenta, p_n_moneda
              from fsd016
             where pgcod = p_n_pgcod
               and itsuc = p_n_itsuc
               and itmod = p_n_itmod
               and ittran = p_n_ittran
               and itnrel = p_n_itnrel
               and itord in (i.tp1imp1, i.tp1imp2, i.tp1imp3);
          exception
            when others then
              p_n_cuenta := 0;
          end;
        end loop;
      
        If p_n_cuenta = 0 then
          begin
            select modulo, itdbha, moneda
              into v_modulo, v_itdbha, p_n_moneda
              from fsd016
             where pgcod = p_n_pgcod
               and itsuc = p_n_itsuc
               and itmod = p_n_itmod
               and ittran = p_n_ittran
               and itnrel = p_n_itnrel
               and itord = p_n_itord;
          exception
            when others then
              v_modulo := 0;
          end;
        
          If v_modulo <> 0 then
            begin
              select ctnro, moneda
                into p_n_cuenta, p_n_moneda
                from fsd016
               where pgcod = p_n_pgcod
                 and itsuc = p_n_itsuc
                 and itmod = p_n_itmod
                 and ittran = p_n_ittran
                 and itnrel = p_n_itnrel
                 and itord <> p_n_itord
                 and ctnro <> 0
                 and itdbha = case
                       when modulo in (461, 465) then
                        v_itdbha
                       else
                        decode(v_itdbha, 1, 2, 1)
                     end
                 and rownum = 1;
            exception
              when others then
                p_n_cuenta := 0;
            end;
          End If;
        End if;
      
      end if; ---fin validacion cuenta   
    Else
    
      if p_n_cuenta <> 0 then
        --inicio validacion cuenta
        begin
          select hmda
            into p_n_moneda
            from fsh016 f
           where f.pgcod = p_n_pgcod
             and f.hsucor = p_n_itsuc
             and f.hcmod = p_n_itmod
             and f.htran = p_n_ittran
             and f.hnrel = p_n_itnrel
             and f.hcord = p_n_itord
             and f.hfcon = p_d_itfcon
             and f.hcodmo = case
                   when f.hmodul in (461, 162, 465) then
                    v_itdbha
                   else
                    decode(v_itdbha, 1, 2, 1)
                 end
             and rownum = 1;
        exception
          when others then
            p_n_moneda := 0;
        end;
      
      else
        ---  
      
        for i in guia loop
          begin
            select decode(hcta, 0, 999999999, hcta), hmda
              into p_n_cuenta, p_n_moneda
              from fsh016 f
             where f.pgcod = p_n_pgcod
               and f.hsucor = p_n_itsuc
               and f.hcmod = p_n_itmod
               and f.htran = p_n_ittran
               and f.hnrel = p_n_itnrel
               and f.hfcon = p_d_itfcon
               and hcord in (i.tp1imp1, i.tp1imp2, i.tp1imp3);
          exception
            when others then
              p_n_cuenta := 0;
          end;
        end loop;
      
        If p_n_cuenta = 0 then
          begin
            select hmodul, HCODMO, hmda
              into v_modulo, v_itdbha, p_n_moneda
              from fsh016 f
             where f.pgcod = p_n_pgcod
               and f.hsucor = p_n_itsuc
               and f.hcmod = p_n_itmod
               and f.htran = p_n_ittran
               and f.hnrel = p_n_itnrel
               and f.hfcon = p_d_itfcon
               and f.hcord = p_n_itord;
          exception
            when others then
              v_modulo := 0;
          end;
        
          If v_modulo <> 0 then
            begin
              select hcta, hmda
                into p_n_cuenta, p_n_moneda
                from fsh016 f
               where f.pgcod = p_n_pgcod
                 and f.hsucor = p_n_itsuc
                 and f.hcmod = p_n_itmod
                 and f.htran = p_n_ittran
                 and f.hnrel = p_n_itnrel
                 and f.hcord = p_n_itord
                 and f.hcta <> 0
                 and f.hfcon = p_d_itfcon
                 and f.hcodmo = case
                       when f.hmodul in (461, 465) then
                        v_itdbha
                       else
                        decode(v_itdbha, 1, 2, 1)
                     end
                 and rownum = 1;
            exception
              when others then
                p_n_cuenta := 0;
            end;
          End If;
        End if;
      
      end if; --- fin validacion cuenta  
    End If;
  
  end SP_PA_CUENTA;

  ------------------------------

  ------------------------------

  procedure sp_fa_trx_COMISION(pd_pgfape in date) is
    -----20180720 DCASTRO  se agrego condicion de optimizacion  
  
    cursor transacciones is
      select /*+all_rows */ -- 2023.07.18 dcastro se agrego +all_rows
      distinct ---transacciones que tienen comision
               f.pgcod,
               f.hcmod,
               f.hsucor,
               f.htran,
               f.hnrel,
               f.hfcon,
               f.hcord /*,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 f.txoren,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 f.txtord,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 g.st171cpcod,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 g.se170vnro,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 g.se170vchr*/
        from fsx016 f, fse170 g, fst198 h
       where f.pgcod = 1
         and g.sd170doemp = 1 --20180720 se agrego condicion por optimizacion DCASTRO
         and f.pgcod = g.sd170doemp --20180720 se agrego condicion por optimizacion DCASTRO
         and g.sd170doid = f.txtrub
         and f.txoren = g.st171cpcod + 100
         and f.hfcon = pd_pgfape ---fecha del dia???? --sysdate
         and f.txcod = 200
         and h.tp1cod = f.pgcod ---1
         and h.tp1cod1 = 11120
         and h.tp1corr1 = 3
         and h.tp1corr2 = 1
         and h.tp1nro1 = f.hcmod
         and h.tp1nro2 = f.htran
         and (f.hcmod, f.htran) not in
             (select k.tp1nro1, k.tp1nro2
                from fst198 k
               where k.tp1cod = 1 -- 2023.07.18 dcastro se agrego tp1cod
                 and k.tp1cod1 = 11120
                 and k.tp1corr1 = 2
                 and k.tp1corr2 = 4)
      ---comentar transacciones, debe mapear todo          
      --and f.hcmod = 30--50--493--18--18--491--30--492--18--30--10
      --and f.htran = 978--456--1--125--25--20--978--450--977--222
      --and f.hnrel in ( 2098)--13
      -----
      -- a.itsuc=18 and a.itmod = 18 and a.ittran = 450 and itnrel in (4);
       order by f.pgcod, f.hcmod, f.hsucor, f.htran, f.hnrel, f.hfcon;
  
    cursor comision is
      select f.st171cpcod codigo
        from fst171 f
       where f.st171cpcod in (50, 51, 52, 53); --comision                
  
  begin
  
    --OJO-verificar si esta en guia de NC generar NC   
  
    for i in transacciones loop
    
      for x in comision loop
      
        begin
          pq_cr_factura_electronica.sp_fa_comision(pn_pgcod    => i.pgcod,
                                                   pn_hcmod    => i.hcmod,
                                                   pn_hsucor   => i.hsucor,
                                                   pn_htran    => i.htran,
                                                   pn_hnrel    => i.hnrel,
                                                   pn_hfcon    => i.hfcon,
                                                   pn_concepto => x.codigo);
        end;
      
      end loop;
    
    end loop;
  
  end sp_fa_trx_COMISION;
  ------------------------------

  procedure sp_fa_COMISION(pn_pgcod    in number,
                           pn_hcmod    in number,
                           pn_hsucor   in number,
                           pn_htran    in number,
                           pn_hnrel    in number,
                           pn_hfcon    in date,
                           pn_concepto in number) is
    -----20180720 DCASTRO  se agrego condicion de optimizacion  
  
    --pn_pgcod number;
    lc_serie char(4);
    lc_corre char(8);
    --Flag char(1):='N'; --md@abr 20180824
    ln_relant  number(4) := 0;
    lc_hipo    char(2);
    ln_emp     number(3);
    ln_mod     number(3);
    ln_suc     number(3);
    ln_mda     number(4);
    ln_pap     number(4);
    ln_cta     number(9);
    ln_ope     number(9);
    ln_sbo     number(3);
    ln_top     number(3);
    lc_flg     char(1) := 'N'; --controla que sea hipotecario
    pn_ordinal number(2);
    lc_flg465  char(1) := 'N'; --controla que no exista registro AQPA465
  
    ln_modulo number(3) := 0;
    ln_tran   number(3) := 0;
    ln_sucur  number(3) := 0;
  
    pn_pais   number(3);
    pn_petdoc number(2);
    pn_pendoc char(12);
    ln_rubro  number;
    lc_tipper char(1);
  
    cursor transacciones is
    
      select /*h.st171cpcod, */
       h.sr171trord ordinal, a.*
        from (select f.txtrub,
                     f.pgcod,
                     f.hcmod,
                     f.hsucor,
                     f.htran,
                     f.hnrel,
                     f.hfcon,
                     f.hcord,
                     f.txoren,
                     f.txtord,
                     g.st171cpcod,
                     g.se170vnro,
                     g.se170vchr
                from fsx016 f, fse170 g
               where f.pgcod = 1
                 and g.sd170doemp = 1 --20180720 se agrego condicion por optimizacion DCASTRO
                 and f.pgcod = g.sd170doemp --20180720 se agrego condicion por optimizacion DCASTRO
                 and g.sd170doid = f.txtrub
                 and f.txoren = g.st171cpcod + 100
                 and f.hfcon = pn_hfcon ---fecha del dia???? --sysdate
                 and f.txcod = 200) a
        left join fsr171 h
          on h.st171cpcod = a.st171cpcod
         and h.sr171trmod = a.hcmod
         and h.sr171trnro = a.htran
       where /* a.hcmod = 50
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       and a.htran = 599*/
       a.pgcod = pn_pgcod
       and a.hcmod = pn_hcmod
       and a.hsucor = pn_hsucor
       and a.htran = pn_htran
       and a.hnrel = pn_hnrel
       and a.hfcon = pn_hfcon
       order by a.pgcod, a.hcmod, a.hsucor, a.htran, a.hnrel, a.hfcon
      --and f.pgcod=1 and f.hsucor=11 and f.hcmod=30 and f.HTRAN in(100,150)
      -- and f.hnrel in(238,022,240,237,236,241,239,023,242,226,245,234,213)
      ;
  
    ln_ordinal number;
  
    ln_con1 number;
    ln_con2 number;
    ln_con3 number;
  
    lc_tipotrx varchar2(10); --2018.10.16
  
  begin
  
    begin
    
      --mod@abr 20180824 
      /*begin
        SELECT 'S'
        into Flag
        FROM aqpa463 a WHERE a.aqpa463hfcon = pd_pgfape and rownum=1;
        exception when no_data_found then
          Flag:='N';
          
      end;  */ --mod@abr 20180824 
    
      lc_tipotrx := 'MOV'; --por defecto se inicializa en MOV -- 2018.10.16    
    
      for p in transacciones loop
      
        --Verifica que no exista en cabecera AQPA465 
        Begin
          select 'S'
            into lc_flg465
            from aqpa465 a
           where a.aqpa465pgcod = p.pgcod
             and a.aqpa465mod = p.hcmod
             and a.aqpa465sucor = p.hsucor
             and a.aqpa465tran = p.htran
             and a.aqpa465rel = p.hnrel
             and a.aqpa465con = p.hfcon
             and a.aqpa465ord = pn_concepto
             and rownum = 1;
        exception
          when others then
            lc_flg465 := 'N';
        end;
      
        --obtener la cuenta de acuerdo a concepto
        begin
          select h.sr171trord ordinal
            into ln_ordinal
            from (select f.txtrub,
                         f.pgcod,
                         f.hcmod,
                         f.hsucor,
                         f.htran,
                         f.hnrel,
                         f.hfcon,
                         f.hcord,
                         f.txoren,
                         f.txtord,
                         g.st171cpcod,
                         g.se170vnro,
                         g.se170vchr
                    from fsx016 f, fse170 g
                   where f.pgcod = 1
                     and g.sd170doemp = 1 --20180720 se agrego condicion por optimizacion DCASTRO
                     and f.pgcod = g.sd170doemp --20180720 se agrego condicion por optimizacion DCASTRO
                     and g.sd170doid = f.txtrub
                     and f.txoren = g.st171cpcod + 100
                     and f.hfcon = p.hfcon ---fecha del dia???? --sysdate
                     and f.txcod = 200) a
            left join fsr171 h
              on h.st171cpcod = a.st171cpcod
             and h.sr171trmod = a.hcmod
             and h.sr171trnro = a.htran
           where a.hcmod = p.hcmod
             and a.htran = p.htran
             and a.hnrel = p.hnrel
             and a.hfcon = p.hfcon
             and a.st171cpcod = pn_concepto
           order by a.pgcod, a.hcmod, a.hsucor, a.htran, a.hnrel, a.hfcon;
        
        exception
          when others then
            ln_ordinal := null;
        end;
      
        ----OJO
        ---OBTENER LA MONEDA DELA TRANSACCION 
        ---
        ---
        if ln_ordinal is not null then
          -- si no existe ordinal no debe generar movimiento
        
          if lc_flg465 = 'N' then
            --
          
            begin
              --select 'S' into lc_concepto
              select tp1nro2, tp1nro3, tp1imp1
                into ln_con1, ln_con2, ln_con3
                from fst198
               where tp1cod = 1
                 and tp1cod1 = 11120
                 and tp1corr1 = 3
                 and tp1corr2 = 2 --excluir comision 
                 and tp1nro1 = pn_concepto --valor a evaluar
              /* and tp1nro2 <> p.st171cpcod
              and tp1nro3 <> p.st171cpcod 
              and tp1imp1 <> p.st171cpcod*/
              ;
            exception
              when others then
                ln_con1 := 0;
                ln_con2 := 0;
                ln_con3 := 0;
            end;
          
            --if lc_concepto = 'S' then  --inicio validacion concepto
            if p.st171cpcod = ln_con1 or p.st171cpcod = ln_con2 or
               p.st171cpcod = ln_con3 then
              null;
            else
            
              --determinar tipo de documento a generar boleta/factura o Nota de Credito 2018.10.16
              begin
                select 'NC'
                  into lc_tipotrx
                  from fst198 h
                 where h.tp1cod1 = 11120
                   and h.tp1corr1 = 2
                   and h.tp1corr2 = 4 --transacciones que deben ser consideradas como nota de credito
                   and h.tp1nro1 = p.hcmod
                   and h.tp1nro2 = p.htran;
              exception
                when others then
                  lc_tipotrx := 'MOV';
              end;
              -- 2018.10.16
            
              /* --obtener cuenta moneda hora fecha
               Begin
              
                  select a.sr171trord
                    into pn_ordinal
                      from fsr171 a
                     where a.st171cpcod = 15
                       and a.sr171tremp = p.pgcod--1
                       and a.sr171trmod = p.hcmod--30
                       and a.sr171trnro = p.htran;--100;   
                 exception
                       when others then null;
                 end;
              */
            
              begin
                pq_cr_factura_electronica.sp_cr_pk_credito(pc_aqpa465pgcod    => p.pgcod,
                                                           pc_aqpa465mod      => p.hcmod,
                                                           pc_aqpa465sucorend => p.hsucor,
                                                           pc_aqpa465tran     => p.htran,
                                                           pc_aqpa465rel      => p.hnrel,
                                                           pc_aqpa465ord      => pn_ordinal,
                                                           pd_aqpa465con      => p.hfcon,
                                                           pn_cod             => ln_emp,
                                                           pn_mod             => ln_mod,
                                                           pn_suc             => ln_suc,
                                                           pn_mda             => ln_mda,
                                                           pn_pap             => ln_pap,
                                                           pn_cta             => ln_cta,
                                                           pn_ope             => ln_ope,
                                                           pn_sbo             => ln_sbo,
                                                           pn_top             => ln_top,
                                                           pc_flag            => lc_flg,
                                                           pn_rubro           => ln_rubro);
              end;
            
              begin
                pq_cr_factura_electronica.sp_pa_cuenta(p_n_pgcod  => p.pgcod,
                                                       p_n_itsuc  => p.hsucor,
                                                       p_n_itmod  => p.hcmod,
                                                       p_n_ittran => p.htran,
                                                       p_n_itnrel => p.hnrel,
                                                       p_n_itord  => ln_ordinal, --p.ordinal,
                                                       p_d_itfcon => p.hfcon,
                                                       p_n_cuenta => ln_cta,
                                                       p_n_moneda => ln_mda);
              
              end;
            
              if lc_flg = 'S' then
                --pn_pgcod:= p.pgcod;
                if ln_relant <> p.hnrel or p.hcmod <> ln_modulo or
                   p.htran <> ln_tran or p.hsucor <> ln_sucur then
                
                  if ln_cta = 999999999 or ln_cta = 0 --se agregó condición 24/12/2018
                   then
                    --inicio valida cuenta cliente
                    ln_cta    := '00000000';
                    lc_tipper := 'N'; -- Debe generar boleta, por lo que se considera persona Natural
                  
                  else
                  
                    begin
                      ---se obtiene NDI/ TIPO de doc                  
                      select a.pepais, a.petdoc, a.pendoc
                        into pn_pais, pn_petdoc, pn_pendoc
                        from fsr008 a
                       where a.ctnro = ln_cta ---
                         and a.cttfir = 'T';
                    exception
                      when others then
                        null;
                    end;
                  
                    begin
                      pq_cr_facturacion.sp_cr_tipo_cliente(pn_pais   => pn_pais,
                                                           pn_tipdoc => pn_petdoc,
                                                           pc_numdoc => pn_pendoc,
                                                           pc_tipper => lc_tipper);
                    end;
                  
                  end if; --fin valida cuenta cliente
                
                  begin
                    pq_cr_facturacion.sp_cr_factura(pn_rubro       => ln_rubro,
                                                    pc_tipcli      => lc_tipper,
                                                    pc_tipo        => lc_tipotrx,
                                                    pc_serie       => lc_serie,
                                                    pc_correlativo => lc_corre);
                  end;
                
                end if;
              
                ln_relant := p.hnrel;
                ln_modulo := p.hcmod;
                ln_tran   := p.htran;
                ln_sucur  := p.hsucor;
              
                --if Flag='N' then --mod@abr 20180824
                if lc_tipotrx = 'MOV' then
                  --inicio insercion
                
                  begin
                    insert into aqpa463
                      (aqpa463txtrub,
                       aqpa463pgcod,
                       aqpa463hcmod,
                       aqpa463hsucor,
                       aqpa463htran,
                       aqpa463hnrel,
                       aqpa463hfcon,
                       aqpa463hcord,
                       aqpa463txoren,
                       aqpa463txtord,
                       aqpa463hcpcod,
                       aqpa463hvnro,
                       aqpa463hvchr,
                       aqpa463serie,
                       aqpa463corre,
                       aqpa463emp,
                       aqpa463mod,
                       aqpa463suc,
                       aqpa463mda,
                       aqpa463pap,
                       aqpa463cta,
                       aqpa463ope,
                       aqpa463sbo,
                       aqpa463top,
                       aqpa463hip
                       
                       )
                    values
                      (p.txtrub,
                       p.pgcod,
                       p.hcmod,
                       p.hsucor,
                       p.htran,
                       p.hnrel,
                       p.hfcon,
                       p.hcord,
                       p.txoren,
                       p.txtord,
                       p.hcord,
                       p.se170vnro,
                       p.se170vchr,
                       lc_serie,
                       lc_corre,
                       ln_emp,
                       ln_mod,
                       ln_suc,
                       ln_mda,
                       ln_pap,
                       ln_cta,
                       ln_ope,
                       ln_sbo,
                       ln_top,
                       lc_hipo);
                    commit;
                  
                  end;
                
                end if;
                --end if; --mod@abr 20180824
              end if;
            
            end if; --fin validacion concepto               
          
          end if;
        end if; -- fin validacion ordinal existente
      
      end loop;
    
      -- se comento 09/10/2018 
    
      if ln_ordinal is not null then
      
        if lc_tipotrx = 'MOV' then
        
          begin
            pq_cr_factura_electronica.sp_cr_Detalle_Factura_CO(pn_hfcon,
                                                               lc_serie,
                                                               lc_corre,
                                                               pn_concepto);
          end;
        
          ----insert cabecera de factura aqpa465 
          --     AGREGAR CONCEPTO A PROCEDIMIENTO
          begin
          
            pq_cr_factura_electronica.sp_cr_cabecera_trx(pd_pgfape      => pn_hfcon,
                                                         pc_serie       => lc_serie,
                                                         pn_correlativo => lc_corre,
                                                         pn_concepto    => pn_concepto);
          end;
        
        end if;
      
      end if; -- fin validacion ordinal existente
    
    end;
  
  end sp_fa_COMISION;
  ------------------------------
  procedure sp_cr_Detalle_Factura_CO(pd_pgfape      in date,
                                     pc_serie       in char,
                                     pn_correlativo in number,
                                     pn_concepto    in number) is
  
    pc_fecha varchar2(80);
  
    cursor aqpa463 is
    
      select *
        from aqpa463 b
       where b.aqpa463hfcon = pd_pgfape --mod@abr 20180707
         and b.aqpa463serie = pc_serie --comentar despues
         and b.aqpa463corre = pn_correlativo
       order by b.aqpa463hnrel asc, b.aqpa463txoren asc;
  
    lc_coderr char(100);
    lc_msgerr char(1000);
  
    ln_cta           number(9);
    lc_hor           char(8);
    ld_fec           date;
    lc_flg           char(1) := 'N';
    pn_pais          number;
    pn_monto_total_1 number(12, 2) := 0;
    result           character(100);
    pd_pgfape2       date;
    ln_mda           number(4);
    ln_nroitem       number(12) := 0;
    ln_cant          number(12, 10);
    lc_codpla        char(3);
    ln_docemp        number(2);
    pv_tdoc          char(25);
    lc_sistemi       char(6);
  
    lv_destiptrb varchar2(6);
    ln_MONTO     number;
  
    lc_contrato varchar2(50);
    lv_tipemp   varchar2(1);
    lv_ruc      varchar2(11);
    lv_rzn      varchar2(1500);
    lv_ubg      varchar2(6);
    lv_NCOM     varchar2(1500);
    lv_CALLE    varchar2(200);
    --lv_URBA        varchar2(25);
    lv_DEPA  varchar2(100);
    lv_PROV  varchar2(30);
    lv_DIST  varchar2(30);
    lv_TELF  varchar2(20);
    lv_WEB   varchar2(100);
    lv_CPAIS varchar2(2);
    --lv_CESUN       varchar2(4);
    lv_codtipo      varchar2(2);
    lv_tipomda      varchar2(3);
    lv_correo       varchar2(100);
    lv_glosa        varchar2(30);
    lv_COMA         varchar2(20);
    lv_TPLA         varchar2(3);
    lv_tipoope      varchar2(4);
    lv_TPLCO        varchar2(3);
    lv_CLOG         varchar2(3);
    lv_codtdoc      varchar2(1);
    lc_pendoc       char(12);
    lv_pendoc       varchar2(15);
    lv_penom        varchar2(1500);
    lv_hora         varchar2(8);
    ln_SIMC         number(12, 2) := 0;
    ln_SVITM        number(12, 2) := 0;
    ln_SPVI         number(12, 2) := 0;
    lv_TXML         varchar2(3);
    lv_ubgCli       varchar2(6);
    lv_sngc13dir    varchar2(500);
    lv_urb          varchar2(100);
    lv_fst071dsc1   varchar2(500);
    lv_locnom1      varchar2(500);
    lv_depnom1      varchar2(500);
    lv_cpai         varchar2(2);
    lv_PNETU        varchar2(3); ------------
    lc_oneroso      varchar2(1);
    ln_mtoconce     number; --(12,10):= 0;
    ln_mtoconce_ant number; --(12,10):= 0;
    ln_VVUIG        number; --(12):= 0;
    lv_desconce     varchar2(500);
    lv_infpredio    varchar2(500);
    ln_PRVIT        number(15, 2) := 0;
    lv_MEDEM        varchar2(50);
    lv_CSUNA        varchar2(8);
    lv_CPGS1        varchar2(14);
    ln_ITITM        number(12, 2) := 0; ---2018.10.19 
    ln_IMPTB        number(12, 2) := 0;
    ln_IMPEX        number(12, 2) := 0;
    lv_afecigv      varchar2(2);
    lv_SISC         varchar2(2);
    lv_idtrbsunat   varchar2(4);
    lv_nomtrbsunat  varchar2(6);
    lv_codun        varchar2(3);
    ln_MBIM         number(12, 2) := 0;
    ln_TAIMP        number(12, 2) := 0; --2018.10.19
    ln_CDLEY        number(4) := 0;
    lv_TELEY        varchar2(200);
    lv_TEXT1        varchar2(1000);
    lv_TEXT2        varchar2(1000);
    lv_TRECV        varchar2(1000);
    lv_TEMPL        varchar2(3);
    lv_SUBJE        varchar2(100);
    lv_VPCVA        varchar2(15);
    lv_NEXP         varchar2(10);
    lv_CIND         varchar2(1);
    lv_partida      varchar2(50);
    lv_NCONT        varchar2(50);
    lv_fecoto       varchar2(10);
    ld_fecoto       date;
    lv_cdisn        varchar2(6);
    lv_direccionH   varchar2(100);
    lv_urbaH        varchar2(50);
    lv_dptoH        varchar2(50);
    lv_provH        varchar2(50);
    lv_distH        varchar2(500);
    ln_MTOTAL       number(12, 2) := 0;
    ln_BAIMP        number(12, 2) := 0;
    ln_MTIMP        number(12, 2) := 0;
    ln_PCIMA        number(12, 2) := 0;
    ln_BSIMP        number(12, 2) := 0;
    ln_VAIMP        number(12, 2) := 0;
    ln_MTINF        number(12, 2) := 0;
    ln_MTGRT        number(12, 2) := 0;
    ln_BSIMPS       number(12, 2) := 0;
    ln_MTOTI        number(12, 2) := 0;
    ln_petdoc       number(2);
    lv_CTPR         varchar(2);
    lv_rzn1         varchar2(30);
    lv_rzn2         varchar2(30);
    lc_codsunat     varchar2(4);
  
    lc_nomcaja char(70);
    lc_nom1    char(30);
    lc_nom2    char(30);
  
    ln_item number(12);
  
    ln_mtoDifer number(17, 2);
    ln_mtoRedon number(17, 2);
  
    ld_fecSis date; --mod@abr 20180709
  
    lc_existe char(1) := 'N'; --mod@abr 20180824
  
    lv_sngc13dirFin varchar2(500); --mod@abr 20180905
  
    ln_guiaCP number; --2018.10.10
    lv_desmda varchar2(30); --2018.10.18
  
    lv_codtdocC varchar2(1); --05/04/2023 dcastro 
    lc_indGratuita char(1); -- 2023.10.10 dcastro indicador transferencia gratuita
    lc_NotaDebito char(1); -- 2023.10.10 dcastro indicador nota debito
    lv_doc_ori  char(2);   -- 2023.10.10 dcastro indicador nota debito
    
    /*
    pc_AQPA465SERIE  aqpa460.aqpa460seri%type;
    pc_AQPA465CORR  aqpa460.aqpa460num%type;
    pc_AQPA465PGCOD aqpa460.
    pc_AQPA465MOD   ,
    pc_AQPA465SUCOREND
    pc_AQPA465TRAN    
    pc_AQPA465REL    ,
    pc_AQPA465CON,
    */
  begin
    begin
    
      for p in aqpa463 loop
      
        --mod@abr 20180824
        lc_existe := 'N';
        Begin
          select 'S'
            into lc_existe
            from aqpa460 a
           where a.aqpa460seri = p.aqpa463serie
             and a.aqpa460num = p.aqpa463corre
             and a.aqpa460ore = P.AQPA463TXOREN
             and rownum = 1;
        exception
          when others then
            lc_existe := 'N';
        end;
        --mod@abr 20180824
        if lc_existe = 'N' then
          Pq_Cr_Factura_Electronica.sp_cr_cobroEfectivo(p.aqpa463pgcod,
                                                        p.aqpa463hcmod,
                                                        p.aqpa463hsucor,
                                                        p.aqpa463htran,
                                                        p.aqpa463hnrel,
                                                        p.aqpa463hfcon,
                                                        p.aqpa463serie,
                                                        p.aqpa463corre,
                                                        pn_monto_total_1);
        
          --validar concepto 
          begin
            select 'S'
              into lc_flg
              from fst198 a
             where a.tp1cod = 1
               and a.tp1cod1 = 11120
               and a.tp1corr1 = 1
               and a.tp1corr2 = 3
               and a.tp1corr3 >= 1
               and a.tp1nro1 = p.aqpa463txoren - 100;
          exception
            when others then
              lc_flg := 'N';
          end;
        
          --obtener cuenta moneda hora fecha
          ln_cta := p.aqpa463cta;
          ln_mda := p.aqpa463mda;
        
          begin
            select a.ithora, a.itfcon
              into lc_hor, ld_fec
              from fsd015 a
             where a.pgcod = p.aqpa463pgcod
               and a.itmod = p.aqpa463hcmod
               and a.itsuc = p.aqpa463hsucor
               and a.ittran = p.aqpa463htran
               and a.itnrel = p.aqpa463hnrel;
          exception
            when others then
              null;
          end;
        
          /*2018.10.12
                 
          begin
          
             result := pq_cr_factura_electronica.dintex(pn_monto_total_1);
          end;
          */
        
          ----------Obtener codigo de sunat
          begin
            select lpad(a.tp1nro2, 4, '0')
              into lc_codsunat
              from fst198 a
             where a.tp1cod = 1
               and a.tp1cod1 = 11120
               and a.tp1corr1 = 1
               and a.tp1corr2 = 500
               and a.tp1nro1 = p.aqpa463hsucor;
          exception
            when others then
              null;
          end;
        
          begin
            -- Call the procedure
            pq_cr_factura_electronica.sp_fecha_sys(pc_fecha); --dni
          end;
        
        if lc_flg = 'N' then
            --inserte conceptos de deuda como fila
          
            pq_cr_factura_electronica.sp_cr_Dif_Red(pc_AQPA465PGCOD    => p.aqpa463pgcod,
                                                    pc_AQPA465MOD      => p.aqpa463hcmod,
                                                    pc_AQPA465SUCOREND => p.aqpa463hsucor,
                                                    pc_AQPA465TRAN     => p.aqpa463htran,
                                                    pc_AQPA465REL      => p.aqpa463hnrel,
                                                    pd_AQPA465CON      => p.aqpa463hfcon,
                                                    pn_dif             => ln_mtoDifer,
                                                    pn_red             => ln_mtoRedon);
          
            ln_mtoconce_ant := to_number(trim(p.aqpa463txtord),
                                         '99999999999999999.99'); --20180622
          
            if p.aqpa463txoren - 100 = 18 then
              ln_mtoconce := to_number(ln_mtoconce_ant) -
                             nvl(ln_mtoDifer, 0) - nvl(ln_mtoRedon, 0);
            else
              ln_mtoconce := to_number(ln_mtoconce_ant); ---verficar 222 
            end if;
          
            if ln_mtoconce <> 0 then
            
              --datos persona
              begin
              
                pq_cr_factura_electronica.sp_num_documento(ln_cta,
                                                           lc_pendoc,
                                                           lv_penom,
                                                           pv_tdoc,
                                                           pn_pais,
                                                           ln_petdoc,
                                                           pd_pgfape2);
              end;
            
              --datos direccion cliente
              begin
                -- Call the procedure
                pq_cr_factura_electronica.sp_dir_cliente(lc_pendoc,
                                                         ln_petdoc,
                                                         pn_pais,
                                                         lv_sngc13dir,
                                                         lv_fst071dsc1,
                                                         lv_locnom1,
                                                         lv_depnom1,
                                                         lv_ubgCli); ---dni  pn_pendoc
              end;
            
              --Codigo del Tipo de Comprobante
            
              --2018.10.10
              if substr(p.aqpa463serie, 1, 1) = 'F' then
                ln_guiaCP := 1;
              elsif substr(p.aqpa463serie, 1, 1) = 'B' then
                ln_guiaCP := 3;
              else
                ln_guiaCP := null;
              end if;
              --2018.10.10    
            
              begin
                select '0' || to_char(a.tp1nro1)
                  into lv_codtipo
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 7
                   and a.tp1corr3 = ln_guiaCP; --2018.10.10 se modifico codigo de guia para tipo comprobante
              exception
                when others then
                  null;
              end;
            
              --Codigo tipo moneda
              begin
                select trim(a.tp1desc)
                  into lv_tipomda
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 8
                   and a.tp1corr3 >= 1
                   and a.tp1nro1 = ln_mda;
              exception
                when others then
                  null;
              end;
            
              /*              --Codigo tipo documento cliente
                            begin
                              select to_char(a.tp1nro1)
                                into lv_codtdoc
                                from fst198 a
                               where a.tp1cod = 1
                                 and a.tp1cod1 = 11120
                                 and a.tp1corr1 = 1
                                 and a.tp1corr2 = 4
                                 and a.tp1nro2 = ln_petdoc;
                            exception
                              when others then
                                null;
                            end;
              */
              --Codigo tipo documento cliente
              begin
                select to_char(a.tp1nro1), substr(trim(TP1DESC), -1, 1)
                  into lv_codtdoc, lv_codtdocC
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 4
                   and a.tp1nro2 = ln_petdoc;
              exception
                when others then
                  null;
              end;
            
              --05/04/2023 dcastro se agrego nuevo tipo documento PTP
              if lv_codtdoc = 3 then
                lv_codtdoc := lv_codtdocC;
              end if;
              --05/04/2023 dcastro se agrego nuevo tipo documento PTP
            
              --Correo del cliente
              lv_correo := null;
              begin
                select substr(a.pextxt, 1, INSTR(a.pextxt, '\', 1) - 1)
                  into lv_correo
                  from fsx001 a
                 where a.pepais = pn_pais
                   and a.petdoc = ln_petdoc
                   and a.pendoc = lc_pendoc
                   and a.txcod = 0
                   and rownum = 1 --- 2021/11/11 dcastro se agrego condicion
                 order by a.pexren desc;
              exception
                when others then
                  null;
              end;
            
              --nro item
              ln_item := 0;
              begin
                select max(a.aqpa460item)
                  into ln_item
                  from aqpa460 a
                 where a.aqpa460seri = p.aqpa463serie
                   and a.aqpa460num = p.aqpa463corre;
              exception
                when too_many_rows then
                  begin
                    select max(a.aqpa460item)
                      into ln_item
                      from aqpa460 a
                     where a.aqpa460seri = p.aqpa463serie
                       and a.aqpa460num =  p.aqpa463corre
                       and rownum = 1;
                  exception
                    when others then
                      null;
                  end;
                when no_data_found then
                  ln_item := 0;
                when others then
                  null;
              end;
              ln_nroitem := nvl(ln_item, 0) + 1;
            
              --monto conceptos
              --  ln_mtoconce := to_number(replace(trim(p.aqpa463txtord),'.',','));
            
              --       ln_mtoconce_ant:= round(trim(p.aqpa463txtord),2);
            
              --descripcion conceptos
              lv_desconce := trim(p.aqpa463hvchr);
              
              ---2023.09.20 dcastro campaña ahorraton
              lc_indGratuita := 'N'; 
              begin
                  select 'S' --si existe es transferencia gratuita
                  into lc_indGratuita
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120-- for update
                   and a.tp1corr1 = 41
                   and a.tp1corr2 > 0
                   and a.tp1nro1 = p.aqpa463hcmod
                   and a.tp1nro2 = p.aqpa463htran;
              exception when others then
                    lc_indGratuita := 'N'; 
              end;
              if lc_indGratuita = 'S' then ---p.aqpa463hcmod = 98 and p.aqpa463htran in ( 779) then ---
                begin
                    pq_cr_factura_electronica.sp_datos_campania(pd_fecha => p.aqpa463hfcon,
                                                                             pn_cuenta =>  p.aqpa463cta,
                                                                             pc_serie =>   p.aqpa463serie,
                                                                             pn_numero =>  p.aqpa463corre,
                                                                             pn_emp =>  p.aqpa463pgcod,
                                                                             pn_suc =>  p.aqpa463hsucor,
                                                                             pn_mod =>  p.aqpa463hcmod, 
                                                                             pn_tra =>  p.aqpa463htran,
                                                                             pn_rel =>  p.aqpa463hnrel,
                                                                             pc_datos => lv_desconce);
                end;
              end if;

              ---nota debito
              lc_NotaDebito := 'N'; 
              begin
                  select 'S' --si existe es transferencia gratuita
                  into lc_NotaDebito
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120-- for update
                   and a.tp1corr1 = 42
                   and a.tp1corr2 = 1
                   and a.tp1nro1 = p.aqpa463hcmod
                   and a.tp1nro2 = p.aqpa463htran;
              exception when others then
                    lc_NotaDebito := 'N'; 
              end;
              ---2023.09.20
            
              --Codigo de plantilla
              lc_codpla := 'EST';
            
              --- Sistema de Emicion 
              lc_sistemi := 'BANTOT';
            
              --Codigo tipo doc empresa
              begin
                select a.tp1nro1
                  into ln_docemp
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 4;
              exception
                when others then
                  null;
              end;
            
              begin
                select to_char(a.tp1nro1)
                  into lv_tipemp
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 4
                   and a.tp1corr3 >= 1
                   and a.tp1nro2 = ln_docemp;
              
              exception
                when others then
                  null;
              end;
              --ruc caja
              begin
                select trim(a.tp1desc)
                  into lv_ruc
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 1;
              exception
                when others then
                  null;
              end;
            
              --NOMBRE COMERCIAL caja
              begin
                select a.tp1desc
                  into lv_NCOM
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 5;
              exception
                when others then
                  null;
              end;
            
              --Ubigeo caja
              begin
                select trim(a.tp1desc)
                  into lv_ubg
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 6;
              exception
                when others then
                  null;
              end;
              ---------------------------------------campos parte 2
              ----------hora de transacion 
              begin
                select trim(a.aqpa463txtord)
                  into lv_hora
                  from aqpa463 a
                 where a.aqpa463pgcod = p.aqpa463pgcod
                   and a.aqpa463hcmod = p.aqpa463hcmod
                   and a.aqpa463hsucor = p.aqpa463hsucor
                   and a.aqpa463htran = p.aqpa463htran
                   and a.aqpa463hnrel = p.aqpa463hnrel
                   and a.aqpa463hfcon = p.aqpa463hfcon
                   and a.aqpa463serie = p.aqpa463serie
                   and a.aqpa463corre = p.aqpa463corre
                   and a.aqpa463txtord like '%:%';
              exception
                when others then
                  null;
              end;
            
              --mod@abr 20180907
              begin
                select pgfape into ld_fecSis from fst017 where pgcod = 1;
              exception
                when others then
                  null;
              end;
              if lv_hora is null then
              
                if ld_fecSis = p.aqpa463hfcon then
                
                  begin
                    select a.ithora
                      into lv_hora
                      from fsd015 a
                     where a.pgcod = p.aqpa463pgcod
                       and a.itsuc = p.aqpa463hsucor
                       and a.itmod = p.aqpa463hcmod
                       and a.ittran = p.aqpa463htran
                       and a.itnrel = p.aqpa463hnrel;
                  exception
                    when others then
                      null;
                  end;
                
                else
                  begin
                    select a.hhora
                      into lv_hora
                      from fsh015 a
                     where a.pgcod = p.aqpa463pgcod
                       and a.hsucor = p.aqpa463hsucor
                       and a.hcmod = p.aqpa463hcmod
                       and a.htran = p.aqpa463htran
                       and a.hnrel = p.aqpa463hnrel
                       and a.hfcon = p.aqpa463hfcon;
                  exception
                    when others then
                      null;
                  end;
                end if;
              
              end if;
              --mod@br 20180907
            
              --------tipo de operacion 
              begin
                select trim(a.tp1desc)
                  into lv_tipoope
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 11
                   and a.tp1corr3 = 1;
              exception
                when others then
                  null;
                
              end;
              -------Codigo de tipo de importe de afectacion
              Begin
                select to_char(a.tp1nro1)
                  into lc_oneroso
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 12
                   and a.tp1corr3 = 3;
              exception
                when others then
                  null;
              End;
            
              -----Afectaci?n del IGV  
              begin
                select to_char(a.tp1nro1)
                  into lv_afecigv
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 13
                   and a.tp1corr3 = 1;
              exception
                when others then
                  null;
                
              end;
            
              ---------Identificaci?n del tributo seg?n cat?logo SUNAT
              begin
                select to_char(a.tp1nro1), trim(a.tp1desc)
                  into lv_idtrbsunat, lv_nomtrbsunat
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 14
                   and a.tp1corr3 = 1;
              exception
                when others then
                  null;
              end; ---ojo
              ----------C?digo del Tipo de Tributo
              begin
                select trim(a.tp1desc)
                  into lv_destiptrb
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 14
                   and a.tp1corr3 = 2;
              exception
                when others then
                  null;
              end;
            
              ---Monto del descuento o recargo
              ln_MONTO := 0;
            
              -----------------Descripcion del pais 
              begin
                Select trim(a.tp1desc)
                  Into lv_CPAIS
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 15
                   and a.tp1corr3 = 1;
              exception
                when others then
                  null;
              end;
            
              ----------informacion del predio
              begin
                pq_cr_factura_electronica.sp_cr_detalle_predio(pc_aqpa463mod => p.aqpa463mod,
                                                               pc_aqpa463suc => p.aqpa463suc,
                                                               pc_aqpa463mda => p.aqpa463mda,
                                                               pc_aqpa463pap => p.aqpa463pap,
                                                               pc_aqpa463cta => p.aqpa463cta,
                                                               pc_aqpa463ope => p.aqpa463ope,
                                                               pc_aqpa463sbo => p.aqpa463sbo,
                                                               pc_aqpa463top => p.aqpa463top,
                                                               pc_partida    => lv_partida,
                                                               pc_contrato   => lc_contrato,
                                                               pc_direccion  => lv_direccionH,
                                                               pc_urba       => lv_urbaH,
                                                               pc_dpto       => lv_dptoH,
                                                               pc_prov       => lv_provH,
                                                               pc_dist       => lv_distH,
                                                               pc_ubigeo     => lv_cdisn);
              end;
            
              if lv_cdisn is null then
                --20180626
                lv_cdisn      := lv_ubgCli;
                lv_urbaH      := substr(lv_urb, 1, 25);
                lv_dptoH      := substr(lv_depnom1, 1, 30);
                lv_provH      := substr(lv_locnom1, 1, 30);
                lv_distH      := substr(lv_fst071dsc1, 1, 30);
                lv_direccionH := substr(lv_sngc13dir, 1, 100);
              end if;
            
              lc_contrato := lpad(to_char(p.aqpa463cta), 9, 0) ||
                             lpad(to_char(p.aqpa463mda), 3, 0) ||
                             lpad(to_char(p.aqpa463ope), 9, 0); --lv_text2; --numero credito
              lv_NCONT    := lc_contrato;
            
              ld_fecoto := pq_cr_factura_electronica.fn_fecha_desembolso(pc_aqpa463cta => p.aqpa463cta,
                                                                         pc_aqpa463ope => p.aqpa463ope);
            
              ld_fecoto := nvl(ld_fecoto, p.aqpa463hfcon);
              lv_fecoto := nvl(ld_fecoto, p.aqpa463hfcon);
            
              --agregar a info predio G74.1, G74.2
              lv_infpredio := '0' || '0' || lv_partida || '|' ||
                              lc_contrato || '|' || lv_fecoto || '|' ||
                              lv_direccionH || '|' || lv_urbaH || '|' ||
                              lv_provH || '|' || lv_distH || '|' ||
                              lv_dptoH;
              lv_pendoc    := lc_pendoc;
            
              --Pais del cliente
            
              begin
                select trim(a.tp1desc)
                  into lv_cpai
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 20
                   and a.tp1NRO1 = pn_pais;
              exception
                when others then
                  null;
              end;
            
              --Producto del credito
              begin
                select to_char(p.aqpa463mod) || '-' || trim(a.tonom)
                  into lv_TEXT1
                  from fst004 a
                 where a.modulo = p.aqpa463mod
                   and a.totope = p.aqpa463top;
              
              exception
                when others then
                  null;
              end;
            
              --direccion
              begin
                select to_char(a.tp1desc)
                  into lv_CALLE
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 2;
              
              exception
                when others then
                  null;
              end;
            
              --telefono
              begin
                select trim(to_char(a.tp1desc))
                  into lv_TELF
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 3;
              exception
                when others then
                  null;
              end;
            
              ---web de caja arequipa
              Begin
                select trim(a.tp1desc)
                  into lv_web
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 12;
              exception
                when others then
                  null;
              End;
            
              --departamento
              begin
                select to_char(a.tp1desc)
                  into lv_DEPA
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 7;
              
              exception
                when others then
                  null;
              end;
            
              --provincia
              begin
                select to_char(a.tp1desc)
                  into lv_PROV
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 8;
              
              exception
                when others then
                  null;
              end;
            
              --distrito
              begin
                select to_char(a.tp1desc)
                  into lv_DIST
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 9;
              
              exception
                when others then
                  null;
              end;
            
              --razon social
            
              begin
                select to_char(a.tp1desc)
                  into lv_rzn1
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 10;
              
              exception
                when others then
                  null;
              end;
            
              begin
                select to_char(a.tp1desc)
                  into lv_rzn2
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 11;
              
              exception
                when others then
                  null;
              end;
              lv_rzn := trim(lv_rzn1) || ' ' || trim(lv_rzn2);
            
              pn_monto_total_1 := ln_mtoconce; --2018.10.10 en comisiones se agrego monto a todos los campos
 
              ---2023.09.20 ahorraton importe debe ser 0
              lc_indGratuita := 'N'; 
               begin
                  select 'S' --si existe es transferencia gratuita
                  into lc_indGratuita
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120-- for update
                   and a.tp1corr1 = 41
                   and a.tp1corr2 > 0
                   and a.tp1nro1 = p.aqpa463hcmod
                   and a.tp1nro2 = p.aqpa463htran;
              exception when others then
                    lc_indGratuita := 'N'; 
              end;
              if lc_indGratuita = 'S' then ---p.aqpa463hcmod = 98 and p.aqpa463htran in ( 779) then ---
                --pn_monto_total_1 := 0; se comento total
                ln_mtoconce      := 0;
              end if;
              --
              if lc_NotaDebito = 'S' then ---p.aqpa463hcmod = 98 and p.aqpa463htran in (236, 779) then ---236

                lv_idtrbsunat    := 9998; -- AQPA460CODTB   ---------Nota Debito
                lv_doc_ori       := '03'; --aqpa460cmem,
                lv_codtipo       := '08'; --AQPA460TCOMF
              else
                lv_doc_ori       := null; --aqpa460cmem,
              end if; 
               
              -- 2023.09.20 ahorraton y nota debito

        
              begin
                result := pq_cr_factura_electronica.dintex(pn_monto_total_1);
              end;
            
              lv_glosa := null;
              lv_TPLA  := 'EST';
              lv_TPLCO := 'EST';
              ln_SIMC  := null;
              ln_SVITM := pn_monto_total_1;
              ln_SPVI  := pn_monto_total_1;
              lv_TXML  := '2.1';
              lv_urb   := null;
              lv_PNETU := 'NIU';
              ln_cant  := 1;
              lv_CTPR  := '01';
              ln_VVUIG := ln_mtoconce;
              ln_PRVIT := ln_mtoconce;
              lv_MEDEM := 'UND';
              lv_CSUNA := '84121901';
              ln_ITITM := null;
              ln_IMPTB := null;
              ln_IMPEX := null;
              --lv_afecigv  := '9996';
              lv_SISC   := null;
              lv_codun  := 'FRE';
              ln_MBIM   := ln_mtoconce; --null; 20180623
              ln_TAIMP  := null;
              ln_CDLEY  := 1000;
              lv_TELEY  := trim(result) || ' ' || lv_desmda; --2018.10.17  result;
              lv_TEXT2  := lpad(to_char(p.aqpa463cta), 9, 0) ||
                           lpad(to_char(p.aqpa463mda), 3, 0) ||
                           lpad(to_char(p.aqpa463ope), 9, 0);
              lv_TRECV  := lv_correo;
              lv_TEMPL  := 'EST';
              lv_SUBJE  := '0' || trim(lv_codtipo) || '-' || P.AQPA463SERIE || '-' ||
                           trim(to_char(P.AQPA463CORRE));
              lv_VPCVA  := null;
              lv_NEXP   := '0';
              lv_CIND   := '0';
              ln_MTOTAL := null;
              ln_BAIMP  := null;
              ln_MTIMP  := null;
              ln_PCIMA  := null;
              ln_BSIMP  := null;
              ln_VAIMP  := null;
              ln_MTINF  := pn_monto_total_1;
              ln_MTGRT  := null;
              ln_BSIMPS := null;
              ln_MTOTI  := null;
              lv_CPGS1  := null;
              lv_COMA   := to_char(p.aqpa463hfcon, 'yymmdd') ||
                           lpad(to_char(p.aqpa463hsucor), 3, 0) ||
                           lpad(to_char(p.aqpa463hcmod), 3, 0) ||
                           lpad(to_char(p.aqpa463htran), 3, 0) ||
                           lpad(to_char(p.aqpa463hnrel), 4, 0);
            
              ----------------------datos caja
              ---razon social de caja arequipa
              Begin
              
                select a.tp1desc
                  into lc_nom1
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 10;
              exception
                when others then
                  null;
              End;
            
              ---razon social de caja arequipa
              Begin
                select a.tp1desc
                  into lc_nom2
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 11;
              exception
                when others then
                  null;
              End;
            
              lc_nomcaja := trim(lc_nom1) || trim(lc_nom2);
            
              --mod@abr 20180903 modificacion de ubigeo TEMPORAL
              lv_sngc13dirFin := trim(lv_sngc13dir) || ' - ' ||
                                 trim(lv_fst071dsc1) || ' - ' ||
                                 trim(lv_locnom1) || ' - ' ||
                                 trim(lv_depnom1);
              lv_depnom1      := null;
              lv_locnom1      := null;
              lv_fst071dsc1   := null;
            
              --mod@abr 20180903 modificacion de ubigeo TEMPORAL
            
              --mod@abr 20180905
              if lv_correo is null then
                lv_correo := 'Reportefactele@cajaarequipa.pe';
              end if;
            
              if lv_TRECV is null then
                lv_TRECV := 'Reportefactele@cajaarequipa.pe';
              end if;
              --mod@abr 20180905
            
              --2018.10.17 ---2018.12.26
              if ln_cta = 999999999 or trim(ln_cta) = 99 or ln_cta = 0 then
                --inicio valida cuenta cliente  2018.10.17
                lv_codtdoc := 1;
                lv_pendoc  := '00000000';
                lv_penom   := 'Clientes Varios';
              End if;
            
              --              if P.AQPA463HCMOD = 30 and P.AQPA463HTRAN in (977, 978) then  22/07/2021
              if P.AQPA463HCMOD = 30 and
                 P.AQPA463HTRAN in (977, 978, 405, 984, 986) then
                ---30/405  22/07/2021
                ---si es igv bantotal
                lv_afecigv := 17; --se agrego concepto 978 26122018
                --se agrego concepto 984,986
              end if;
            
              --2018.10.17
            
              --2018.12.26
              lv_penom := replace(lv_penom, '&', '');
              --2018.12.26
            
               --2023.09.23
               if lc_NotaDebito = 'S' then ---p.aqpa463hcmod = 98 and p.aqpa463htran in (236, 779) then ---236

                lv_idtrbsunat    := 9998; -- AQPA460CODTB   ---------Nota Debito
                lv_doc_ori       := '03'; --aqpa460cmem,
                lv_codtipo    := '08'; --AQPA460TCOMF

               end if; 
            
              ------insert detalle de factura
              BEGIN
                insert into AQPA460
                  (AQPA460TDOC, --Codigo del Tipo de Documento de Identidad oENEmpresa
                   AQPA460RUCC, --N?mero de documento de identidad del emisor oENEmpresa
                   AQPA460RSOC, --Apellidos y nombres o denominaci?n o raz?n social oENEmpresa
                   AQPA460CDIS, --Codigo de UBIGEO oENEmpresa
                   AQPA460NCOM, --Nombre Comercial oENEmpresa
                   AQPA460CALLE, --Direcci?n completa y detallada oENEmpresa
                   AQPA460URBA, --Urbanizacion o Zona  oENEmpresa
                   AQPA460DEPA, --Departamento, expresado textualmente  oENEmpresa
                   AQPA460PROV, --Provincia, expresarlo textualmente   oENEmpresa
                   AQPA460DIST, --Distrito, expresarlo textualmente oENEmpres
                   AQPA460TELF, --Telefono de la Empresa Emisora oENEmpres
                   AQPA460WEB, --Pagina Web del Emisor oENEmpres           
                   AQPA460CPAIS, --Codigo del Pais del Emisor oENEmpres
                   AQPA460CESUN, --C?digo del establecimiento de Sunat  oENEmpres
                   AQPA460SERI, --Serie del comprobante.  Datos del Comprobante
                   AQPA460NUM, --Numero Correlativo del comprobante. Datos del Comprobante
                   AQPA460FEMI, --Fecha de Emision del Comprobante Datos del Comprobante
                   AQPA460TCOMF, --Codigo del Tipo de Comprobante Datos del Comprobante
                   AQPA460MONE, --Codigo del Tipo de Moneda Datos del Comprobante
                   AQPA460CORRR, --El correo electr?nico del Receptor  Datos del Comprobante
                   AQPA460MGLO, --Multiples Informaci?n adicional u observacion del comprobante.  Datos del Comprobante
                   AQPA460COMA, --Numero Interno del Comprobante Datos del Comprobante
                   AQPA460TPLA, --Tiplo de Plantilla  Datos del Comprobante
                   AQPA460TOPE, --C?digo de Tipo de operaciones Datos del Comprobante
                   AQPA460TPLCO, --C?digo de plantilla de correo  Datos del Comprobante
                   AQPA460CLOG, --C?digo del tipo de Logo Datos del Comprobante
                   AQPA460TDOCR, --Codigo del tipo de documento de identificaci?n del Receptor Datos del Comprobante
                   AQPA460NRUC, --N?mero de documento de identificaci?n Datos del Comprobante
                   AQPA460RASOC, --Apellidos y nombres o denominaci?n o raz?n social Datos del Comprobante
                   AQPA460IMPT, --Importe total  a pagar Datos del Comprobante
                   AQPA460HEMI, --Hora de Emisi?n  Datos del Comprobante
                   AQPA460SIMC, --Suma de todos los impuestos del comprobante.  Datos del Comprobante
                   AQPA460SVITM, --Suma del valor de venta total de todos los items   Datos del Comprobante
                   AQPA460SPVI, --Suma de los precios de venta total de todos los items  Datos del Comprobante
                   AQPA460TXML, -- Indica el tipo de XML que se generar? Datos del Comprobante
                   --  no va para factura   --AQPA460SDREF, --Serie documento al que se aplica la nota. ENComprobanteMotivoDocumento
                   --  no va para factura   --AQPA460NDREF, --Numero  documento al que se aplica la nota.  ENComprobanteMotivoDocumento
                   AQPA460CMEM, -- 2023.10.20 se habilito ND -- no va para factura    --AQPA460CMEM,  --C?digo por el cual se emite la nota.  ENComprobanteMotivoDocumento
                   ---  no va para factura  --AQPA460SUST,  --Sustento ENComprobanteMotivoDocumentoSustento
                   --  no va para factura     AQPA460SERIE, --Serie del comprobante referenciado. Referencia a un comprobante
                   --  no va para factura     AQPA460NRO,   --N?mero del comprobante referenciado Referencia a un comprobante
                   ---  no va para factura   --AQPA460TCOMP, --C?digo del tipo de comprobante.  Referencia a un comprobante
                   ---  no va para factura  --AQPA460FDREF, --Fecha de emisi?n del comprobante referenciado. Referencia a un comprobante  
                   AQPA460CDIST, --C?digo de UBIGEO Datos adicionales del Receptor
                   AQPA460CALL, --Direcci?n completa y detallada Datos adicionales del Receptor
                   AQPA460URB, --Urbanizacion o Zona   Datos adicionales del Receptor
                   AQPA460DEP, --Departamento Datos adicionales del Receptor
                   AQPA460PRV, --Provincia   Datos adicionales del Receptor
                   AQPA460DST, --Distrito Datos adicionales del Receptor
                   AQPA460CPAI, --C?digo del Pa?s  Datos adicionales del Receptor
                   AQPA460ITEM, --N?mero de orden del Item ENComprobanteDetalle 
                   AQPA460PNETU, --Unidad de medida de los bienes vendidos por item (UN/ECE rec 20) ENComprobanteDetalle 
                   AQPA460CANTF, --Cantidad de unidades vendidas pot item (Q)  ENComprobanteDetalle 
                   AQPA460TOTAL, --Importe monetario que es el total de la l?nea de detalle, incluyendo variaciones de precio (subvenciones, cargos o descuentos) pero sin impuestos.  ENComprobanteDetalle 
                   AQPA460DETE, --Codigo de identificaci?n de Onerosidad del Item ENComprobanteDetalle 
                   AQPA460CTPR, --Codigo de tipo de importe de afectacion ENComprobanteDetalle 
                   /*ok */
                   AQPA460VVUN, --Valores de venta unitarios por item (VU) no incluye impuestos  ENComprobanteDetalle 
                   /*campos probl*/
                   AQPA460VVUIG, --Precio de Venta Unitario (Incluye impuestos)  ENComprobanteDetalle 
                   AQPA460DESC, -- Descripcion del producto ENComprobanteDetalle 
                   AQPA460MFUN, --Multi Descripcion,  puede tener varias desccripciones ENComprobanteDetalle 
                   AQPA460PRVIT, --Es el precio de venta ENComprobanteDetalle 
                   AQPA460MEDEM, --Unidad medida del emisor ENComprobanteDetalle 
                   AQPA460CSUNA, --C?digo producto establecido por Sunat   ENComprobanteDetalle 
                   AQPA460CPGS1, --C?digo de producto GS1  ENComprobanteDetalle 
                   AQPA460ITITM, --Impuesto total del item ENComprobanteDetalle 
                   AQPA460IMPTB, --Importe total de un tributo para este item Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460IMPEX, ---Importe expl?cito a tributar ( = Tasa Porcentaje * Base Imponible)   Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460AFIGV, --Afectaci?n del IGV  Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460SISC, --Sistema de ISC  (01=Especifico; 02= al valor; 03=PV al p?blico)  Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   /*ojo*/
                   AQPA460CODTB, --Identificaci?n del tributo seg?n cat?logo SUNAT Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460DSTRB, --Nombre del Tributo (IGV, IVAP, ISC)  Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460CODUN, --C?digo del Tipo de Tributo (UN/ECE 5153) Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460MBIM, --Monto base del impuesto Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460TAIMP, --Tasa aplicada del impuesto  Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460CDLEY, --Codigo de la Leyenda Utilizado para Leyendas
                   AQPA460TELEY, --Texto de la leyenda  Utilizado para Leyendas
                   AQPA460TEXT1, --Texto libre 1 : Producto  Informaci?n adicional para la visualizacion de representaciones impresas, antes definido por el integrador.
                   AQPA460TEXT2, --Texto libre 2 : N?mero de Cr?dito Informaci?n adicional para la visualizacion de representaciones impresas, antes definido por el integrador.
                   AQPA460TRECV, --Correo del receptor Utilizado para enviar correos adicionales con copia al Correo del Receptor, ingresado en ENComprobante.Correo
                   AQPA460TEMPL, --C?digo de Tipo de Plantilla  Utilizado para enviar correos adicionales con copia al Correo del Receptor, ingresado en ENComprobante.Correo
                   AQPA460SUBJE, --Asunto del correo Utilizado para enviar correos adicionales con copia al Correo del Receptor, ingresado en ENComprobante.Correo
                   AQPA460VPCVA, --Placa del vehiculo Informaci?n adicional del item
                   AQPA460NEXP, --N?mero de Expediente Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460CIND, --C?digo de indicador  Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460NPART, --N?mero de Partida Registral  Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460NCONT, --N?mero de contrato  Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460FOTRC, --Fecha de Otorgo de cr?dito   Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460CDISN, --C?digo de Ubigeo   Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460DIREH, --Direcci?n   Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460URBH, --Urbanizaci?n Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460PRVH, --Provincia   Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460DSTH, --Distrito   Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460DEPTH, --Departamento Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460MTOTAL, --Monto total Gravado (Sin impuesto)  Informaci?n de gravada                           
                   AQPA460BAIMP, --Base del impuesto  IGV del Gravado
                   AQPA460MTIMP, --Monto total solo del impuesto   IGV del Gravado
                   AQPA460PCIMA, --Porcentaje del impuesto aplicado  IGV del Gravado
                   AQPA460BSIMP, --Base del impuesto Otros impuestos del Gravado
                   AQPA460VAIMP, --Monto total solo del impuesto  Otros impuestos del Gravado
                   AQPA460MTINF, --Monto total Inafecto  Informaci?n de inafecto
                   AQPA460MTGRT, --Monto total Gratuito  Informaci?n de gratuito
                   AQPA460BSIMPS, --Base del impuesto Impuestos del Gratuito
                   AQPA460MTOTI, --Monto total de impuestos Impuestos del Gratuito
                   AQPA460PGC, --mod@abr 20180824
                   AQPA460MOD, --mod@abr 20180824  
                   AQPA460SUC, --mod@abr 20180824 
                   AQPA460TRX, --mod@abr 20180824
                   AQPA460REL, --mod@abr 20180824
                   AQPA460ORE, --mod@abr 20180824
                   AQPA460DOCU --2023.07.18 dcastro 
                   )
                
                Values
                  (lv_tipemp, --AQPA460TDOC,  ok
                   lv_ruc, --AQPA460RUCC,  ok
                   lv_rzn, --AQPA460RSOC,  ok
                   lv_ubg, --AQPA460CDIS,  ok
                   lv_NCOM, --AQPA460NCOM,  ok
                   lv_CALLE, --AQPA460CALLE  ok
                   lv_urb, --AQPA460URBA,  ok
                   lv_DEPA, --AQPA460DEPA,  ok
                   lv_PROV, --AQPA460PROV,  ok
                   lv_DIST, --AQPA460DIST,  ok
                   lv_TELF, --AQPA460TELF,  ok
                   lv_WEB, --AQPA460WEB,   ok
                   lv_CPAIS, --AQPA460CPAIS  ok
                   lc_codsunat, --lv_CESUN,        --AQPA460CESUN
                   p.aqpa463serie, --AQPA460SERI,  ok
                   p.aqpa463corre, --AQPA460NUM,   ok
                   p.aqpa463hfcon, --AQPA460FEMI,  ok
                   lv_codtipo, --AQPA460TCOMF  ok
                   lv_tipomda, --AQPA460MONE,  ok
                   lv_correo, --AQPA460CORRR  ok
                   lv_glosa, --AQPA460MGLO,  ok
                   lv_COMA, --AQPA460COMA,  ok
                   lv_TPLA, --AQPA460TPLA,  ok
                   lv_tipoope, --AQPA460TOPE,  ok
                   lv_TPLCO, --AQPA460TPLCO  ok
                   lv_CLOG, --AQPA460CLOG,
                   lv_codtdoc, --AQPA460TDOCR  ok
                   lv_pendoc, --AQPA460NRUC,  ok
                   lv_penom, --AQPA460RASOC  ok
                   pn_monto_total_1, --AQPA460IMPT,  ok
                   lv_hora, --AQPA460HEMI,  ok
                   ln_SIMC, --AQPA460SIMC,  ok
                   ln_SVITM, --AQPA460SVITM  ok
                   ln_SPVI, --AQPA460SPVI,  ok
                   lv_TXML, --AQPA460TXML,  ok
                   --AQPA460SDREF, --Serie documento al que se aplica la nota. ENComprobanteMotivoDocumento
                   --AQPA460NDREF, --Numero  documento al que se aplica la nota.  ENComprobanteMotivoDocumento
                    lv_doc_ori, --2023.10.20 se habilito ND --AQPA460CMEM,  ---2023.10.20 se habilito ND--C?digo por el cual se emite la nota.  ENComprobanteMotivoDocumento
                   --     no va para factura--      lc_sustento,  --Sustento ENComprobanteMotivoDocumentoSustento
                   --AQPA460SERIE, --Serie del comprobante referenciado. Referencia a un comprobante
                   --AQPA460NRO,   --N?mero del comprobante referenciado Referencia a un comprobante
                   --AQPA460TCOMP, --C?digo del tipo de comprobante.  Referencia a un comprobante
                   --AQPA460FDREF, --Fecha de emisi?n del comprobante referenciado. Referencia a un comprobante  
                   lv_ubgCli, --AQPA460CDIST,  ok
                   lv_sngc13dir, --AQPA460CALL,   ok
                   lv_urb, --AQPA460URB,    ok
                   lv_depnom1, --AQPA460DEP,    ok
                   lv_locnom1, --AQPA460PRV,    ok
                   lv_fst071dsc1, --AQPA460DST,    ok
                   lv_cpai, --AQPA460CPAI,   ok
                   ln_nroitem, --AQPA460ITEM,   ok
                   lv_PNETU, --AQPA460PNETU,  ok
                   /*ok*/
                   ln_cant, --AQPA460CANTF,  ok
                   ln_mtoconce, --AQPA460TOTAL,  ok
                   lc_oneroso, --AQPA460DETE,   ok
                   lv_CTPR, --AQPA460CTPR,   ok
                   ln_mtoconce, --AQPA460VVUN,   ok to number
                   ln_VVUIG, --AQPA460VVUIG,  ok
                   lv_desconce, --AQPA460DESC,   ok
                   lv_infpredio, --AQPA460MFUN,   ok
                   ln_PRVIT, --AQPA460PRVIT,  ok
                   lv_MEDEM, --AQPA460MEDEM,  ok
                   lv_CSUNA, --AQPA460CSUNA,  ok
                   lv_CPGS1, --AQPA460CPGS1,  ok
                   ln_ITITM, --AQPA460ITITM,  ok
                   ln_IMPTB, --AQPA460IMPTB,  ok
                   ln_IMPEX, --AQPA460IMPEX,  ok
                   lv_afecigv, --AQPA460AFIGV,  ok
                   lv_SISC, --AQPA460SISC,   ok
                   lv_idtrbsunat, --AQPA460CODTB,  ok
                   lv_nomtrbsunat, --AQPA460DSTRB,  ok
                   lv_codun, --AQPA460CODUN,  ok
                   ln_MBIM, --AQPA460MBIM,   ok
                   ln_TAIMP, --AQPA460TAIMP,  ok
                   ln_CDLEY, --AQPA460CDLEY,  ok
                   lv_TELEY, --AQPA460TELEY,  ok
                   lv_TEXT1, --AQPA460TEXT1,  ok
                   lv_TEXT2, --AQPA460TEXT2,  ok
                   lv_TRECV, --AQPA460TRECV,  ok
                   lv_TEMPL, --AQPA460TEMPL,  ok
                   lv_SUBJE, --AQPA460SUBJE,  ok
                   lv_VPCVA, --AQPA460VPCVA,  ok
                   lv_NEXP, --AQPA460NEXP,   ok
                   lv_CIND, --,        --AQPA460CIND,   ok
                   nvl(lv_partida, ' '), --G74.3  --AQPA460NPART,  ok
                   nvl(lv_NCONT, ' '), -- G74.4 NUMERO CONTRATO                AQPA460NCONT,  ok 
                   ld_fecoto, --G74.5  FECHA OTORGAMIENTO CREDITO   AQPA460FOTRC,  ok
                   nvl(lv_cdisn, ' '), --G74.6  Ubigeo                        AQPA460CDISN,  ok
                   nvl(lv_direccionH, ' '), --G74.7                           AQPA460DIREH,  ok
                   nvl(lv_urbaH, ' '), --G74.8                                 AQPA460URBH,   ok
                   nvl(lv_provH, ' '), --G74.9                                AQPA460PRVH,   ok
                   nvl(lv_distH, ' '), --G74.10                                AQPA460DSTH,   ok
                   nvl(lv_dptoH, ' '), --AQPA460DEPTH,  ok
                   ln_MTOTAL, --AQPA460MTOTAL  ok
                   ln_BAIMP, --AQPA460BAIMP,  ok
                   ln_MTIMP, --AQPA460MTIMP,  ok
                   ln_PCIMA, --AQPA460PCIMA,  ok
                   ln_BSIMP, --AQPA460BSIMP,  ok
                   ln_VAIMP, --AQPA460VAIMP,  ok
                   ln_MTINF, --AQPA460MTINF,  ok
                   ln_MTGRT, --AQPA460MTGRT,  ok
                   ln_BSIMPS, --AQPA460BSIMPS  ok
                   ln_MTOTI, --AQPA460MTOTI   ok
                   P.AQPA463PGCOD, --mod@abr 20180824
                   P.AQPA463HCMOD, --mod@abr 20180824
                   P.AQPA463HSUCOR, --mod@abr 20180824 
                   P.AQPA463HTRAN, --mod@abr 20180824
                   P.AQPA463HNREL, --mod@abr 20180824 
                   P.AQPA463TXOREN, --mod@abr 20180824
                   trim(lv_pendoc) --AQPA460DOCU,  2023.07.18 se agrego documento sin espacios
                   );
              
                commit;
              Exception
                when others then
                
                  lc_coderr := sqlcode;
                  lc_msgerr := sqlerrm;
                
                  insert into aqpa460E
                    (aqpa460eserie,
                     aqpa460ecorr,
                     aqpa460epgcod,
                     aqpa460emod,
                     aqpa460esucorend,
                     aqpa460etran,
                     aqpa460erel,
                     aqpa460econ,
                     aqpa460etip,
                     Aqpa460eacoe,
                     Aqpa460eamsge)
                  
                  values
                    (p.aqpa463serie,
                     p.aqpa463corre,
                     p.aqpa463pgcod,
                     p.aqpa463hcmod,
                     p.aqpa463hsucor,
                     p.aqpa463htran,
                     p.aqpa463hnrel,
                     p.aqpa463hfcon,
                     
                     'S',
                     lc_coderr,
                     lc_msgerr);
                  commit;
              END;
            
              ln_MTOTAL := 0;
              ln_BAIMP  := 0;
              ln_MTIMP  := 0;
              ln_PCIMA  := 0;
              ln_BSIMP  := 0;
              ln_VAIMP  := 0;
              ln_MTINF  := 0;
              ln_MTGRT  := 0;
              ln_BSIMPS := 0;
              ln_MTOTI  := 0;
            
            end if;
          end if;
        
        end if;
      
      ------------------------------------------------------------------------------------------------------------- 
      end loop;
    
      /*    ----insert cabecera de factura aqpa465 
      --     AGREGAR CONCEPTO A PROCEDIMIENTO
          begin
      
            pq_cr_factura_electronica.sp_cr_cabecera_trx(pd_pgfape => pd_pgfape,
                                                              pc_serie => pc_serie,
                                                              pn_correlativo => pn_correlativo,
                                                              pn_concepto => pn_concepto);
          end;
      */
    
    end;
  
  exception
    when others then
      null;
      --mod@abr 20180622 ---LOG DE ERRORES
    /* insert into aqpa460E(aqpa460serie,
              aqpa460corr,
              aqpa460pgcod,
              aqpa460mod,
              aqpa460sucorend,
              aqpa460tran,
              aqpa460rel,
              aqpa460con,
              aqpa460tip)
    values(pc_AQPA465SERIE ,
           pc_AQPA465CORR  ,
           pc_AQPA465PGCOD ,
           pc_AQPA465MOD   ,
           pc_AQPA465SUCOREND,
           pc_AQPA465TRAN    ,
           pc_AQPA465REL    , 
           pc_AQPA465CON,
           'I'      );
    
    commit;   */
    --mod@abr 20180622
  
  end sp_cr_Detalle_Factura_CO;
  -------------------------------------
  procedure sp_cr_Cabecera_trx(pd_pgfape      in date,
                               pc_serie       in char,
                               pn_correlativo in number,
                               pn_concepto    in number) is
  
    pc_aqpa465hash varchar2(250) := '';
  
    cursor aqpa463 is
    
      select distinct (b.aqpa463pgcod),
                      (b.aqpa463hcmod),
                      (b.aqpa463hsucor),
                      (b.aqpa463htran),
                      (b.aqpa463hnrel),
                      (b.aqpa463hcord),
                      (b.aqpa463hfcon),
                      (b.aqpa463serie),
                      (b.aqpa463corre)
        from aqpa463 b
       where b.aqpa463hfcon = pd_pgfape
         and b.aqpa463serie = pc_serie
         and b.aqpa463corre = pn_correlativo
       order by b.aqpa463hnrel asc;
  
    lc_flag char(1);
  
  begin
    begin
    
      for p in aqpa463 loop
      
        if pn_concepto is not null then
          --comision
        
          --si no existe registro insertar
          begin
            select 'S'
              into lc_flag
              from aqpa465 b
             where b.aqpa465serie = p.aqpa463serie
               and b.aqpa465corr = p.aqpa463corre
               and b.aqpa465pgcod = p.aqpa463pgcod
               and b.aqpa465mod = p.aqpa463hcmod
               and b.aqpa465sucor = p.aqpa463hsucor
               and b.aqpa465tran = p.aqpa463htran
               and b.aqpa465rel = p.aqpa463hnrel
               and b.aqpa465con = p.aqpa463hfcon
               and b.aqpa465ord = pn_concepto; ---2018.10.09
          exception
            when others then
              lc_flag := 'N';
          end;
        else
          --trx normal
          begin
            select 'S'
              into lc_flag
              from aqpa465 b
             where b.aqpa465serie = p.aqpa463serie
               and b.aqpa465corr = p.aqpa463corre
               and b.aqpa465pgcod = p.aqpa463pgcod
               and b.aqpa465mod = p.aqpa463hcmod
               and b.aqpa465sucor = p.aqpa463hsucor
               and b.aqpa465tran = p.aqpa463htran
               and b.aqpa465rel = p.aqpa463hnrel
               and b.aqpa465con = p.aqpa463hfcon; ---2018.11.12
          exception
            when others then
              lc_flag := 'N';
          end;
        
        end if;
      
        if nvl(lc_flag, 'N') = 'N' then
        
          insert into aqpa465
            (aqpa465serie,
             aqpa465corr,
             aqpa465pgcod,
             aqpa465mod,
             aqpa465sucor,
             aqpa465tran,
             aqpa465rel,
             aqpa465con,
             aqpa465hash,
             aqpa465ord)
          values
            (p.aqpa463serie,
             p.aqpa463corre,
             p.aqpa463pgcod,
             p.aqpa463hcmod,
             p.aqpa463hsucor,
             p.aqpa463htran,
             p.aqpa463hnrel,
             p.aqpa463hfcon,
             pc_aqpa465hash,
             pn_concepto ---2018.10.09
             );
        
          commit;
        
          ---2023.07.18 dcastro
          update aqpa460 a
             set a.aqpa460fecha = p.aqpa463hfcon
           where a.aqpa460seri = p.aqpa463serie
             and a.aqpa460num = p.aqpa463corre;
          commit;
          --
        
          begin
            pq_cr_factura_electronica.sp_datos_reporte(pn_emp => p.aqpa463pgcod,
                                                        pn_suc => p.aqpa463hsucor,
                                                        pn_mod => p.aqpa463hcmod,
                                                        pn_tra => p.aqpa463htran,
                                                        pn_rel => p.aqpa463hnrel,
                                                        pd_fec => p.aqpa463hfcon
                                                        );
          end;
        
        end if;
      
      end loop;
    
    end;
  
  end sp_cr_Cabecera_trx;

  --------------------------------
  Procedure sp_cr_cobroIGV(pn_pgcod  in number,
                           pn_hcmod  in number,
                           pn_hsucor in number,
                           pn_htran  in number,
                           pn_hnrel  in number,
                           pn_hfcon  in date,
                           pc_serie  in char,
                           pn_corr   in number,
                           pn_mto    out number) is
    cursor tipo is
      select trim(a.st171cpdsc) st171cpdsc
        from fst171 a
       where a.st171cpcod between 70 and 70;
  
    ln_mtoAux number(17, 2) := 0;
    ln_mtoAcu number(17, 2) := 0;
  begin
    for i in tipo loop
      ln_mtoAux := 0;
      begin
        select to_number(trim(a.aqpa463txtord), '99999999999999999.99') --to_number(trim(a.aqpa463txtord))
          into ln_mtoAux
          from aqpa463 a
         where a.aqpa463pgcod =  pn_pgcod
           and a.aqpa463hcmod =  pn_hcmod
           and a.aqpa463hsucor = pn_hsucor
           and a.aqpa463htran =  pn_htran
           and a.aqpa463hnrel =  pn_hnrel
           and a.aqpa463hfcon =  pn_hfcon
           and a.aqpa463serie =  pc_serie
           and a.aqpa463corre =  pn_corr
           and trim(a.aqpa463hvchr) = i.st171cpdsc;
      exception
        when others then
           begin
            select a.hcimp1
              into ln_mtoAux
              from fsh016 a
             where a.pgcod =  pn_pgcod
               and a.hcmod =  pn_hcmod
               and a.hsucor = pn_hsucor
               and a.htran =  pn_htran
               and a.hnrel =  pn_hnrel
               and a.hfcon =  pn_hfcon
               and a.hrubro in (2517030200001, 2527030200001);
            exception when others then
              ln_mtoAux := 0;
            end;
            
      end;
       ln_mtoAcu := ln_mtoAcu + nvl(ln_mtoAux, 0);
    end loop;
  
    pn_mto := nvl(ln_mtoAcu, 0);
  end sp_cr_cobroIGV;

  --------------------------------    
  procedure sp_cr_Nota_Credito_COM(pd_pgfape in date) is
  
    pn_hcmod        number;
    pn_hsucor       number;
    pn_htran        number;
    pn_hnrel        number;
    pd_hfcon        date;
    pn_NRO_RELACION number;
    pd_FECHA_TX     date;
    pn_hcmod2       number;
    pn_hcmod3       number;
    pn_hsucor3      number;
    pn_htran3       number;
    pn_hnrel3       number;
    pn_hfcon3       date;
    lc_serie        char(4);
    lc_correlativo  char(8);
  
    pn_pgcod number;
    --Flag char(1):='N';
  
    lc_flg466 char(1) := 'N'; --controla que no exista en la aqpa466
  
    ln_rubro  number;
    lc_tipper char(1);
  
    lv_tipodocu     char(1);
    lc_comision     char(1);
    ln_guiaCP       number;
    lv_codtipo      char(2);
    lc_coderr       varchar2(1000);
    lc_msgerr       varchar2(1000);
    ln_cont         number;
    lc_serieI       char(4);
    lc_correlativoI char(8);
    lv_codrpt       number;
    lv_tipocre      varchar2(2);
    ln_flag         number;
  
    lc_tipo_doc char(1);
    lv_tipo_doc char(2);
    lv_doc_ori  char(2);
  
    --ln_rubro number;
    --pd_rubro        number;
    lc_flr    char(1);
    lc_ftran  number;
    lc_fcont  char(1);
    lc_tipfin char(1);
  
    lc_trxe      char(1);
    lc_esta      char(1);
    ln_regu      number;
    ln_fecha_ant date;
  
    cursor fsx015 is
    
      select distinct a.pgcod,
                      a.hcmod,
                      a.hsucor,
                      a.htran,
                      a.hnrel,
                      a.hfcon,
                      'E' Indicador
        from fsx015 a
       inner join fsh015 c
          on a.pgcod = c.pgcod
         and a.hcmod = c.hcmod
         and a.hsucor = c.hsucor
         and a.htran = c.htran
         and a.hnrel = c.hnrel
         and a.hfcon = c.hfcon
       inner join FSR170 b
          on a.hcmod = b.sr170trmod + 500
         and a.htran = b.sr170trnro
       where a.pgcod = 1
            --       and a.hcmod > 499
            -- -- --
            /*
            and a.hcmod = 530
            and a.hsucor = 2
            and a.htran = 97
            and a.hnrel = 3
            */
            -- -- --
         and a.hfcon = pd_pgfape
         and a.txcod = 0
      
      ---todas las transacciones extornadas
      --   and  a.hcmod= 19 and a.hsucor= 11  and a.htran=801 and a.hnrel in(1)         
      --   and  a.hcmod= 530 and a.hsucor= 18  and a.htran=972 and a.hnrel in(1)      
      --and  a.hcmod= 530 and a.hsucor= 18  and a.htran=978 and a.hnrel in(1)      
      --and  a.hcmod= 530 and a.hsucor= 18  and a.htran=350 and a.hnrel in(4)   
      --  and  a.hcmod= 530 and a.hsucor= 18  and a.htran=355 and a.hnrel in(9)   
      -- order by a.pgcod, a.hcmod, a.hsucor, a.htran, a.hnrel, a.hfcon;   
      
      union all
      --2018.10.22   
      select distinct a.pgcod,
                      a.hcmod,
                      a.hsucor,
                      a.htran,
                      a.hnrel,
                      a.hfcon,
                      'C' Indicador
        from fsx016 a
       inner join fst198 c
          on c.tp1cod = a.pgcod
       where a.pgcod = 1
         and a.hcmod = c.tp1nro1
         and a.htran = c.tp1nro2
         and a.hfcon = pd_pgfape
         and c.tp1cod = 1 -- 2023.07.18 dcastro se agrego tp1cod
         and c.tp1cod1 = 11120
         and c.tp1corr1 = 2
         and c.tp1corr2 = 4
      -- and  a.hcmod=19 and a.hsucor= 11  and a.htran=801 --and a.hnrel in (9)
      --and  a.hcmod=10 and a.hsucor= 18  and a.htran=222 and a.hnrel in (9)
      --  and  a.hcmod=492 and a.hsucor= 18  and a.htran=30 --and a.hnrel in (9)
      --and  a.hcmod= 550 and a.hsucor= 11  and a.htran=503 and a.hnrel in(1)
      --order by a.pgcod, a.hcmod, a.hsucor, a.htran, a.hnrel, a.hfcon
      ;
  
    cursor base(pn_pgcod        in number,
                pn_hcmod3       in number,
                pn_hsucor3      in number,
                pn_htran3       in number,
                pn_hnrel3       in number,
                pn_hfcon3       in date,
                lc_serieI       in char,
                lc_correlativoI in number) is
    
      select aqpa463txtrub,
             aqpa463pgcod,
             aqpa463hcmod,
             aqpa463hsucor,
             aqpa463htran,
             aqpa463hnrel,
             aqpa463hfcon,
             aqpa463hcpcod,
             aqpa463hvnro,
             trim(aqpa463hvchr) aqpa463hvchr,
             aqpa463hvnro aqpa463emp,
             aqpa463mod,
             aqpa463suc,
             aqpa463mda,
             aqpa463pap,
             aqpa463cta,
             aqpa463ope,
             aqpa463sbo,
             aqpa463top,
             aqpa463hip,
             trim(aqpa463txtord) aqpa463txtord,
             aqpa463txoren
        from aqpa463 a
       where a.aqpa463pgcod = pn_pgcod
         and a.aqpa463hcmod = pn_hcmod3
         and a.aqpa463hsucor = pn_hsucor3
         and a.aqpa463htran = pn_htran3
         and a.aqpa463hnrel = pn_hnrel3
         and a.aqpa463hfcon = pn_hfcon3
         and a.aqpa463serie = lc_serieI
         and a.aqpa463corre = lc_correlativoI;
    /*
    NUEVO 
     UNION ALL
    
        select /* +all_rows --*
        distinct a.pgcod,
                        a.hcmod,
                        a.hsucor,
                        a.htran,
                        a.hnrel,
                        a.hfcon,
                        'E' Indicador
          from fsx015 a
         inner join fsh015 c
            on a.pgcod = c.pgcod
           and a.hcmod = c.hcmod
           and a.hsucor = c.hsucor
           and a.htran = c.htran
           and a.hnrel = c.hnrel
           and a.hfcon = c.hfcon
         inner join FSR170 b
            on a.hcmod = b.sr170trmod 
           and a.htran = b.sr170trnro
         where a.pgcod = 1
           and  (a.hcmod,a.htran ) in
               (select c.tp1nro1, c.tp1nro2
                 from fst198 c
                where a.pgcod = 1
                 and c.tp1cod1 = 11120
                 and c.tp1corr1 = 2
                 and c.tp1corr2 = 4
               )
           and a.hfcon = pd_pgfape
           and a.txcod = 0
    */
  
  begin
  
    --25012019 dcastro
    begin
      select c.tp1nro1
        into ln_flag
        from fst198 c
       where c.tp1cod = 1
         and c.tp1cod1 = 11120
         and c.tp1corr1 = 7
         and c.tp1corr2 = 1;
    exception
      when others then
        null;
    end;
    --25012019
  
    --08122020 jrodriguej
    begin
      select t.tp1nro1
        into ln_regu
        from fst198 t
       where t.tp1cod = 1
         and t.tp1cod1 = 11120
         and t.tp1corr1 = 9
         and t.tp1corr2 = 1
         and t.tp1corr3 = 6;
    exception
      when others then
        ln_regu := 0;
    end;
    --08122020 jrodriguej
  
    if ln_regu = 1 then
      -- Generación de NCE's Pendientes de la fecha anterior
      --pq_cr_facturacion_generacion.sp_cr_generar_NCE_his_prev(pd_pgfape);
    
      ln_fecha_ant := pd_pgfape - 1;
    
      -- Generación de correlativo 1 fecha anterior a la fecha de proceso
      pq_cr_facturacion_generacion.sp_cr_generar_NCE_his(ln_fecha_ant);
    
      -- Registro de correlativos generados de AQPB056 a AQPA460
      pq_cr_factura_electronica.sp_cr_sch_nce_m(ln_fecha_ant);
    
      ----COPIAR EN AQPB056H
      insert into aqpb056h
        (aqpb056htcomf,
         aqpb056hseri,
         aqpb056hnum,
         aqpb056hfemi,
         aqpb056hpgc,
         aqpb056hmod,
         aqpb056hsuc,
         aqpb056htrx,
         aqpb056hrel,
         aqpb056hfcon,
         aqpb056htcomp,
         aqpb056hserie,
         aqpb056hnro,
         aqpb056hpgce,
         aqpb056hmode,
         aqpb056hsuce,
         aqpb056htrxe,
         aqpb056hrele,
         aqpb056hfcone,
         aqpb056hfcr,
         aqpb056hhcr)
      
        select t.aqpb056tco,
               t.aqpb056ser,
               t.aqpb056num,
               t.aqpb056fem,
               t.aqpb056pgc,
               t.aqpb056mod,
               t.aqpb056suc,
               t.aqpb056trx,
               t.aqpb056rel,
               t.aqpb056fco,
               t.aqpb056tce,
               t.aqpb056see,
               t.aqpb056nro,
               t.aqpb056pge,
               t.aqpb056moe,
               t.aqpb056sue,
               t.aqpb056tre,
               t.aqpb056ree,
               t.aqpb056fce,
               to_char(sysdate, 'DD/MM/YYYY'), --aqpb056hfcr
               to_char(sysdate, 'HH24:MI:SS') --aqpb056hhcr
          from aqpb056 t
         where t.aqpb056fem = ln_fecha_ant
           and (t.aqpb056tco, t.aqpb056ser, t.aqpb056num) not in
               (select x.aqpb056htcomf, x.aqpb056hseri, x.aqpb056hnum
                  from aqpb056h x
                 where x.aqpb056hfemi = ln_fecha_ant);
      commit;
    
    end if;
  
    for p in fsx015 loop
      --Verifica que no exista en cabecera AQPA466
      Begin
        select 'S'
          into lc_flg466
          from aqpa466 a
         where a.aqpa466pgcod = p.pgcod
           and a.aqpa466mod = p.hcmod
           and a.aqpa466sucor = p.hsucor
           and a.aqpa466tran = p.htran
           and a.aqpa466rel = p.hnrel
           and a.aqpa466con = p.hfcon
           and rownum = 1;
      exception
        when others then
          lc_flg466 := 'N';
      end;
      --Clave del documento a la cual se aplica: factura y boleta
      pn_pgcod  := p.pgcod;
      pn_hcmod  := p.hcmod;
      pn_hsucor := p.hsucor;
      pn_htran  := p.htran;
      pn_hnrel  := p.hnrel;
      pd_hfcon  := p.hfcon;
    
      if lc_flg466 = 'N' then
      
        if p.indicador = 'E' then
          --Por extorno 
        
          begin
            select f.txtext as NRO_RELACION
              into pn_NRO_RELACION
              from fsx015 f
             where f.hfcon = pd_pgfape --to_date('20092017', 'ddmmyyyy')----cambiar fecha de proceso
               and f.hcmod = pn_hcmod --530
               and f.htran = pn_htran --100
               and f.hnrel = pn_hnrel --2
               and f.hsucor = pn_hsucor --mod@abr 20180707
               and f.txcod = 0
               and f.txreng = 1;
          exception
            --mod@abr 20180707
            when too_many_rows then
              begin
                select f.txtext as NRO_RELACION
                  into pn_NRO_RELACION
                  from fsx015 f
                 where f.hfcon = pd_pgfape --to_date('20092017', 'ddmmyyyy')----cambiar fecha de proceso
                   and f.hcmod = pn_hcmod --530
                   and f.htran = pn_htran --100
                   and f.hnrel = pn_hnrel --2
                   and f.hsucor = pn_hsucor
                   and f.txcod = 0
                   and f.txreng = 1
                   and rownum = 1 --mod@abr 20180707
                ;
              exception
                when others then
                  pn_NRO_RELACION := null;
              end;
            when others then
              pn_NRO_RELACION := null;
            
          end;
        
          if pn_NRO_RELACION is not null then
          
            begin
              select to_date(f.txtext, 'DD/MM/RR') as FECHA_TX
                into pd_FECHA_TX
                from fsx015 f
               where f.hfcon = pd_pgfape --to_date('20092017', 'ddmmyyyy')
                 and f.hcmod = pn_hcmod -- 530
                 and f.htran = pn_htran --100
                 and f.hnrel = pn_hnrel --2
                 and f.hsucor = pn_hsucor --mod@abr 20180707
                 and f.txcod = 0
                 and f.txreng = 2;
            exception
              when others then
                pd_FECHA_TX := null;
            end;
          
            pn_hcmod2 := pn_hcmod - 500;
          
            -- 4. obtener transaccion original
            -- 4.1 Verificar si la transacción tiene una excepcion
            begin
              select 'S'
                into lc_trxe
                from fst198 t
               where t.tp1cod = 1
                 and t.tp1cod1 = 11120
                 and t.tp1corr1 = 10
                 and t.tp1corr2 = 1
                 and t.tp1corr3 <> 0
                 and t.tp1nro1 = pn_hcmod2 --- mod
                 and t.tp1nro2 = pn_htran -- trax
                 and t.tp1imp3 = 1; --<<=== Se valida en el IMP3
            exception
              when others then
                lc_trxe := 'N';
            end;
          
            if lc_trxe = 'N' then
            
              begin
                --obtener transaccion original
                select a.pgcod,
                       a.hcmod,
                       a.hsucor,
                       a.htran,
                       a.hnrel,
                       a.hfcon
                  into pn_pgcod,
                       pn_hcmod3,
                       pn_hsucor3,
                       pn_htran3,
                       pn_hnrel3,
                       pn_hfcon3 --clave de transaccion
                  from fsx016 a
                 where a.hcmod = pn_hcmod2 --30
                   and a.htran = pn_htran --100
                   and a.hfcon = pd_FECHA_TX --to_date('20092017', 'ddmmyyyy')
                   and a.hnrel = pn_NRO_RELACION --164
                   and a.hsucor = pn_hsucor --mod@abr 20180707
                   and rownum = 1;
              exception
                when others then
                  pn_pgcod   := null;
                  pn_hcmod3  := null;
                  pn_hsucor3 := null;
                  pn_htran3  := null;
                  pn_hnrel3  := null;
                  pn_hfcon3  := null;
                
              end;
            
            else
            
              pn_pgcod   := p.pgcod;
              pn_hcmod3  := pn_hcmod2;
              pn_hsucor3 := pn_hsucor;
              pn_htran3  := pn_htran;
              pn_hnrel3  := pn_NRO_RELACION;
              pn_hfcon3  := pd_FECHA_TX;
            
            end if;
          
          end if;
        
        elsif p.indicador = 'C' then
          --Por comision
        
          begin
            pq_op_transacciones.sp_op_retorna_origen(ppgcod   => pn_pgcod,
                                                     pitsuc   => pn_hsucor,
                                                     pitmod   => pn_hcmod,
                                                     pittran  => pn_htran,
                                                     pitnrel  => pn_hnrel,
                                                     pitfcon  => pd_hfcon,
                                                     itsuc_o  => pn_hsucor3,
                                                     itmod_o  => pn_hcmod3,
                                                     ittran_o => pn_htran3,
                                                     itnrel_o => pn_hnrel3,
                                                     itfcon_o => pn_hfcon3,
                                                     codrpt   => lv_codrpt);
          end;
        
        end if;
      
        ---buscar transaccion en aqpa460 / aqpa463/ aqpa465
        ---obtener DOCUMENTO DE REFERENCIA
        begin
          select distinct a.aqpa463serie, a.aqpa463corre
            into lc_serieI, lc_correlativoI
            from aqpa463 a
           where a.aqpa463pgcod = pn_pgcod
             and a.aqpa463hcmod = pn_hcmod3
             and a.aqpa463hsucor = pn_hsucor3
             and a.aqpa463htran = pn_htran3
             and a.aqpa463hnrel = pn_hnrel3
             and a.aqpa463hfcon = pn_hfcon3;
        exception
          when too_many_rows then
            ---obtener ultimo documento enviado
            begin
              select max(a.aqpa463serie), max(a.aqpa463corre)
                into lc_serieI, lc_correlativoI
                from aqpa463 a
               where a.aqpa463pgcod = pn_pgcod
                 and a.aqpa463hcmod = pn_hcmod3
                 and a.aqpa463hsucor = pn_hsucor3
                 and a.aqpa463htran = pn_htran3
                 and a.aqpa463hnrel = pn_hnrel3
                 and a.aqpa463hfcon = pn_hfcon3;
            
            exception
              when others then
                lc_serieI       := null;
                lc_correlativoI := null;
            end;
          when no_data_found then
            --si no existe trx origen
            lc_serieI := null;
        end;
      
        lv_tipodocu := substr(lc_serieI, 1, 1);
        lv_tipocre  := substr(lc_serieI, 2, 1);
      
        if lv_tipodocu is not null then
        
          --determinar tipo de cliente
          /*if lv_tipodocu = 'F' then
             lc_tipper := 'J';
             ln_guiaCP := 1;
           else
             lc_tipper := 'N';
             ln_guiaCP := 3;
           end if;
          
           begin
             --select '0' || to_char(a.tp1nro1)        ---!!2
               select lpad(trim(a.tp1nro1), 2, '0')
               into lv_codtipo
               from fst198 a
              where a.tp1cod = 1
                and a.tp1cod1 = 11120
                and a.tp1corr1 = 1
                and a.tp1corr2 = 7
                and a.tp1corr3 = ln_guiaCP; --2018.10.10 se modifico codigo de guia para tipo comprobante
           exception
             when others then
               null;
           end;
          */
        
          --determinar tipo del documento origen
          --dbms_output.put_line('================');
          --dbms_output.put_line('pn_hcmod3 ' || pn_hcmod3);
          --dbms_output.put_line('pn_hsucor3 ' || pn_hsucor3);
          --dbms_output.put_line('pn_htran3 ' || pn_htran3);
          --dbms_output.put_line('pn_hnrel3 ' || pn_hnrel3);
          --dbms_output.put_line('pn_hfcon3 ' || pn_hfcon3);                                        
        
          begin
            select distinct t.aqpa460tcomf
              into lv_doc_ori
              from aqpa460 t
             where t.aqpa460pgc = pn_pgcod
               and t.aqpa460mod = pn_hcmod3
               and t.aqpa460suc = pn_hsucor3
               and t.aqpa460trx = pn_htran3
               and t.aqpa460rel = pn_hnrel3
               and t.aqpa460femi = pn_hfcon3
               and t.aqpa460tcomf in ('01', '03', '13');
          exception
            when others then
              null;
          end;
        
          if lv_doc_ori in ('01', '03') then
          
            --determinar tipo de cliente
            if lv_tipodocu = 'F' then
              lc_tipper := 'J';
              ln_guiaCP := 1;
            else
              lc_tipper := 'N';
              ln_guiaCP := 3;
            end if;
          
            begin
              select
              --'0' || to_char(a.tp1nro1)
               lpad(trim(a.tp1nro1), 2, '0')
                into lv_codtipo
                from fst198 a
               where a.tp1cod = 1
                 and a.tp1cod1 = 11120
                 and a.tp1corr1 = 1
                 and a.tp1corr2 = 7
                 and a.tp1corr3 = ln_guiaCP; --2018.10.10 se modifico codigo de guia para tipo comprobante
            exception
              when others then
                null;
            end;
          
          else
            lv_codtipo := '13';
          end if;
        
          -- Determinar rubro
          -- 5. Obtener rubro
          begin
            -- Como el proceso siempre será ejecutado al menos un día después, 
            -- se busca en históricos
          
            select to_number(substr(m.hrubro, 5, 2))
              into ln_rubro
              from fsh016 m, fsr171 aa
             where aa.st171cpcod = 15
               and aa.sr171tremp = 1 --1
               and aa.sr171trmod = m.hcmod --30
               and aa.sr171trnro = m.htran
               and m.PGCOD = pn_pgcod
               and m.hsucor = pn_hsucor3
               and m.hcmod = pn_hcmod3
               and m.htran = pn_htran3
               and m.hnrel = pn_hnrel3
               and m.hfcon = pn_hfcon3
               and m.hcord = aa.sr171trord
               and rownum = 1;
          exception
            when others then
            
              begin
              
                select distinct x.aqpa463tcre
                  into ln_rubro
                  from aqpa463 x
                 where x.aqpa463pgcod = pn_pgcod
                   and x.aqpa463hcmod = pn_hcmod3
                   and x.aqpa463hsucor = pn_hsucor3
                   and x.aqpa463htran = pn_htran3
                   and x.aqpa463hnrel = pn_hnrel3
                   and x.aqpa463hfcon = pn_hfcon3;
              
              exception
                when others then
                  ln_rubro := null;
                
              end;
            
          end;
        
          /*if ln_flag = 0 then  --25012019 dcastro se agrego validacion de flag si es =1 incluye comision   
            exit;
          end if;  --25012019 dcastro 
          */
        
          --end if;
        
          --determinar si es comision
          begin
            select 'S'
              into lc_comision
              from fst198 h
             where h.tp1cod = 1
               and h.tp1cod1 = 11120
               and h.tp1corr1 = 3
               and h.tp1corr2 = 1
               and h.tp1nro1 = pn_hcmod3
               and h.tp1nro2 = pn_htran3
               and rownum = 1;
          exception
            when others then
              lc_comision := 'N';
          end;
        
          if lc_comision = 'S' then
            ln_rubro := 1;
          end if;
        
          -- b. Determinar si el rubro es considerado
          begin
            select 'S'
              into lc_flr
              from fst198 t
             where t.tp1cod = 1
               and t.tp1cod1 = 11120
               and t.tp1corr1 = 1
               and t.tp1corr2 = 23
               and t.tp1nro1 <> 0
               and t.tp1nro1 = ln_rubro;
          exception
            when others then
              lc_flr := 'N';
          end;
        
          --if (lv_tipocre in ('H','F') and ln_flag = 0) or ln_flag = 1 then
          if (lc_flr = 'S' and ln_flag = 0) or ln_flag = 1 then
          
            --Seleccionar tipo de documento    !!3
            -- Guía obtener transacciones GRAVADAS
            begin
              select 'S'
                into lc_tipo_doc
                from fst198 h
               where h.tp1cod = 1
                 and h.tp1cod1 = 11120
                 and h.tp1corr1 = 3
                 and h.tp1corr2 = 1
                 and h.tp1corr3 > 0
                 and h.tp1nro1 = pn_hcmod3
                 and h.tp1nro2 = pn_htran3;
            exception
              when others then
                lc_tipo_doc := 'N';
            end;
          
            ---Si es gravado --> 07  sino ---> 87
            lv_tipo_doc := '87';
          
            if lc_tipo_doc = 'S' then
              lv_tipo_doc := '07';
            
              --25012019 dcastro
            
              begin
                pq_cr_facturacion.sp_cr_factura(pn_rubro       => ln_rubro,
                                                pc_tipcli      => lc_tipper,
                                                pc_tipo        => 'NC',
                                                pc_serie       => lc_serie,
                                                pc_correlativo => lc_correlativo);
              exception
                when others then
                
                  lc_coderr := sqlcode;
                  lc_msgerr := trim(sqlerrm);
                
                  insert into aqpa460E
                    (aqpa460eserie,
                     aqpa460ecorr,
                     aqpa460epgcod,
                     aqpa460emod,
                     aqpa460esucorend,
                     aqpa460etran,
                     aqpa460erel,
                     aqpa460econ,
                     aqpa460etip,
                     Aqpa460eacoe,
                     Aqpa460eamsge)
                  values
                    (null,
                     null,
                     pn_pgcod,
                     pn_hcmod,
                     pn_hsucor,
                     pn_htran,
                     pn_hnrel,
                     pd_hfcon,
                     'S',
                     lc_coderr,
                     lc_msgerr);
                  commit;
                
              end;
            
              lc_tipfin := 'N';
            else
              ------
            
              begin
              
                -- c. Verificar si el rubro esta activo
                -- (4): hipotecario
                -- (3): consumo
                begin
                  select 'S'
                    into lc_fcont
                    from fst198 t
                   where t.tp1cod = 1
                     and t.tp1cod1 = 11120
                     and t.tp1corr1 = 1
                     and t.tp1corr2 = 23
                     and t.tp1nro1 <> 0
                     and t.tp1nro1 = ln_rubro
                     and t.tp1imp1 = 1;
                exception
                  when others then
                    lc_fcont := 'N';
                end;
              
                if lc_fcont = 'S' then
                
                  --Verificar en AQPB056
                  begin
                    select 'S'
                      into lc_tipfin
                      from aqpb056 a
                     where a.aqpb056pgc = pn_pgcod
                       and a.aqpb056mod = pn_hcmod
                       and a.aqpb056suc = pn_hsucor
                       and a.aqpb056trx = pn_htran
                       and a.aqpb056rel = pn_hnrel
                       and a.aqpb056fco = pd_hfcon
                       and a.aqpb056pge = pn_pgcod
                       and a.aqpb056moe = pn_hcmod3
                       and a.aqpb056sue = pn_hsucor3
                       and a.aqpb056tre = pn_htran3
                       and a.aqpb056ree = pn_hnrel3
                       and a.aqpb056fce = pn_hfcon3
                       and a.aqpb056tco = '87';
                  
                  exception
                    when others then
                      begin
                        select 'S'
                          into lc_tipfin
                          from aqpb056h a
                         where a.aqpb056hpgc = pn_pgcod
                           and a.aqpb056hmod = pn_hcmod
                           and a.aqpb056hsuc = pn_hsucor
                           and a.aqpb056htrx = pn_htran
                           and a.aqpb056hrel = pn_hnrel
                           and a.aqpb056hfcon = pd_hfcon
                           and a.aqpb056hpgce = pn_pgcod
                           and a.aqpb056hmode = pn_hcmod3
                           and a.aqpb056hsuce = pn_hsucor3
                           and a.aqpb056htrxe = pn_htran3
                           and a.aqpb056hrele = pn_hnrel3
                           and a.aqpb056hfcone = pn_hfcon3
                           and a.aqpb056htcomf = '87';
                      exception
                        when others then
                          lc_tipfin := 'N';
                      end;
                    
                  end;
                
                  --Verificar si la transacción sigue activa
                  begin
                    select count(*)
                      into lc_ftran
                      from fst198 t
                     where t.tp1cod = 1
                       and t.tp1cod1 = 11120
                       and t.tp1corr1 = 10
                       and t.tp1corr2 = 1
                       and t.tp1corr3 <> 0
                       and t.tp1imp1 = 1
                       and t.tp1nro1 = pn_hcmod3
                       and t.tp1nro2 = pn_htran3;
                  exception
                    when others then
                      null;
                  end;
                
                  if (lc_tipfin = 'S' and lc_ftran > 0) then
                  
                    begin
                      --select to_char(a.aqpb056seri), a.aqpb056num
                      select to_char(a.aqpb056ser), a.aqpb056num
                        into lc_serie, lc_correlativo
                        from aqpb056 a
                       where
                      
                       a.aqpb056pgc = pn_pgcod
                       and a.aqpb056mod = pn_hcmod
                       and a.aqpb056suc = pn_hsucor
                       and a.aqpb056trx = pn_htran
                       and a.aqpb056rel = pn_hnrel
                       and a.aqpb056fco = pd_hfcon
                      
                       and a.aqpb056pge = pn_pgcod
                       and a.aqpb056moe = pn_hcmod3
                       and a.aqpb056sue = pn_hsucor3
                       and a.aqpb056tre = pn_htran3
                       and a.aqpb056ree = pn_hnrel3
                       and a.aqpb056fce = pn_hfcon3
                      
                       and a.aqpb056tco = '87';
                    
                    exception
                      when others then
                      
                        select to_char(a.aqpb056hseri), a.aqpb056hnum
                          into lc_serie, lc_correlativo
                          from aqpb056h a
                         where
                        
                         a.aqpb056hpgc = pn_pgcod
                         and a.aqpb056hmod = pn_hcmod
                         and a.aqpb056hsuc = pn_hsucor
                         and a.aqpb056htrx = pn_htran
                         and a.aqpb056hrel = pn_hnrel
                         and a.aqpb056hfcon = pd_hfcon
                        
                         and a.aqpb056hpgce = pn_pgcod
                         and a.aqpb056hmode = pn_hcmod3
                         and a.aqpb056hsuce = pn_hsucor3
                         and a.aqpb056htrxe = pn_htran3
                         and a.aqpb056hrele = pn_hnrel3
                         and a.aqpb056hfcone = pn_hfcon3
                        
                         and a.aqpb056htcomf = '87';
                      
                    end;
                  
                  end if;
                
                end if;
              
              end;
              ------
            
            end if;
          
            if (lv_tipo_doc = '87' and lc_tipfin = 'S') or
               (lv_tipo_doc = '07' and lc_tipfin = 'N') then
              --insertamos en AQPA460            
              begin
              
                --if to_number(lc_correlativo) > 43 then
                --  lc_msgerr := '';
                --end if;
              
                insert into AQPA460
                  (aqpa460tdoc,
                   aqpa460rucc,
                   aqpa460rsoc,
                   aqpa460cdis,
                   aqpa460ncom,
                   aqpa460calle,
                   aqpa460urba,
                   aqpa460depa,
                   aqpa460prov,
                   aqpa460dist,
                   aqpa460telf,
                   aqpa460web,
                   aqpa460cpais,
                   aqpa460cesun,
                   aqpa460seri,
                   aqpa460num,
                   aqpa460femi,
                   aqpa460tcomf,
                   aqpa460mone,
                   aqpa460corrr,
                   aqpa460mglo,
                   aqpa460coma,
                   aqpa460tpla,
                   aqpa460tope,
                   aqpa460tplco,
                   aqpa460clog,
                   aqpa460tdocr,
                   aqpa460nruc,
                   aqpa460rasoc,
                   aqpa460impt,
                   aqpa460hemi,
                   aqpa460simc,
                   aqpa460svitm,
                   aqpa460spvi,
                   aqpa460txml,
                   aqpa460sdref,
                   aqpa460ndref,
                   aqpa460cmem,
                   aqpa460sust,
                   aqpa460serie,
                   aqpa460nro,
                   aqpa460tcomp,
                   aqpa460fdref,
                   aqpa460cdist,
                   aqpa460call,
                   aqpa460urb,
                   aqpa460dep,
                   aqpa460prv,
                   aqpa460dst,
                   aqpa460cpai,
                   aqpa460item,
                   aqpa460pnetu,
                   aqpa460cantf,
                   aqpa460total,
                   aqpa460dete,
                   aqpa460ctpr,
                   aqpa460vvun,
                   aqpa460vvuig,
                   aqpa460desc,
                   aqpa460mfun,
                   aqpa460prvit,
                   aqpa460medem,
                   aqpa460csuna,
                   aqpa460cpgs1,
                   aqpa460ititm,
                   aqpa460imptb,
                   aqpa460impex,
                   aqpa460afigv,
                   aqpa460sisc,
                   aqpa460codtb,
                   aqpa460dstrb,
                   aqpa460codun,
                   aqpa460mbim,
                   aqpa460taimp,
                   aqpa460cdley,
                   aqpa460teley,
                   aqpa460text1,
                   aqpa460text2,
                   aqpa460trecv,
                   aqpa460templ,
                   aqpa460subje,
                   aqpa460vpcva,
                   aqpa460nexp,
                   aqpa460cind,
                   aqpa460npart,
                   aqpa460ncont,
                   aqpa460fotrc,
                   aqpa460cdisn,
                   aqpa460direh,
                   aqpa460urbh,
                   aqpa460prvh,
                   aqpa460dsth,
                   aqpa460depth,
                   aqpa460mtotal,
                   aqpa460baimp,
                   aqpa460mtimp,
                   aqpa460pcima,
                   aqpa460bsimp,
                   aqpa460vaimp,
                   aqpa460mtinf,
                   aqpa460mtgrt,
                   aqpa460bsimps,
                   aqpa460mtoti,
                   aqpa460pgc,
                   aqpa460mod,
                   aqpa460suc,
                   aqpa460trx,
                   aqpa460rel,
                   aqpa460ore,
                   aqpa460pgce,
                   aqpa460mode,
                   aqpa460suce,
                   aqpa460trxe,
                   aqpa460rele,
                   aqpa460fcone,
                   aqpa460glos,
                   aqpa460tipag,
                   aqpa460text3,
                   aqpa460text4,
                   aqpa460conce,
                   AQPA460DOCU --2023.07.18 dcastro 
                   )
                  select aqpa460tdoc, --aqpa460tdoc,
                         aqpa460rucc, --aqpa460rucc,
                         aqpa460rsoc, --aqpa460rsoc,
                         aqpa460cdis, --aqpa460cdis,
                         aqpa460ncom, --aqpa460ncom,
                         aqpa460calle, --aqpa460calle,
                         aqpa460urba, --aqpa460urba,
                         aqpa460depa, --aqpa460depa,
                         aqpa460prov, --aqpa460prov,
                         aqpa460dist, --aqpa460dist,
                         aqpa460telf, --aqpa460telf,
                         aqpa460web, --aqpa460web,
                         aqpa460cpais, --aqpa460cpais,
                         aqpa460cesun, --aqpa460cesun,
                         lc_serie, --aqpa460seri,
                         lc_correlativo, --aqpa460num,
                         --aqpa460femi, --aqpa460femi,
                         pd_hfcon, --aqpa460femi,
                         --'07',
                         lv_tipo_doc, --aqpa460tcomf,
                         aqpa460mone, --aqpa460mone,
                         aqpa460corrr, --aqpa460corrr,
                         aqpa460mglo, --aqpa460mglo,
                         aqpa460coma, --aqpa460coma,
                         aqpa460tpla, --aqpa460tpla,
                         aqpa460tope, --aqpa460tope,
                         aqpa460tplco, --aqpa460tplco,
                         aqpa460clog, --aqpa460clog,
                         aqpa460tdocr, --aqpa460tdocr,
                         aqpa460nruc, --aqpa460nruc,
                         aqpa460rasoc, --aqpa460rasoc,
                         aqpa460impt, --aqpa460impt,
                         aqpa460hemi, --aqpa460hemi,
                         aqpa460simc, --aqpa460simc,
                         aqpa460svitm, --aqpa460svitm,
                         aqpa460spvi, --aqpa460spvi,
                         aqpa460txml, --aqpa460txml,
                         aqpa460seri, --aqpa460sdref,
                         aqpa460num, --aqpa460ndref,
                         lv_doc_ori, --'01', --aqpa460cmem,
                         'Extorno de la operacion', --aqpa460sust,
                         aqpa460seri, --aqpa460serie,
                         aqpa460num, --aqpa460nro,
                         lv_codtipo, --aqpa460tcomp,
                         --pd_hfcon,    --aqpa460fdref,
                         aqpa460femi, --aqpa460fdref,
                         aqpa460cdist, --aqpa460cdist,
                         aqpa460call, --aqpa460call,
                         aqpa460urb, --aqpa460urb,
                         aqpa460dep, --aqpa460dep,
                         aqpa460prv, --aqpa460prv,
                         aqpa460dst, --aqpa460dst,
                         aqpa460cpai, --aqpa460cpai,
                         aqpa460item, --aqpa460item,
                         aqpa460pnetu, --aqpa460pnetu,
                         aqpa460cantf, --aqpa460cantf,
                         aqpa460total, --aqpa460total,
                         aqpa460dete, --aqpa460dete,
                         aqpa460ctpr, --aqpa460ctpr,
                         aqpa460vvun, --aqpa460vvun,
                         aqpa460vvuig, --aqpa460vvuig,
                         aqpa460desc, --aqpa460desc,
                         aqpa460mfun, --aqpa460mfun,
                         aqpa460prvit, --aqpa460prvit,
                         aqpa460medem, --aqpa460medem,
                         aqpa460csuna, --aqpa460csuna,
                         aqpa460cpgs1, --aqpa460cpgs1,
                         aqpa460ititm, --aqpa460ititm,
                         aqpa460imptb, --aqpa460imptb,
                         aqpa460impex, --aqpa460impex,
                         aqpa460afigv, --aqpa460afigv,
                         aqpa460sisc, --aqpa460sisc,
                         aqpa460codtb, --aqpa460codtb,
                         aqpa460dstrb, --aqpa460dstrb,
                         aqpa460codun, --aqpa460codun,
                         aqpa460mbim, --aqpa460mbim,
                         aqpa460taimp, --aqpa460taimp,
                         aqpa460cdley, --aqpa460cdley,
                         aqpa460teley, --aqpa460teley,
                         aqpa460text1, --aqpa460text1,
                         aqpa460text2, --aqpa460text2,
                         aqpa460trecv, --aqpa460trecv,
                         aqpa460templ, --aqpa460templ,
                         aqpa460subje, --aqpa460subje,
                         aqpa460vpcva, --aqpa460vpcva,
                         aqpa460nexp, --aqpa460nexp,
                         aqpa460cind, --aqpa460cind,
                         aqpa460npart, --aqpa460npart,
                         aqpa460ncont, --aqpa460ncont,
                         aqpa460fotrc, --aqpa460fotrc,
                         aqpa460cdisn, --aqpa460cdisn,
                         aqpa460direh, --aqpa460direh,
                         aqpa460urbh, --aqpa460urbh,
                         aqpa460prvh, --aqpa460prvh,
                         aqpa460dsth, --aqpa460dsth,
                         aqpa460depth, --aqpa460depth,
                         aqpa460mtotal, --aqpa460mtotal,
                         aqpa460baimp, --aqpa460baimp,
                         aqpa460mtimp, --aqpa460mtimp,
                         aqpa460pcima, --aqpa460pcima,
                         aqpa460bsimp, --aqpa460bsimp,
                         aqpa460vaimp, --aqpa460vaimp,
                         aqpa460mtinf, --aqpa460mtinf,
                         aqpa460mtgrt, --aqpa460mtgrt,
                         aqpa460bsimps, --aqpa460bsimps,
                         aqpa460mtoti, --aqpa460mtoti,
                         aqpa460pgc, --aqpa460pgc,
                         aqpa460mod, --aqpa460mod,
                         aqpa460suc, --aqpa460suc,
                         aqpa460trx, --aqpa460trx,
                         aqpa460rel, --aqpa460rel,
                         aqpa460ore, --aqpa460ore,
                         pn_pgcod, --aqpa460pgce,
                         pn_hcmod, --aqpa460mode,
                         pn_hsucor, --aqpa460suce,
                         pn_htran, --aqpa460trxe,
                         pn_hnrel, -- 2023.09.24 se restauro pn_hnrel 2023.07.18 SE CAMBIO pn_hnrel, --aqpa460rele,
                         pd_hfcon, --2023.09.24 se restauro pd_hfcon,--aqpa460fcone, 2023.07.18 DCASTRO SE CAMBIO CAMPO FECHA DE EXTORNO
                         --2023.07.18 SE COMENTO aqpa460femi, --aqpa460fcone,
                         aqpa460glos, --aqpa460glos,
                         aqpa460tipag, --aqpa460tipag,
                         aqpa460text3, --aqpa460text3,
                         aqpa460text4, --aqpa460text4,
                         aqpa460conce, --aqpa460conce
                         AQPA460DOCU --2023.07.18 dcastro se agrego 
                    from aqpa460 a
                   where a.aqpa460pgc = pn_pgcod
                     and a.aqpa460mod = pn_hcmod3
                     and a.aqpa460suc = pn_hsucor3
                     and a.aqpa460trx = pn_htran3
                     and a.aqpa460rel = pn_hnrel3
                     and a.aqpa460femi = pn_hfcon3
                     and a.aqpa460seri = lc_serieI
                     and a.aqpa460num = lc_correlativoI;
              
                commit;
              exception
                when others then
                  lc_coderr := sqlcode;
                  lc_msgerr := sqlerrm;
                
              end;
            
              --insertamos en AQPA464
              ln_cont := 1;
              for i in base(pn_pgcod,
                            pn_hcmod3,
                            pn_hsucor3,
                            pn_htran3,
                            pn_hnrel3,
                            pn_hfcon3,
                            lc_serieI,
                            lc_correlativoI) loop
              
                begin
                  insert into aqpa464
                    (aqpa464txtrub,
                     aqpa464pgcod,
                     aqpa464hcmod,
                     aqpa464hsucor,
                     aqpa464htran,
                     aqpa464hnrel,
                     aqpa464hfcon,
                     aqpa464doid,
                     aqpa464cpcod,
                     aqpa464vnro,
                     aqpa464vchr,
                     aqpa464vfch,
                     aqpa464vimp /*, aqpa464vtas*/,
                     aqpa464serie,
                     aqpa464nro,
                     aqpa464emp,
                     aqpa464mod,
                     aqpa464suc,
                     aqpa464mda,
                     aqpa464pap,
                     aqpa464cta,
                     aqpa464ope,
                     aqpa464sbo,
                     aqpa464top,
                     aqpa464hip,
                     aqpa464txtord,
                     aqpa464txoren,
                     aqpa464pgcode,
                     aqpa464hcmode,
                     aqpa464hsucore,
                     aqpa464htrane,
                     aqpa464hnrele,
                     aqpa464hfcone)
                  
                  values
                    (i.aqpa463txtrub,
                     i.aqpa463pgcod,
                     i.aqpa463hcmod,
                     i.aqpa463hsucor,
                     i.aqpa463htran,
                     i.aqpa463hnrel,
                     i.aqpa463hfcon,
                     ln_cont,
                     i.aqpa463hcpcod,
                     i.aqpa463hvnro,
                     i.aqpa463hvchr,
                     pd_hfcon,
                     ln_cont,
                     lc_serie,
                     lc_correlativo,
                     i.aqpa463emp,
                     i.aqpa463mod,
                     i.aqpa463suc,
                     i.aqpa463mda,
                     i.aqpa463pap,
                     i.aqpa463cta,
                     i.aqpa463ope,
                     i.aqpa463sbo,
                     i.aqpa463top,
                     i.aqpa463hip,
                     i.aqpa463txtord,
                     i.aqpa463txoren,
                     pn_pgcod,
                     pn_hcmod,
                     pn_hsucor,
                     pn_htran,
                     pn_hnrel,
                     pd_hfcon);
                
                  commit;
                exception
                  when others then
                    lc_coderr := sqlcode;
                    lc_msgerr := sqlerrm;
                  
                end;
                ln_cont := ln_cont + 1;
              
              end loop;
              --insertamos en AQPA466
              lc_esta := null;
              if lv_tipo_doc = '87' then
                lc_esta := 'Z';
              end if;
            
              begin
              
                insert into aqpa466
                  (aqpa466serie,
                   aqpa466corr,
                   aqpa466pgcod,
                   aqpa466mod,
                   aqpa466sucor,
                   aqpa466tran,
                   aqpa466rel,
                   aqpa466con,
                   aqpa466est)
                
                values
                  (lc_serie,
                   lc_correlativo,
                   pn_pgcod,
                   pn_hcmod,
                   pn_hsucor,
                   pn_htran,
                   pn_hnrel,
                   pd_hfcon,
                   lc_esta);
                /*select lc_serie,
                      lc_correlativo,
                      aqpa465pgcod,
                      aqpa465mod,
                      aqpa465sucor,
                      aqpa465tran,
                      aqpa465rel,
                      aqpa465con
                 from aqpa465 a
                where a.aqpa465pgcod = pn_pgcod
                  and a.aqpa465mod = pn_hcmod3
                  and a.aqpa465sucor = pn_hsucor3
                  and a.aqpa465tran = pn_htran3
                  and a.aqpa465rel = pn_hnrel3
                  and a.aqpa465con = pn_hfcon3
                  and a.aqpa465serie = lc_serieI
                  and a.aqpa465corr = lc_correlativoI;*/
                commit;
              exception
                when others then
                  lc_coderr := sqlcode;
                  lc_msgerr := sqlerrm;
              end;
            
            end if;
          end if; --25012019
        
        end if; ---fin de tipodocu 
      
      end if;
    
    end loop;
  
  end sp_cr_Nota_Credito_COM;

  -----------------------------------------------------------
  procedure sp_cr_datos_cliente(pn_pais    in fsr008.pepais%type, -- PE Pais del Cliente.
                                ln_petdoc  in fsr008.petdoc%type, -- PE Tipo de documento del Cliente.
                                lc_pendoc  in fst198.tp1desc%type, -- PE Numero de documento del Cliente.
                                lv_correo  out varchar, -- PS devuelve Correo del Cliente.
                                lv_cpai    out fst198.tp1desc%type, -- PS devuelve Pais del Cliente segun SUNAT - guia.
                                lv_codtdoc out fst198.tp1desc%type -- PS devuelve Codigo del Tipo de documento Cliente segun SUNAT - guia.
                                ) is
  
    lv_codtdocC varchar2(1); --05/04/2023 dcastro 
  
  begin
    --PERSONA CLIENTE
    --Correo del cliente
    lv_correo := null;
  
    begin
      select substr(a.pextxt, 1, INSTR(a.pextxt, '\', 1) - 1)
        into lv_correo
        from fsx001 a
       where a.pepais = pn_pais
         and a.petdoc = ln_petdoc
         and a.pendoc = lc_pendoc
         and a.txcod = 0
         and rownum = 1 --- 2021/11/11 dcastro se agrego condicion
       order by a.pexren desc;
    exception
      when others then
        null;
    end;
    --Pais del Cliente                    
    begin
      select trim(a.tp1desc)
        into lv_cpai
        from fst198 a
       where a.tp1cod = 1
         and a.tp1cod1 = 11120
         and a.tp1corr1 = 1
         and a.tp1corr2 = 20
         and a.tp1NRO1 = pn_pais;
    exception
      when others then
        null;
    end;
    /*    --Codigo tipo documento cliente
       begin
         select to_char(a.tp1nro1)
           into lv_codtdoc
           from fst198 a
          where a.tp1cod = 1
            and a.tp1cod1 = 11120
            and a.tp1corr1 = 1
            and a.tp1corr2 = 4
            and a.tp1nro2 = ln_petdoc;
       exception
         when others then
           null;
       end;
    */
  
    --Codigo tipo documento cliente
    begin
      select to_char(a.tp1nro1), substr(trim(TP1DESC), -1, 1)
        into lv_codtdoc, lv_codtdocC
        from fst198 a
       where a.tp1cod = 1
         and a.tp1cod1 = 11120
         and a.tp1corr1 = 1
         and a.tp1corr2 = 4
         and a.tp1nro2 = ln_petdoc;
    exception
      when others then
        null;
    end;
  
    --05/04/2023 dcastro se agrego nuevo tipo documento PTP
    if lv_codtdoc = 3 then
      lv_codtdoc := lv_codtdocC;
    end if;
    --05/04/2023 dcastro se agrego nuevo tipo documento PTP
  
    --FIN DATOS CLIENTE
  end;
  procedure sp_cr_datos_sunat(lvi_sucursal in fsd010.aosuc%type, -- Ingresa Sucursal del Credito.
                              ln_mda       in fsd010.aomda%type, -- Ingresa Moneda del Credito.
                              -------------------------------------------------------------------------
                              lv_tipoope     out fst198.tp1desc%type, -- Tipo de Operacion
                              lc_oneroso     out fst198.tp1nro1%type, -- Codigo de Tipo de importe de afectaci?n.
                              lv_afecigv     out fst198.tp1desc%type, -- Afectacion del IGV.
                              lv_idtrbsunat  out fst198.tp1nro1%type, -- Identificaci?n del c?digo de tributo seg?n catalogo SUNAT
                              lv_nomtrbsunat out fst198.tp1desc%type, -- Identificaci?n de la descripci?n del tributo seg?n catalogo SUNAT
                              lv_destiptrb   out fst198.tp1desc%type, -- C?digo del Tipo de Atributo
                              lv_CPAIS       out fst198.tp1desc%type, -- Descripcion del Pais - SUNAT
                              --
                              pc_sccall out fst001.sccall%type, -- Direccion Agencia del Credito
                              pn_sctelf out fst001.sctelf%type, -- Telefono Agencia del Credito.
                              --------------------------------------------------------------------------
                              lv_tipomda out fst198.tp1desc%type, -- Codigo de la Moneda - SUNAT            
                              ln_docemp  out fst198.tp1nro1%type, -- Codigo tipo doc empresa 
                              lv_tipemp  out fst198.tp1nro1%type, -- Codigo tipo empresa SUNAT
                              lv_ruc     out fst198.tp1desc%type, -- RUC de la empresa CAJA AREQUIPA
                              lv_NCOM    out fst198.tp1desc%type, -- Nombre Comercial.
                              lv_ubg     out fst198.tp1nro1%type, -- Ubigeo Caja 
                              lv_CALLE   out fst198.tp1desc%type, -- Direccion Caja
                              lv_TELF    out fst198.tp1desc%type, -- Telefono Caja
                              lv_web     out fst198.tp1desc%type, -- Web Caja 
                              lv_DEPA    out fst198.tp1desc%type, -- Departamento Caja 
                              lv_PROV    out fst198.tp1desc%type, -- Provincia Caja
                              lv_DIST    out fst198.tp1desc%type, -- Distrito Caja 
                              lv_rzn1    out fst198.tp1desc%type, -- Razon Social Caja 1ra Parte
                              lv_rzn2    out fst198.tp1desc%type, -- Razon Social Caja 2da Parte
                              --Nota de Credito 
                              lv_codtipo out fst198.tp1nro1%type, -- Codigo del Tipo de Comprobante Nota de credito.
                              lc_codtipo out varchar, -- Codigo del Tipo de Comprobante Factura.
                              lv_codcmen out varchar, -- Codigo del Tipo de Comprobante Nota de Credito E.
                              --lc_nom1        out fst198.tp1desc%type,
                              --lc_nom2        out fst198.tp1desc%type
                              lc_codsunat      out fst198.tp1nro1%type, -- Codigo Sunat - Extornos 
                              ln_codtributario out fst198.tp1nro1%type, -- Codigo Tributario - Extornos
                              lc_sustento      out fst198.tp1desc%type, -- Sustento - Extornos 
                              lc_despago       out fst198.tp1desc%type, -- Observacion del Tipo de Pago- Extornos NC    
                              lc_desopera      out fst198.tp1desc%type -- Nota de operaci?n. (No se usa comentar)                    
                              ) is
    lc_codpla varchar(10);
    --lc_sistemi varchar(10);
  begin
    /*
          lv_glosa := null;
          lv_TPLA := 'EST'; 
          lv_TPLCO := 'EST';
          ln_SIMC  := null;
          ln_SVITM := pn_monto_total_1;
          ln_SPVI  := pn_monto_total_1;
          lv_TXML  := '2.1';
          lv_urb   := null;
          lv_PNETU := 'NIU';
          ln_cant  := 1;
          lv_CTPR  := '01';
          ln_VVUIG := ln_mtoconce;
          ln_PRVIT := ln_mtoconce;
          lv_MEDEM := 'UND';
          lv_CSUNA := '84121901';
          ln_ITITM := null;
          ln_IMPTB := null;
          ln_IMPEX := null;
          lv_SISC     := null;
          lv_codun    := 'FRE';
          ln_MBIM     := ln_mtoconce; --null; 20180623
          ln_TAIMP    := null;
          ln_CDLEY    := 1000;
          lv_TELEY    := result;
          lv_TEXT2    := lpad(to_char(p.aqpa463cta),9,0)||lpad(to_char(p.aqpa463mda),3,0)||lpad(to_char(p.aqpa463ope),9,0);
          lv_TRECV    := lv_correo;
          lv_TEMPL    := 'EST';
          lv_SUBJE    := '0'||trim(lv_codtipo)||'-'||P.AQPA463SERIE||'-'||trim(to_char(P.AQPA463CORRE));
          lv_VPCVA    := null;
          lv_NEXP     := '0';
          lv_CIND     := '0';
          ln_MTOTAL   := null;      
          ln_BAIMP    := null;
          ln_MTIMP    := null;
          ln_PCIMA    := null;
          ln_BSIMP    := null;
          ln_VAIMP    := null;
          ln_MTINF    := pn_monto_total_1;
          ln_MTGRT    := null;
          ln_BSIMPS   := null;
          ln_MTOTI    := null;
          lv_CPGS1    := null;
          lv_COMA     := to_char(p.aqpa463hfcon,'yymmdd')||lpad(to_char(p.aqpa463hsucor),3,0)||lpad(to_char(p.aqpa463hcmod),3,0)||lpad(to_char(p.aqpa463htran),3,0)||lpad(to_char(p.aqpa463hnrel),4,0);
    */
  
    --DATOS_SUNAT.
    --Codigo de plantilla
    --lc_codpla := 'EST';                   
    --Sistema de Emicion 
    --lc_sistemi :='BANTOT'; 
    --Obtener codigo de sunat
    begin
      select lpad(a.tp1nro2, 4, '0')
        into lc_codsunat
        from fst198 a
       where a.tp1cod = 1
         and a.tp1cod1 = 11120
         and a.tp1corr1 = 1
         and a.tp1corr2 = 500
         and a.tp1nro1 = lvi_sucursal;
    exception
      when others then
        null;
    end;
    --Codigo tipo DOC empresa               
    begin
      select a.tp1nro1
        into ln_docemp
        from fst198 a
       where a.tp1cod = 1
         and a.tp1cod1 = 11120
         and a.tp1corr1 = 1
         and a.tp1corr2 = 6
         and a.tp1corr3 = 4;
    exception
      when others then
        null;
    end;
    --Descripcion de la empresa. 
    begin
      select to_char(a.tp1nro1)
        into lv_tipemp
        from fst198 a
       where a.tp1cod = 1
         and a.tp1cod1 = 11120
         and a.tp1corr1 = 1
         and a.tp1corr2 = 4
         and a.tp1corr3 >= 1
         and a.tp1nro2 = ln_docemp;
    exception
      when others then
        null;
    end;
    --Tipo de operacion 
    begin
      select trim(a.tp1desc)
        into lv_tipoope
        from fst198 a
       where a.tp1cod = 1
         and a.tp1cod1 = 11120
         and a.tp1corr1 = 1
         and a.tp1corr2 = 11
         and a.tp1corr3 = 1;
    exception
      when others then
        null;
      
    end;
    -------Codigo de tipo de importe de afectacion
    Begin
      select to_char(a.tp1nro1)
        into lc_oneroso
        from fst198 a
       where a.tp1cod = 1
         and a.tp1cod1 = 11120
         and a.tp1corr1 = 1
         and a.tp1corr2 = 12
         and a.tp1corr3 = 3;
    exception
      when others then
        null;
    End;
    -----Afectaci?n del IGV  
    begin
      select to_char(a.tp1nro1)
        into lv_afecigv
        from fst198 a
       where a.tp1cod = 1
         and a.tp1cod1 = 11120
         and a.tp1corr1 = 1
         and a.tp1corr2 = 13
         and a.tp1corr3 = 1;
    exception
      when others then
        null;
    end;
    --Identificaci?n del tributo seg?n catalogo SUNAT
    begin
      select to_char(a.tp1nro1), trim(a.tp1desc)
        into lv_idtrbsunat, lv_nomtrbsunat
        from fst198 a
       where a.tp1cod = 1
         and a.tp1cod1 = 11120
         and a.tp1corr1 = 1
         and a.tp1corr2 = 14
         and a.tp1corr3 = 1;
    exception
      when others then
        null;
    end;
    --C?digo del Tipo de Tributo
    begin
      select trim(a.tp1desc)
        into lv_destiptrb
        from fst198 a
       where a.tp1cod = 1
         and a.tp1cod1 = 11120
         and a.tp1corr1 = 1
         and a.tp1corr2 = 14
         and a.tp1corr3 = 2;
    exception
      when others then
        null;
    end;
    --Monto del descuento o recargo
    --ln_MONTO:=0;
    -----------------------
    --DATOS CAJA AREQUIPA--
    -----------------------
    --DIRECCIÓN SUCURSAL CAJA.
    begin
      --Direccion de empresa
      select a.sccall, a.sctelf
        into pc_sccall, pn_sctelf
        from fst001 a
       where a.sucurs = lvi_sucursal;
    exception
      when others then
        null;
    end;
    --RUC DE LA CAJA AREQUIPA
    begin
      select trim(a.tp1desc)
        into lv_ruc
        from fst198 a
       where a.tp1cod = 1
         and a.tp1cod1 = 11120
         and a.tp1corr1 = 1
         and a.tp1corr2 = 6
         and a.tp1corr3 = 1;
    exception
      when others then
        null;
    end;
    --NOMBRE COMERCIAL DE CAJA AREQUIPA
    begin
      select a.tp1desc
        into lv_NCOM
        from fst198 a
       where a.tp1cod = 1
         and a.tp1cod1 = 11120
         and a.tp1corr1 = 1
         and a.tp1corr2 = 6
         and a.tp1corr3 = 5;
    exception
      when others then
        null;
    end;
    --UBIGEO DE CAJA AREQUIPA 
    begin
      select trim(a.tp1desc)
        into lv_ubg
        from fst198 a
       where a.tp1cod = 1
         and a.tp1cod1 = 11120
         and a.tp1corr1 = 1
         and a.tp1corr2 = 6
         and a.tp1corr3 = 6;
    exception
      when others then
        null;
    end;
    --Descripcion del Pais Caja Arequipa
    begin
      Select trim(a.tp1desc)
        Into lv_CPAIS
        from fst198 a
       where a.tp1cod = 1
         and a.tp1cod1 = 11120
         and a.tp1corr1 = 1
         and a.tp1corr2 = 15
         and a.tp1corr3 = 1;
    exception
      when others then
        null;
    end;
    --Direcci?n de Caja Arequipa
    begin
      select to_char(a.tp1desc)
        into lv_CALLE
        from fst198 a
       where a.tp1cod = 1
         and a.tp1cod1 = 11120
         and a.tp1corr1 = 1
         and a.tp1corr2 = 6
         and a.tp1corr3 = 2;
    exception
      when others then
        null;
    end;
    --Telefono de Caja Arequipa
    begin
      select trim(to_char(a.tp1desc))
        into lv_TELF
        from fst198 a
       where a.tp1cod = 1
         and a.tp1cod1 = 11120
         and a.tp1corr1 = 1
         and a.tp1corr2 = 6
         and a.tp1corr3 = 3;
    exception
      when others then
        null;
    end;
    --Web de Caja arequipa  
    Begin
      select trim(a.tp1desc)
        into lv_web
        from fst198 a
       where a.tp1cod = 1
         and a.tp1cod1 = 11120
         and a.tp1corr2 = 6
         and a.tp1corr3 = 12;
    exception
      when others then
        null;
    End;
    --Departamento de Caja Arequipa
    begin
      select to_char(a.tp1desc)
        into lv_DEPA
        from fst198 a
       where a.tp1cod = 1
         and a.tp1cod1 = 11120
         and a.tp1corr1 = 1
         and a.tp1corr2 = 6
         and a.tp1corr3 = 7;
    
    exception
      when others then
        null;
    end;
    --Provincia de caja Arequipa
    begin
      select to_char(a.tp1desc)
        into lv_PROV
        from fst198 a
       where a.tp1cod = 1
         and a.tp1cod1 = 11120
         and a.tp1corr1 = 1
         and a.tp1corr2 = 6
         and a.tp1corr3 = 8;
    exception
      when others then
        null;
    end;
    --Distrito de Caja Arequipa
    begin
      select to_char(a.tp1desc)
        into lv_DIST
        from fst198 a
       where a.tp1cod = 1
         and a.tp1cod1 = 11120
         and a.tp1corr1 = 1
         and a.tp1corr2 = 6
         and a.tp1corr3 = 9;
    exception
      when others then
        null;
    end;
    --RAZON SOCIAL 1ra PARTE         
    begin
      select to_char(a.tp1desc)
        into lv_rzn1
        from fst198 a
       where a.tp1cod = 1
         and a.tp1cod1 = 11120
         and a.tp1corr1 = 1
         and a.tp1corr2 = 6
         and a.tp1corr3 = 10;
    exception
      when others then
        null;
    end;
    --RAZON SOCIAL 2da PARTE                 
    begin
      select to_char(a.tp1desc)
        into lv_rzn2
        from fst198 a
       where a.tp1cod = 1
         and a.tp1cod1 = 11120
         and a.tp1corr1 = 1
         and a.tp1corr2 = 6
         and a.tp1corr3 = 11;
    exception
      when others then
        null;
    end;
  
    --Codigo tipo moneda
    begin
      select trim(a.tp1desc)
        into lv_tipomda
        from fst198 a
       where a.tp1cod = 1
         and a.tp1cod1 = 11120
         and a.tp1corr1 = 1
         and a.tp1corr2 = 8
         and a.tp1corr3 >= 1
         and a.tp1nro1 = ln_mda;
    exception
      when others then
        null;
    end;
    ----------------------------
    -- FIN DATOS CAJA AREQUIPA--
    ----------------------------
    /*
    Begin
    --Razon social de caja arequipa
      select a.tp1desc
      into lc_nom1
        from fst198 a
       where a.tp1cod = 1
         and a.tp1cod1 = 11120
         and a.tp1corr2 = 6
         and a.tp1corr3 = 10;
        exception
          when others then null;
     End;                   
     Begin
     --Razon social de caja arequipa
      select a.tp1desc
      into lc_nom2
        from fst198 a
       where a.tp1cod = 1
         and a.tp1cod1 = 11120
         and a.tp1corr2 = 6
         and a.tp1corr3 = 11;
        exception
          when others then null;
     End;
     */
    --DATOS PROPIO DE LAS NOTAS DE CREDITO
    --Codigo del Tipo de Comprobante NOTA DE CREDITO
    begin
      select '0' || trim(to_char(a.tp1nro1))
        into lc_codtipo
        from fst198 a
       where a.tp1cod = 1
         and a.tp1cod1 = 11120
         and a.tp1corr1 = 1
         and a.tp1corr2 = 7
         and a.tp1corr3 = 2;
    exception
      when others then
        null;
    end;
    --Codigo del Tipo de Comprobante FACTURAS
    begin
      select '0' || to_char(a.tp1nro1)
        into lv_codtipo
        from fst198 a
       where a.tp1cod = 1
         and a.tp1cod1 = 11120
         and a.tp1corr1 = 1
         and a.tp1corr2 = 7
         and a.tp1corr3 = 1; --Factura  
    exception
      when others then
        null;
    end;
    --NOTA DE CREDITO_E
    begin
      select '0' || trim(to_char(a.tp1nro1))
        into lv_codcmen
        from fst198 a
       where a.tp1cod = 1
         and a.tp1cod1 = 11120
         and a.tp1corr1 = 1
         and a.tp1corr2 = 9
         and a.tp1corr3 = 1;
    exception
      when others then
        null;
    end;
    ----------------------------------    
  
    begin
      select trim(a.tp1nro1)
        into ln_codtributario
        from fst198 a
       where a.tp1cod = 1
         and a.tp1cod1 = 11120
         and a.tp1corr1 = 1
         and a.tp1corr2 = 10
         and a.tp1corr3 = 3;
    exception
      when others then
        null;
    end;
    begin
      select trim(a.tp1desc)
        into lc_sustento
        from fst198 a
       where a.tp1cod = 1
         and a.tp1cod1 = 11120
         and a.tp1corr1 = 1
         and a.tp1corr2 = 9
         and a.tp1corr3 = 3;
    exception
      when others then
        null;
    end;
    --Observacion del Termino de pago
    begin
      select a.tp1desc
        into lc_despago
        from fst198 a
       where a.tp1cod = 1
         and a.tp1cod1 = 11120
         and a.tp1corr1 = 1
         and a.tp1corr2 = 16
         and a.tp1corr3 = 1;
    exception
      when others then
        null;
      
    end;
  
    --Nota de operacion 
    begin
      select a.tp1desc
        into lc_desopera
        from fst198 a
       where a.tp1cod = 1
         and a.tp1cod1 = 11120
         and a.tp1corr1 = 1
         and a.tp1corr2 = 9
         and a.tp1corr3 = 3;
    exception
      when others then
        null;
    end;
  
  end sp_cr_datos_sunat;
  -----------------------------------------------------------  
  --Datos_adicionales de la Nota de Credito
  procedure sp_cr_datos_ncredito(lc_codtipo       out fst198.tp1nro1%type, -- ocdigo del Tipo de Tributo 
                                 lv_codcmen       out varchar, -- Codigo del Tipo de Comprobante Nota de Credito E.
                                 ln_codtributario out fst198.tp1nro1%type, -- Codigo Tributario - Extornos
                                 lc_sustento      out fst198.tp1desc%type, -- Sustento - Extornos 
                                 lc_despago       out fst198.tp1desc%type, -- Observacion del Tipo de Pago- Extornos NC    
                                 lc_desopera      out fst198.tp1desc%type -- Nota de operaci?n. (No se usa comentar)
                                 ) is
  begin
    --Codigo del Tipo de Comprobante NOTA DE CREDITO
    begin
      select '0' || trim(to_char(a.tp1nro1))
        into lc_codtipo
        from fst198 a
       where a.tp1cod = 1
         and a.tp1cod1 = 11120
         and a.tp1corr1 = 1
         and a.tp1corr2 = 7
         and a.tp1corr3 = 2;
    exception
      when others then
        null;
    end;
    --NOTA DE CREDITO_E
    begin
      select '0' || trim(to_char(a.tp1nro1))
        into lv_codcmen
        from fst198 a
       where a.tp1cod = 1
         and a.tp1cod1 = 11120
         and a.tp1corr1 = 1
         and a.tp1corr2 = 9
         and a.tp1corr3 = 1;
    exception
      when others then
        null;
    end;
    ----------------------------------    
    --                                          
    Begin
      select trim(a.tp1nro1)
        into ln_codtributario
        from fst198 a
       where a.tp1cod = 1
         and a.tp1cod1 = 11120
         and a.tp1corr1 = 1
         and a.tp1corr2 = 10
         and a.tp1corr3 = 3;
    Exception
      when others then
        null;
    End;
    --
    begin
      select trim(a.tp1desc)
        into lc_sustento
        from fst198 a
       where a.tp1cod = 1
         and a.tp1cod1 = 11120
         and a.tp1corr1 = 1
         and a.tp1corr2 = 9
         and a.tp1corr3 = 3;
    exception
      when others then
        null;
    end;
    --Observacion del Termino de pago
    begin
      select a.tp1desc
        into lc_despago
        from fst198 a
       where a.tp1cod = 1
         and a.tp1cod1 = 11120
         and a.tp1corr1 = 1
         and a.tp1corr2 = 16
         and a.tp1corr3 = 1;
    exception
      when others then
        null;
    end;
    --Nota de operacion 
    begin
      select a.tp1desc
        into lc_desopera
        from fst198 a
       where a.tp1cod = 1
         and a.tp1cod1 = 11120
         and a.tp1corr1 = 1
         and a.tp1corr2 = 9
         and a.tp1corr3 = 3;
    exception
      when others then
        null;
    end;
  end;
  -----------------------------------------------------------

  procedure sp_cr_Nota_Credito_Detalle(pd_pgfape      in date,
                                       pc_serie       in char,
                                       pn_correlativo in number,
                                       pn_concepto    in number) is
    ------------------------------------------------------------------------------------------------
    --Historial de modificaciones 
    --mod@abr 20180911: Modificacion de orden de insertar tabla cabecera
    ------------------------------------------------------------------------------------------------
  
    --pc_fecha varchar2(80);--mod@abr 20180911 se comento
    result character(100);
    -----------------------
    pd_pgfape2 date;
    --pn_ordinal number;--mod@abr 20180911 se comento
  
    pn_ctnro number;
  
    --pn_aosuc  number;--mod@abr 20180911 se comento
    pv_tdoc character(25);
  
    pn_pais   number;
    pv_petdoc number;
    lc_flg    char(1);
    ln_mda    number(4);
    --ln_cta number(9);--mod@abr 20180911 se comento
    --lc_hor char(8);--mod@abr 20180911 se comento
    --ld_fec date;--mod@abr 20180911 se comento
    pn_monto_total_1 number(12, 2) := 0;
    lc_codtipo       char(2);
    pc_aqpa463serie  char(4);
    pc_aqpa463corre  char(8);
    ln_mtoconce      number;
    ln_mtoconce_ant  number;
    lv_codcmen       varchar2(2);
    lc_sustento      char(200);
    ln_nroitem       number(12) := 0;
    ln_cant          number(12, 10);
    lc_codpla        char(3);
    lc_tpla          char(3);
    lc_cdtpla        char(3);
    lc_sistemi       CHAR(6);
    ln_tpdocum       number;
    ln_IMPTB         number;
    ln_IMPEX         number;
    ln_AFIGV         number;
    lc_forpag        char(30);
    pn_moneda        number;
  
    ----------------------------------
    ln_ITITM  number(4) := 0;
    lv_tipemp varchar2(1);
    lv_ruc    varchar2(11);
    lv_rzn    varchar2(1500);
    lv_ubg    varchar2(6);
    lv_NCOM   varchar2(1500);
    lv_CALLE  varchar2(200);
    --lv_URBA        varchar2(25);
    lv_DEPA  varchar2(100);
    lv_PROV  varchar2(30);
    lv_DIST  varchar2(30);
    lv_TELF  varchar2(20);
    lv_WEB   varchar2(100);
    lv_CPAIS varchar2(2);
    --lv_CESUN       varchar2(4);
    lv_codtipo varchar2(2);
    lv_tipomda varchar2(3);
    lv_correo  varchar2(100);
    lv_glosa   varchar2(30);
    lv_COMA    varchar2(20);
    lv_TPLA    varchar2(3);
    --lv_tipoope     varchar2(4);  
    lv_TPLCO       varchar2(3);
    lv_CLOG        varchar2(3);
    lv_codtdoc     varchar2(1);
    lc_pendoc      char(12);
    lv_pendoc      varchar2(15);
    lv_penom       varchar2(1500);
    lv_hora        varchar2(8);
    ln_SIMC        number(12, 2) := 0;
    ln_SVITM       number(12, 2) := 0;
    ln_SPVI        number(12, 2) := 0;
    lv_TXML        varchar2(3);
    lv_ubgCli      varchar2(6);
    lv_sngc13dir   varchar2(500);
    lv_urb         varchar2(100);
    lv_fst071dsc1  varchar2(500);
    lv_locnom1     varchar2(500);
    lv_depnom1     varchar2(500);
    lv_cpai        varchar2(2);
    lv_PNETU       varchar2(3); ------------
    lc_oneroso     varchar2(1);
    ln_VVUIG       NUMBER; --(12):= 0;
    lv_desconce    varchar2(500);
    lv_infpredio   varchar2(500);
    ln_PRVIT       number(15, 2) := 0;
    lv_MEDEM       varchar2(50);
    lv_CSUNA       varchar2(8);
    lv_CPGS1       varchar2(14);
    lv_afecigv     varchar2(2);
    lv_SISC        varchar2(2);
    lv_idtrbsunat  varchar2(4);
    lv_nomtrbsunat varchar2(6);
    lv_codun       varchar2(3);
    ln_MBIM        number(12, 2) := 0;
    ln_TAIMP       number(3, 5) := 0;
    ln_CDLEY       number(4) := 0;
    lv_TELEY       varchar2(200);
    lv_TEXT1       varchar2(1000);
    lv_TEXT2       varchar2(1000);
    lv_TRECV       varchar2(1000);
    lv_TEMPL       varchar2(3);
    lv_SUBJE       varchar2(100);
    lv_VPCVA       varchar2(15);
    lv_NEXP        varchar2(10);
    lv_CIND        varchar2(1);
    lv_partida     varchar2(50);
    lv_NCONT       varchar2(50);
    lv_fecoto      varchar2(10);
    ld_fecoto      date;
    lv_cdisn       varchar2(6);
    lv_direccionH  varchar2(100);
    lv_urbaH       varchar2(50);
    lv_dptoH       varchar2(50);
    lv_provH       varchar2(50);
    lv_distH       varchar2(500);
    ln_MTOTAL      number(12, 2) := 0;
    ln_BAIMP       number(12, 2) := 0;
    ln_MTIMP       number(12, 2) := 0;
    ln_PCIMA       number(12, 2) := 0;
    ln_BSIMP       number(12, 2) := 0;
    ln_VAIMP       number(12, 2) := 0;
    ln_MTINF       number(12, 2) := 0;
    ln_MTGRT       number(12, 2) := 0;
    ln_BSIMPS      number(12, 2) := 0;
    ln_MTOTI       number(12, 2) := 0;
    ln_petdoc      number(2);
    lv_CTPR        varchar(2);
  
    lc_codsunat varchar2(4);
  
    lc_urba char(25);
  
    lc_contrato varchar2(50);
    lv_rzn1     varchar2(30);
    lv_rzn2     varchar2(30);
  
    ln_item number(12);
  
    lc_maxserie char(4); --20180623
    ln_maxcorre number(8);
  
    ln_mtoDifer number(17, 2);
    ln_mtoRedon number(17, 2);
  
    ld_fecSis date; --mod@abr 20180709
    lc_flg466 char(1); --mod@abr 20180905
  
    --
    --------------------------
    cursor aqpa464 is
    
      select *
        from aqpa464 b
       where b.aqpa464hfcon = pd_pgfape ---20180709 dcastro
         and b.aqpa464serie = pc_serie
         and b.aqpa464nro = pn_correlativo
      --where b.aqpa464serie = 'FC02'   and b.aqpa464nro = 46    
       order by AQPA464PGCOD,
                AQPA464HCMOD,
                AQPA464HSUCOR,
                AQPA464HTRAN,
                AQPA464HNREL,
                AQPA464HFCON asc;
  
    --where b.aqpa464pgcod=1 and b.aqpa464hcmod=30and b.aqpa464hsucor=11 and b.aqpa464htran=100 and b.aqpa464hnrel= ---por mientras
    --   order by b.aqpa464hnrel  asc;
  
  begin
  
    begin
    
      for p in aqpa464 loop
      
        /*   Pq_Cr_Factura_Electronica.sp_cr_cobroEfectivo(p.aqpa464pgcod,
                                                            p.aqpa464hcmod,
                                                            p.aqpa464hsucor,
                                                            p.aqpa464htran ,
                                                            p.aqpa464hnrel ,
                                                            p.aqpa464hfcon ,
                                                            p.aqpa464serie ,
                                                            p.aqpa464nro ,
                                                            pn_monto_total_1);
        */
        --mod@abr 20180905 
        --Verifica que no exista en cabecera AQPA466
        lc_flg466 := 'N';
        Begin
          select 'S'
            into lc_flg466
            from aqpa466 a
           where a.aqpa466pgcod = p.aqpa464pgcod
             and a.aqpa466mod = p.aqpa464hcmod
             and a.aqpa466sucor = p.aqpa464hsucor
             and a.aqpa466tran = p.aqpa464htran
             and a.aqpa466rel = p.aqpa464hnrel
             and a.aqpa466con = p.aqpa464hfcon
             and rownum = 1;
        exception
          when others then
            lc_flg466 := 'N';
        end;
        --mod@abr 20180905
        if lc_flg466 = 'N' then
          --mod@abr 20180905
        
          Pq_Cr_Factura_Electronica.sp_cr_cobroEfectivoNC(p.aqpa464pgcod,
                                                          p.aqpa464hcmod,
                                                          p.aqpa464hsucor,
                                                          p.aqpa464htran,
                                                          p.aqpa464hnrel,
                                                          p.aqpa464hfcon,
                                                          p.aqpa464serie,
                                                          p.aqpa464nro,
                                                          pn_monto_total_1); --20180623
        
          --validar concepto 
          begin
            select 'S'
              into lc_flg
              from fst198 a
             where a.tp1cod = 1
               and a.tp1cod1 = 11120
               and a.tp1corr1 = 1
               and a.tp1corr2 = 3
               and a.tp1corr3 >= 1
               and a.tp1nro1 = p.aqpa464cpcod;
          exception
            when others then
              lc_flg := 'N';
          end;
        
          /*mod@hasl 2018.10.17 
          --Obtener codigo de sunat
            begin
               select lpad(a.tp1nro2, 4, '0')
               into lc_codsunat 
                 from fst198 a
                where a.tp1cod = 1
                  and a.tp1cod1 = 11120
                  and a.tp1corr1 = 1
                  and a.tp1corr2 = 500
                  and a.tp1nro1 = p.aqpa464hsucor;
                  exception
                      when others then null;
            end;
            */
        
          begin
            null;
            --result := pq_cr_factura_electronica.dintex(pn_monto_total_1);      --mod@hasl 2018.10.03 comentado
            --      pq_cr_conversion_tn.sp_cr_numeros_a_letras(pn_monto_total_1,result); --mod@hasl 2018.10.03 nuevo proceso.
          end;
        
          pn_ctnro := p.aqpa464cta;
          ln_mda   := p.aqpa464mda;
        
          if lc_flg = 'N' then
            --inserte conceptos de deuda como fila
          
            pq_cr_factura_electronica.sp_cr_Dif_Red(pc_AQPA465PGCOD    => p.aqpa464pgcod,
                                                    pc_AQPA465MOD      => p.aqpa464hcmod,
                                                    pc_AQPA465SUCOREND => p.aqpa464hsucor,
                                                    pc_AQPA465TRAN     => p.aqpa464htran,
                                                    pc_AQPA465REL      => p.aqpa464hnrel,
                                                    pd_AQPA465CON      => p.aqpa464hfcon,
                                                    pn_dif             => ln_mtoDifer,
                                                    pn_red             => ln_mtoRedon);
          
            ln_mtoconce_ant := to_number(trim(p.aqpa464txtord),
                                         '99999999999999999.99'); --20180622
          
            if p.aqpa464txoren - 100 = 18 then
              ln_mtoconce := to_number(ln_mtoconce_ant) -
                             nvl(ln_mtoDifer, 0) - nvl(ln_mtoRedon, 0);
            else
              ln_mtoconce := to_number(ln_mtoconce_ant); ---verficar 222 
            end if;
          
            if ln_mtoconce <> 0 then
              begin
                -- Call the procedure
                pq_cr_factura_electronica.sp_num_documento(p.aqpa464cta,
                                                           lc_pendoc,
                                                           lv_penom,
                                                           pv_tdoc,
                                                           pn_pais,
                                                           ln_petdoc,
                                                           pd_pgfape2);
              end;
            
              begin
                -- Call the procedure
                pq_cr_factura_electronica.sp_dir_cliente(lc_pendoc,
                                                         ln_petdoc,
                                                         pn_pais,
                                                         lv_sngc13dir,
                                                         lv_fst071dsc1,
                                                         lv_locnom1,
                                                         lv_depnom1,
                                                         lv_ubgCli); ---dni  pn_pendoc
              end;
              --mod@hasl 2018.10.17 
              begin
                pq_cr_factura_electronica.sp_cr_datos_cliente(lc_pendoc, --PE PAIS DEL CLIENTE
                                                              ln_petdoc, --PE TIPO DE DOCUMENTO DEL CLIENTE
                                                              pn_pais, --PE DOCUMENTO DEL CLIENTE
                                                              lv_correo, --PS CORREO DEL CLIENTE
                                                              lv_cpai, --PS PAIS DEL CLIENTE SEGUN SUNAT - GUIA
                                                              lv_codtdoc --PS TIPO DOCUMENTO CLIENTE SEGUN SUNAT - GUIA
                                                              );
              
              end;
              /*
              --Codigo del Tipo de Comprobante
              begin
                   select '0'||trim(to_char(a.tp1nro1))
                     into lv_codtipo
                     from fst198 a
                    where a.tp1cod   = 1
                      and a.tp1cod1  = 11120
                      and a.tp1corr1 = 1
                      and a.tp1corr2 = 7
                      and a.tp1corr3 = 2;
              exception
                      when others then null;
              end;
              */
              /* mod@hasl 2018.10.18 - 
              --Codigo tipo moneda
              begin
                  select trim(a.tp1desc)
                    into lv_tipomda
                    from fst198 a
                   where a.tp1cod   =  1
                     and a.tp1cod1  =  11120
                     and a.tp1corr1 =  1
                     and a.tp1corr2 =  8
                     and a.tp1corr3 >= 1 
                     and a.tp1nro1  =  ln_mda;
              exception
                      when others then null;
              end;
              */
            
              /* mod@hasl 2018.10.18
                    --Codigo tipo documento cliente
                    begin
                        select to_char(a.tp1nro1)
                          into lv_codtdoc
                          from fst198 a
                         where a.tp1cod   = 1
                           and a.tp1cod1  = 11120
                           and a.tp1corr1 = 1
                           and a.tp1corr2 = 4
                           and a.tp1nro2  = ln_petdoc;
                    exception
                            when others then null;
                    end;
              */
              /*  mod@hasl 2018.10.17  
                  --Correo del cliente
                  lv_correo := null;
                  begin
                      select substr(a.pextxt,1,INSTR(a.pextxt,'\',1)-1)
                into lv_correo
                          from fsx001 a
              where a.pepais = pn_pais
                           and a.petdoc = ln_petdoc
                           and a.pendoc = lc_pendoc
                           and a.txcod  = 0
              order by a.pexren desc;   
                  exception
                      when others then null;
                  end;
                  */
            
              --nro item
              ln_item := 0;
              begin
                select max(a.aqpa460item)
                  into ln_item
                  from aqpa460 a
                 where a.aqpa460seri = p.aqpa464serie
                   and a.aqpa460num = p.aqpa464nro;
              exception
                when too_many_rows then
                  begin
                    select max(a.aqpa460item)
                      into ln_item
                      from aqpa460 a
                     where a.aqpa460seri = p.aqpa464serie
                       and a.aqpa460num = p.aqpa464nro
                       and rownum = 1;
                  exception
                    when others then
                      null;
                  end;
                when no_data_found then
                  ln_item := 0;
                when others then
                  null;
              end;
              ln_nroitem := nvl(ln_item, 0) + 1;
            
              --descripcion conceptos
              lv_desconce := trim(p.aqpa464vchr);
            
              --Codigo de plantilla
              lc_codpla := 'EST';
              /*     
              --Codigo tipo doc empresa
              begin
                  select trim(a.tp1nro1)
                    into ln_docemp
                    from fst198 a
                   where a.tp1cod   = 1
                     and a.tp1cod1  = 11120
                     and a.tp1corr1 = 1
                     and a.tp1corr2 = 6
                     and a.tp1corr3 = 4;
              exception
                     when others then null;
              end;
              
                      
              begin
                   select to_char(a.tp1nro1)
                     into lv_tipemp
                     from fst198 a
                    where a.tp1cod   = 1
                      and a.tp1cod1  = 11120
                      and a.tp1corr1 = 1
                      and a.tp1corr2 =4
                      and a.tp1corr3 >= 1
                      and a.tp1nro2  = ln_docemp;
                    
              exception
                     when others then null;     
              end;
              */
              /*
              --ruc caja
              begin
                    select trim(a.tp1desc)
                      into lv_ruc
                      from fst198 a
                     where a.tp1cod   = 1
                       and a.tp1cod1  = 11120
                       and a.tp1corr1 = 1
                       and a.tp1corr2 = 6
                       and a.tp1corr3 = 1;
              exception
                     when others then null;     
              end;
              
              --NOMBRE COMERCIAL caja
              begin
                    select a.tp1desc
                      into lv_NCOM
                      from fst198 a
                     where a.tp1cod   = 1
                       and a.tp1cod1  = 11120
                       and a.tp1corr1 = 1
                       and a.tp1corr2 = 6
                       and a.tp1corr3 = 5;
              exception
                     when others then null;     
              end;
              
              
              --Ubigeo caja
              begin
                    select trim(a.tp1desc)
                      into lv_ubg
                      from fst198 a
                     where a.tp1cod   = 1
                       and a.tp1cod1  = 11120
                       and a.tp1corr1 = 1
                       and a.tp1corr2 = 6
                       and a.tp1corr3 = 6;
              exception
                     when others then null;     
              end;
              */
              ----Obtener el numero y serie de la transaccion 
              begin
                select max(a.aqpa463serie), max(a.aqpa463corre)
                  into lc_maxserie, ln_maxcorre
                  from aqpa463 a
                 where a.aqpa463pgcod = p.aqpa464pgcod --1
                   and a.aqpa463hcmod = p.aqpa464hcmod --30
                   and a.aqpa463hsucor = p.aqpa464hsucor --98
                   and a.aqpa463htran = p.aqpa464htran --100
                   and a.aqpa463hnrel = p.aqpa464hnrel --5
                   and a.aqpa463hfcon = p.aqpa464hfcon;
              
              exception
                when others then
                  null;
              end;
            
              begin
                select trim(a.aqpa463serie),
                       trim(a.aqpa463corre),
                       a.aqpa463mda
                  into pc_aqpa463serie, pc_aqpa463corre, pn_moneda
                  from aqpa463 a
                 where a.aqpa463pgcod = p.aqpa464pgcod --1
                   and a.aqpa463hcmod = p.aqpa464hcmod --30
                   and a.aqpa463hsucor = p.aqpa464hsucor --98
                   and a.aqpa463htran = p.aqpa464htran --100
                   and a.aqpa463hnrel = p.aqpa464hnrel --5
                   and a.aqpa463hfcon = p.aqpa464hfcon
                   and a.aqpa463serie = lc_maxserie
                   and a.aqpa463corre = ln_maxcorre
                   and rownum = 1;
              
              exception
                when others then
                  null;
              end;
            
              /* hasl
              begin
                  select '0'||trim(to_char(a.tp1nro1))
                  into lv_codcmen
                   from fst198 a
                  where a.tp1cod   = 1
                    and a.tp1cod1  = 11120
                    and a.tp1corr1 = 1 
                    and a.tp1corr2 = 9
                    and a.tp1corr3 = 1;
                  exception
                    when others then null;  
              end;
              */
              /* hasl
              begin
                  select trim(a.tp1desc)
                  into lc_sustento
                   from fst198 a
                  where a.tp1cod   = 1
                    and a.tp1cod1  = 11120
                    and a.tp1corr1 = 1 
                    and a.tp1corr2 = 9
                    and a.tp1corr3 = 3;
                  exception
                    when others then null;  
              end;
              
              begin
                  select trim(a.tp1nro1)
                  into ln_codtributario
                   from fst198 a
                  where a.tp1cod   = 1
                    and a.tp1cod1  = 11120
                    and a.tp1corr1 = 1
                    and a.tp1corr2 = 10 
                    and a.tp1corr3 = 3;    
                  exception
                    when others then null;
              end;
              */
              ------------------------------llenado 2 parte nc
            
              -----------------Descripcion del pais 
              /* mod@hasl
              begin
                    Select trim(a.tp1desc)
                    Into lv_CPAIS
                        from fst198 a
                       where a.tp1cod   = 1
                         and a.tp1cod1  = 11120
                         and a.tp1corr1 = 1 
                         and a.tp1corr2 = 15
                         and a.tp1corr3 = 1;
                         exception
                       when others then null;
               end; 
               */
              --tipo de plantilla
              lc_tpla := 'EST';
              /*   hasl
              ------C?digo de Tipo de operaciones
              begin
              
                select a.tp1nro1
                  into ln_tipope
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 11
                   and a.tp1corr3 = 1;
                    exception
                           when others then null;
              end;
              */
            
              --monto conceptos
              -- ln_mtoconce := to_number(replace(trim(p.aqpa463txtord),'.',','));
              -- ln_mtoconce := to_number(trim(p.aqpa464vimp));  COMENTADO 20160823
            
              --C?digo de plantilla de correo
              lc_cdtpla := 'EST';
            
              ---Sistema de emisi?n del comprobante por ejm ERP
              lc_sistemi := 'BANTOT';
            
              ----Codigo del tipo de documento de identificaci?n del Receptor
              begin
                select a.tp1nro1
                  into ln_tpdocum
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 4
                   and a.tp1nro2 = pv_petdoc;
              exception
                when others then
                  null;
              end;
              /*
              -----Nota de operacion 
              begin
                 select  a.tp1desc
                 into lc_desopera
                          from fst198 a
                         where a.tp1cod   = 1
                           and a.tp1cod1  = 11120
                           and a.tp1corr1 = 1
                           and a.tp1corr2 = 9
                           and a.tp1corr3 = 3;
                 exception
                           when others then null;
              end;
              */
              -------onerosidad
              /*
              begin
                
               select a.tp1nro1
               into ln_onero
                          from fst198 a
                         where a.tp1cod   = 1
                           and a.tp1cod1  = 11120
                           and a.tp1corr1 = 1
                           and a.tp1corr2 = 12
                           and a.tp1corr3 = 3;
                    exception
                           when others then null;
              end;
              */
              --Importe total de un tributo para este item
            
              ln_AFIGV := 0;
              /*    hasl
              -----Afectaci?n del IGV  
              begin
                       select a.tp1nro1
                       into ln_afecigv
                          from fst198 a
                         where a.tp1cod   = 1
                           and a.tp1cod1  = 11120
                           and a.tp1corr1 = 1 
                           and a.tp1corr2 = 13
                           and a.tp1corr3 = 1;
                     exception
                         when others then null;      
                       
               end;
               
                 ---------Identificaci?n del tributo seg?n cat?logo SUNAT
               begin
                      select trim(a.tp1nro1),trim(a.tp1desc)
                       into ln_idtrbsunat, lc_nomtrbsunat
                           from fst198 a
                          where a.tp1cod = 1
                            and a.tp1cod1 = 11120
                            and a.tp1corr1 = 1
                            and a.tp1corr2 = 14
                            and a.tp1corr3 = 1;
                             exception
                         when others then null;
                end;
                
                ----------C?digo del Tipo de Tributo
                 begin
                       select trim(a.tp1desc)
                       into pc_destiptrb
                           from fst198 a
                          where a.tp1cod = 1
                            and a.tp1cod1 = 11120
                            and a.tp1corr1 = 1
                            and a.tp1corr2 = 14
                            and a.tp1corr3 = 2;
                             exception
                         when others then null;
                  end;
                */
              begin
                select a.tp1desc
                  into lc_forpag
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 8
                   and a.tp1nro1 = pn_moneda; ---asignar variable        
              exception
                when others then
                  null;
              end;
              /*hasl
               ------Observacion del Termino de pago
              begin
                  select a.tp1desc
                  into lc_despago
                     from fst198 a
                    where a.tp1cod   = 1
                      and a.tp1cod1  = 11120
                      and a.tp1corr1 = 1 
                      and a.tp1corr2 = 16
                      and a.tp1corr3 = 1;
                       exception
                      when others then null;
                               
               end;
               */
              ---------------------------------------campos parte 2
              ----------hora de transacion 
              begin
                select trim(a.aqpa464vchr)
                  into lv_hora
                  from aqpa464 a
                 where a.aqpa464pgcod = p.aqpa464pgcod
                   and a.aqpa464hcmod = p.aqpa464hcmod
                   and a.aqpa464hsucor = p.aqpa464hsucor
                   and a.aqpa464htran = p.aqpa464htran
                   and a.aqpa464hnrel = p.aqpa464hnrel
                   and a.aqpa464hfcon = p.aqpa464hfcon
                   and a.aqpa464serie = p.aqpa464serie
                   and a.aqpa464nro = p.aqpa464nro
                   and a.aqpa464vchr like '%:%';
              exception
                when others then
                  null;
                
              end;
            
              --mod@abr 20180907
              begin
                select pgfape into ld_fecSis from fst017 where pgcod = 1;
              exception
                when others then
                  null;
              end;
              if lv_hora is null then
              
                if ld_fecSis = p.aqpa464hfcon then
                
                  begin
                    select a.ithora
                      into lv_hora
                      from fsd015 a
                     where a.pgcod = p.aqpa464pgcod
                       and a.itsuc = p.aqpa464hsucor
                       and a.itmod = p.aqpa464hcmod
                       and a.ittran = p.aqpa464htran
                       and a.itnrel = p.aqpa464hnrel;
                  exception
                    when others then
                      null;
                  end;
                
                else
                  begin
                    select a.hhora
                      into lv_hora
                      from fsh015 a
                     where a.pgcod = p.aqpa464pgcod
                       and a.hsucor = p.aqpa464hsucor
                       and a.hcmod = p.aqpa464hcmod
                       and a.htran = p.aqpa464htran
                       and a.hnrel = p.aqpa464hnrel
                       and a.hfcon = p.aqpa464hfcon;
                  exception
                    when others then
                      null;
                  end;
                end if;
              
              end if;
              --mod@br 20180907
            
              lv_glosa  := null;
              lv_TPLA   := 'EST';
              lv_TPLCO  := 'EST';
              ln_SIMC   := null;
              ln_SVITM  := pn_monto_total_1;
              ln_SPVI   := pn_monto_total_1;
              lv_TXML   := '2.1';
              lv_urb    := null;
              lv_PNETU  := 'NIU';
              ln_cant   := 1;
              lv_CTPR   := '01';
              ln_VVUIG  := ln_mtoconce;
              ln_PRVIT  := ln_mtoconce;
              lv_MEDEM  := 'UND';
              ln_ITITM  := null;
              ln_IMPTB  := null;
              ln_IMPEX  := null;
              lv_SISC   := null;
              lv_codun  := 'FRE';
              ln_MBIM   := ln_mtoconce;
              ln_TAIMP  := null;
              ln_CDLEY  := 1000;
              lv_TELEY  := result;
              lv_TEXT2  := lpad(to_char(p.aqpa464cta), 9, 0) ||
                           lpad(to_char(p.aqpa464mda), 3, 0) ||
                           lpad(to_char(p.aqpa464ope), 9, 0);
              lv_TRECV  := lv_correo;
              lv_TEMPL  := 'EST';
              lv_SUBJE  := '0' || trim(lv_codtipo) || '-' ||
                           pc_aqpa463serie || '-' ||
                           trim(to_char(pc_aqpa463corre));
              lv_VPCVA  := null;
              lv_NEXP   := '0';
              lv_CIND   := '0';
              ln_MTOTAL := null;
              ln_BAIMP  := null;
              ln_MTIMP  := null;
              ln_PCIMA  := null;
              ln_BSIMP  := null;
              ln_VAIMP  := null;
              ln_MTINF  := pn_monto_total_1;
              ln_MTGRT  := null;
              ln_BSIMPS := null;
              ln_MTOTI  := null;
              lv_CSUNA  := '84121901';
              lc_urba   := NULL;
              lv_COMA   := to_char(p.aqpa464hfcon, 'yymmdd') ||
                           lpad(to_char(p.aqpa464hsucor), 3, 0) ||
                           lpad(to_char(p.aqpa464hcmod), 3, 0) ||
                           lpad(to_char(p.aqpa464htran), 3, 0) ||
                           lpad(to_char(p.aqpa464hnrel), 4, 0);
              --------------------------Datos empresa guia proceso
              /*
              Begin
                 ---nombre de caja arequipa
                 select a.tp1desc
                 into lc_nombre_empresa
                   from fst198 a
                  where a.tp1cod = 1
                    and a.tp1cod1 = 11120
                    and a.tp1corr2 = 6
                    and a.tp1corr3 = 5;
                   exception
                     when others then null;
               End;
               
                --Producto del credito
               begin
                    select to_char(p.aqpa464mod)||'-'||trim(a.tonom)
                      into lv_TEXT1
                      from fst004 a
                     where a.modulo = p.aqpa464mod
                       and a.totope = p.aqpa464top;
                     
               exception
                          when others then null;
               end;
               
              
              --direccion
               begin
                 select to_char(a.tp1desc)
                   into lv_CALLE
                   from fst198 a
                  where a.tp1cod   = 1
                    and a.tp1cod1  = 11120
                    and a.tp1corr1 = 1
                    and a.tp1corr2 = 6
                    and a.tp1corr3 = 2;
                   
               exception
                 when others then null;
               end;
              
               --telefono
               begin
                 select trim(to_char(a.tp1desc))
                   into lv_TELF
                   from fst198 a
                  where a.tp1cod   = 1
                    and a.tp1cod1  = 11120
                    and a.tp1corr1 = 1
                    and a.tp1corr2 = 6
                    and a.tp1corr3 = 3;
               exception
                 when others then null;
               end;
               
               Begin
                 ---web de caja arequipa
                 select trim(a.tp1desc)
                 into lv_web
                   from fst198 a
                  where a.tp1cod = 1
                    and a.tp1cod1 = 11120
                    and a.tp1corr2 = 6
                    and a.tp1corr3 = 12;
                   exception
                     when others then null;
              End;
              
               --departamento
               begin
                 select to_char(a.tp1desc)
                   into lv_DEPA
                   from fst198 a
                  where a.tp1cod   = 1
                    and a.tp1cod1  = 11120
                    and a.tp1corr1 = 1
                    and a.tp1corr2 = 6
                    and a.tp1corr3 = 7;
                   
               exception
                 when others then null;
               end;
              
               --provincia
               begin
                 select to_char(a.tp1desc)
                   into lv_PROV
                   from fst198 a
                  where a.tp1cod   = 1
                    and a.tp1cod1  = 11120
                    and a.tp1corr1 = 1
                    and a.tp1corr2 = 6
                    and a.tp1corr3 = 8;
                   
               exception
                 when others then null;
               end;
              
               --distrito
               begin
                 select to_char(a.tp1desc)
                   into lv_DIST
                   from fst198 a
                  where a.tp1cod   = 1
                    and a.tp1cod1  = 11120
                    and a.tp1corr1 = 1
                    and a.tp1corr2 = 6
                    and a.tp1corr3 = 9;
                   
               exception
                 when others then null;
               end;
              
              --razon social
               
               begin
                 select to_char(a.tp1desc)
                   into lv_rzn1
                   from fst198 a
                  where a.tp1cod   = 1
                    and a.tp1cod1  = 11120
                    and a.tp1corr1 = 1
                    and a.tp1corr2 = 6
                    and a.tp1corr3 = 10;
                   
               exception
                 when others then null;
               end;
              
               begin
                 select to_char(a.tp1desc)
                   into lv_rzn2
                   from fst198 a
                  where a.tp1cod   = 1
                    and a.tp1cod1  = 11120
                    and a.tp1corr1 = 1
                    and a.tp1corr2 = 6
                    and a.tp1corr3 = 11;
                   
               exception
                 when others then null;
               end;
               */
              lv_rzn := trim(lv_rzn1) || ' ' || trim(lv_rzn2);
              /*
              --provincia
              begin
                select to_char(a.tp1desc)
                  into lv_PROV
                  from fst198 a
                 where a.tp1cod   = 1
                   and a.tp1cod1  = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 8;
                  
              exception
                when others then null;
              end;
              */
              /* mod@hasl 2018.10.17 
                    --Pais del cliente
                     
                     begin
                       select trim(a.tp1desc)
                         into lv_cpai
                         from fst198 a
                        where a.tp1cod   =  1
                          and a.tp1cod1  =  11120 
                          and a.tp1corr1 =  1
                          and a.tp1corr2 =  20
                          and a.tp1NRO1  = pn_pais;
                     exception
                            when others then null;
                     end;
              */
              /*  
                -------Codigo de tipo de importe de afectacion
              Begin
                   select to_char(a.tp1nro1)
                   into lc_oneroso
                       from fst198 a
                      where a.tp1cod   = 1
                        and a.tp1cod1  = 11120
                        and a.tp1corr1 = 1  
                        and a.tp1corr2 = 12
                        and a.tp1corr3 = 3;
                        exception
                      when others then null;
               End;
               */
              ---------informacion del predio
              begin
                pq_cr_factura_electronica.sp_cr_detalle_predio(pc_aqpa463mod => p.aqpa464mod, --p.aqpa463mod,
                                                               pc_aqpa463suc => p.aqpa464suc,
                                                               pc_aqpa463mda => p.aqpa464mda,
                                                               pc_aqpa463pap => p.aqpa464pap,
                                                               pc_aqpa463cta => p.aqpa464cta,
                                                               pc_aqpa463ope => p.aqpa464ope,
                                                               pc_aqpa463sbo => p.aqpa464sbo,
                                                               pc_aqpa463top => p.aqpa464top,
                                                               pc_partida    => lv_partida,
                                                               pc_contrato   => lc_contrato,
                                                               pc_direccion  => lv_direccionH,
                                                               pc_urba       => lv_urbaH,
                                                               pc_dpto       => lv_dptoH,
                                                               pc_prov       => lv_provH,
                                                               pc_dist       => lv_distH,
                                                               pc_ubigeo     => lv_cdisn);
              
              end;
            
              if lv_cdisn is null then
                --20180626
                lv_cdisn      := lv_ubgCli;
                lv_urbaH      := substr(lv_urb, 1, 25);
                lv_dptoH      := substr(lv_depnom1, 1, 30);
                lv_provH      := substr(lv_locnom1, 1, 30);
                lv_distH      := substr(lv_fst071dsc1, 1, 30);
                lv_direccionH := substr(lv_sngc13dir, 1, 100);
              end if;
            
              lc_contrato := lpad(to_char(p.aqpa464cta), 9, 0) ||
                             lpad(to_char(p.aqpa464mda), 3, 0) ||
                             lpad(to_char(p.aqpa464ope), 9, 0); --lv_text2; --numero credito
              lv_NCONT    := lc_contrato;
            
              ld_fecoto := pq_cr_factura_electronica.fn_fecha_desembolso(pc_aqpa463cta => p.aqpa464cta,
                                                                         pc_aqpa463ope => p.aqpa464ope);
            
              lv_fecoto := to_char(ld_fecoto, 'DD-MM-YYYY');
              --agregar a info predio G74.1, G74.2
              lv_infpredio := '0' || '0' || lv_partida || '|' ||
                              lc_contrato || '|' || lv_fecoto || '|' ||
                              lv_direccionH || '|' || lv_urbaH || '|' ||
                              lv_provH || '|' || lv_distH || '|' ||
                              lv_dptoH;
              lv_pendoc    := lc_pendoc;
              /* 
              -----Afectaci?n del IGV  
              begin
                   select to_char(a.tp1nro1)
                   into lv_afecigv
                      from fst198 a
                     where a.tp1cod   = 1
                       and a.tp1cod1  = 11120
                       and a.tp1corr1 = 1 
                       and a.tp1corr2 = 13
                       and a.tp1corr3 = 1;
                       exception
                     when others then null;
                   
              end;
              */
            
              /* 
              ---------Identificaci?n del tributo seg?n cat?logo SUNAT
              begin
                   select to_char(a.tp1nro1),trim(a.tp1desc)
                    into lv_idtrbsunat, lv_nomtrbsunat
                        from fst198 a
                       where a.tp1cod = 1
                         and a.tp1cod1 = 11120
                         and a.tp1corr1 = 1
                         and a.tp1corr2 = 14
                         and a.tp1corr3 = 1;
              end;
              */
            
              ----------tipo de documento de referencia
              /*
              begin 
                
              select '0'||to_char(a.tp1nro1)
                    into lc_codtipo
                        from fst198 a
                       where a.tp1cod = 1
                         and a.tp1cod1 = 11120
                         and a.tp1corr1 = 1
                         and a.tp1corr2 = 7
                         and a.tp1corr3 = 1; --Factura  
              exception
                         when others then null;
              end; 
              */
              --mod@abr 20180903 modificacion de ubigeo TEMPORAL
              lv_sngc13dir  := trim(lv_sngc13dir) || '- ' ||
                               trim(lv_fst071dsc1) || ' - ' ||
                               trim(lv_locnom1) || ' - ' ||
                               trim(lv_depnom1);
              lv_depnom1    := null;
              lv_locnom1    := null;
              lv_fst071dsc1 := null;
            
              --mod@abr 20180903 modificacion de ubigeo TEMPORAL
              --mod@abr 20180905
              if lv_correo is null then
                lv_correo := 'Reportefactele@cajaarequipa.pe';
              end if;
            
              if lv_TRECV is null then
                lv_TRECV := 'Reportefactele@cajaarequipa.pe';
              end if;
              --mod@abr 20180905
            
              insert into AQPA460
                (AQPA460TDOC, --Codigo del Tipo de Documento de Identidad oENEmpresa
                 AQPA460RUCC, --N?mero de documento de identidad del emisor oENEmpresa
                 AQPA460RSOC, --Apellidos y nombres o denominaci?n o raz?n social oENEmpresa
                 AQPA460CDIS, --Codigo de UBIGEO oENEmpresa
                 AQPA460NCOM, --Nombre Comercial oENEmpresa
                 AQPA460CALLE, --Direcci?n completa y detallada oENEmpresa
                 AQPA460URBA, --Urbanizacion o Zona  oENEmpresa
                 AQPA460DEPA, --Departamento, expresado textualmente  oENEmpresa
                 AQPA460PROV, --Provincia, expresarlo textualmente   oENEmpresa
                 AQPA460DIST, --Distrito, expresarlo textualmente oENEmpres
                 AQPA460TELF, --Telefono de la Empresa Emisora oENEmpres
                 AQPA460WEB, --Pagina Web del Emisor oENEmpres           
                 AQPA460CPAIS, --Codigo del Pais del Emisor oENEmpres
                 AQPA460CESUN, --C?digo del establecimiento de Sunat  oENEmpres
                 AQPA460SERI, --Serie del comprobante.  Datos del Comprobante
                 AQPA460NUM, --Numero Correlativo del comprobante. Datos del Comprobante
                 AQPA460FEMI, --Fecha de Emision del Comprobante Datos del Comprobante
                 AQPA460TCOMF, --Codigo del Tipo de Comprobante Datos del Comprobante
                 AQPA460MONE, --Codigo del Tipo de Moneda Datos del Comprobante
                 AQPA460CORRR, --El correo electr?nico del Receptor  Datos del Comprobante
                 AQPA460MGLO, --Multiples Informaci?n adicional u observacion del comprobante.  Datos del Comprobante
                 AQPA460COMA, --Numero Interno del Comprobante Datos del Comprobante
                 AQPA460TPLA, --Tiplo de Plantilla  Datos del Comprobante
                 --  AQPA460TOPE, --C?digo de Tipo de operaciones Datos del Comprobante
                 AQPA460TPLCO, --C?digo de plantilla de correo  Datos del Comprobante
                 AQPA460CLOG, --C?digo del tipo de Logo Datos del Comprobante
                 AQPA460TDOCR, --Codigo del tipo de documento de identificaci?n del Receptor Datos del Comprobante
                 AQPA460NRUC, --N?mero de documento de identificaci?n Datos del Comprobante
                 AQPA460RASOC, --Apellidos y nombres o denominaci?n o raz?n social Datos del Comprobante
                 AQPA460IMPT, --Importe total  a pagar Datos del Comprobante
                 AQPA460HEMI, --Hora de Emisi?n  Datos del Comprobante
                 AQPA460SIMC, --Suma de todos los impuestos del comprobante.  Datos del Comprobante
                 --  AQPA460SVITM, --Suma del valor de venta total de todos los items   Datos del Comprobante
                 --  AQPA460SPVI,  --Suma de los precios de venta total de todos los items  Datos del Comprobante
                 AQPA460TXML, -- Indica el tipo de XML que se generar? Datos del Comprobante
                 AQPA460SDREF, --Serie documento al que se aplica la nota. ENComprobanteMotivoDocumento
                 AQPA460NDREF, --Numero  documento al que se aplica la nota.  ENComprobanteMotivoDocumento
                 AQPA460CMEM, --C?digo por el cual se emite la nota.  ENComprobanteMotivoDocumento
                 AQPA460SUST, --Sustento ENComprobanteMotivoDocumentoSustento
                 AQPA460SERIE, --Serie del comprobante referenciado. Referencia a un comprobante
                 AQPA460NRO, --N?mero del comprobante referenciado Referencia a un comprobante
                 AQPA460TCOMP, --C?digo del tipo de comprobante.  Referencia a un comprobante
                 AQPA460FDREF, --Fecha de emisi?n del comprobante referenciado. Referencia a un comprobante  
                 AQPA460CDIST, --C?digo de UBIGEO Datos adicionales del Receptor
                 AQPA460CALL, --Direcci?n completa y detallada Datos adicionales del Receptor
                 AQPA460URB, --Urbanizacion o Zona   Datos adicionales del Receptor
                 AQPA460DEP, --Departamento Datos adicionales del Receptor
                 AQPA460PRV, --Provincia   Datos adicionales del Receptor
                 AQPA460DST, --Distrito Datos adicionales del Receptor
                 AQPA460CPAI, --C?digo del Pa?s  Datos adicionales del Receptor
                 AQPA460ITEM, --N?mero de orden del Item ENComprobanteDetalle 
                 AQPA460PNETU, --Unidad de medida de los bienes vendidos por item (UN/ECE rec 20) ENComprobanteDetalle 
                 AQPA460CANTF, --Cantidad de unidades vendidas pot item (Q)  ENComprobanteDetalle 
                 AQPA460TOTAL, --Importe monetario que es el total de la l?nea de detalle, incluyendo variaciones de precio (subvenciones, cargos o descuentos) pero sin impuestos.  ENComprobanteDetalle 
                 AQPA460DETE, --Codigo de identificaci?n de Onerosidad del Item ENComprobanteDetalle 
                 AQPA460CTPR, --Codigo de tipo de importe de afectacion ENComprobanteDetalle 
                 /*ok */
                 AQPA460VVUN, --Valores de venta unitarios por item (VU) no incluye impuestos  ENComprobanteDetalle 
                 /*campos probl*/
                 AQPA460VVUIG, --Precio de Venta Unitario (Incluye impuestos)  ENComprobanteDetalle 
                 AQPA460DESC, -- Descripcion del producto ENComprobanteDetalle 
                 AQPA460MFUN, --Multi Descripcion,  puede tener varias desccripciones ENComprobanteDetalle 
                 AQPA460PRVIT, --Es el precio de venta ENComprobanteDetalle 
                 AQPA460MEDEM, --Unidad medida del emisor ENComprobanteDetalle 
                 AQPA460CSUNA, --C?digo producto establecido por Sunat   ENComprobanteDetalle 
                 AQPA460CPGS1, --C?digo de producto GS1  ENComprobanteDetalle 
                 AQPA460ITITM, --Impuesto total del item ENComprobanteDetalle 
                 AQPA460IMPTB, --Importe total de un tributo para este item Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                 AQPA460IMPEX, ---Importe expl?cito a tributar ( = Tasa Porcentaje * Base Imponible)   Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                 AQPA460AFIGV, --Afectaci?n del IGV  Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                 AQPA460SISC, --Sistema de ISC  (01=Especifico; 02= al valor; 03=PV al p?blico)  Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                 /*ojo*/
                 AQPA460CODTB, --Identificaci?n del tributo seg?n cat?logo SUNAT Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                 AQPA460DSTRB, --Nombre del Tributo (IGV, IVAP, ISC)  Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                 AQPA460CODUN, --C?digo del Tipo de Tributo (UN/ECE 5153) Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                 AQPA460MBIM, --Monto base del impuesto Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                 AQPA460TAIMP, --Tasa aplicada del impuesto  Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                 AQPA460CDLEY, --Codigo de la Leyenda Utilizado para Leyendas
                 AQPA460TELEY, --Texto de la leyenda  Utilizado para Leyendas
                 AQPA460TEXT1, --Texto libre 1 : Producto  Informaci?n adicional para la visualizacion de representaciones impresas, antes definido por el integrador.
                 AQPA460TEXT2, --Texto libre 2 : N?mero de Cr?dito Informaci?n adicional para la visualizacion de representaciones impresas, antes definido por el integrador.
                 AQPA460TRECV, --Correo del receptor Utilizado para enviar correos adicionales con copia al Correo del Receptor, ingresado en ENComprobante.Correo
                 AQPA460TEMPL, --C?digo de Tipo de Plantilla  Utilizado para enviar correos adicionales con copia al Correo del Receptor, ingresado en ENComprobante.Correo
                 AQPA460SUBJE, --Asunto del correo Utilizado para enviar correos adicionales con copia al Correo del Receptor, ingresado en ENComprobante.Correo
                 --  AQPA460VPCVA, --Placa del vehiculo Informaci?n adicional del item
                 AQPA460NEXP, --N?mero de Expediente Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                 AQPA460CIND, --C?digo de indicador  Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                 AQPA460NPART, --N?mero de Partida Registral  Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                 AQPA460NCONT, --N?mero de contrato  Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                 AQPA460FOTRC, --Fecha de Otorgo de cr?dito   Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                 AQPA460CDISN, --C?digo de Ubigeo   Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                 AQPA460DIREH, --Direcci?n   Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                 AQPA460URBH, --Urbanizaci?n Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                 AQPA460PRVH, --Provincia   Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                 AQPA460DSTH, --Distrito   Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                 AQPA460DEPTH, --Departamento Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                 AQPA460MTOTAL, --Monto total Gravado (Sin impuesto)  Informaci?n de gravada                           
                 AQPA460BAIMP, --Base del impuesto  IGV del Gravado
                 AQPA460MTIMP, --Monto total solo del impuesto   IGV del Gravado
                 AQPA460PCIMA, --Porcentaje del impuesto aplicado  IGV del Gravado
                 AQPA460BSIMP, --Base del impuesto Otros impuestos del Gravado
                 AQPA460VAIMP, --Monto total solo del impuesto  Otros impuestos del Gravado
                 AQPA460MTINF, --Monto total Inafecto  Informaci?n de inafecto
                 AQPA460MTGRT, --Monto total Gratuito  Informaci?n de gratuito
                 AQPA460BSIMPS, --Base del impuesto Impuestos del Gratuito
                 AQPA460MTOTI, --Monto total de impuestos Impuestos del Gratuito
                 AQPA460PGC, --mod@abr 20180824
                 AQPA460MOD, --mod@abr 20180824  
                 AQPA460SUC, --mod@abr 20180824 
                 AQPA460TRX, --mod@abr 20180824
                 AQPA460REL, --mod@abr 20180824
                 AQPA460ORE, --mod@abr 20180824
                 AQPA460PGCE, --mod@abr 20180824  Ext
                 AQPA460MODE, --mod@abr 20180824  Ext 
                 AQPA460SUCE, --mod@abr 20180824  Ext
                 AQPA460TRXE, --mod@abr 20180824  Ext
                 AQPA460RELE, --mod@abr 20180824  Ext
                 AQPA460FCONE --mod@abr 20180824  Ext
                 )
              
              Values
                (lv_tipemp, --AQPA460TDOC,  ok
                 lv_ruc, --AQPA460RUCC,  ok
                 lv_rzn, --AQPA460RSOC,  ok
                 lv_ubg, --AQPA460CDIS,  ok
                 lv_NCOM, --AQPA460NCOM,  ok
                 lv_CALLE, --AQPA460CALLE  ok
                 lv_urb, --AQPA460URBA,  ok
                 lv_DEPA, --AQPA460DEPA,  ok
                 lv_PROV, --AQPA460PROV,  ok
                 lv_DIST, --AQPA460DIST,  ok
                 lv_TELF, --AQPA460TELF,  ok
                 lv_WEB, --AQPA460WEB,   ok
                 lv_CPAIS, --AQPA460CPAIS  ok
                 lc_codsunat, --lv_CESUN,        --AQPA460CESUN
                 p.aqpa464serie, --AQPA460SERI,  ok
                 p.aqpa464nro, --AQPA460NUM,   ok
                 pd_pgfape, --AQPA460FEMI,  ok
                 lv_codtipo, --AQPA460TCOMF  ok
                 lv_tipomda, --AQPA460MONE,  ok
                 lv_correo, --AQPA460CORRR  ok
                 lv_glosa, --AQPA460MGLO,  ok
                 lv_COMA, --AQPA460COMA,  ok
                 lv_TPLA, --AQPA460TPLA,  ok
                 -- lv_tipoope,      --AQPA460TOPE,  ok
                 lv_TPLCO, --AQPA460TPLCO  ok
                 lv_CLOG, --AQPA460CLOG,
                 lv_codtdoc, --AQPA460TDOCR  ok
                 lv_pendoc, --AQPA460NRUC,  ok
                 lv_penom, --AQPA460RASOC  ok
                 pn_monto_total_1, --AQPA460IMPT,  ok
                 lv_hora, --AQPA460HEMI,  ok
                 ln_SIMC, --AQPA460SIMC,  ok
                 --    ln_SVITM,        --AQPA460SVITM  ok
                 --  ln_SPVI ,        --AQPA460SPVI,  ok
                 lv_TXML, --AQPA460TXML,  ok
                 pc_aqpa463serie, --Serie documento al que se aplica la nota. ENComprobanteMotivoDocumento
                 pc_aqpa463corre, --Numero  documento al que se aplica la nota.  ENComprobanteMotivoDocumento
                 lv_codcmen, --C?digo por el cual se emite la nota.  ENComprobanteMotivoDocumento
                 lc_sustento, --Sustento ENComprobanteMotivoDocumentoSustento
                 pc_aqpa463serie, --Serie del comprobante referenciado. Referencia a un comprobante
                 pc_aqpa463corre, --N?mero del comprobante referenciado Referencia a un comprobante
                 lc_codtipo, --C?digo del tipo de comprobante.  Referencia a un comprobante
                 p.aqpa464hfcon, --Fecha de emisi?n del comprobante referenciado. Referencia a un comprobante  
                 lv_ubgCli, --AQPA460CDIST,  ok
                 lv_sngc13dir, --AQPA460CALL,   ok
                 lv_urb, --AQPA460URB,    ok
                 lv_depnom1, --AQPA460DEP,    ok
                 lv_locnom1, --AQPA460PRV,    ok
                 lv_fst071dsc1, --AQPA460DST,    ok
                 lv_cpai, --AQPA460CPAI,   ok
                 ln_nroitem, --AQPA460ITEM,   ok
                 lv_PNETU, --AQPA460PNETU,  ok
                 /*ok*/
                 ln_cant, --AQPA460CANTF,  ok
                 ln_mtoconce, --AQPA460TOTAL,  ok
                 lc_oneroso, --AQPA460DETE,   ok
                 lv_CTPR, --AQPA460CTPR,   ok
                 ln_mtoconce, --AQPA460VVUN,   ok to number
                 ln_VVUIG, --AQPA460VVUIG,  ok
                 lv_desconce, --AQPA460DESC,   ok
                 lv_infpredio, --AQPA460MFUN,   ok
                 ln_PRVIT, --AQPA460PRVIT,  ok
                 lv_MEDEM, --AQPA460MEDEM,  ok
                 lv_CSUNA, --AQPA460CSUNA,  ok
                 lv_CPGS1, --AQPA460CPGS1,  ok
                 ln_ITITM, --AQPA460ITITM,  ok
                 ln_IMPTB, --AQPA460IMPTB,  ok
                 ln_IMPEX, --AQPA460IMPEX,  ok
                 lv_afecigv, --AQPA460AFIGV,  ok
                 lv_SISC, --AQPA460SISC,   ok
                 lv_idtrbsunat, --AQPA460CODTB,  ok  
                 lv_nomtrbsunat, --AQPA460DSTRB,  ok
                 lv_codun, --AQPA460CODUN,  ok
                 ln_MBIM, --AQPA460MBIM,   ok
                 ln_TAIMP, --AQPA460TAIMP,  ok
                 ln_CDLEY, --AQPA460CDLEY,  ok
                 lv_TELEY, --AQPA460TELEY,  ok
                 lv_TEXT1, --AQPA460TEXT1,  ok
                 lv_TEXT2, --AQPA460TEXT2,  ok
                 lv_TRECV, --AQPA460TRECV,  ok
                 lv_TEMPL, --AQPA460TEMPL,  ok
                 lv_SUBJE, --AQPA460SUBJE,  ok
                 --   lv_VPCVA,           --AQPA460VPCVA,  ok
                 lv_NEXP, --AQPA460NEXP,   ok
                 lv_CIND, --,        --AQPA460CIND,   ok
                 nvl(lv_partida, ' '), --G74.3  --AQPA460NPART,  ok
                 nvl(lv_NCONT, ' '), -- G74.4 NUMERO CONTRATO                AQPA460NCONT,  ok 
                 ld_fecoto, --G74.5  FECHA OTORGAMIENTO CREDITO   AQPA460FOTRC,  ok
                 nvl(lv_cdisn, ' '), --G74.6  Ubigeo                        AQPA460CDISN,  ok
                 nvl(lv_direccionH, ' '), --G74.7                           AQPA460DIREH,  ok
                 nvl(lv_urbaH, ' '), --G74.8                                 AQPA460URBH,   ok
                 nvl(lv_provH, ' '), --G74.9                                AQPA460PRVH,   ok
                 nvl(lv_distH, ' '), --G74.10                                AQPA460DSTH,   ok
                 nvl(lv_dptoH, ' '), --AQPA460DEPTH,  ok
                 ln_MTOTAL, --AQPA460MTOTAL  ok
                 ln_BAIMP, --AQPA460BAIMP,  ok
                 ln_MTIMP, --AQPA460MTIMP,  ok
                 ln_PCIMA, --AQPA460PCIMA,  ok
                 ln_BSIMP, --AQPA460BSIMP,  ok
                 ln_VAIMP, --AQPA460VAIMP,  ok
                 ln_MTINF, --AQPA460MTINF,  ok
                 ln_MTGRT, --AQPA460MTGRT,  ok
                 ln_BSIMPS, --AQPA460BSIMPS  ok
                 ln_MTOTI, --AQPA460MTOTI   ok
                 P.AQPA464PGCOD, --mod@abr 20180824
                 P.AQPA464HCMOD, --mod@abr 20180824
                 P.AQPA464HSUCOR, --mod@abr 20180824 
                 P.AQPA464HTRAN, --mod@abr 20180824
                 P.AQPA464HNREL, --mod@abr 20180824 
                 P.AQPA464TXOREN, --mod@abr 20180824
                 P.AQPA464PGCOD, --mod@abr 20180824
                 P.AQPA464HCMODE, --mod@abr 20180824
                 P.AQPA464HSUCORE, --mod@abr 20180824 
                 P.AQPA464HTRANE, --mod@abr 20180824
                 P.AQPA464HNRELE, --mod@abr 20180824 
                 P.aqpa464hfcone --mod@abr 20180824
                 );
              commit;
            end if;
          end if;
        end if;
      end loop;
    
      --mod@abr 20180911 se comento
      --begin
      -- Call the procedure
      --  pq_cr_factura_electronica.sp_cr_cabecera_notacredito(pd_pgfape);
    
      --end;
      --mod@abr 20180911 se comento
    
    end;
  
  end sp_cr_Nota_Credito_Detalle;

  -----------------------------------------------------------
  procedure sp_fa_trx_COMISIONH(pd_pgfape in date) is
    -----20180720 DCASTRO  se agrego condicion de optimizacion  
  
    --Flag char(1):='N'; --md@abr 20180824
  
    cursor transacciones is
      select distinct ---transacciones que tienen comision
                      u.jaqz675cod pgcod,
                      u.jaqz675mod hcmod,
                      u.jaqz675suc hsucor,
                      u.jaqz675trn htran,
                      u.jaqz675nre hnrel,
                      u.jaqz675fco hfcon,
                      u.jaqz675cor hcord /*,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 f.txoren,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 f.txtord,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 g.st171cpcod,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 g.se170vnro,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 g.se170vchr*/
        from jaqz675 u, fse170H g, fst198 h
       where u.jaqz675cod = 1
         and g.sd170hdoemp = 1 --20180720 se agrego condicion por optimizacion DCASTRO
         and u.jaqz675cod = g.sd170hdoemp --20180720 se agrego condicion por optimizacion DCASTRO
         and g.sd170hdoid = u.jaqz675tru
         and u.jaqz675cpc = g.st171hcpcod
            --and f.txoren =  g.st171hcpcod + 100
         and u.jaqz675fco = pd_pgfape ---fecha del dia???? --sysdate
         and g.sd170hfecha = u.jaqz675fco
         and h.tp1cod = u.jaqz675cod ---1
         and h.tp1cod1 = 11120
         and h.tp1corr1 = 3
         and h.tp1corr2 = 1
         and nvl(h.tp1imp1, 0) <> 1 --- 20211023 se agrego para no incluir trx de comision que posee igv
         and h.tp1nro1 = u.jaqz675mod
         and h.tp1nro2 = u.jaqz675trn
         and (u.jaqz675mod, u.jaqz675trn) not in
             (select k.tp1nro1, k.tp1nro2
                from fst198 k
               where k.tp1cod = 1
                 and k.tp1cod1 = 11120
                 and k.tp1corr1 = 2
                 and k.tp1corr2 = 4)
            ---comentar transacciones, debe mapear todo     
            --/* 20211016 dcastro
            --  and u.jaqz675suc = 36
            --   and u.jaqz675mod = 50 --493--18--18--491--30--492--18--30--10
            --   and u.jaqz675trn = 501--456 --1--125--25--20--978--450--977--222
            --   and u.jaqz675nre in (23,24,25) --13
            ---------*/
            
            -----
            -- a.itsuc=18 and a.itmod = 18 and a.ittran = 450 and itnrel in (4);
            ---20211023
         and g.st171hcpcod in -- h.st171cpcod = pn_concepto     
             (select f.st171cpcod codigo
                from fst171 f
               where f.st171cpdsc like '%Comision%Ser%' --comision   
              ) --20211023
       order by u.jaqz675cod,
                u.jaqz675mod,
                u.jaqz675suc,
                u.jaqz675trn,
                u.jaqz675nre,
                u.jaqz675fco;
  
    cursor comision is
      select f.st171cpcod codigo
        from fst171 f
       where f.st171cpdsc like '%Comision%Ser%'; --comision                
  
    ln_extorno number; --20220413 dcastro
  
  begin
  
    --OJO-verificar si esta en guia de NC generar NC   
  
    for i in transacciones loop
      /*
           ---2022.04.13 dcastro
            begin
              select count(*)
               into ln_extorno 
               from fsh015 f 
              where f.PGCOD =  i.pgcod
                and f.hcmod =  i.hcmod
                and f.hsucor = i.hsucor
                and f.htran =  i.htran
                and f.hnrel =  i.hnrel
                and f.hfcon =  i.hfcon
                and f.hccorr = 99;
            exception when others then
                ln_extorno := 0;
            end;
            
            if ln_extorno = 0 then---2022.04.13 dcastro
      */
      --for x in comision loop 20211023
    
      begin
        pq_cr_factura_electronica.sp_fa_comisionh(pn_pgcod    => i.pgcod,
                                                  pn_hcmod    => i.hcmod,
                                                  pn_hsucor   => i.hsucor,
                                                  pn_htran    => i.htran,
                                                  pn_hnrel    => i.hnrel,
                                                  pn_hfcon    => i.hfcon,
                                                  pn_concepto => 0 -- 20211023  x.codigo
                                                  );
      end;
    
    --end loop;  20211023
    
    /*    end if;
              ---2022.04.13 dcastro
        */
    
    end loop;
  
  end sp_fa_trx_COMISIONH;

  -----------------------------------------------------------
  procedure sp_fa_COMISIONH(pn_pgcod    in number,
                            pn_hcmod    in number,
                            pn_hsucor   in number,
                            pn_htran    in number,
                            pn_hnrel    in number,
                            pn_hfcon    in date,
                            pn_concepto in number) is
    -----20180720 DCASTRO  se agrego condicion de optimizacion  
  
    --pn_pgcod number;
    lc_serie char(4);
    lc_corre char(8);
    --Flag char(1):='N'; --md@abr 20180824
    ln_relant  number(4) := 0;
    lc_hipo    char(2);
    ln_emp     number(3);
    ln_mod     number(3);
    ln_suc     number(3);
    ln_mda     number(4);
    ln_pap     number(4);
    ln_cta     number(9);
    ln_ope     number(9);
    ln_sbo     number(3);
    ln_top     number(3);
    lc_flg     char(1) := 'N'; --controla que sea hipotecario
    pn_ordinal number(2);
    lc_flg465  char(1) := 'N'; --controla que no exista registro AQPA465
  
    ln_modulo number(3) := 0;
    ln_tran   number(3) := 0;
    ln_sucur  number(3) := 0;
  
    pn_pais   number(3);
    pn_petdoc number(2);
    pn_pendoc char(12);
    ln_rubro  number;
    lc_tipper char(1);
  
    lc_coderr varchar2(1000);
    lc_msgerr varchar2(1000);
  
    lc_error char(1);
  
    cursor transacciones is
    
      select /*h.st171cpcod, */
       h.sr171trord ordinal, a.*
        from (select u.JAQZ675TRU  txtrub,
                     u.jaqz675cod  pgcod,
                     u.jaqz675mod  hcmod,
                     u.jaqz675suc  hsucor,
                     u.jaqz675trn  htran,
                     u.jaqz675nre  hnrel,
                     u.jaqz675fco  hfcon,
                     u.jaqz675cor  hcord,
                     u.jaqz675toe  txoren,
                     u.jaqz675tor  txtord,
                     g.st171hcpcod,
                     g.se170hvnro,
                     g.se170hvchr
                from jaqz675 u, fse170H g
               where u.jaqz675cod = 1
                 and g.sd170hdoemp = 1 --20180720 se agrego condicion por optimizacion DCASTRO
                 and u.jaqz675cod = g.sd170hdoemp --20180720 se agrego condicion por optimizacion DCASTRO
                 and g.sd170hdoid = u.jaqz675tru
                 and u.jaqz675cpc = g.st171hcpcod
                    --and f.txoren = g.st171hcpcod + 100
                 and u.jaqz675fco = pn_hfcon ---fecha del dia???? --sysdate
                 and g.sd170hfecha = u.jaqz675fco) a
        left join fsr171 h
          on h.st171cpcod = a.st171hcpcod
         and h.sr171trmod = a.hcmod
         and h.sr171trnro = a.htran
       where /* a.hcmod = 50
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       and a.htran = 599*/
       a.pgcod = pn_pgcod
       and a.hcmod = pn_hcmod
       and a.hsucor = pn_hsucor
       and a.htran = pn_htran
       and a.hnrel = pn_hnrel
       and a.hfcon = pn_hfcon
      --and h.st171cpcod = pn_concepto  ---- 2021/10/10 se agrego
      ---20211023
       and h.st171cpcod in -- h.st171cpcod = pn_concepto     
       (select f.st171cpcod codigo
          from fst171 f
         where f.st171cpdsc like '%Comision%Ser%' --comision   
        ) --20211023
      
      /*  10012019
      order by a.pgcod,
                    a.hcmod,
                    a.hsucor,
                    a.htran,
                    a.hnrel,
                    a.hfcon
                    
                    */
      --and f.pgcod=1 and f.hsucor=11 and f.hcmod=30 and f.HTRAN in(100,150)
      -- and f.hnrel in(238,022,240,237,236,241,239,023,242,226,245,234,213)
      ;
  
    ln_ordinal number;
    ln_con1    number;
    ln_con2    number;
    ln_con3    number;
  
    lc_tipotrx varchar2(10); --2018.10.16
  
    ln_nrocta number;
    lc_descta varchar2(50);
  
    lc_excluirdoc varchar2(1); -- 20211111
  
    lc_recaudacion char(1); -- 20220901 indicador recaudacion 
  
  begin
  
    --mod@abr 20180824 
    /*begin
      SELECT 'S'
      into Flag
      FROM aqpa463 a WHERE a.aqpa463hfcon = pd_pgfape and rownum=1;
      exception when no_data_found then
        Flag:='N';
        
    end;  */ --mod@abr 20180824 
  
    lc_tipotrx := 'MOV'; --por defecto se inicializa en MOV -- 2018.10.16    
  
    for p in transacciones loop
    
      --Verifica que no exista en cabecera AQPA465 
      Begin
        select 'S'
          into lc_flg465
          from aqpa465 a
         where a.aqpa465pgcod = p.pgcod
           and a.aqpa465mod = p.hcmod
           and a.aqpa465sucor = p.hsucor
           and a.aqpa465tran = p.htran
           and a.aqpa465rel = p.hnrel
           and a.aqpa465con = p.hfcon
              --    and a.aqpa465ord = pn_concepto  20211023
           and rownum = 1;
      exception
        when others then
          lc_flg465 := 'N';
      end;
    
      --obtener la cuenta de acuerdo a concepto
      begin
        select h.sr171trord ordinal, se170hvnro, se170hvchr
          into ln_ordinal, ln_nrocta, lc_descta
          from (select u.JAQZ675TRU  txtrub,
                       u.jaqz675cod  pgcod,
                       u.jaqz675mod  hcmod,
                       u.jaqz675suc  hsucor,
                       u.jaqz675trn  htran,
                       u.jaqz675nre  hnrel,
                       u.jaqz675fco  hfcon,
                       u.jaqz675cor  hcord,
                       u.jaqz675toe  txoren,
                       u.jaqz675tor  txtord,
                       g.st171hcpcod,
                       g.se170hvnro,
                       g.se170hvchr
                  from jaqz675 u, fse170H g
                 where u.jaqz675cod = 1
                   and g.sd170hdoemp = 1 --20180720 se agrego condicion por optimizacion DCASTRO
                   and u.jaqz675cod = g.sd170hdoemp --20180720 se agrego condicion por optimizacion DCASTRO
                   and g.sd170hdoid = u.jaqz675tru
                   and u.jaqz675cpc = g.st171hcpcod
                      --and f.txoren = g.st171hcpcod + 100
                   and u.jaqz675fco = p.hfcon ---fecha del dia???? --sysdate
                   and g.sd170hfecha = u.jaqz675fco
                --and f.txcod = 200
                ) a
          left join fsr171 h
            on h.st171cpcod = a.st171hcpcod
           and h.sr171trmod = a.hcmod
           and h.sr171trnro = a.htran
         where a.hcmod = p.hcmod
           and a.htran = p.htran
           and a.hnrel = p.hnrel
           and a.hsucor = p.hsucor --- 20211019 se agrego sucursal
           and a.hfcon = p.hfcon
           and a.st171hcpcod = p.st171hcpcod ---pn_concepto  20211023
        /* 10012019
         order by a.pgcod,
                   a.hcmod,
                   a.hsucor,
                   a.htran,
                   a.hnrel,
                   a.hfcon
        */
        ;
      
      exception
        when others then
          ln_ordinal := null;
          begin
            select h.sr171trord ordinal, se170hvnro, se170hvchr
              into ln_ordinal, ln_nrocta, lc_descta
              from (select u.JAQZ675TRU  txtrub,
                           u.jaqz675cod  pgcod,
                           u.jaqz675mod  hcmod,
                           u.jaqz675suc  hsucor,
                           u.jaqz675trn  htran,
                           u.jaqz675nre  hnrel,
                           u.jaqz675fco  hfcon,
                           u.jaqz675cor  hcord,
                           u.jaqz675toe  txoren,
                           u.jaqz675tor  txtord,
                           g.st171hcpcod,
                           g.se170hvnro,
                           g.se170hvchr
                      from jaqz675 u, fse170H g
                     where u.jaqz675cod = 1
                       and g.sd170hdoemp = 1 --20180720 se agrego condicion por optimizacion DCASTRO
                       and u.jaqz675cod = g.sd170hdoemp --20180720 se agrego condicion por optimizacion DCASTRO
                       and g.sd170hdoid = u.jaqz675tru
                       and u.jaqz675cpc = g.st171hcpcod
                          --and f.txoren = g.st171hcpcod + 100
                       and u.jaqz675fco = p.hfcon ---fecha del dia???? --sysdate
                       and g.sd170hfecha = u.jaqz675fco
                    --and f.txcod = 200
                    ) a
              left join fsr171 h
                on h.st171cpcod = a.st171hcpcod
               and h.sr171trmod = a.hcmod
               and h.sr171trnro = a.htran
             where a.hcmod = p.hcmod
               and a.htran = p.htran
               and a.hnrel = p.hnrel
               and a.hsucor = p.hsucor --- 20211019 se agrego sucursal
               and a.hfcon = p.hfcon
               and se170hvchr like '%Nro de Cuenta%'
               and rownum = 1;
          exception
            when others then
              ln_ordinal := null;
          end;
      end;
    
      ----OJO
      ---OBTENER LA MONEDA DELA TRANSACCION 
      ---
      ---
      if ln_ordinal is not null or
         (ln_ordinal is null and ln_nrocta is not null and
         lc_descta like '%Nro de Cuenta%') --- 2021.10.19
       then
        -- si no existe ordinal no debe generar movimiento
      
        if lc_flg465 = 'N' then
          --
        
          begin
            --select 'S' into lc_concepto
            select tp1nro2, tp1nro3, tp1imp1
              into ln_con1, ln_con2, ln_con3
              from fst198
             where tp1cod = 1
               and tp1cod1 = 11120
               and tp1corr1 = 3
               and tp1corr2 = 2 --excluir comision 
               and tp1nro1 = pn_concepto --valor a evaluar
            /* and tp1nro2 <> p.st171cpcod
            and tp1nro3 <> p.st171cpcod 
            and tp1imp1 <> p.st171cpcod*/
            ;
          exception
            when others then
              ln_con1 := 0;
              ln_con2 := 0;
              ln_con3 := 0;
          end;
        
          --if lc_concepto = 'S' then  --inicio validacion concepto
          if p.st171hcpcod = ln_con1 or p.st171hcpcod = ln_con2 or
             p.st171hcpcod = ln_con3 then
            null;
          else
          
            --determinar tipo de documento a generar boleta/factura o Nota de Credito 2018.10.16
            begin
              select 'NC'
                into lc_tipotrx
                from fst198 h
               where h.tp1cod = 1
                 and h.tp1cod1 = 11120
                 and h.tp1corr1 = 2
                 and h.tp1corr2 = 4 --transacciones que deben ser consideradas como nota de credito
                 and h.tp1nro1 = p.hcmod
                 and h.tp1nro2 = p.htran;
            exception
              when others then
                lc_tipotrx := 'MOV';
            end;
            -- 2018.10.16
          
            /* --obtener cuenta moneda hora fecha
             Begin
            
                select a.sr171trord
                  into pn_ordinal
                    from fsr171 a
                   where a.st171cpcod = 15
                     and a.sr171tremp = p.pgcod--1
                     and a.sr171trmod = p.hcmod--30
                     and a.sr171trnro = p.htran;--100;   
               exception
                     when others then null;
               end;
            */
          
            begin
              pq_cr_factura_electronica.sp_cr_pk_credito(pc_aqpa465pgcod    => p.pgcod,
                                                         pc_aqpa465mod      => p.hcmod,
                                                         pc_aqpa465sucorend => p.hsucor,
                                                         pc_aqpa465tran     => p.htran,
                                                         pc_aqpa465rel      => p.hnrel,
                                                         pc_aqpa465ord      => pn_ordinal,
                                                         pd_aqpa465con      => p.hfcon,
                                                         pn_cod             => ln_emp,
                                                         pn_mod             => ln_mod,
                                                         pn_suc             => ln_suc,
                                                         pn_mda             => ln_mda,
                                                         pn_pap             => ln_pap,
                                                         pn_cta             => ln_cta,
                                                         pn_ope             => ln_ope,
                                                         pn_sbo             => ln_sbo,
                                                         pn_top             => ln_top,
                                                         pc_flag            => lc_flg,
                                                         pn_rubro           => ln_rubro);
            end;
          
            begin
              pq_cr_factura_electronica.sp_pa_cuenta(p_n_pgcod  => p.pgcod,
                                                     p_n_itsuc  => p.hsucor,
                                                     p_n_itmod  => p.hcmod,
                                                     p_n_ittran => p.htran,
                                                     p_n_itnrel => p.hnrel,
                                                     p_n_itord  => ln_ordinal, --p.ordinal,
                                                     p_d_itfcon => p.hfcon,
                                                     p_n_cuenta => ln_cta,
                                                     p_n_moneda => ln_mda);
            
            end;
          
            if ln_cta = 0 then
              --and ln_nrocta is not null  and lc_descta like '%Nro de Cuenta%' then  --- 2021.10.19
            
              begin
                select se170hvnro, se170hvchr
                  into ln_nrocta, lc_descta
                  from (select u.JAQZ675TRU  txtrub,
                               u.jaqz675cod  pgcod,
                               u.jaqz675mod  hcmod,
                               u.jaqz675suc  hsucor,
                               u.jaqz675trn  htran,
                               u.jaqz675nre  hnrel,
                               u.jaqz675fco  hfcon,
                               u.jaqz675cor  hcord,
                               u.jaqz675toe  txoren,
                               u.jaqz675tor  txtord,
                               g.st171hcpcod,
                               g.se170hvnro,
                               g.se170hvchr
                          from jaqz675 u, fse170H g
                         where u.jaqz675cod = 1
                           and g.sd170hdoemp = 1 --20180720 se agrego condicion por optimizacion DCASTRO
                           and u.jaqz675cod = g.sd170hdoemp --20180720 se agrego condicion por optimizacion DCASTRO
                           and g.sd170hdoid = u.jaqz675tru
                           and u.jaqz675cpc = g.st171hcpcod
                              --and f.txoren = g.st171hcpcod + 100
                           and u.jaqz675fco = p.hfcon ---fecha del dia???? --sysdate
                           and g.sd170hfecha = u.jaqz675fco
                        --and f.txcod = 200
                        ) a
                  left join fsr171 h
                    on h.st171cpcod = a.st171hcpcod
                   and h.sr171trmod = a.hcmod
                   and h.sr171trnro = a.htran
                 where a.hcmod = p.hcmod
                   and a.htran = p.htran
                   and a.hnrel = p.hnrel
                   and a.hsucor = p.hsucor --- 20211019 se agrego sucursal
                   and a.hfcon = p.hfcon
                   and se170hvchr like '%Nro de Cuenta%'
                   and rownum = 1;
              exception
                when others then
                  ln_nrocta := 0;
              end;
              ln_cta := ln_nrocta;
            
            end if;
          
            lc_flg := 'S'; -- 2021/10/20 se agrego
          
            if lc_flg = 'S' then
              --pn_pgcod:= p.pgcod;
              if ln_relant <> p.hnrel or p.hcmod <> ln_modulo or
                 p.htran <> ln_tran or p.hsucor <> ln_sucur then
              
                if ln_cta = 999999999 or ln_cta = 0 --se agregó condición 24/12/2018
                 then
                  /*  2021.10.20 se comento
                       --inicio valida cuenta cliente
                       ln_cta    := '00000000';
                       lc_tipper := 'N'; -- Debe generar boleta, por lo que se considera persona Natural
                   
                      
                  */ --2021.10.20
                  null;
                  pn_pais   := null;
                  pn_petdoc := null;
                  pn_pendoc := null; --20211023
                
                else
                
                  begin
                    ---se obtiene NDI/ TIPO de doc                  
                    select a.pepais, a.petdoc, a.pendoc
                      into pn_pais, pn_petdoc, pn_pendoc
                      from fsr008 a
                     where a.ctnro = ln_cta ---
                       and a.cttfir = 'T';
                  exception
                    when others then
                      pn_pais   := null;
                      pn_petdoc := null;
                      pn_pendoc := null; --20211023
                  end;
                
                  --20220901 dcastro indicador de recaudacion
                  begin
                    pq_cr_factura_electronica.valida_recaudacion(pc_ruc   => pn_pendoc,
                                                                 pn_hcmod => p.hcmod,
                                                                 pn_htran => p.htran,
                                                                 pc_ind   => lc_recaudacion);
                  end;
                  if lc_recaudacion = 'S' then
                    --no debe generar comprobante
                    ln_cta := 0;
                    exit;
                  end if;
                
                  ---20220901 dcastro
                
                  --20211111 dcastro excluir tipos de documento no validos para sunat
                  lc_excluirdoc := 'N';
                  begin
                    select 'S'
                      into lc_excluirdoc
                      from fst198 f
                     where tp1cod = 1
                       and tp1cod1 = 11120
                       and f.tp1corr1 = 11
                       and f.tp1nro1 > 0
                       and f.tp1nro1 = pn_petdoc;
                  exception
                    when others then
                      lc_excluirdoc := 'N';
                  end;
                
                  if lc_excluirdoc = 'S' then
                    ln_cta := 0; ---se asigna la cuenta 0 para que no se reporte movimiento
                  else
                    ---20211111 dcastro excluir tipos de documento
                  
                    begin
                      pq_cr_facturacion.sp_cr_tipo_cliente(pn_pais   => pn_pais,
                                                           pn_tipdoc => pn_petdoc,
                                                           pc_numdoc => pn_pendoc,
                                                           pc_tipper => lc_tipper);
                    end;
                  
                  end if; ---20211111 dcastro excluir tipos de operacion
                
                end if; --fin valida cuenta cliente
              
                if ln_cta <> 0 then
                  --- se agregó 2021/10/20 dcastro
                
                  begin
                    pq_cr_facturacion.sp_cr_factura(pn_rubro       => ln_rubro,
                                                    pc_tipcli      => lc_tipper,
                                                    pc_tipo        => lc_tipotrx,
                                                    pc_serie       => lc_serie,
                                                    pc_correlativo => lc_corre);
                    ---20211111 dcastro
                  exception
                    when others then
                      null; ---
                  end;
                  ---fin 20211111 dcastro
                
                end if; --- se agregó 2021/10/20 dcastro
              
              end if;
            
              ln_relant := p.hnrel;
              ln_modulo := p.hcmod;
              ln_tran   := p.htran;
              ln_sucur  := p.hsucor;
            
              --if Flag='N' then --mod@abr 20180824
              if lc_tipotrx = 'MOV' then
                --inicio insercion
              
                begin
                  lc_error := 'N';
                  insert into aqpa463
                    (aqpa463txtrub,
                     aqpa463pgcod,
                     aqpa463hcmod,
                     aqpa463hsucor,
                     aqpa463htran,
                     aqpa463hnrel,
                     aqpa463hfcon,
                     aqpa463hcord,
                     aqpa463txoren,
                     aqpa463txtord,
                     aqpa463hcpcod,
                     aqpa463hvnro,
                     aqpa463hvchr,
                     aqpa463serie,
                     aqpa463corre,
                     aqpa463emp,
                     aqpa463mod,
                     aqpa463suc,
                     aqpa463mda,
                     aqpa463pap,
                     aqpa463cta,
                     aqpa463ope,
                     aqpa463sbo,
                     aqpa463top,
                     aqpa463hip
                     
                     )
                  values
                    (p.txtrub,
                     p.pgcod,
                     p.hcmod,
                     p.hsucor,
                     p.htran,
                     p.hnrel,
                     p.hfcon,
                     p.hcord,
                     p.txoren,
                     p.txtord,
                     p.hcord,
                     p.se170hvnro,
                     p.se170hvchr,
                     lc_serie,
                     lc_corre,
                     ln_emp,
                     ln_mod,
                     ln_suc,
                     ln_mda,
                     ln_pap,
                     ln_cta,
                     ln_ope,
                     ln_sbo,
                     ln_top,
                     lc_hipo);
                  commit;
                exception
                  when others then
                    lc_coderr := sqlcode;
                    lc_msgerr := trim(sqlerrm);
                    lc_error  := 'S';
                  
                    insert into aqpa460E
                      (aqpa460eserie,
                       aqpa460ecorr,
                       aqpa460epgcod,
                       aqpa460emod,
                       aqpa460esucorend,
                       aqpa460etran,
                       aqpa460erel,
                       aqpa460econ,
                       aqpa460etip,
                       Aqpa460eacoe,
                       Aqpa460eamsge)
                    values
                      (lc_serie,
                       lc_corre,
                       p.pgcod,
                       p.hcmod,
                       p.hsucor,
                       p.htran,
                       p.hnrel,
                       p.hfcon,
                       'S',
                       lc_coderr,
                       lc_msgerr);
                    commit;
                  
                end;
              
              end if;
              --end if; --mod@abr 20180824
            end if;
          
          end if; --fin validacion concepto               
        
        end if;
      end if; -- fin validacion ordinal existente
    
    end loop;
  
    -- se comento 09/10/2018 
  
    if ln_ordinal is not null and lc_error <> 'S' then
    
      if lc_tipotrx = 'MOV' then
      
        if ln_cta <> 999999999 or ln_cta <> 0 then
          --- se agregó 2021/10/20 dcastro
        
          -- 2021.10.16 se comento diario , se agrego historico
          begin
            pq_cr_factura_electronica.sp_cr_Detalle_Factura_CO(pn_hfcon,
                                                               lc_serie,
                                                               lc_corre,
                                                               pn_concepto);
          end;
        
          ---07/11/2021
          begin
            pq_cr_factura_electronica.sp_cr_total_comision(pc_serie       => lc_serie,
                                                           pn_correlativo => lc_corre,
                                                           pd_hfcon       => pn_hfcon); --20221029 se agrego fecha
          end;
        
          --07/11/2021
        
          ----insert cabecera de factura aqpa465 
          --     AGREGAR CONCEPTO A PROCEDIMIENTO
          begin
          
            pq_cr_factura_electronica.sp_cr_cabecera_trx(pd_pgfape      => pn_hfcon,
                                                         pc_serie       => lc_serie,
                                                         pn_correlativo => lc_corre,
                                                         pn_concepto    => pn_concepto);
          end;
        
        end if; ----- se agregó 2021/10/20 dcastro
      
      end if;
    
    end if; -- fin validacion ordinal existente
  
  end sp_fa_COMISIONH;

  -----------------------------------------------------------
  procedure sp_cr_carga_documento(pn_pgcod  in number,
                                  pn_hcmod  in number,
                                  pn_hsucor in number,
                                  pn_htran  in number,
                                  pn_hnrel  in number,
                                  pn_hfcon  in date,
                                  pc_flag   out char) is
  
    ld_fecha     date;
    lc_indicador char(1);
    lc_serie     char(4);
    lc_corre     char(8);
  
  begin
    --verificar si es comision 
    begin
      select 'S'
        into lc_indicador
        from fst198 h
       where h.tp1cod = pn_pgcod
         and h.tp1cod1 = 11120
         and h.tp1corr1 = 3
         and h.tp1corr2 = 1
         and h.tp1nro1 = pn_hcmod
         and h.tp1nro2 = pn_htran;
    exception
      when others then
        lc_indicador := 'N';
    end;
  
    if lc_indicador = 'N' then
      --trx normal
      begin
        select pgfape into ld_fecha from fst017 where pgcod = 1;
      exception
        when others then
          null;
      end;
    
      if ld_Fecha = pn_hfcon then
        --diaria     
      
        begin
          pq_cr_factura_electronica.sp_tra_validas_trx(pn_pgcod       => pn_pgcod,
                                                       pn_hcmod       => pn_hcmod,
                                                       pn_hsucor      => pn_hsucor,
                                                       pn_htran       => pn_htran,
                                                       pn_hnrel       => pn_hnrel,
                                                       pn_hfcon       => pn_hfcon,
                                                       pc_serie       => lc_serie,
                                                       pn_correlativo => lc_corre);
        end;
      else
        --historica
        begin
          pq_cr_factura_electronica.sp_tra_validas_trH(pn_pgcod       => pn_pgcod,
                                                       pn_hcmod       => pn_hcmod,
                                                       pn_hsucor      => pn_hsucor,
                                                       pn_htran       => pn_htran,
                                                       pn_hnrel       => pn_hnrel,
                                                       pn_hfcon       => pn_hfcon,
                                                       pc_serie       => lc_serie,
                                                       pn_correlativo => lc_corre);
        end;
      
      end if;
    
      if lc_serie is not null then
        begin
          --inserta cabecera
          pq_cr_factura_electronica.sp_cr_cabecera_trx(pd_pgfape      => pn_hfcon,
                                                       pc_serie       => lc_serie,
                                                       pn_correlativo => lc_corre,
                                                       pn_concepto    => null /*:pn_concepto*/);
        end;
      end if;
    
    else
      --trx comision
      begin
      
        pq_cr_factura_electronica.sp_cr_comision_trx(pn_pgcod  => pn_pgcod,
                                                     pn_hcmod  => pn_hcmod,
                                                     pn_hsucor => pn_hsucor,
                                                     pn_htran  => pn_htran,
                                                     pn_hnrel  => pn_hnrel,
                                                     pn_hfcon  => pn_hfcon);
      end;
    
    end if;
  
    --invocar a procedimiento de generacion de factura
    /*begin
      --COMENTAR  usr_jogsar_bt.
       usr_jogsar_bt.pq_ar_facturacion_e.pr_ar_main(pn_serie => lc_serie,
                                                    pn_nro => lc_corre,
                                                    pv_flag_error => lv_flag_error,
                                                    pv_error => lv_error,
                                                    pv_codigo_hash => lv_codigo_hash);
    exception when others then
       pc_flag := null;
    end;*/ --mod@abr 20181121
  
    pc_flag := null; --lv_flag_error;  --mod@abr 20181121
  
  end sp_cr_carga_documento;
  -----------------------------------------------------------
  -----------------------------------------------------------
  procedure sp_cr_COMISION_TRX(pn_pgcod  in number,
                               pn_hcmod  in number,
                               pn_hsucor in number,
                               pn_htran  in number,
                               pn_hnrel  in number,
                               pn_hfcon  in date) is
    -----20181108 DCASTRO  comision por trx
  
    cursor transaccionesD is
      select distinct ---transacciones que tienen comision
                      f.pgcod,
                      f.hcmod,
                      f.hsucor,
                      f.htran,
                      f.hnrel,
                      f.hfcon,
                      f.hcord
        from fsx016 f, fse170 g, fst198 h
       where f.pgcod = 1
         and g.sd170doemp = 1 --20180720 se agrego condicion por optimizacion DCASTRO
         and f.pgcod = g.sd170doemp --20180720 se agrego condicion por optimizacion DCASTRO
         and g.sd170doid = f.txtrub
         and f.txoren = g.st171cpcod + 100
         and f.hfcon = pn_hfcon ---fecha del dia???? --sysdate
         and f.txcod = 200
         and h.tp1cod = f.pgcod ---1
         and h.tp1cod1 = 11120
         and h.tp1corr1 = 3
         and h.tp1corr2 = 1
         and h.tp1nro1 = f.hcmod
         and h.tp1nro2 = f.htran
         and (f.hcmod, f.htran) not in
             (select k.tp1nro1, k.tp1nro2
                from fst198 k
               where k.tp1cod1 = 11120
                 and k.tp1corr1 = 2
                 and k.tp1corr2 = 4)
         and f.pgcod = pn_pgcod
         and f.hsucor = pn_hsucor
         and f.hcmod = pn_hcmod
         and f.htran = pn_htran
         and f.hnrel = pn_hnrel;
  
    cursor transaccionesH is
      select distinct ---transacciones que tienen comision
                      f.pgcod,
                      f.hcmod,
                      f.hsucor,
                      f.htran,
                      f.hnrel,
                      f.hfcon,
                      f.hcord
        from fsx016 f, fse170H g, fst198 h
       where f.pgcod = 1
         and g.sd170hdoemp = 1 --20180720 se agrego condicion por optimizacion DCASTRO
         and f.pgcod = g.sd170hdoemp --20180720 se agrego condicion por optimizacion DCASTRO
         and g.sd170hdoid = f.txtrub
         and f.txoren = g.st171hcpcod + 100
         and f.hfcon = pn_hfcon ---fecha del dia???? --sysdate
         and f.txcod = 200
         and h.tp1cod = f.pgcod ---1
         and h.tp1cod1 = 11120
         and h.tp1corr1 = 3
         and h.tp1corr2 = 1
         and h.tp1nro1 = f.hcmod
         and h.tp1nro2 = f.htran
         and (f.hcmod, f.htran) not in
             (select k.tp1nro1, k.tp1nro2
                from fst198 k
               where k.tp1cod1 = 11120
                 and k.tp1corr1 = 2
                 and k.tp1corr2 = 4)
         and f.pgcod = pn_pgcod
         and f.hsucor = pn_hsucor
         and f.hcmod = pn_hcmod
         and f.htran = pn_htran
         and f.hnrel = pn_hnrel;
  
    cursor comision is
      select f.st171cpcod codigo
        from fst171 f
       where f.st171cpcod in (50, 51, 52, 53); --comision                
  
    ld_fecha date;
  
  begin
  
    begin
      select pgfape into ld_fecha from fst017 where pgcod = 1;
    exception
      when others then
        null;
    end;
  
    if ld_Fecha = pn_hfcon then
      --DIARIO
    
      for i in transaccionesD loop
      
        for x in comision loop
        
          begin
            pq_cr_factura_electronica.sp_fa_comision(pn_pgcod    => i.pgcod,
                                                     pn_hcmod    => i.hcmod,
                                                     pn_hsucor   => i.hsucor,
                                                     pn_htran    => i.htran,
                                                     pn_hnrel    => i.hnrel,
                                                     pn_hfcon    => i.hfcon,
                                                     pn_concepto => x.codigo);
          end;
        
        end loop;
      
      end loop;
    
    else
      --HISTORICO   
      for i in transaccionesH loop
      
        for x in comision loop
        
          begin
            pq_cr_factura_electronica.sp_fa_comisionh(pn_pgcod    => i.pgcod,
                                                      pn_hcmod    => i.hcmod,
                                                      pn_hsucor   => i.hsucor,
                                                      pn_htran    => i.htran,
                                                      pn_hnrel    => i.hnrel,
                                                      pn_hfcon    => i.hfcon,
                                                      pn_concepto => x.codigo);
          end;
        
        end loop;
      
      end loop;
    
    end if;
  
  end sp_cr_COMISION_TRX;

  -----------------------------------------------------------
  procedure sp_tra_validas_Trx(pn_pgcod       in number,
                               pn_hcmod       in number,
                               pn_hsucor      in number,
                               pn_htran       in number,
                               pn_hnrel       in number,
                               pn_hfcon       in date,
                               pc_serie       out char,
                               pn_correlativo out number) is
    -----20181112 DCASTRO  se agrego condicion de optimizacion  
  
    lc_serie char(4);
    lc_corre char(8);
    --Flag char(1):='N'; --md@abr 20180824
    ln_relant  number(4) := 0;
    lc_hipo    char(2);
    ln_emp     number(3);
    ln_mod     number(3);
    ln_suc     number(3);
    ln_mda     number(4);
    ln_pap     number(4);
    ln_cta     number(9);
    ln_ope     number(9);
    ln_sbo     number(3);
    ln_top     number(3);
    lc_flg     char(1) := 'N'; --controla que sea hipotecario
    pn_ordinal number(2);
    lc_flg465  char(1) := 'N'; --controla que no exista registro AQPA465
  
    ln_modulo number(3) := 0;
    ln_tran   number(3) := 0;
    ln_sucur  number(3) := 0;
  
    pn_pais    number(3);
    pn_petdoc  number(2);
    pn_pendoc  char(12);
    ln_rubro   number;
    lc_tipper  char(1);
    ln_contCom number(10) := 0;
  
    lc_coderr char(100);
    lc_msgerr char(1000);
  
    cursor transacciones is
    
      select f.txtrub,
             f.pgcod,
             f.hcmod,
             f.hsucor,
             f.htran,
             f.hnrel,
             f.hfcon,
             f.hcord,
             f.txoren,
             f.txtord,
             g.st171cpcod,
             g.se170vnro,
             g.se170vchr
        from fsx016 f, fse170 g
       where f.pgcod = 1
         and g.sd170doemp = 1 --20180720 se agrego condicion por optimizacion DCASTRO
         and f.pgcod = g.sd170doemp --20180720 se agrego condicion por optimizacion DCASTRO
         and g.sd170doid = f.txtrub
         and f.txoren = g.st171cpcod + 100
         and f.pgcod = pn_pgcod
         and f.hcmod = pn_hcmod
         and f.hsucor = pn_hsucor
         and f.htran = pn_htran
         and f.hnrel = pn_hnrel
         and f.hfcon = pn_hfcon
      --and f.pgcod=1 and f.hsucor=11 and f.hcmod=30 and f.HTRAN in(100,150)
      -- and f.hnrel in(238,022,240,237,236,241,239,023,242,226,245,234,213)
      ;
  
  begin
    begin
    
      --mod@abr 20180824 
      /*begin
        SELECT 'S'
        into Flag
        FROM aqpa463 a WHERE a.aqpa463hfcon = pd_pgfape and rownum=1;
        exception when no_data_found then
          Flag:='N';
          
      end;  */ --mod@abr 20180824 
    
      for p in transacciones loop
      
        begin
          select count(*) --comision
            into ln_contCom
            from fsd016 a
           where a.pgcod = p.pgcod
             and a.itsuc = p.hsucor
             and a.itmod = p.hcmod
             and a.ittran = p.htran
             and a.itnrel = p.hnrel
             and a.modulo = 462;
        
        exception
          when others then
            ln_contCom := 0;
        end;
      
        if ln_contCom = 0 then
        
          --Verifica que no exista en cabecera AQPA465 
          Begin
            select 'S'
              into lc_flg465
              from aqpa465 a
             where a.aqpa465pgcod = p.pgcod
               and a.aqpa465mod = p.hcmod
               and a.aqpa465sucor = p.hsucor
               and a.aqpa465tran = p.htran
               and a.aqpa465rel = p.hnrel
               and a.aqpa465con = p.hfcon
               and rownum = 1;
          exception
            when others then
              lc_flg465 := 'N';
          end;
        
          if lc_flg465 = 'N' then
          
            --            if p.hcmod = 30 and p.htran = 977 then
            if p.hcmod = 30 and p.htran in (405, 977) then
              --22/07/2021
            
              if p.htran = 977 then
                Begin
                
                  select a.sr171trord
                    into pn_ordinal
                    from fsr171 a
                   where a.st171cpcod = 50
                     and a.sr171tremp = p.pgcod --1
                     and a.sr171trmod = p.hcmod --30
                     and a.sr171trnro = p.htran; --100;   
                exception
                  when others then
                    null;
                end;
              else
                ---30: CRÉDITOS; 405: VENTA BIENES ADJUDICADOS --22/07/2021
                Begin
                
                  select a.sr171trord
                    into pn_ordinal
                    from fsr171 a
                   where a.st171cpcod = 47
                     and a.sr171tremp = p.pgcod --1
                     and a.sr171trmod = p.hcmod --30
                     and a.sr171trnro = p.htran; --;   
                exception
                  when others then
                    null;
                end;
              
              end if;
            
            else
              --obtener cuenta moneda hora fecha
              Begin
              
                select a.sr171trord
                  into pn_ordinal
                  from fsr171 a
                 where a.st171cpcod = 15
                   and a.sr171tremp = p.pgcod --1
                   and a.sr171trmod = p.hcmod --30
                   and a.sr171trnro = p.htran; --100;   
              exception
                when others then
                  null;
              end;
            end if;
          
            begin
              pq_cr_factura_electronica.sp_cr_pk_credito(pc_aqpa465pgcod    => p.pgcod,
                                                         pc_aqpa465mod      => p.hcmod,
                                                         pc_aqpa465sucorend => p.hsucor,
                                                         pc_aqpa465tran     => p.htran,
                                                         pc_aqpa465rel      => p.hnrel,
                                                         pc_aqpa465ord      => pn_ordinal,
                                                         pd_aqpa465con      => p.hfcon,
                                                         pn_cod             => ln_emp,
                                                         pn_mod             => ln_mod,
                                                         pn_suc             => ln_suc,
                                                         pn_mda             => ln_mda,
                                                         pn_pap             => ln_pap,
                                                         pn_cta             => ln_cta,
                                                         pn_ope             => ln_ope,
                                                         pn_sbo             => ln_sbo,
                                                         pn_top             => ln_top,
                                                         pc_flag            => lc_flg,
                                                         pn_rubro           => ln_rubro);
            end;
          
            if lc_flg = 'S' then
              --pn_pgcod:= p.pgcod;
              if ln_relant <> p.hnrel or p.hcmod <> ln_modulo or
                 p.htran <> ln_tran or p.hsucor <> ln_sucur then
                /*
                  begin
                    pq_cr_facturacion.sp_cr_fac_hipotecario(ln_rubro => 4,
                                                            lc_descripcion => 'SEQ_HIPOTECARIO_COR',
                                                            lc_serie => lc_serie,
                                                            lc_correlativo => lc_corre);
                    
                  end;
                */
              
                begin
                  ---se obtiene NDI/ TIPO de doc                  
                  select a.pepais, a.petdoc, a.pendoc
                    into pn_pais, pn_petdoc, pn_pendoc
                    from fsr008 a
                   where a.ctnro = ln_cta ---
                     and a.cttfir = 'T';
                exception
                  when others then
                    null;
                end;
              
                begin
                  pq_cr_facturacion.sp_cr_tipo_cliente(pn_pais   => pn_pais,
                                                       pn_tipdoc => pn_petdoc,
                                                       pc_numdoc => pn_pendoc,
                                                       pc_tipper => lc_tipper);
                end;
              
                begin
                  pq_cr_facturacion.sp_cr_factura(pn_rubro       => ln_rubro,
                                                  pc_tipcli      => lc_tipper,
                                                  pc_tipo        => 'MOV', --transaccion
                                                  pc_serie       => lc_serie,
                                                  pc_correlativo => lc_corre);
                
                exception
                  when others then
                  
                    lc_coderr := sqlcode;
                    lc_msgerr := trim(sqlerrm);
                  
                    insert into aqpa460E
                      (aqpa460eserie,
                       aqpa460ecorr,
                       aqpa460epgcod,
                       aqpa460emod,
                       aqpa460esucorend,
                       aqpa460etran,
                       aqpa460erel,
                       aqpa460econ,
                       aqpa460etip,
                       Aqpa460eacoe,
                       Aqpa460eamsge)
                    values
                      (null,
                       null,
                       p.pgcod,
                       p.hcmod,
                       p.hsucor,
                       p.htran,
                       p.hnrel,
                       p.hfcon,
                       'S',
                       lc_coderr,
                       lc_msgerr);
                    commit;
                  
                end;
              
              end if;
            
              --2018.11.12                             
              pc_serie       := lc_serie;
              pn_correlativo := lc_corre;
              ---
            
              ln_relant := p.hnrel;
              ln_modulo := p.hcmod;
              ln_tran   := p.htran;
              ln_sucur  := p.hsucor;
            
              --if Flag='N' then --mod@abr 20180824
            
              begin
                insert into aqpa463
                  (aqpa463txtrub,
                   aqpa463pgcod,
                   aqpa463hcmod,
                   aqpa463hsucor,
                   aqpa463htran,
                   aqpa463hnrel,
                   aqpa463hfcon,
                   aqpa463hcord,
                   aqpa463txoren,
                   aqpa463txtord,
                   aqpa463hcpcod,
                   aqpa463hvnro,
                   aqpa463hvchr,
                   aqpa463serie,
                   aqpa463corre,
                   aqpa463emp,
                   aqpa463mod,
                   aqpa463suc,
                   aqpa463mda,
                   aqpa463pap,
                   aqpa463cta,
                   aqpa463ope,
                   aqpa463sbo,
                   aqpa463top,
                   aqpa463hip
                   
                   )
                values
                  (p.txtrub,
                   p.pgcod,
                   p.hcmod,
                   p.hsucor,
                   p.htran,
                   p.hnrel,
                   p.hfcon,
                   p.hcord,
                   p.txoren,
                   p.txtord,
                   p.hcord,
                   p.se170vnro,
                   p.se170vchr,
                   lc_serie,
                   lc_corre,
                   ln_emp,
                   ln_mod,
                   ln_suc,
                   ln_mda,
                   ln_pap,
                   ln_cta,
                   ln_ope,
                   ln_sbo,
                   ln_top,
                   lc_hipo);
                commit;
              
              end;
              --end if; --mod@abr 20180824
            end if;
          end if;
        end if;
      end loop;
    
      begin
        --detalle factura
        pq_cr_factura_electronica.sp_cr_Detalle_Factura_trx(pn_hfcon,
                                                            lc_serie,
                                                            lc_corre);
      
      end;
    
    end;
  
  end sp_tra_validas_trx;
  -----------------------------------------------
  -----------------------------------------------------------
  procedure sp_tra_validas_TrH(pn_pgcod       in number,
                               pn_hcmod       in number,
                               pn_hsucor      in number,
                               pn_htran       in number,
                               pn_hnrel       in number,
                               pn_hfcon       in date,
                               pc_serie       out char,
                               pn_correlativo out number) is
    -----20181112 DCASTRO  se agrego condicion de optimizacion  
  
    lc_serie char(4);
    lc_corre char(8);
    --Flag char(1):='N'; --md@abr 20180824
    ln_relant  number(4) := 0;
    lc_hipo    char(2);
    ln_emp     number(3);
    ln_mod     number(3);
    ln_suc     number(3);
    ln_mda     number(4);
    ln_pap     number(4);
    ln_cta     number(9);
    ln_ope     number(9);
    ln_sbo     number(3);
    ln_top     number(3);
    lc_flg     char(1) := 'N'; --controla que sea hipotecario
    pn_ordinal number(2);
    lc_flg465  char(1) := 'N'; --controla que no exista registro AQPA465
  
    ln_modulo number(3) := 0;
    ln_tran   number(3) := 0;
    ln_sucur  number(3) := 0;
  
    pn_pais    number(3);
    pn_petdoc  number(2);
    pn_pendoc  char(12);
    ln_rubro   number;
    lc_tipper  char(1);
    ln_contCom number(10) := 0;
  
    lc_coderr char(100);
    lc_msgerr char(1000);
  
    cursor transacciones is
    
      select f.txtrub,
             f.pgcod,
             f.hcmod,
             f.hsucor,
             f.htran,
             f.hnrel,
             f.hfcon,
             f.hcord,
             f.txoren,
             f.txtord,
             g.st171Hcpcod st171cpcod,
             g.se170Hvnro  se170vnro,
             g.se170Hvchr  se170vchr
        from fsx016 f, fse170H g
       where f.pgcod = 1
         and g.sd170Hdoemp = 1 --20180720 se agrego condicion por optimizacion DCASTRO
         and f.pgcod = g.sd170Hdoemp --20180720 se agrego condicion por optimizacion DCASTRO
         and g.sd170Hdoid = f.txtrub
         and f.txoren = g.st171Hcpcod + 100
         and f.pgcod = pn_pgcod
         and f.hcmod = pn_hcmod
         and f.hsucor = pn_hsucor
         and f.htran = pn_htran
         and f.hnrel = pn_hnrel
         and f.hfcon = pn_hfcon
      --and f.pgcod=1 and f.hsucor=11 and f.hcmod=30 and f.HTRAN in(100,150)
      -- and f.hnrel in(238,022,240,237,236,241,239,023,242,226,245,234,213)
      ;
  
  begin
    begin
    
      --mod@abr 20180824 
      /*begin
        SELECT 'S'
        into Flag
        FROM aqpa463 a WHERE a.aqpa463hfcon = pd_pgfape and rownum=1;
        exception when no_data_found then
          Flag:='N';
          
      end;  */ --mod@abr 20180824 
    
      for p in transacciones loop
      
        begin
          select count(*) --comision
            into ln_contCom
            from fsd016 a
           where a.pgcod = p.pgcod
             and a.itsuc = p.hsucor
             and a.itmod = p.hcmod
             and a.ittran = p.htran
             and a.itnrel = p.hnrel
             and a.modulo = 462;
        
        exception
          when others then
            ln_contCom := 0;
        end;
      
        if ln_contCom = 0 then
        
          --Verifica que no exista en cabecera AQPA465 
          Begin
            select 'S'
              into lc_flg465
              from aqpa465 a
             where a.aqpa465pgcod = p.pgcod
               and a.aqpa465mod = p.hcmod
               and a.aqpa465sucor = p.hsucor
               and a.aqpa465tran = p.htran
               and a.aqpa465rel = p.hnrel
               and a.aqpa465con = p.hfcon
               and rownum = 1;
          exception
            when others then
              lc_flg465 := 'N';
          end;
        
          if lc_flg465 = 'N' then
          
            --            if p.hcmod = 30 and p.htran = 977 then
            if p.hcmod = 30 and p.htran in (405, 977) then
              --22/07/2021
            
              if p.htran = 977 then
                Begin
                
                  select a.sr171trord
                    into pn_ordinal
                    from fsr171 a
                   where a.st171cpcod = 50
                     and a.sr171tremp = p.pgcod --1
                     and a.sr171trmod = p.hcmod --30
                     and a.sr171trnro = p.htran; --100;   
                exception
                  when others then
                    null;
                end;
              else
                ---30: CRÉDITOS; 405: VENTA BIENES ADJUDICADOS --22/07/2021
                Begin
                
                  select a.sr171trord
                    into pn_ordinal
                    from fsr171 a
                   where a.st171cpcod = 47
                     and a.sr171tremp = p.pgcod --1
                     and a.sr171trmod = p.hcmod --30
                     and a.sr171trnro = p.htran; --;   
                exception
                  when others then
                    null;
                end;
              
              end if;
            
            else
              --obtener cuenta moneda hora fecha
              Begin
              
                select a.sr171trord
                  into pn_ordinal
                  from fsr171 a
                 where a.st171cpcod = 15
                   and a.sr171tremp = p.pgcod --1
                   and a.sr171trmod = p.hcmod --30
                   and a.sr171trnro = p.htran; --100;   
              exception
                when others then
                  null;
              end;
            end if;
          
            begin
              pq_cr_factura_electronica.sp_cr_pk_credito(pc_aqpa465pgcod    => p.pgcod,
                                                         pc_aqpa465mod      => p.hcmod,
                                                         pc_aqpa465sucorend => p.hsucor,
                                                         pc_aqpa465tran     => p.htran,
                                                         pc_aqpa465rel      => p.hnrel,
                                                         pc_aqpa465ord      => pn_ordinal,
                                                         pd_aqpa465con      => p.hfcon,
                                                         pn_cod             => ln_emp,
                                                         pn_mod             => ln_mod,
                                                         pn_suc             => ln_suc,
                                                         pn_mda             => ln_mda,
                                                         pn_pap             => ln_pap,
                                                         pn_cta             => ln_cta,
                                                         pn_ope             => ln_ope,
                                                         pn_sbo             => ln_sbo,
                                                         pn_top             => ln_top,
                                                         pc_flag            => lc_flg,
                                                         pn_rubro           => ln_rubro);
            end;
          
            if lc_flg = 'S' then
              --pn_pgcod:= p.pgcod;
              if ln_relant <> p.hnrel or p.hcmod <> ln_modulo or
                 p.htran <> ln_tran or p.hsucor <> ln_sucur then
                /*
                  begin
                    pq_cr_facturacion.sp_cr_fac_hipotecario(ln_rubro => 4,
                                                            lc_descripcion => 'SEQ_HIPOTECARIO_COR',
                                                            lc_serie => lc_serie,
                                                            lc_correlativo => lc_corre);
                    
                  end;
                */
              
                begin
                  ---se obtiene NDI/ TIPO de doc                  
                  select a.pepais, a.petdoc, a.pendoc
                    into pn_pais, pn_petdoc, pn_pendoc
                    from fsr008 a
                   where a.ctnro = ln_cta ---
                     and a.cttfir = 'T';
                exception
                  when others then
                    null;
                end;
              
                begin
                  pq_cr_facturacion.sp_cr_tipo_cliente(pn_pais   => pn_pais,
                                                       pn_tipdoc => pn_petdoc,
                                                       pc_numdoc => pn_pendoc,
                                                       pc_tipper => lc_tipper);
                end;
              
                begin
                  pq_cr_facturacion.sp_cr_factura(pn_rubro       => ln_rubro,
                                                  pc_tipcli      => lc_tipper,
                                                  pc_tipo        => 'MOV', --transaccion
                                                  pc_serie       => lc_serie,
                                                  pc_correlativo => lc_corre);
                
                exception
                  when others then
                  
                    lc_coderr := sqlcode;
                    lc_msgerr := trim(sqlerrm);
                  
                    insert into aqpa460E
                      (aqpa460eserie,
                       aqpa460ecorr,
                       aqpa460epgcod,
                       aqpa460emod,
                       aqpa460esucorend,
                       aqpa460etran,
                       aqpa460erel,
                       aqpa460econ,
                       aqpa460etip,
                       Aqpa460eacoe,
                       Aqpa460eamsge)
                    values
                      (null,
                       null,
                       p.pgcod,
                       p.hcmod,
                       p.hsucor,
                       p.htran,
                       p.hnrel,
                       p.hfcon,
                       'S',
                       lc_coderr,
                       lc_msgerr);
                    commit;
                  
                end;
              
              end if;
            
              --2018.11.12                             
              pc_serie       := lc_serie;
              pn_correlativo := lc_corre;
              ---
            
              ln_relant := p.hnrel;
              ln_modulo := p.hcmod;
              ln_tran   := p.htran;
              ln_sucur  := p.hsucor;
            
              --if Flag='N' then --mod@abr 20180824
            
              begin
                insert into aqpa463
                  (aqpa463txtrub,
                   aqpa463pgcod,
                   aqpa463hcmod,
                   aqpa463hsucor,
                   aqpa463htran,
                   aqpa463hnrel,
                   aqpa463hfcon,
                   aqpa463hcord,
                   aqpa463txoren,
                   aqpa463txtord,
                   aqpa463hcpcod,
                   aqpa463hvnro,
                   aqpa463hvchr,
                   aqpa463serie,
                   aqpa463corre,
                   aqpa463emp,
                   aqpa463mod,
                   aqpa463suc,
                   aqpa463mda,
                   aqpa463pap,
                   aqpa463cta,
                   aqpa463ope,
                   aqpa463sbo,
                   aqpa463top,
                   aqpa463hip
                   
                   )
                values
                  (p.txtrub,
                   p.pgcod,
                   p.hcmod,
                   p.hsucor,
                   p.htran,
                   p.hnrel,
                   p.hfcon,
                   p.hcord,
                   p.txoren,
                   p.txtord,
                   p.hcord,
                   p.se170vnro,
                   p.se170vchr,
                   lc_serie,
                   lc_corre,
                   ln_emp,
                   ln_mod,
                   ln_suc,
                   ln_mda,
                   ln_pap,
                   ln_cta,
                   ln_ope,
                   ln_sbo,
                   ln_top,
                   lc_hipo);
                commit;
              
              end;
              --end if; --mod@abr 20180824
            end if;
          end if;
        end if;
      end loop;
    
      begin
        --detalle factura
        pq_cr_factura_electronica.sp_cr_Detalle_Factura_trx(pn_hfcon,
                                                            lc_serie,
                                                            lc_corre);
      
      end;
    
    end;
  
  end sp_tra_validas_trH;
  -----------------------------------------------
  ---------------------------------------------------------------------------------------

  procedure sp_cr_Detalle_Factura_trx(pd_pgfape      in date,
                                      pc_serie       in char,
                                      pn_correlativo in number) is
  
    pc_fecha varchar2(80);
  
    cursor aqpa463 is
    
      select *
        from aqpa463 b
       where b.aqpa463hfcon = pd_pgfape --mod@abr 20180707
         and b.aqpa463serie = pc_serie
         and b.aqpa463corre = pn_correlativo
       order by b.aqpa463hnrel asc, b.aqpa463txoren asc;
  
    lc_coderr char(100);
    lc_msgerr char(1000);
  
    ln_cta           number(9);
    lc_hor           char(8);
    ld_fec           date;
    lc_flg           char(1) := 'N';
    pn_pais          number;
    pn_monto_total_1 number(12, 2) := 0;
    result           character(100);
    pd_pgfape2       date;
    ln_mda           number(4);
    ln_nroitem       number(12) := 0;
    ln_cant          number(12, 10);
    lc_codpla        char(3);
    ln_docemp        number(2);
    pv_tdoc          char(25);
    lc_sistemi       char(6);
  
    lv_destiptrb varchar2(6);
    ln_MONTO     number;
  
    lc_contrato varchar2(50);
    lv_tipemp   varchar2(1);
    lv_ruc      varchar2(11);
    lv_rzn      varchar2(1500);
    lv_ubg      varchar2(6);
    lv_NCOM     varchar2(1500);
    lv_CALLE    varchar2(200);
    --lv_URBA        varchar2(25);
    lv_DEPA  varchar2(100);
    lv_PROV  varchar2(30);
    lv_DIST  varchar2(30);
    lv_TELF  varchar2(20);
    lv_WEB   varchar2(100);
    lv_CPAIS varchar2(2);
    --lv_CESUN       varchar2(4);
    lv_codtipo      varchar2(2);
    lv_tipomda      varchar2(3);
    lv_correo       varchar2(100);
    lv_glosa        varchar2(30);
    lv_COMA         varchar2(20);
    lv_TPLA         varchar2(3);
    lv_tipoope      varchar2(4);
    lv_TPLCO        varchar2(3);
    lv_CLOG         varchar2(3);
    lv_codtdoc      varchar2(1);
    lc_pendoc       char(12);
    lv_pendoc       varchar2(15);
    lv_penom        varchar2(1500);
    lv_hora         varchar2(8);
    ln_SIMC         number(12, 2) := 0;
    ln_SVITM        number(12, 2) := 0;
    ln_SPVI         number(12, 2) := 0;
    lv_TXML         varchar2(3);
    lv_ubgCli       varchar2(6);
    lv_sngc13dir    varchar2(500);
    lv_urb          varchar2(100);
    lv_fst071dsc1   varchar2(500);
    lv_locnom1      varchar2(500);
    lv_depnom1      varchar2(500);
    lv_cpai         varchar2(2);
    lv_PNETU        varchar2(3); ------------
    lc_oneroso      varchar2(1);
    ln_mtoconce     number; --(12,10):= 0;
    ln_mtoconce_ant number; --(12,10):= 0;
    ln_VVUIG        number; --(12):= 0;
    lv_desconce     varchar2(500);
    lv_infpredio    varchar2(500);
    ln_PRVIT        number(15, 2) := 0;
    lv_MEDEM        varchar2(50);
    lv_CSUNA        varchar2(8);
    lv_CPGS1        varchar2(14);
    ln_ITITM        number(12, 2) := 0; ---2018.10.19
    ln_IMPTB        number(12, 2) := 0;
    ln_IMPEX        number(12, 2) := 0;
    lv_afecigv      varchar2(2);
    lv_SISC         varchar2(2);
    lv_idtrbsunat   varchar2(4);
    lv_nomtrbsunat  varchar2(6);
    lv_codun        varchar2(3);
    ln_MBIM         number(12, 2) := 0;
    ln_TAIMP        number(12, 2) := 0; --2018.10.19
    ln_CDLEY        number(4) := 0;
    lv_TELEY        varchar2(200);
    lv_TEXT1        varchar2(1000);
    lv_TEXT2        varchar2(1000);
    lv_TRECV        varchar2(1000);
    lv_TEMPL        varchar2(3);
    lv_SUBJE        varchar2(100);
    lv_VPCVA        varchar2(15);
    lv_NEXP         varchar2(10);
    lv_CIND         varchar2(1);
    lv_partida      varchar2(50);
    lv_NCONT        varchar2(50);
    lv_fecoto       varchar2(10);
    ld_fecoto       date;
    lv_cdisn        varchar2(6);
    lv_direccionH   varchar2(100);
    lv_urbaH        varchar2(50);
    lv_dptoH        varchar2(50);
    lv_provH        varchar2(50);
    lv_distH        varchar2(500);
    ln_MTOTAL       number(12, 2) := 0;
    ln_BAIMP        number(12, 2) := 0;
    ln_MTIMP        number(12, 2) := 0;
    ln_PCIMA        number(12, 2) := 0;
    ln_BSIMP        number(12, 2) := 0;
    ln_VAIMP        number(12, 2) := 0;
    ln_MTINF        number(12, 2) := 0;
    ln_MTGRT        number(12, 2) := 0;
    ln_BSIMPS       number(12, 2) := 0;
    ln_MTOTI        number(12, 2) := 0;
    ln_petdoc       number(2);
    lv_CTPR         varchar(2);
    lv_rzn1         varchar2(30);
    lv_rzn2         varchar2(30);
    lc_codsunat     varchar2(4);
  
    lc_nomcaja char(70);
    lc_nom1    char(30);
    lc_nom2    char(30);
  
    ln_item number(12);
  
    ln_mtoDifer number(17, 2);
    ln_mtoRedon number(17, 2);
  
    ld_fecSis date; --mod@abr 20180709
  
    lc_existe char(1) := 'N'; --mod@abr 20180824
  
    lv_sngc13dirFin varchar2(500); --mod@abr 20180905
  
    ln_guiaCP      number; --2018.10.10
    ln_mtoImpuesto number; --2018.10.15
    lv_desmda      varchar2(30); --2018.10.18
  
    lv_codtdocC varchar2(1); --05/04/2023 dcastro 
  
  begin
    begin
    
      for p in aqpa463 loop
      
        --mod@abr 20180824
        lc_existe := 'N';
        Begin
          select 'S'
            into lc_existe
            from aqpa460 a
           where a.aqpa460seri = p.aqpa463serie
             and a.aqpa460num = p.aqpa463corre
             and a.aqpa460ore = P.AQPA463TXOREN
             and rownum = 1;
        exception
          when others then
            lc_existe := 'N';
        end;
        --mod@abr 20180824
        if lc_existe = 'N' then
          Pq_Cr_Factura_Electronica.sp_cr_cobroEfectivo(p.aqpa463pgcod,
                                                        p.aqpa463hcmod,
                                                        p.aqpa463hsucor,
                                                        p.aqpa463htran,
                                                        p.aqpa463hnrel,
                                                        p.aqpa463hfcon,
                                                        p.aqpa463serie,
                                                        p.aqpa463corre,
                                                        pn_monto_total_1);
        
          --validar concepto 
          begin
            select 'S'
              into lc_flg
              from fst198 a
             where a.tp1cod = 1
               and a.tp1cod1 = 11120
               and a.tp1corr1 = 1
               and a.tp1corr2 = 3
               and a.tp1corr3 >= 1
               and a.tp1nro1 = p.aqpa463txoren - 100;
          exception
            when others then
              lc_flg := 'N';
          end;
        
          --obtener cuenta moneda hora fecha
          ln_cta := p.aqpa463cta;
          ln_mda := p.aqpa463mda;
        
          begin
            select a.ithora, a.itfcon
              into lc_hor, ld_fec
              from fsd015 a
             where a.pgcod = p.aqpa463pgcod
               and a.itmod = p.aqpa463hcmod
               and a.itsuc = p.aqpa463hsucor
               and a.ittran = p.aqpa463htran
               and a.itnrel = p.aqpa463hnrel;
          exception
            when others then
              null;
          end;
        
          begin
          
            result := pq_cr_factura_electronica.dintex(pn_monto_total_1);
          end;
        
          ----------Obtener codigo de sunat
          begin
            select lpad(a.tp1nro2, 4, '0')
              into lc_codsunat
              from fst198 a
             where a.tp1cod = 1
               and a.tp1cod1 = 11120
               and a.tp1corr1 = 1
               and a.tp1corr2 = 500
               and a.tp1nro1 = p.aqpa463hsucor;
          exception
            when others then
              null;
          end;
        
          begin
            -- Call the procedure
            pq_cr_factura_electronica.sp_fecha_sys(pc_fecha); --dni
          end;
        
          if lc_flg = 'N' then
            --inserte conceptos de deuda como fila
          
            pq_cr_factura_electronica.sp_cr_Dif_Red(pc_AQPA465PGCOD    => p.aqpa463pgcod,
                                                    pc_AQPA465MOD      => p.aqpa463hcmod,
                                                    pc_AQPA465SUCOREND => p.aqpa463hsucor,
                                                    pc_AQPA465TRAN     => p.aqpa463htran,
                                                    pc_AQPA465REL      => p.aqpa463hnrel,
                                                    pd_AQPA465CON      => p.aqpa463hfcon,
                                                    pn_dif             => ln_mtoDifer,
                                                    pn_red             => ln_mtoRedon);
          
            ln_mtoconce_ant := to_number(trim(p.aqpa463txtord),
                                         '99999999999999999.99'); --20180622
          
            if p.aqpa463txoren - 100 = 18 then
              ln_mtoconce := to_number(ln_mtoconce_ant) -
                             nvl(ln_mtoDifer, 0) - nvl(ln_mtoRedon, 0);
            else
              ln_mtoconce := to_number(ln_mtoconce_ant); ---verficar 222 
            end if;
          
            if ln_mtoconce <> 0 then
            
              --datos persona
              begin
              
                pq_cr_factura_electronica.sp_num_documento(ln_cta,
                                                           lc_pendoc,
                                                           lv_penom,
                                                           pv_tdoc,
                                                           pn_pais,
                                                           ln_petdoc,
                                                           pd_pgfape2);
              end;
            
              --datos direccion cliente
              begin
                -- Call the procedure
                pq_cr_factura_electronica.sp_dir_cliente(lc_pendoc,
                                                         ln_petdoc,
                                                         pn_pais,
                                                         lv_sngc13dir,
                                                         lv_fst071dsc1,
                                                         lv_locnom1,
                                                         lv_depnom1,
                                                         lv_ubgCli); ---dni  pn_pendoc
              end;
            
              --Codigo del Tipo de Comprobante
            
              --2018.10.10
              if substr(p.aqpa463serie, 1, 1) = 'F' then
                ln_guiaCP := 1;
              elsif substr(p.aqpa463serie, 1, 1) = 'B' then
                ln_guiaCP := 3;
              else
                ln_guiaCP := null;
              end if;
              --2018.10.10    
            
              begin
                select '0' || to_char(a.tp1nro1)
                  into lv_codtipo
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 7
                   and a.tp1corr3 = ln_guiaCP; --2018.10.10 se modifico codigo de guia para tipo comprobante
              exception
                when others then
                  null;
              end;
            
              --Codigo tipo moneda
              begin
                select trim(a.tp1desc)
                  into lv_tipomda
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 8
                   and a.tp1corr3 >= 1
                   and a.tp1nro1 = ln_mda;
              exception
                when others then
                  null;
              end;
            
              --texto moneda  2018.10.18
              begin
                select trim(a.tp1desc)
                  into lv_desmda
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 2
                   and a.tp1corr2 = 5
                   and a.tp1corr3 >= 1
                   and a.tp1nro1 = ln_mda;
              exception
                when others then
                  null;
              end;
              ---  2018.10.18
            
              /*             --Codigo tipo documento cliente
                            begin
                              select to_char(a.tp1nro1)
                                into lv_codtdoc
                                from fst198 a
                               where a.tp1cod = 1
                                 and a.tp1cod1 = 11120
                                 and a.tp1corr1 = 1
                                 and a.tp1corr2 = 4
                                 and a.tp1nro2 = ln_petdoc;
                            exception
                              when others then
                                null;
                            end;
              */
              --Codigo tipo documento cliente
              begin
                select to_char(a.tp1nro1), substr(trim(TP1DESC), -1, 1)
                  into lv_codtdoc, lv_codtdocC
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 4
                   and a.tp1nro2 = ln_petdoc;
              exception
                when others then
                  null;
              end;
            
              --05/04/2023 dcastro se agrego nuevo tipo documento PTP
              if lv_codtdoc = 3 then
                lv_codtdoc := lv_codtdocC;
              end if;
              --05/04/2023 dcastro se agrego nuevo tipo documento PTP
            
              --Correo del cliente
              lv_correo := null;
              begin
                select substr(a.pextxt, 1, INSTR(a.pextxt, '\', 1) - 1)
                  into lv_correo
                  from fsx001 a
                 where a.pepais = pn_pais
                   and a.petdoc = ln_petdoc
                   and a.pendoc = lc_pendoc
                   and a.txcod = 0
                   and rownum = 1 --- 2021/11/11 dcastro se agrego condicion
                 order by a.pexren desc;
              exception
                when others then
                  null;
              end;
            
              --nro item
              ln_item := 0;
              begin
                select max(a.aqpa460item)
                  into ln_item
                  from aqpa460 a
                 where a.aqpa460seri = p.aqpa463serie
                   and a.aqpa460num = p.aqpa463corre;
              exception
                when too_many_rows then
                  begin
                    select max(a.aqpa460item)
                      into ln_item
                      from aqpa460 a
                     where a.aqpa460seri = p.aqpa463serie
                       and a.aqpa460num = p.aqpa463corre
                       and rownum = 1;
                  exception
                    when others then
                      null;
                  end;
                when no_data_found then
                  ln_item := 0;
                when others then
                  null;
              end;
              ln_nroitem := nvl(ln_item, 0) + 1;
            
              --monto conceptos
              --  ln_mtoconce := to_number(replace(trim(p.aqpa463txtord),'.',','));
            
              --       ln_mtoconce_ant:= round(trim(p.aqpa463txtord),2);
            
              --descripcion conceptos
              lv_desconce := trim(p.aqpa463hvchr);
            
              --Codigo de plantilla
              lc_codpla := 'EST';
            
              --- Sistema de Emicion 
              lc_sistemi := 'BANTOT';
            
              --Codigo tipo doc empresa
              begin
                select a.tp1nro1
                  into ln_docemp
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 4;
              exception
                when others then
                  null;
              end;
            
              begin
                select to_char(a.tp1nro1)
                  into lv_tipemp
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 4
                   and a.tp1corr3 >= 1
                   and a.tp1nro2 = ln_docemp;
              
              exception
                when others then
                  null;
              end;
              --ruc caja
              begin
                select trim(a.tp1desc)
                  into lv_ruc
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 1;
              exception
                when others then
                  null;
              end;
            
              --NOMBRE COMERCIAL caja
              begin
                select a.tp1desc
                  into lv_NCOM
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 5;
              exception
                when others then
                  null;
              end;
            
              --Ubigeo caja
              begin
                select trim(a.tp1desc)
                  into lv_ubg
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 6;
              exception
                when others then
                  null;
              end;
              ---------------------------------------campos parte 2
              ----------hora de transacion 
              begin
                select trim(a.aqpa463txtord)
                  into lv_hora
                  from aqpa463 a
                 where a.aqpa463pgcod = p.aqpa463pgcod
                   and a.aqpa463hcmod = p.aqpa463hcmod
                   and a.aqpa463hsucor = p.aqpa463hsucor
                   and a.aqpa463htran = p.aqpa463htran
                   and a.aqpa463hnrel = p.aqpa463hnrel
                   and a.aqpa463hfcon = p.aqpa463hfcon
                   and a.aqpa463serie = p.aqpa463serie
                   and a.aqpa463corre = p.aqpa463corre
                   and a.aqpa463txtord like '%:%';
              exception
                when others then
                  null;
              end;
            
              --mod@abr 20180907
              begin
                select pgfape into ld_fecSis from fst017 where pgcod = 1;
              exception
                when others then
                  null;
              end;
              if lv_hora is null then
              
                if ld_fecSis = p.aqpa463hfcon then
                
                  begin
                    select a.ithora
                      into lv_hora
                      from fsd015 a
                     where a.pgcod = p.aqpa463pgcod
                       and a.itsuc = p.aqpa463hsucor
                       and a.itmod = p.aqpa463hcmod
                       and a.ittran = p.aqpa463htran
                       and a.itnrel = p.aqpa463hnrel;
                  exception
                    when others then
                      null;
                  end;
                
                else
                  begin
                    select a.hhora
                      into lv_hora
                      from fsh015 a
                     where a.pgcod = p.aqpa463pgcod
                       and a.hsucor = p.aqpa463hsucor
                       and a.hcmod = p.aqpa463hcmod
                       and a.htran = p.aqpa463htran
                       and a.hnrel = p.aqpa463hnrel
                       and a.hfcon = p.aqpa463hfcon;
                  exception
                    when others then
                      null;
                  end;
                end if;
              
              end if;
              --mod@br 20180907
            
              --------tipo de operacion 
              begin
                select trim(a.tp1desc)
                  into lv_tipoope
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 11
                   and a.tp1corr3 = 1;
              exception
                when others then
                  null;
                
              end;
              -------Codigo de tipo de importe de afectacion
              Begin
                select to_char(a.tp1nro1)
                  into lc_oneroso
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 12
                   and a.tp1corr3 = 3;
              exception
                when others then
                  null;
              End;
            
              -----Afectaci?n del IGV  
              begin
                select to_char(a.tp1nro1)
                  into lv_afecigv
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 13
                   and a.tp1corr3 = 1;
              exception
                when others then
                  null;
                
              end;
            
              ---------Identificaci?n del tributo seg?n cat?logo SUNAT
              begin
                select to_char(a.tp1nro1), trim(a.tp1desc)
                  into lv_idtrbsunat, lv_nomtrbsunat
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 14
                   and a.tp1corr3 = 1;
              exception
                when others then
                  null;
              end; ---ojo
              ----------C?digo del Tipo de Tributo
              begin
                select trim(a.tp1desc)
                  into lv_destiptrb
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 14
                   and a.tp1corr3 = 2;
              exception
                when others then
                  null;
              end;
            
              /*2018.10.15 MONTO IGV */
              begin
                pq_cr_factura_electronica.sp_cr_cobroigv(pn_pgcod  => p.aqpa463pgcod,
                                                         pn_hcmod  => p.aqpa463hcmod,
                                                         pn_hsucor => p.aqpa463hsucor,
                                                         pn_htran  => p.aqpa463htran,
                                                         pn_hnrel  => p.aqpa463hnrel,
                                                         pn_hfcon  => p.aqpa463hfcon,
                                                         pc_serie  => p.aqpa463serie,
                                                         pn_corr   => p.aqpa463corre,
                                                         pn_mto    => ln_mtoImpuesto);
              
              end;
              /*2018.10.15 MONTO IGV */
            
              ---Monto del descuento o recargo
              ln_MONTO := 0;
            
              -----------------Descripcion del pais 
              begin
                Select trim(a.tp1desc)
                  Into lv_CPAIS
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 15
                   and a.tp1corr3 = 1;
              exception
                when others then
                  null;
              end;
            
              if ln_mtoImpuesto <> 0 then
                --2018.10.20
                lv_partida := null;
                --lc_contrato := null;   
                lv_direccionH := null;
                lv_urbaH      := null;
                lv_dptoH      := null;
                lv_provH      := null;
                lv_distH      := null;
                lv_cdisn      := null;
              
              else
                --2018.10.20
              
                ----------informacion del predio
                begin
                  pq_cr_factura_electronica.sp_cr_detalle_predio(pc_aqpa463mod => p.aqpa463mod,
                                                                 pc_aqpa463suc => p.aqpa463suc,
                                                                 pc_aqpa463mda => p.aqpa463mda,
                                                                 pc_aqpa463pap => p.aqpa463pap,
                                                                 pc_aqpa463cta => p.aqpa463cta,
                                                                 pc_aqpa463ope => p.aqpa463ope,
                                                                 pc_aqpa463sbo => p.aqpa463sbo,
                                                                 pc_aqpa463top => p.aqpa463top,
                                                                 pc_partida    => lv_partida,
                                                                 pc_contrato   => lc_contrato,
                                                                 pc_direccion  => lv_direccionH,
                                                                 pc_urba       => lv_urbaH,
                                                                 pc_dpto       => lv_dptoH,
                                                                 pc_prov       => lv_provH,
                                                                 pc_dist       => lv_distH,
                                                                 pc_ubigeo     => lv_cdisn);
                end;
              
              end if; --2018.10.20
            
              if lv_cdisn is null then
                --20180626
                lv_cdisn      := lv_ubgCli;
                lv_urbaH      := substr(lv_urb, 1, 25);
                lv_dptoH      := substr(lv_depnom1, 1, 30);
                lv_provH      := substr(lv_locnom1, 1, 30);
                lv_distH      := substr(lv_fst071dsc1, 1, 30);
                lv_direccionH := substr(lv_sngc13dir, 1, 100);
              end if;
            
              lc_contrato := lpad(to_char(p.aqpa463cta), 9, 0) ||
                             lpad(to_char(p.aqpa463mda), 3, 0) ||
                             lpad(to_char(p.aqpa463ope), 9, 0); --lv_text2; --numero credito
              lv_NCONT    := lc_contrato;
            
              ld_fecoto := pq_cr_factura_electronica.fn_fecha_desembolso(pc_aqpa463cta => p.aqpa463cta,
                                                                         pc_aqpa463ope => p.aqpa463ope);
            
              lv_fecoto := to_char(ld_fecoto, 'DD-MM-YYYY');
              --agregar a info predio G74.1, G74.2
              lv_infpredio := '0' || '0' || lv_partida || '|' ||
                              lc_contrato || '|' || lv_fecoto || '|' ||
                              lv_direccionH || '|' || lv_urbaH || '|' ||
                              lv_provH || '|' || lv_distH || '|' ||
                              lv_dptoH;
              lv_pendoc    := lc_pendoc;
            
              --Pais del cliente
            
              begin
                select trim(a.tp1desc)
                  into lv_cpai
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 20
                   and a.tp1NRO1 = pn_pais;
              exception
                when others then
                  null;
              end;
            
              --Producto del credito
              begin
                select to_char(p.aqpa463mod) || '-' || trim(a.tonom)
                  into lv_TEXT1
                  from fst004 a
                 where a.modulo = p.aqpa463mod
                   and a.totope = p.aqpa463top;
              
              exception
                when others then
                  null;
              end;
            
              --direccion
              begin
                select to_char(a.tp1desc)
                  into lv_CALLE
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 2;
              
              exception
                when others then
                  null;
              end;
            
              --telefono
              begin
                select trim(to_char(a.tp1desc))
                  into lv_TELF
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 3;
              exception
                when others then
                  null;
              end;
            
              Begin
                ---web de caja arequipa
                select trim(a.tp1desc)
                  into lv_web
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 12;
              exception
                when others then
                  null;
              End;
            
              --departamento
              begin
                select to_char(a.tp1desc)
                  into lv_DEPA
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 7;
              
              exception
                when others then
                  null;
              end;
            
              --provincia
              begin
                select to_char(a.tp1desc)
                  into lv_PROV
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 8;
              
              exception
                when others then
                  null;
              end;
            
              --distrito
              begin
                select to_char(a.tp1desc)
                  into lv_DIST
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 9;
              
              exception
                when others then
                  null;
              end;
            
              --razon social
            
              begin
                select to_char(a.tp1desc)
                  into lv_rzn1
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 10;
              
              exception
                when others then
                  null;
              end;
            
              begin
                select to_char(a.tp1desc)
                  into lv_rzn2
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 11;
              
              exception
                when others then
                  null;
              end;
              lv_rzn := trim(lv_rzn1) || ' ' || trim(lv_rzn2);
            
              lv_glosa := null;
              lv_TPLA  := 'EST';
              lv_TPLCO := 'EST';
              ln_SIMC  := null;
              ln_SVITM := pn_monto_total_1;
              ln_SPVI  := pn_monto_total_1;
              lv_TXML  := '2.1';
              lv_urb   := null;
              lv_PNETU := 'NIU';
              ln_cant  := 1;
              lv_CTPR  := '01';
              ln_VVUIG := ln_mtoconce;
              ln_PRVIT := ln_mtoconce;
              lv_MEDEM := 'UND';
              lv_CSUNA := '84121901';
              ln_ITITM := null;
              ln_IMPTB := null;
              ln_IMPEX := null;
              --lv_afecigv  := '9996';
              lv_SISC   := null;
              lv_codun  := 'FRE';
              ln_MBIM   := ln_mtoconce; --null; 20180623
              ln_TAIMP  := null;
              ln_CDLEY  := 1000;
              lv_TELEY  := trim(result) || ' ' || lv_desmda; --2018.10.17
              lv_TEXT2  := lpad(to_char(p.aqpa463cta), 9, 0) ||
                           lpad(to_char(p.aqpa463mda), 3, 0) ||
                           lpad(to_char(p.aqpa463ope), 9, 0);
              lv_TRECV  := lv_correo;
              lv_TEMPL  := 'EST';
              lv_SUBJE  := '0' || trim(lv_codtipo) || '-' || P.AQPA463SERIE || '-' ||
                           trim(to_char(P.AQPA463CORRE));
              lv_VPCVA  := null;
              lv_NEXP   := '0';
              lv_CIND   := '0';
              ln_MTOTAL := null;
              ln_BAIMP  := null;
              ln_MTIMP  := null;
              ln_PCIMA  := null;
              ln_BSIMP  := null;
              ln_VAIMP  := null;
              ln_MTINF  := pn_monto_total_1;
              ln_MTGRT  := null;
              ln_BSIMPS := null;
              ln_MTOTI  := null;
              lv_CPGS1  := null;
              lv_COMA   := to_char(p.aqpa463hfcon, 'yymmdd') ||
                           lpad(to_char(p.aqpa463hsucor), 3, 0) ||
                           lpad(to_char(p.aqpa463hcmod), 3, 0) ||
                           lpad(to_char(p.aqpa463htran), 3, 0) ||
                           lpad(to_char(p.aqpa463hnrel), 4, 0);
            
              /*2018.10.15 IGV*/
              if nvl(ln_mtoImpuesto, 0) <> 0 then
                --si existe impuesto
                ln_MTOTI  := null;
                ln_MTINF  := null;
                ln_MTGRT  := null;
                ln_BSIMPS := null;
                ln_MTIMP  := ln_mtoImpuesto;
                ln_IMPEX  := ln_mtoImpuesto;
                ln_ITITM  := ln_mtoImpuesto;
                ln_IMPTB  := ln_mtoImpuesto;
                ln_PCIMA  := 18;
                ln_TAIMP  := 18;
                ln_MTOTAL := ln_mtoconce;
                ln_BAIMP  := ln_mtoconce;
                ln_SVITM  := ln_mtoconce; --AQPA460SVITM
              
                lv_tipoope  := '0101'; --AQPA460TOPE  
                ln_SIMC     := ln_mtoImpuesto; --AQPA460SIMC   total impuesto
                lv_desconce := 'IGV'; --AQPA460DESC 
                lv_afecigv  := 10; --AQPA460AFIGV 
              
                lv_idtrbsunat  := 1000; -- AQPA460CODTB  
                lv_nomtrbsunat := 'IGV'; --AQPA460DSTRB  
                lv_codun       := 'VAT'; --AQPA460CODUN 
              
                ln_VVUIG := pn_monto_total_1;
              end if;
              /*2018.10.15 IGV*/
            
              ----------------------datos caja
              Begin
                ---razon social de caja arequipa
                select a.tp1desc
                  into lc_nom1
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 10;
              exception
                when others then
                  null;
              End;
            
              Begin
                ---razon social de caja arequipa
                select a.tp1desc
                  into lc_nom2
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 11;
              exception
                when others then
                  null;
              End;
            
              lc_nomcaja := trim(lc_nom1) || trim(lc_nom2);
            
              --mod@abr 20180903 modificacion de ubigeo TEMPORAL
              lv_sngc13dirFin := trim(lv_sngc13dir) || ' - ' ||
                                 trim(lv_fst071dsc1) || ' - ' ||
                                 trim(lv_locnom1) || ' - ' ||
                                 trim(lv_depnom1);
              lv_depnom1      := null;
              lv_locnom1      := null;
              lv_fst071dsc1   := null;
            
              --mod@abr 20180903 modificacion de ubigeo TEMPORAL
            
              --mod@abr 20180905
              if lv_correo is null then
                lv_correo := 'Reportefactele@cajaarequipa.pe';
              end if;
            
              if lv_TRECV is null then
                lv_TRECV := 'Reportefactele@cajaarequipa.pe';
              end if;
              --mod@abr 20180905
            
              --2018.10.17 ---2018.12.26
              if ln_cta = 999999999 or trim(ln_cta) = 99 or ln_cta = 0 then
                --inicio valida cuenta cliente  2018.10.17
                lv_codtdoc := 1;
                lv_pendoc  := '00000000';
                lv_penom   := 'Clientes Varios';
              End if;
            
              ------insert detalle de factura
              BEGIN
                insert into AQPA460
                  (AQPA460TDOC, --Codigo del Tipo de Documento de Identidad oENEmpresa
                   AQPA460RUCC, --N?mero de documento de identidad del emisor oENEmpresa
                   AQPA460RSOC, --Apellidos y nombres o denominaci?n o raz?n social oENEmpresa
                   AQPA460CDIS, --Codigo de UBIGEO oENEmpresa
                   AQPA460NCOM, --Nombre Comercial oENEmpresa
                   AQPA460CALLE, --Direcci?n completa y detallada oENEmpresa
                   AQPA460URBA, --Urbanizacion o Zona  oENEmpresa
                   AQPA460DEPA, --Departamento, expresado textualmente  oENEmpresa
                   AQPA460PROV, --Provincia, expresarlo textualmente   oENEmpresa
                   AQPA460DIST, --Distrito, expresarlo textualmente oENEmpres
                   AQPA460TELF, --Telefono de la Empresa Emisora oENEmpres
                   AQPA460WEB, --Pagina Web del Emisor oENEmpres           
                   AQPA460CPAIS, --Codigo del Pais del Emisor oENEmpres
                   AQPA460CESUN, --C?digo del establecimiento de Sunat  oENEmpres
                   AQPA460SERI, --Serie del comprobante.  Datos del Comprobante
                   AQPA460NUM, --Numero Correlativo del comprobante. Datos del Comprobante
                   AQPA460FEMI, --Fecha de Emision del Comprobante Datos del Comprobante
                   AQPA460TCOMF, --Codigo del Tipo de Comprobante Datos del Comprobante
                   AQPA460MONE, --Codigo del Tipo de Moneda Datos del Comprobante
                   AQPA460CORRR, --El correo electr?nico del Receptor  Datos del Comprobante
                   AQPA460MGLO, --Multiples Informaci?n adicional u observacion del comprobante.  Datos del Comprobante
                   AQPA460COMA, --Numero Interno del Comprobante Datos del Comprobante
                   AQPA460TPLA, --Tiplo de Plantilla  Datos del Comprobante
                   AQPA460TOPE, --C?digo de Tipo de operaciones Datos del Comprobante
                   AQPA460TPLCO, --C?digo de plantilla de correo  Datos del Comprobante
                   AQPA460CLOG, --C?digo del tipo de Logo Datos del Comprobante
                   AQPA460TDOCR, --Codigo del tipo de documento de identificaci?n del Receptor Datos del Comprobante
                   AQPA460NRUC, --N?mero de documento de identificaci?n Datos del Comprobante
                   AQPA460RASOC, --Apellidos y nombres o denominaci?n o raz?n social Datos del Comprobante
                   AQPA460IMPT, --Importe total  a pagar Datos del Comprobante
                   AQPA460HEMI, --Hora de Emisi?n  Datos del Comprobante
                   AQPA460SIMC, --Suma de todos los impuestos del comprobante.  Datos del Comprobante
                   AQPA460SVITM, --Suma del valor de venta total de todos los items   Datos del Comprobante
                   AQPA460SPVI, --Suma de los precios de venta total de todos los items  Datos del Comprobante
                   AQPA460TXML, -- Indica el tipo de XML que se generar? Datos del Comprobante
                   --  no va para factura   --AQPA460SDREF, --Serie documento al que se aplica la nota. ENComprobanteMotivoDocumento
                   --  no va para factura   --AQPA460NDREF, --Numero  documento al que se aplica la nota.  ENComprobanteMotivoDocumento
                   --  no va para factura    --AQPA460CMEM,  --C?digo por el cual se emite la nota.  ENComprobanteMotivoDocumento
                   ---  no va para factura  --AQPA460SUST,  --Sustento ENComprobanteMotivoDocumentoSustento
                   --  no va para factura     AQPA460SERIE, --Serie del comprobante referenciado. Referencia a un comprobante
                   --  no va para factura     AQPA460NRO,   --N?mero del comprobante referenciado Referencia a un comprobante
                   ---  no va para factura   --AQPA460TCOMP, --C?digo del tipo de comprobante.  Referencia a un comprobante
                   ---  no va para factura  --AQPA460FDREF, --Fecha de emisi?n del comprobante referenciado. Referencia a un comprobante  
                   AQPA460CDIST, --C?digo de UBIGEO Datos adicionales del Receptor
                   AQPA460CALL, --Direcci?n completa y detallada Datos adicionales del Receptor
                   AQPA460URB, --Urbanizacion o Zona   Datos adicionales del Receptor
                   AQPA460DEP, --Departamento Datos adicionales del Receptor
                   AQPA460PRV, --Provincia   Datos adicionales del Receptor
                   AQPA460DST, --Distrito Datos adicionales del Receptor
                   AQPA460CPAI, --C?digo del Pa?s  Datos adicionales del Receptor
                   AQPA460ITEM, --N?mero de orden del Item ENComprobanteDetalle 
                   AQPA460PNETU, --Unidad de medida de los bienes vendidos por item (UN/ECE rec 20) ENComprobanteDetalle 
                   AQPA460CANTF, --Cantidad de unidades vendidas pot item (Q)  ENComprobanteDetalle 
                   AQPA460TOTAL, --Importe monetario que es el total de la l?nea de detalle, incluyendo variaciones de precio (subvenciones, cargos o descuentos) pero sin impuestos.  ENComprobanteDetalle 
                   AQPA460DETE, --Codigo de identificaci?n de Onerosidad del Item ENComprobanteDetalle 
                   AQPA460CTPR, --Codigo de tipo de importe de afectacion ENComprobanteDetalle 
                   /*ok */
                   AQPA460VVUN, --Valores de venta unitarios por item (VU) no incluye impuestos  ENComprobanteDetalle 
                   /*campos probl*/
                   AQPA460VVUIG, --Precio de Venta Unitario (Incluye impuestos)  ENComprobanteDetalle 
                   AQPA460DESC, -- Descripcion del producto ENComprobanteDetalle 
                   AQPA460MFUN, --Multi Descripcion,  puede tener varias desccripciones ENComprobanteDetalle 
                   AQPA460PRVIT, --Es el precio de venta ENComprobanteDetalle 
                   AQPA460MEDEM, --Unidad medida del emisor ENComprobanteDetalle 
                   AQPA460CSUNA, --C?digo producto establecido por Sunat   ENComprobanteDetalle 
                   AQPA460CPGS1, --C?digo de producto GS1  ENComprobanteDetalle 
                   AQPA460ITITM, --Impuesto total del item ENComprobanteDetalle 
                   AQPA460IMPTB, --Importe total de un tributo para este item Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460IMPEX, ---Importe expl?cito a tributar ( = Tasa Porcentaje * Base Imponible)   Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460AFIGV, --Afectaci?n del IGV  Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460SISC, --Sistema de ISC  (01=Especifico; 02= al valor; 03=PV al p?blico)  Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   /*ojo*/
                   AQPA460CODTB, --Identificaci?n del tributo seg?n cat?logo SUNAT Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460DSTRB, --Nombre del Tributo (IGV, IVAP, ISC)  Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460CODUN, --C?digo del Tipo de Tributo (UN/ECE 5153) Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460MBIM, --Monto base del impuesto Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460TAIMP, --Tasa aplicada del impuesto  Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460CDLEY, --Codigo de la Leyenda Utilizado para Leyendas
                   AQPA460TELEY, --Texto de la leyenda  Utilizado para Leyendas
                   AQPA460TEXT1, --Texto libre 1 : Producto  Informaci?n adicional para la visualizacion de representaciones impresas, antes definido por el integrador.
                   AQPA460TEXT2, --Texto libre 2 : N?mero de Cr?dito Informaci?n adicional para la visualizacion de representaciones impresas, antes definido por el integrador.
                   AQPA460TRECV, --Correo del receptor Utilizado para enviar correos adicionales con copia al Correo del Receptor, ingresado en ENComprobante.Correo
                   AQPA460TEMPL, --C?digo de Tipo de Plantilla  Utilizado para enviar correos adicionales con copia al Correo del Receptor, ingresado en ENComprobante.Correo
                   AQPA460SUBJE, --Asunto del correo Utilizado para enviar correos adicionales con copia al Correo del Receptor, ingresado en ENComprobante.Correo
                   AQPA460VPCVA, --Placa del vehiculo Informaci?n adicional del item
                   AQPA460NEXP, --N?mero de Expediente Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460CIND, --C?digo de indicador  Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460NPART, --N?mero de Partida Registral  Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460NCONT, --N?mero de contrato  Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460FOTRC, --Fecha de Otorgo de cr?dito   Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460CDISN, --C?digo de Ubigeo   Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460DIREH, --Direcci?n   Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460URBH, --Urbanizaci?n Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460PRVH, --Provincia   Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460DSTH, --Distrito   Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460DEPTH, --Departamento Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460MTOTAL, --Monto total Gravado (Sin impuesto)  Informaci?n de gravada                           
                   AQPA460BAIMP, --Base del impuesto  IGV del Gravado
                   AQPA460MTIMP, --Monto total solo del impuesto   IGV del Gravado
                   AQPA460PCIMA, --Porcentaje del impuesto aplicado  IGV del Gravado
                   AQPA460BSIMP, --Base del impuesto Otros impuestos del Gravado
                   AQPA460VAIMP, --Monto total solo del impuesto  Otros impuestos del Gravado
                   AQPA460MTINF, --Monto total Inafecto  Informaci?n de inafecto
                   AQPA460MTGRT, --Monto total Gratuito  Informaci?n de gratuito
                   AQPA460BSIMPS, --Base del impuesto Impuestos del Gratuito
                   AQPA460MTOTI, --Monto total de impuestos Impuestos del Gratuito
                   AQPA460PGC, --mod@abr 20180824
                   AQPA460MOD, --mod@abr 20180824  
                   AQPA460SUC, --mod@abr 20180824 
                   AQPA460TRX, --mod@abr 20180824
                   AQPA460REL, --mod@abr 20180824
                   AQPA460ORE --mod@abr 20180824
                   
                   )
                
                Values
                  (lv_tipemp, --AQPA460TDOC,  ok
                   lv_ruc, --AQPA460RUCC,  ok
                   lv_rzn, --AQPA460RSOC,  ok
                   lv_ubg, --AQPA460CDIS,  ok
                   lv_NCOM, --AQPA460NCOM,  ok
                   lv_CALLE, --AQPA460CALLE  ok
                   lv_urb, --AQPA460URBA,  ok
                   lv_DEPA, --AQPA460DEPA,  ok
                   lv_PROV, --AQPA460PROV,  ok
                   lv_DIST, --AQPA460DIST,  ok
                   lv_TELF, --AQPA460TELF,  ok
                   lv_WEB, --AQPA460WEB,   ok
                   lv_CPAIS, --AQPA460CPAIS  ok
                   lc_codsunat, --lv_CESUN,        --AQPA460CESUN
                   p.aqpa463serie, --AQPA460SERI,  ok
                   p.aqpa463corre, --AQPA460NUM,   ok
                   p.aqpa463hfcon, --AQPA460FEMI,  ok
                   lv_codtipo, --AQPA460TCOMF  ok
                   lv_tipomda, --AQPA460MONE,  ok
                   lv_correo, --AQPA460CORRR  ok
                   lv_glosa, --AQPA460MGLO,  ok
                   lv_COMA, --AQPA460COMA,  ok
                   lv_TPLA, --AQPA460TPLA,  ok
                   lv_tipoope, --AQPA460TOPE,  ok
                   lv_TPLCO, --AQPA460TPLCO  ok
                   lv_CLOG, --AQPA460CLOG,
                   lv_codtdoc, --AQPA460TDOCR  ok
                   lv_pendoc, --AQPA460NRUC,  ok
                   lv_penom, --AQPA460RASOC  ok
                   pn_monto_total_1, --AQPA460IMPT,  ok
                   lv_hora, --AQPA460HEMI,  ok
                   ln_SIMC, --AQPA460SIMC,  ok
                   ln_SVITM, --AQPA460SVITM  ok
                   ln_SPVI, --AQPA460SPVI,  ok
                   lv_TXML, --AQPA460TXML,  ok
                   --AQPA460SDREF, --Serie documento al que se aplica la nota. ENComprobanteMotivoDocumento
                   --AQPA460NDREF, --Numero  documento al que se aplica la nota.  ENComprobanteMotivoDocumento
                   --AQPA460CMEM,  --C?digo por el cual se emite la nota.  ENComprobanteMotivoDocumento
                   --     no va para factura--      lc_sustento,  --Sustento ENComprobanteMotivoDocumentoSustento
                   --AQPA460SERIE, --Serie del comprobante referenciado. Referencia a un comprobante
                   --AQPA460NRO,   --N?mero del comprobante referenciado Referencia a un comprobante
                   --AQPA460TCOMP, --C?digo del tipo de comprobante.  Referencia a un comprobante
                   --AQPA460FDREF, --Fecha de emisi?n del comprobante referenciado. Referencia a un comprobante  
                   lv_ubgCli, --AQPA460CDIST,  ok
                   lv_sngc13dir, --AQPA460CALL,   ok
                   lv_urb, --AQPA460URB,    ok
                   lv_depnom1, --AQPA460DEP,    ok
                   lv_locnom1, --AQPA460PRV,    ok
                   lv_fst071dsc1, --AQPA460DST,    ok
                   lv_cpai, --AQPA460CPAI,   ok
                   ln_nroitem, --AQPA460ITEM,   ok
                   lv_PNETU, --AQPA460PNETU,  ok
                   /*ok*/
                   ln_cant, --AQPA460CANTF,  ok
                   ln_mtoconce, --AQPA460TOTAL,  ok
                   lc_oneroso, --AQPA460DETE,   ok
                   lv_CTPR, --AQPA460CTPR,   ok
                   ln_mtoconce, --AQPA460VVUN,   ok to number
                   ln_VVUIG, --AQPA460VVUIG,  ok
                   lv_desconce, --AQPA460DESC,   ok
                   lv_infpredio, --AQPA460MFUN,   ok
                   ln_PRVIT, --AQPA460PRVIT,  ok
                   lv_MEDEM, --AQPA460MEDEM,  ok
                   lv_CSUNA, --AQPA460CSUNA,  ok
                   lv_CPGS1, --AQPA460CPGS1,  ok
                   ln_ITITM, --AQPA460ITITM,  ok
                   ln_IMPTB, --AQPA460IMPTB,  ok
                   ln_IMPEX, --AQPA460IMPEX,  ok
                   lv_afecigv, --AQPA460AFIGV,  ok
                   lv_SISC, --AQPA460SISC,   ok
                   lv_idtrbsunat, --AQPA460CODTB,  ok
                   lv_nomtrbsunat, --AQPA460DSTRB,  ok
                   lv_codun, --AQPA460CODUN,  ok
                   ln_MBIM, --AQPA460MBIM,   ok
                   ln_TAIMP, --AQPA460TAIMP,  ok
                   ln_CDLEY, --AQPA460CDLEY,  ok
                   lv_TELEY, --AQPA460TELEY,  ok
                   lv_TEXT1, --AQPA460TEXT1,  ok
                   lv_TEXT2, --AQPA460TEXT2,  ok
                   lv_TRECV, --AQPA460TRECV,  ok
                   lv_TEMPL, --AQPA460TEMPL,  ok
                   lv_SUBJE, --AQPA460SUBJE,  ok
                   lv_VPCVA, --AQPA460VPCVA,  ok
                   lv_NEXP, --AQPA460NEXP,   ok
                   lv_CIND, --,        --AQPA460CIND,   ok
                   nvl(lv_partida, ' '), --G74.3  --AQPA460NPART,  ok
                   nvl(lv_NCONT, ' '), -- G74.4 NUMERO CONTRATO                AQPA460NCONT,  ok 
                   ld_fecoto, --G74.5  FECHA OTORGAMIENTO CREDITO   AQPA460FOTRC,  ok
                   nvl(lv_cdisn, ' '), --G74.6  Ubigeo                        AQPA460CDISN,  ok
                   nvl(lv_direccionH, ' '), --G74.7                           AQPA460DIREH,  ok
                   nvl(lv_urbaH, ' '), --G74.8                                 AQPA460URBH,   ok
                   nvl(lv_provH, ' '), --G74.9                                AQPA460PRVH,   ok
                   nvl(lv_distH, ' '), --G74.10                                AQPA460DSTH,   ok
                   nvl(lv_dptoH, ' '), --AQPA460DEPTH,  ok
                   ln_MTOTAL, --AQPA460MTOTAL  ok
                   ln_BAIMP, --AQPA460BAIMP,  ok
                   ln_MTIMP, --AQPA460MTIMP,  ok
                   ln_PCIMA, --AQPA460PCIMA,  ok
                   ln_BSIMP, --AQPA460BSIMP,  ok
                   ln_VAIMP, --AQPA460VAIMP,  ok
                   ln_MTINF, --AQPA460MTINF,  ok
                   ln_MTGRT, --AQPA460MTGRT,  ok
                   ln_BSIMPS, --AQPA460BSIMPS  ok
                   ln_MTOTI, --AQPA460MTOTI   ok
                   P.AQPA463PGCOD, --mod@abr 20180824
                   P.AQPA463HCMOD, --mod@abr 20180824
                   P.AQPA463HSUCOR, --mod@abr 20180824 
                   P.AQPA463HTRAN, --mod@abr 20180824
                   P.AQPA463HNREL, --mod@abr 20180824 
                   P.AQPA463TXOREN --mod@abr 20180824
                   );
              
                commit;
              Exception
                when others then
                
                  lc_coderr := sqlcode;
                  lc_msgerr := sqlerrm;
                
                  insert into aqpa460E
                    (aqpa460eserie,
                     aqpa460ecorr,
                     aqpa460epgcod,
                     aqpa460emod,
                     aqpa460esucorend,
                     aqpa460etran,
                     aqpa460erel,
                     aqpa460econ,
                     aqpa460etip,
                     Aqpa460eacoe,
                     Aqpa460eamsge)
                  
                  values
                    (p.aqpa463serie,
                     p.aqpa463corre,
                     p.aqpa463pgcod,
                     p.aqpa463hcmod,
                     p.aqpa463hsucor,
                     p.aqpa463htran,
                     p.aqpa463hnrel,
                     p.aqpa463hfcon,
                     
                     'S',
                     lc_coderr,
                     lc_msgerr);
                  commit;
              END;
            
              ln_MTOTAL := 0;
              ln_BAIMP  := 0;
              ln_MTIMP  := 0;
              ln_PCIMA  := 0;
              ln_BSIMP  := 0;
              ln_VAIMP  := 0;
              ln_MTINF  := 0;
              ln_MTGRT  := 0;
              ln_BSIMPS := 0;
              ln_MTOTI  := 0;
            
            end if;
          end if;
        end if;
      
      ------------------------------------------------------------------------------------------------------------- 
      end loop;
    
      /* 
      ----insert cabecera de factura aqpa465 
        begin
            pq_cr_factura_electronica.sp_cr_cabecera_trx(pd_pgfape => pd_pgfape,
                                                         pc_serie => pc_serie,
                                                         pn_correlativo => pn_correlativo,
                                                         pn_concepto => null );
         end;
      */
    
    end;
  
  exception
    when others then
    
      --lc_coderr := sqlcode;
      --lc_msgerr := sqlerrm;
      null;
      --mod@abr 20180622 ---LOG DE ERRORES
    /* insert into aqpa460E(aqpa460serie,
              aqpa460corr,
              aqpa460pgcod,
              aqpa460mod,
              aqpa460sucorend,
              aqpa460tran,
              aqpa460rel,
              aqpa460con,
              aqpa460tip)
    values(pc_AQPA465SERIE ,
           pc_AQPA465CORR  ,
           pc_AQPA465PGCOD ,
           pc_AQPA465MOD   ,
           pc_AQPA465SUCOREND,
           pc_AQPA465TRAN    ,
           pc_AQPA465REL    , 
           pc_AQPA465CON,
           'I'      );
    
    commit;   */
    --mod@abr 20180622
  
  end sp_cr_Detalle_Factura_trx;

  ----------------------------------------------------
  procedure sp_cr_Nota_Credito_trx(pc_AQPA465SERIE    in char,
                                   pc_AQPA465CORR     in number,
                                   pc_AQPA465PGCOD    in number,
                                   pc_AQPA465MOD      in number,
                                   pc_AQPA465SUCOREND in number,
                                   pc_AQPA465TRAN     in number,
                                   pc_AQPA465REL      in number,
                                   pc_AQPA465CON      in date) is
  
    pd_pgfape       date;
    pn_hcmod        number;
    pn_hsucor       number;
    pn_htran        number;
    pn_hnrel        number;
    pd_hfcon        date;
    pn_NRO_RELACION number;
    pd_FECHA_TX     date;
    pn_hcmod2       number;
    pn_hcmod3       number;
    pn_hsucor3      number;
    pn_htran3       number;
    pn_hnrel3       number;
    pn_hfcon3       date;
    lc_serie        char(4);
    lc_correlativo  char(8);
  
    pn_pgcod number;
    --Flag char(1):='N';
  
    lc_flg466 char(1) := 'N'; --controla que no exista en la aqpa466
  
    ln_rubro  number;
    lc_tipper char(1);
  
    lv_tipodocu     char(1);
    lc_comision     char(1);
    ln_guiaCP       number;
    lv_codtipo      char(2);
    lc_coderr       varchar2(1000);
    lc_msgerr       varchar2(1000);
    ln_cont         number;
    lc_serieI       char(4);
    lc_correlativoI char(8);
    lv_codrpt       number;
    lv_tipocre      varchar2(2);
    --ln_rubro number;
  
    cursor fsx015 is
    
      select distinct a.pgcod,
                      a.hcmod,
                      a.hsucor,
                      a.htran,
                      a.hnrel,
                      a.hfcon,
                      'E' Indicador
        from fsx015 a
       inner join FSR170 b
          on a.hcmod = b.sr170trmod + 500
         and a.htran = b.sr170trnro
       where a.pgcod = 1
         and a.hcmod > 499
         and a.txcod = 0 ---todas las transacciones extornadas
         and a.pgcod = pc_AQPA465PGCOD
         and a.hcmod = pc_AQPA465MOD
         and a.hsucor = pc_AQPA465SUCOREND
         and a.htran = pc_AQPA465TRAN
         and a.hnrel = pc_AQPA465REL
         and a.hfcon = pc_AQPA465CON
      union all
      --2018.10.22   
      select distinct a.pgcod,
                      a.hcmod,
                      a.hsucor,
                      a.htran,
                      a.hnrel,
                      a.hfcon,
                      'C' Indicador
        from fsx016 a
       inner join fst198 c
          on c.tp1cod = a.pgcod
       where a.pgcod = 1
         and c.tp1cod1 = 11120
         and c.tp1corr1 = 2
         and c.tp1corr2 = 4
         and c.tp1nro1 = a.hcmod
         and c.tp1nro2 = a.htran
         and a.pgcod = pc_AQPA465PGCOD
         and a.hcmod = pc_AQPA465MOD
         and a.hsucor = pc_AQPA465SUCOREND
         and a.htran = pc_AQPA465TRAN
         and a.hnrel = pc_AQPA465REL
         and a.hfcon = pc_AQPA465CON;
  
    cursor base(pn_pgcod        in number,
                pn_hcmod3       in number,
                pn_hsucor3      in number,
                pn_htran3       in number,
                pn_hnrel3       in number,
                pn_hfcon3       in date,
                lc_serieI       in char,
                lc_correlativoI in number) is
    
      select aqpa463txtrub,
             aqpa463pgcod,
             aqpa463hcmod,
             aqpa463hsucor,
             aqpa463htran,
             aqpa463hnrel,
             aqpa463hfcon,
             aqpa463hcpcod,
             aqpa463hvnro,
             trim(aqpa463hvchr) aqpa463hvchr,
             aqpa463hvnro aqpa463emp,
             aqpa463mod,
             aqpa463suc,
             aqpa463mda,
             aqpa463pap,
             aqpa463cta,
             aqpa463ope,
             aqpa463sbo,
             aqpa463top,
             aqpa463hip,
             trim(aqpa463txtord) aqpa463txtord,
             aqpa463txoren
        from aqpa463 a
       where a.aqpa463pgcod = pn_pgcod
         and a.aqpa463hcmod = pn_hcmod3
         and a.aqpa463hsucor = pn_hsucor3
         and a.aqpa463htran = pn_htran3
         and a.aqpa463hnrel = pn_hnrel3
         and a.aqpa463hfcon = pn_hfcon3
         and a.aqpa463serie = lc_serieI
         and a.aqpa463corre = lc_correlativoI;
  
  begin
  
    pd_pgfape := pc_AQPA465CON;
  
    for p in fsx015 loop
      --Verifica que no exista en cabecera AQPA466
      Begin
        select 'S'
          into lc_flg466
          from aqpa466 a
         where a.aqpa466pgcod = p.pgcod
           and a.aqpa466mod = p.hcmod
           and a.aqpa466sucor = p.hsucor
           and a.aqpa466tran = p.htran
           and a.aqpa466rel = p.hnrel
           and a.aqpa466con = p.hfcon
           and rownum = 1;
      exception
        when others then
          lc_flg466 := 'N';
      end;
      pn_pgcod  := p.pgcod;
      pn_hcmod  := p.hcmod;
      pn_hsucor := p.hsucor;
      pn_htran  := p.htran;
      pn_hnrel  := p.hnrel;
      pd_hfcon  := p.hfcon;
    
      if lc_flg466 = 'N' then
      
        if p.indicador = 'E' then
          --Por extorno 
        
          begin
            select f.txtext as NRO_RELACION
              into pn_NRO_RELACION
              from fsx015 f
             where f.hfcon = pd_pgfape --to_date('20092017', 'ddmmyyyy')----cambiar fecha de proceso
               and f.hcmod = pn_hcmod --530
               and f.htran = pn_htran --100
               and f.hnrel = pn_hnrel --2
               and f.hsucor = pn_hsucor --mod@abr 20180707
               and f.txcod = 0
               and f.txreng = 1;
          exception
            --mod@abr 20180707
            when too_many_rows then
              begin
                select f.txtext as NRO_RELACION
                  into pn_NRO_RELACION
                  from fsx015 f
                 where f.hfcon = pd_pgfape --to_date('20092017', 'ddmmyyyy')----cambiar fecha de proceso
                   and f.hcmod = pn_hcmod --530
                   and f.htran = pn_htran --100
                   and f.hnrel = pn_hnrel --2
                   and f.hsucor = pn_hsucor
                   and f.txcod = 0
                   and f.txreng = 1
                   and rownum = 1 --mod@abr 20180707
                ;
              exception
                when others then
                  pn_NRO_RELACION := null;
              end;
            when others then
              pn_NRO_RELACION := null;
          end;
        
          if pn_NRO_RELACION is not null then
          
            begin
              select to_date(f.txtext, 'DD/MM/RR') as FECHA_TX
                into pd_FECHA_TX
                from fsx015 f
               where f.hfcon = pd_pgfape --to_date('20092017', 'ddmmyyyy')
                 and f.hcmod = pn_hcmod -- 530
                 and f.htran = pn_htran --100
                 and f.hnrel = pn_hnrel --2
                 and f.hsucor = pn_hsucor --mod@abr 20180707
                 and f.txcod = 0
                 and f.txreng = 2;
            exception
              when others then
                pd_FECHA_TX := null;
            end;
          
            pn_hcmod2 := pn_hcmod - 500;
          
            begin
              --obtener transaccion original
              select a.pgcod, a.hcmod, a.hsucor, a.htran, a.hnrel, a.hfcon
                into pn_pgcod,
                     pn_hcmod3,
                     pn_hsucor3,
                     pn_htran3,
                     pn_hnrel3,
                     pn_hfcon3 --clave de transaccion
                from fsx016 a
               where a.hcmod = pn_hcmod2 --30
                 and a.htran = pn_htran --100
                 and a.hfcon = pd_FECHA_TX --to_date('20092017', 'ddmmyyyy')
                 and a.hnrel = pn_NRO_RELACION --164
                 and a.hsucor = pn_hsucor --mod@abr 20180707
                 and rownum = 1;
            exception
              when others then
                pn_hcmod3  := null;
                pn_hsucor3 := null;
                pn_htran3  := null;
                pn_hnrel3  := null;
                pn_hfcon3  := null;
              
            end;
          
          end if;
        
        elsif p.indicador = 'C' then
          --Por comision
        
          begin
            pq_op_transacciones.sp_op_retorna_origen(ppgcod   => pn_pgcod,
                                                     pitsuc   => pn_hsucor,
                                                     pitmod   => pn_hcmod,
                                                     pittran  => pn_htran,
                                                     pitnrel  => pn_hnrel,
                                                     pitfcon  => pd_hfcon,
                                                     itsuc_o  => pn_hsucor3,
                                                     itmod_o  => pn_hcmod3,
                                                     ittran_o => pn_htran3,
                                                     itnrel_o => pn_hnrel3,
                                                     itfcon_o => pn_hfcon3,
                                                     codrpt   => lv_codrpt);
          end;
        
        end if;
      
        ---buscar transaccion en aqpa460 / aqpa463/ aqpa465
        begin
          select distinct a.aqpa463serie, a.aqpa463corre
            into lc_serieI, lc_correlativoI
            from aqpa463 a
           where a.aqpa463pgcod = pn_pgcod
             and a.aqpa463hcmod = pn_hcmod3
             and a.aqpa463hsucor = pn_hsucor3
             and a.aqpa463htran = pn_htran3
             and a.aqpa463hnrel = pn_hnrel3
             and a.aqpa463hfcon = pn_hfcon3;
        exception
          when too_many_rows then
            ---obtener ultimo documento enviado
            begin
              select max(a.aqpa463serie), max(a.aqpa463corre)
                into lc_serieI, lc_correlativoI
                from aqpa463 a
               where a.aqpa463pgcod = pn_pgcod
                 and a.aqpa463hcmod = pn_hcmod3
                 and a.aqpa463hsucor = pn_hsucor3
                 and a.aqpa463htran = pn_htran3
                 and a.aqpa463hnrel = pn_hnrel3
                 and a.aqpa463hfcon = pn_hfcon3;
            
            exception
              when others then
                lc_serieI       := null;
                lc_correlativoI := null;
            end;
          when no_data_found then
            --si no existe trx origen
            lc_serieI := null;
        end;
      
        lv_tipodocu := substr(lc_serieI, 1, 1);
        lv_tipocre  := substr(lc_serieI, 2, 1);
      
        if lv_tipodocu is not null then
        
          --determinar tipo de cliente
          if lv_tipodocu = 'F' then
            lc_tipper := 'J';
            ln_guiaCP := 1;
          else
            lc_tipper := 'N';
            ln_guiaCP := 3;
          end if;
        
          begin
            select '0' || to_char(a.tp1nro1)
              into lv_codtipo
              from fst198 a
             where a.tp1cod = 1
               and a.tp1cod1 = 11120
               and a.tp1corr1 = 1
               and a.tp1corr2 = 7
               and a.tp1corr3 = ln_guiaCP; --2018.10.10 se modifico codigo de guia para tipo comprobante
          exception
            when others then
              null;
          end;
        
          ---determinar si es hipotecario
          if lv_tipocre = 'H' then
            ln_rubro := 4;
          else
            ln_rubro := 1;
          end if;
        
          --determinar si es comision
          begin
            select 'S'
              into lc_comision
              from fst198 h
             where h.tp1cod = 1
               and h.tp1cod1 = 11120
               and h.tp1corr1 = 3
               and h.tp1corr2 = 1
               and h.tp1nro1 = pn_hcmod3
               and h.tp1nro2 = pn_htran3
               and rownum = 1;
          exception
            when others then
              lc_comision := 'N';
          end;
        
          if lc_comision = 'S' then
            ln_rubro := 1;
          end if;
        
          begin
            pq_cr_facturacion.sp_cr_factura(pn_rubro       => ln_rubro,
                                            pc_tipcli      => lc_tipper,
                                            pc_tipo        => 'NC',
                                            pc_serie       => lc_serie,
                                            pc_correlativo => lc_correlativo);
          exception
            when others then
            
              lc_coderr := sqlcode;
              lc_msgerr := trim(sqlerrm);
            
              insert into aqpa460E
                (aqpa460eserie,
                 aqpa460ecorr,
                 aqpa460epgcod,
                 aqpa460emod,
                 aqpa460esucorend,
                 aqpa460etran,
                 aqpa460erel,
                 aqpa460econ,
                 aqpa460etip,
                 Aqpa460eacoe,
                 Aqpa460eamsge)
              values
                (null,
                 null,
                 pn_pgcod,
                 pn_hcmod,
                 pn_hsucor,
                 pn_htran,
                 pn_hnrel,
                 pd_hfcon,
                 'S',
                 lc_coderr,
                 lc_msgerr);
              commit;
            
          end;
        
          --insertamos en AQPA460            
          begin
            insert into AQPA460
              (aqpa460tdoc,
               aqpa460rucc,
               aqpa460rsoc,
               aqpa460cdis,
               aqpa460ncom,
               aqpa460calle,
               aqpa460urba,
               aqpa460depa,
               aqpa460prov,
               aqpa460dist,
               aqpa460telf,
               aqpa460web,
               aqpa460cpais,
               aqpa460cesun,
               aqpa460seri,
               aqpa460num,
               aqpa460femi,
               aqpa460tcomf,
               aqpa460mone,
               aqpa460corrr,
               aqpa460mglo,
               aqpa460coma,
               aqpa460tpla,
               aqpa460tope,
               aqpa460tplco,
               aqpa460clog,
               aqpa460tdocr,
               aqpa460nruc,
               aqpa460rasoc,
               aqpa460impt,
               aqpa460hemi,
               aqpa460simc,
               aqpa460svitm,
               aqpa460spvi,
               aqpa460txml,
               aqpa460sdref,
               aqpa460ndref,
               aqpa460cmem,
               aqpa460sust,
               aqpa460serie,
               aqpa460nro,
               aqpa460tcomp,
               aqpa460fdref,
               aqpa460cdist,
               aqpa460call,
               aqpa460urb,
               aqpa460dep,
               aqpa460prv,
               aqpa460dst,
               aqpa460cpai,
               aqpa460item,
               aqpa460pnetu,
               aqpa460cantf,
               aqpa460total,
               aqpa460dete,
               aqpa460ctpr,
               aqpa460vvun,
               aqpa460vvuig,
               aqpa460desc,
               aqpa460mfun,
               aqpa460prvit,
               aqpa460medem,
               aqpa460csuna,
               aqpa460cpgs1,
               aqpa460ititm,
               aqpa460imptb,
               aqpa460impex,
               aqpa460afigv,
               aqpa460sisc,
               aqpa460codtb,
               aqpa460dstrb,
               aqpa460codun,
               aqpa460mbim,
               aqpa460taimp,
               aqpa460cdley,
               aqpa460teley,
               aqpa460text1,
               aqpa460text2,
               aqpa460trecv,
               aqpa460templ,
               aqpa460subje,
               aqpa460vpcva,
               aqpa460nexp,
               aqpa460cind,
               aqpa460npart,
               aqpa460ncont,
               aqpa460fotrc,
               aqpa460cdisn,
               aqpa460direh,
               aqpa460urbh,
               aqpa460prvh,
               aqpa460dsth,
               aqpa460depth,
               aqpa460mtotal,
               aqpa460baimp,
               aqpa460mtimp,
               aqpa460pcima,
               aqpa460bsimp,
               aqpa460vaimp,
               aqpa460mtinf,
               aqpa460mtgrt,
               aqpa460bsimps,
               aqpa460mtoti,
               aqpa460pgc,
               aqpa460mod,
               aqpa460suc,
               aqpa460trx,
               aqpa460rel,
               aqpa460ore,
               aqpa460pgce,
               aqpa460mode,
               aqpa460suce,
               aqpa460trxe,
               aqpa460rele,
               aqpa460fcone,
               aqpa460glos,
               aqpa460tipag,
               aqpa460text3,
               aqpa460text4,
               aqpa460conce)
              select aqpa460tdoc,
                     aqpa460rucc,
                     aqpa460rsoc,
                     aqpa460cdis,
                     aqpa460ncom,
                     aqpa460calle,
                     aqpa460urba,
                     aqpa460depa,
                     aqpa460prov,
                     aqpa460dist,
                     aqpa460telf,
                     aqpa460web,
                     aqpa460cpais,
                     aqpa460cesun,
                     lc_serie,
                     lc_correlativo,
                     aqpa460femi,
                     '07',
                     aqpa460mone,
                     aqpa460corrr,
                     aqpa460mglo,
                     aqpa460coma,
                     aqpa460tpla,
                     aqpa460tope,
                     aqpa460tplco,
                     aqpa460clog,
                     aqpa460tdocr,
                     aqpa460nruc,
                     aqpa460rasoc,
                     aqpa460impt,
                     aqpa460hemi,
                     aqpa460simc,
                     aqpa460svitm,
                     aqpa460spvi,
                     aqpa460txml,
                     aqpa460seri,
                     aqpa460num,
                     '01',
                     'Extorno de la operacion',
                     aqpa460seri,
                     aqpa460num,
                     lv_codtipo,
                     pd_hfcon,
                     aqpa460cdist,
                     aqpa460call,
                     aqpa460urb,
                     aqpa460dep,
                     aqpa460prv,
                     aqpa460dst,
                     aqpa460cpai,
                     aqpa460item,
                     aqpa460pnetu,
                     aqpa460cantf,
                     aqpa460total,
                     aqpa460dete,
                     aqpa460ctpr,
                     aqpa460vvun,
                     aqpa460vvuig,
                     aqpa460desc,
                     aqpa460mfun,
                     aqpa460prvit,
                     aqpa460medem,
                     aqpa460csuna,
                     aqpa460cpgs1,
                     aqpa460ititm,
                     aqpa460imptb,
                     aqpa460impex,
                     aqpa460afigv,
                     aqpa460sisc,
                     aqpa460codtb,
                     aqpa460dstrb,
                     aqpa460codun,
                     aqpa460mbim,
                     aqpa460taimp,
                     aqpa460cdley,
                     aqpa460teley,
                     aqpa460text1,
                     aqpa460text2,
                     aqpa460trecv,
                     aqpa460templ,
                     aqpa460subje,
                     aqpa460vpcva,
                     aqpa460nexp,
                     aqpa460cind,
                     aqpa460npart,
                     aqpa460ncont,
                     aqpa460fotrc,
                     aqpa460cdisn,
                     aqpa460direh,
                     aqpa460urbh,
                     aqpa460prvh,
                     aqpa460dsth,
                     aqpa460depth,
                     aqpa460mtotal,
                     aqpa460baimp,
                     aqpa460mtimp,
                     aqpa460pcima,
                     aqpa460bsimp,
                     aqpa460vaimp,
                     aqpa460mtinf,
                     aqpa460mtgrt,
                     aqpa460bsimps,
                     aqpa460mtoti,
                     aqpa460pgc,
                     aqpa460mod,
                     aqpa460suc,
                     aqpa460trx,
                     aqpa460rel,
                     aqpa460ore,
                     pn_pgcod,
                     pn_hcmod,
                     pn_hsucor,
                     pn_htran,
                     pn_hnrel,
                     pd_hfcon,
                     aqpa460glos,
                     aqpa460tipag,
                     aqpa460text3,
                     aqpa460text4,
                     aqpa460conce
                from aqpa460 a
               where a.aqpa460pgc = pn_pgcod
                 and a.aqpa460mod = pn_hcmod3
                 and a.aqpa460suc = pn_hsucor3
                 and a.aqpa460trx = pn_htran3
                 and a.aqpa460rel = pn_hnrel3
                 and a.aqpa460femi = pn_hfcon3
                 and a.aqpa460seri = lc_serieI
                 and a.aqpa460num = lc_correlativoI;
          
            commit;
          exception
            when others then
              lc_coderr := sqlcode;
              lc_msgerr := sqlerrm;
            
          end;
        
          --insertamos en AQPA464
          ln_cont := 1;
          for i in base(pn_pgcod,
                        pn_hcmod3,
                        pn_hsucor3,
                        pn_htran3,
                        pn_hnrel3,
                        pn_hfcon3,
                        lc_serieI,
                        lc_correlativoI) loop
          
            begin
              insert into aqpa464
                (aqpa464txtrub,
                 aqpa464pgcod,
                 aqpa464hcmod,
                 aqpa464hsucor,
                 aqpa464htran,
                 aqpa464hnrel,
                 aqpa464hfcon,
                 aqpa464doid,
                 aqpa464cpcod,
                 aqpa464vnro,
                 aqpa464vchr,
                 aqpa464vfch,
                 aqpa464vimp /*, aqpa464vtas*/,
                 aqpa464serie,
                 aqpa464nro,
                 aqpa464emp,
                 aqpa464mod,
                 aqpa464suc,
                 aqpa464mda,
                 aqpa464pap,
                 aqpa464cta,
                 aqpa464ope,
                 aqpa464sbo,
                 aqpa464top,
                 aqpa464hip,
                 aqpa464txtord,
                 aqpa464txoren,
                 aqpa464pgcode,
                 aqpa464hcmode,
                 aqpa464hsucore,
                 aqpa464htrane,
                 aqpa464hnrele,
                 aqpa464hfcone)
              
              values
                (i.aqpa463txtrub,
                 i.aqpa463pgcod,
                 i.aqpa463hcmod,
                 i.aqpa463hsucor,
                 i.aqpa463htran,
                 i.aqpa463hnrel,
                 i.aqpa463hfcon,
                 ln_cont,
                 i.aqpa463hcpcod,
                 i.aqpa463hvnro,
                 i.aqpa463hvchr,
                 pd_hfcon,
                 ln_cont,
                 lc_serie,
                 lc_correlativo,
                 i.aqpa463emp,
                 i.aqpa463mod,
                 i.aqpa463suc,
                 i.aqpa463mda,
                 i.aqpa463pap,
                 i.aqpa463cta,
                 i.aqpa463ope,
                 i.aqpa463sbo,
                 i.aqpa463top,
                 i.aqpa463hip,
                 i.aqpa463txtord,
                 i.aqpa463txoren,
                 pn_pgcod,
                 pn_hcmod,
                 pn_hsucor,
                 pn_htran,
                 pn_hnrel,
                 pd_hfcon);
            
              commit;
            exception
              when others then
                lc_coderr := sqlcode;
                lc_msgerr := sqlerrm;
              
            end;
            ln_cont := ln_cont + 1;
          
          end loop;
          --insertamos en AQPA466
          begin
          
            insert into aqpa466
              (aqpa466serie,
               aqpa466corr,
               aqpa466pgcod,
               aqpa466mod,
               aqpa466sucor,
               aqpa466tran,
               aqpa466rel,
               aqpa466con)
              select lc_serie,
                     lc_correlativo,
                     aqpa465pgcod,
                     aqpa465mod,
                     aqpa465sucor,
                     aqpa465tran,
                     aqpa465rel,
                     aqpa465con
                from aqpa465 a
               where a.aqpa465pgcod = pn_pgcod
                 and a.aqpa465mod = pn_hcmod3
                 and a.aqpa465sucor = pn_hsucor3
                 and a.aqpa465tran = pn_htran3
                 and a.aqpa465rel = pn_hnrel3
                 and a.aqpa465con = pn_hfcon3
                 and a.aqpa465serie = lc_serieI
                 and a.aqpa465corr = lc_correlativoI;
            commit;
          exception
            when others then
              lc_coderr := sqlcode;
              lc_msgerr := sqlerrm;
          end;
        
        end if; ---fin de tipodocu 
      
      end if;
    
    end loop;
  
  end sp_cr_Nota_Credito_trx;
  ----------------------------------------

  procedure sp_fa_LibroVentas_trx(pn_pgcod       in number,
                                  pn_hcmod       in number,
                                  pn_hsucor      in number,
                                  pn_htran       in number,
                                  pn_hnrel       in number,
                                  pn_hfcon       in date,
                                  pc_serie       in char,
                                  pn_correlativo in number) is
  
    cursor datos_a is
      select *
        from aqpa470 a
       where a.aqpa470femi = pn_hfcon
         and a.aqpa470serie = pc_serie
         and a.aqpa470nro = pn_correlativo;
  
    laqpa460item   number;
    laqpa460desc   varchar2(50);
    laqpa460tcomf  varchar2(2);
    laqpa460seri   varchar2(4);
    laqpa460num    number;
    laqpa460tdocr  varchar2(1);
    laqpa460nruc   varchar2(15);
    laqpa460rasoc  varchar2(1500);
    laqpa460fdref  varchar2(10);
    laqpa460mtotal number;
    laqpa460mtimp  number;
    laqpa460mtinf  number;
    laqpa460impt   number;
    laqpa460mone   varchar2(3);
    laqpa460tcam   number;
    laqpa460tcomp  number;
    laqpa460sdref  varchar2(50);
    laqpa460ndref  number;
    laqpa460lest   varchar2(1);
    laqpa460csuna  varchar2(8);
    laqpa460mode   number;
    laqpa460rele   number;
    ltcam          number(14, 8);
    ltipcam        number(14, 8);
    ld_feccam      date;
    ld_Fecha       date;
    lc_flag        char(1);
  
  begin
  
    --FActura
    begin
      insert into AQPA470
        (aqpa470serie,
         aqpa470nro,
         aqpa470pgcod,
         aqpa470mod,
         aqpa470sucor,
         aqpa470tran,
         aqpa470rel,
         aqpa470con,
         aqpa470femi,
         AQPA470LEST,
         aqpa470cord,
         aqpa470subo,
         aqpa470ind,
         aqpa470total,
         aqpa470vvun,
         aqpa470vvuig,
         aqpa470prvit,
         aqpa470mbim,
         aqpa470rubro,
         AQPA470CCOS)
      
        select x.aqpa465serie,
               x.aqpa465corr,
               x.aqpa465pgcod,
               x.aqpa465mod,
               x.aqpa465sucor,
               x.aqpa465tran,
               x.aqpa465rel,
               x.aqpa465con,
               x.aqpa465con,
               x.aqpa465est,
               y.hcord,
               y.hcsubo,
               y.hcodmo,
               y.hcimp1,
               y.hcimp1,
               y.hcimp1,
               y.hcimp1,
               0,
               y.hrubro,
               y.hsucur
          from AQPA465 X, fsh016 Y
         where y.pgcod = x.aqpa465pgcod
           and y.hcmod = x.aqpa465mod
           and y.hsucor = x.aqpa465sucor
           and y.htran = x.aqpa465tran
           and y.hnrel = x.aqpa465rel
           and y.hfcon = x.aqpa465con
           and y.pgcod = pn_pgcod
           and y.hcmod = pn_hcmod
           and y.hsucor = pn_hsucor
           and y.htran = pn_htran
           and y.hnrel = pn_hnrel
           and y.hfcon = pn_hfcon;
      lc_flag := 'F';
      commit;
    exception
      when others then
        lc_flag := null;
    end;
  
    --NC
    begin
      insert into AQPA470
        (aqpa470serie,
         aqpa470nro,
         aqpa470pgcod,
         aqpa470mod,
         aqpa470sucor,
         aqpa470tran,
         aqpa470rel,
         aqpa470con,
         aqpa470femi,
         aqpa470cord,
         aqpa470subo,
         aqpa470ind,
         aqpa470total,
         aqpa470vvun,
         aqpa470vvuig,
         aqpa470prvit,
         aqpa470mbim,
         aqpa470rubro,
         AQPA470CCOS)
      
        select x.aqpa466serie,
               x.aqpa466corr,
               x.aqpa466pgcod,
               x.aqpa466mod,
               x.aqpa466sucor,
               x.aqpa466tran,
               x.aqpa466rel,
               x.aqpa466con,
               x.aqpa466con,
               y.hcord,
               y.hcsubo,
               y.hcodmo,
               y.hcimp1,
               y.hcimp1,
               y.hcimp1,
               y.hcimp1,
               0,
               y.hrubro,
               y.hsucur
          from AQPA466 X, fsh016 Y
         where y.pgcod = x.aqpa466pgcod
           and y.hcmod = x.aqpa466mod
           and y.hsucor = x.aqpa466sucor
           and y.htran = x.aqpa466tran
           and y.hnrel = x.aqpa466rel
           and y.hfcon = x.aqpa466con
           and y.pgcod = pn_pgcod
           and y.hcmod = pn_hcmod
           and y.hsucor = pn_hsucor
           and y.htran = pn_htran
           and y.hnrel = pn_hnrel
           and y.hfcon = pn_hfcon;
      lc_flag := 'N';
    
      commit;
    
    exception
      when others then
        lc_flag := null;
    end;
  
    if lc_flag is not null then
    
      ld_fecha := pn_hfcon;
    
      --obtener TC 
      begin
        select max(conversion_date)
          into ld_feccam
          from gl_daily_rates@erp f
         where conversion_type = 1001
           and from_currency = 'USD'
           and to_currency = 'PEN'
           and conversion_date <= ld_fecha;
      exception
        when others then
          null;
      end;
    
      begin
        select conversion_rate
          into ltcam
          from gl_daily_rates@erp f
         where conversion_type = 1001
           and from_currency = 'USD'
           and to_currency = 'PEN'
           and conversion_date = ld_feccam;
      exception
        when others then
          ltcam := null;
      end;
    
      ---fin TC     
    
      for i in datos_a loop
      
        begin
          select aqpa460item,
                 aqpa460desc,
                 aqpa460tcomf,
                 aqpa460seri,
                 aqpa460num,
                 aqpa460tdocr,
                 aqpa460nruc,
                 aqpa460rasoc,
                 aqpa460fdref,
                 aqpa460mtotal,
                 aqpa460mtimp,
                 aqpa460mtinf,
                 aqpa460impt,
                 aqpa460mone,
                 aqpa460tcomp,
                 aqpa460sdref,
                 aqpa460ndref,
                 --aqpa460lest, 
                 aqpa460csuna,
                 aqpa460mode,
                 aqpa460rele
            into laqpa460item,
                 laqpa460desc,
                 laqpa460tcomf,
                 laqpa460seri,
                 laqpa460num,
                 laqpa460tdocr,
                 laqpa460nruc,
                 laqpa460rasoc,
                 laqpa460fdref,
                 laqpa460mtotal,
                 laqpa460mtimp,
                 laqpa460mtinf,
                 laqpa460impt,
                 laqpa460mone,
                 laqpa460tcomp,
                 laqpa460sdref,
                 laqpa460ndref,
                 --laqpa460lest,
                 laqpa460csuna,
                 laqpa460mode,
                 laqpa460rele
            from aqpa460 b
           where b.aqpa460seri = i.aqpa470serie
             and b.aqpa460num = i.aqpa470nro
             and b.aqpa460total = i.aqpa470total;
        
        exception
          when others then
            laqpa460item   := null;
            laqpa460desc   := null;
            laqpa460tcomf  := null;
            laqpa460seri   := null;
            laqpa460num    := null;
            laqpa460tdocr  := null;
            laqpa460nruc   := null;
            laqpa460rasoc  := null;
            laqpa460fdref  := null;
            laqpa460mtotal := null;
            laqpa460mtimp  := null;
            laqpa460mtinf  := null;
            laqpa460impt   := null;
            laqpa460mone   := null;
            laqpa460tcam   := null;
            laqpa460tcomp  := null;
            laqpa460sdref  := null;
            laqpa460ndref  := null;
            laqpa460lest   := null;
            laqpa460csuna  := null;
            laqpa460mode   := null;
            laqpa460rele   := null;
        end;
      
        if laqpa460nruc is not null then
          --si es diferente de nulo ACTUALIZA LA DATA 
        
          if laqpa460mone = 'USD' then
            ltipcam := ltcam;
          else
            ltipcam := 0;
          end if;
        
          if lc_flag = 'N' then
            -- corresponde a nota de credito
            --actualizando todos los registros del asiento
            update aqpa470 b
               set aqpa470mod = laqpa460mode, aqpa470rel = laqpa460rele
             where b.aqpa470serie = i.aqpa470serie
               and b.aqpa470nro = i.aqpa470nro
               and b.aqpa470femi = ld_fecha;
          
            commit;
          
          end if;
        
          --actualizando por concepto   
          update aqpa470 b
             set aqpa470item   = laqpa460item,
                 aqpa470desc   = laqpa460desc,
                 aqpa470mtotal = laqpa460mtotal,
                 aqpa470mtimp  = laqpa460mtimp,
                 aqpa470mtinf  = laqpa460mtinf,
                 aqpa470impt   = laqpa460impt
           where b.aqpa470serie = i.aqpa470serie
             and b.aqpa470nro = i.aqpa470nro
             and b.aqpa470femi = ld_fecha
             and b.aqpa470total = i.aqpa470total;
        
          commit;
        
          --actualizando todos los registros del asiento
          update aqpa470 b
             set aqpa470tcomf = laqpa460tcomf,
                 aqpa470seri  = laqpa460seri,
                 aqpa470num   = laqpa460num,
                 aqpa470tdocr = laqpa460tdocr,
                 aqpa470nruc  = laqpa460nruc,
                 aqpa470rasoc = laqpa460rasoc,
                 aqpa470fdref = laqpa460fdref,
                 aqpa470mone  = laqpa460mone,
                 aqpa470tcomp = laqpa460tcomp,
                 aqpa470sdref = laqpa460sdref,
                 aqpa470ndref = laqpa460ndref,
                 aqpa470csuna = laqpa460csuna,
                 aqpa470tcam  = ltipcam
           where b.aqpa470serie = i.aqpa470serie
             and b.aqpa470nro = i.aqpa470nro
             and b.aqpa470femi = ld_fecha;
        
          commit;
        
        end if;
      end loop;
    
    end if;
  
  end sp_fa_LibroVentas_trx;
  -----------------------------------------------------------  
  procedure sp_fa_LibroVentas(pd_pgfape in date) is
  
    cursor datos_a(ld_fecha date) is
      select * from aqpa470 a where a.aqpa470femi = ld_fecha;
  
    laqpa460item   number;
    laqpa460desc   varchar2(50);
    laqpa460tcomf  varchar2(2);
    laqpa460seri   varchar2(4);
    laqpa460num    number;
    laqpa460tdocr  varchar2(1);
    laqpa460nruc   varchar2(15);
    laqpa460rasoc  varchar2(1500);
    laqpa460fdref  varchar2(10);
    laqpa460mtotal number;
    laqpa460mtimp  number;
    laqpa460mtinf  number;
    laqpa460impt   number;
    laqpa460mone   varchar2(3);
    laqpa460tcam   number;
    laqpa460tcomp  number;
    laqpa460sdref  varchar2(50);
    laqpa460ndref  number;
    laqpa460lest   varchar2(1);
    laqpa460csuna  varchar2(8);
    laqpa460mode   number;
    laqpa460rele   number;
    ltcam          number(14, 8);
    ltipcam        number(14, 8);
    ld_feccam      date;
    ln_dias        number;
    ld_fecini      date;
    ld_Fecfin      date;
    ld_fecha       date;
    lc_flag        char(1);
  
  Begin
  
    ld_fecha  := add_months(last_day(pd_pgfape), -1) + 1; --inicio mes 
    ld_Fecfin := last_day(pd_pgfape);
    ln_dias   := to_number(to_char(last_day(pd_pgfape), 'DD'));
  
    --FActura
    begin
      insert into AQPA470
        (aqpa470serie,
         aqpa470nro,
         aqpa470pgcod,
         aqpa470mod,
         aqpa470sucor,
         aqpa470tran,
         aqpa470rel,
         aqpa470con,
         aqpa470femi,
         AQPA470LEST,
         aqpa470cord,
         aqpa470subo,
         aqpa470ind,
         aqpa470total,
         aqpa470vvun,
         aqpa470vvuig,
         aqpa470prvit,
         aqpa470mbim,
         aqpa470rubro,
         AQPA470CCOS)
      
        select x.aqpa465serie,
               x.aqpa465corr,
               x.aqpa465pgcod,
               x.aqpa465mod,
               x.aqpa465sucor,
               x.aqpa465tran,
               x.aqpa465rel,
               x.aqpa465con,
               x.aqpa465con,
               x.aqpa465est,
               y.hcord,
               y.hcsubo,
               y.hcodmo,
               y.hcimp1,
               y.hcimp1,
               y.hcimp1,
               y.hcimp1,
               0,
               y.hrubro,
               y.hsucur
          from (select distinct a.aqpa465serie,
                                a.aqpa465corr,
                                a.aqpa465con,
                                a.aqpa465pgcod,
                                a.aqpa465mod,
                                a.aqpa465sucor,
                                a.aqpa465tran,
                                a.aqpa465rel,
                                a.aqpa465est
                  from AQPA465 a
                 where a.aqpa465con >= ld_fecini
                   and a.aqpa465con <= ld_fecfin) X,
               fsh016 Y
         where y.pgcod = x.aqpa465pgcod
           and y.hcmod = x.aqpa465mod
           and y.hsucor = x.aqpa465sucor
           and y.htran = x.aqpa465tran
           and y.hnrel = x.aqpa465rel
           and y.hfcon = x.aqpa465con;
    
      lc_flag := 'F';
      commit;
    exception
      when others then
        lc_flag := null;
    end;
  
    --NC
    begin
      insert into AQPA470
        (aqpa470serie,
         aqpa470nro,
         aqpa470pgcod,
         aqpa470mod,
         aqpa470sucor,
         aqpa470tran,
         aqpa470rel,
         aqpa470con,
         aqpa470femi,
         aqpa470cord,
         aqpa470subo,
         aqpa470ind,
         aqpa470total,
         aqpa470vvun,
         aqpa470vvuig,
         aqpa470prvit,
         aqpa470mbim,
         aqpa470rubro,
         AQPA470CCOS)
      
        select x.aqpa466serie,
               x.aqpa466corr,
               x.aqpa466pgcod,
               x.aqpa466mod,
               x.aqpa466sucor,
               x.aqpa466tran,
               x.aqpa466rel,
               x.aqpa466con,
               x.aqpa466con,
               y.hcord,
               y.hcsubo,
               y.hcodmo,
               y.hcimp1,
               y.hcimp1,
               y.hcimp1,
               y.hcimp1,
               0,
               y.hrubro,
               y.hsucur
          from (select distinct a.aqpa466serie,
                                a.aqpa466corr,
                                a.aqpa466con,
                                a.aqpa466pgcod,
                                a.aqpa466mod,
                                a.aqpa466sucor,
                                a.aqpa466tran,
                                a.aqpa466rel
                  from AQPA466 a
                 where a.aqpa466con >= ld_fecini
                   and a.aqpa466con <= ld_Fecfin) X,
               fsh016 Y
         where y.pgcod = x.aqpa466pgcod
           and y.hcmod = x.aqpa466mod
           and y.hsucor = x.aqpa466sucor
           and y.htran = x.aqpa466tran
           and y.hnrel = x.aqpa466rel
           and y.hfcon = x.aqpa466con;
    
      lc_flag := 'N';
      commit;
    exception
      when others then
        lc_flag := null;
    end;
  
    ----
  
    FOR x IN 1 .. ln_dias loop
      --regularizar        
    
      --obtener TC  
      begin
        select max(conversion_date)
          into ld_feccam
          from gl_daily_rates@erp f
         where conversion_type = 1001
           and from_currency = 'USD'
           and to_currency = 'PEN'
           and conversion_date <= ld_fecha;
      exception
        when others then
          null;
      end;
    
      begin
        select conversion_rate
          into ltcam
          from gl_daily_rates@erp f
         where conversion_type = 1001
           and from_currency = 'USD'
           and to_currency = 'PEN'
           and conversion_date = ld_feccam;
      exception
        when others then
          ltcam := null;
      end;
    
      ---fin TC     
    
      for i in datos_a(ld_fecha) loop
      
        begin
          select aqpa460item,
                 aqpa460desc,
                 aqpa460tcomf,
                 aqpa460seri,
                 aqpa460num,
                 aqpa460tdocr,
                 aqpa460nruc,
                 aqpa460rasoc,
                 aqpa460fdref,
                 aqpa460mtotal,
                 aqpa460mtimp,
                 aqpa460mtinf,
                 aqpa460impt,
                 aqpa460mone,
                 aqpa460tcomp,
                 aqpa460sdref,
                 aqpa460ndref,
                 --aqpa460lest, 
                 aqpa460csuna,
                 aqpa460mode,
                 aqpa460rele
          
            into laqpa460item,
                 laqpa460desc,
                 laqpa460tcomf,
                 laqpa460seri,
                 laqpa460num,
                 laqpa460tdocr,
                 laqpa460nruc,
                 laqpa460rasoc,
                 laqpa460fdref,
                 laqpa460mtotal,
                 laqpa460mtimp,
                 laqpa460mtinf,
                 laqpa460impt,
                 laqpa460mone,
                 laqpa460tcomp,
                 laqpa460sdref,
                 laqpa460ndref,
                 --laqpa460lest,
                 laqpa460csuna,
                 laqpa460mode,
                 laqpa460rele
            from aqpa460 b
           where b.aqpa460seri = i.aqpa470serie
             and b.aqpa460num = i.aqpa470nro
             and b.aqpa460total = i.aqpa470total;
        
        exception
          when others then
            laqpa460item   := null;
            laqpa460desc   := null;
            laqpa460tcomf  := null;
            laqpa460seri   := null;
            laqpa460num    := null;
            laqpa460tdocr  := null;
            laqpa460nruc   := null;
            laqpa460rasoc  := null;
            laqpa460fdref  := null;
            laqpa460mtotal := null;
            laqpa460mtimp  := null;
            laqpa460mtinf  := null;
            laqpa460impt   := null;
            laqpa460mone   := null;
            laqpa460tcam   := null;
            laqpa460tcomp  := null;
            laqpa460sdref  := null;
            laqpa460ndref  := null;
            laqpa460lest   := null;
            laqpa460csuna  := null;
            laqpa460mode   := null;
            laqpa460rele   := null;
          
        end;
      
        if laqpa460nruc is not null then
          --si es diferente de nulo ACTUALIZA LA DATA 
        
          if laqpa460mone = 'USD' then
            ltipcam := ltcam;
          else
            ltipcam := 0;
          end if;
        
          if lc_flag = 'N' then
            -- corresponde a nota de credito
            --actualizando todos los registros del asiento
            update aqpa470 b
               set aqpa470mod = laqpa460mode, aqpa470rel = laqpa460rele
             where b.aqpa470serie = i.aqpa470serie
               and b.aqpa470nro = i.aqpa470nro
               and b.aqpa470femi = ld_fecha;
          
            commit;
          
          end if;
        
          --actualizando por concepto   
          update aqpa470 b
             set aqpa470item   = laqpa460item,
                 aqpa470desc   = laqpa460desc,
                 aqpa470mtotal = laqpa460mtotal,
                 aqpa470mtimp  = laqpa460mtimp,
                 aqpa470mtinf  = laqpa460mtinf,
                 aqpa470impt   = laqpa460impt
           where b.aqpa470serie = i.aqpa470serie
             and b.aqpa470nro = i.aqpa470nro
             and b.aqpa470femi = ld_fecha
             and b.aqpa470total = i.aqpa470total;
        
          commit;
        
          --actualizando todos los registros del asiento
          update aqpa470 b
             set aqpa470tcomf = laqpa460tcomf,
                 aqpa470seri  = laqpa460seri,
                 aqpa470num   = laqpa460num,
                 aqpa470tdocr = laqpa460tdocr,
                 aqpa470nruc  = laqpa460nruc,
                 aqpa470rasoc = laqpa460rasoc,
                 aqpa470fdref = laqpa460fdref,
                 aqpa470mone  = laqpa460mone,
                 aqpa470tcomp = laqpa460tcomp,
                 aqpa470sdref = laqpa460sdref,
                 aqpa470ndref = laqpa460ndref,
                 aqpa470csuna = laqpa460csuna,
                 aqpa470tcam  = ltipcam
           where b.aqpa470serie = i.aqpa470serie
             and b.aqpa470nro = i.aqpa470nro
             and b.aqpa470femi = ld_fecha;
        
          commit;
        
        end if;
      end loop;
    
      ld_fecha := ld_fecha + 1;
    
    end loop; --regularizacion dias      
  
  end sp_fa_LibroVentas;

  -----------------------------------------------------------  
  Procedure Sp_cr_proceso_bach(pd_fecpro in date) is
  
    cursor movimientos is
    /*
                                                                                                                                                                                                                                                                                                                                select  f.sr171tremp,
                                                                                                                                                                                                                                                                                                                                        f.st171cpcod, 
                                                                                                                                                                                                                                                                                                                                        f.sr171trmod, 
                                                                                                                                                                                                                                                                                                                                        f.sr171trnro, 
                                                                                                                                                                                                                                                                                                                                        f.sr171trord, 
                                                                                                                                                                                                                                                                                                                                        g.st171cpdsc,
                                                                                                                                                                                                                                                                                                                                        h.hcimp1,
                                                                                                                                                                                                                                                                                                                                        h.hsucor, 
                                                                                                                                                                                                                                                                                                                                        h.hnrel, 
                                                                                                                                                                                                                                                                                                                                        h.hfcon, 
                                                                                                                                                                                                                                                                                                                                        h.hcta, 
                                                                                                                                                                                                                                                                                                                                        h.hsucur
                                                                                                                                                                                                                                                                                                                                   from fsr171 f , 
                                                                                                                                                                                                                                                                                                                                        FST171 G, 
                                                                                                                                                                                                                                                                                                                                        fsh016 h
                                                                                                                                                                                                                                                                                                                                  where h.pgcod      = 1
                                                                                                                                                                                                                                                                                                                                    and h.pgcod      = f.sr171tremp
                                                                                                                                                                                                                                                                                                                                    and h.hcmod      = f.sr171trmod
                                                                                                                                                                                                                                                                                                                                    and h.htran      = f.sr171trnro
                                                                                                                                                                                                                                                                                                                                    and h.hcord      = f.sr171trord
                                                                                                                                                                                                                                                                                                                                    and h.hfcon      = pd_fecpro --fecha diaria
                                                                                                                                                                                                                                                                                                                                    and F.ST171CPCOD =  G.ST171CPCOD
                                                                                                                                                                                                                                                                                                                                    and h.hcafgt     = 'C'
                                                                                                                                                                                                                                                                                                                                    and (h.hcmod,h.htran) in (select a.tp1nro1,a.tp1nro2 
                                                                                                                                                                                                                                                                                                                                                                from fst198 a 
                                                                                                                                                                                                                                                                                                                                                               where a.tp1cod = 1 
                                                                                                                                                                                                                                                                                                                                                                 and a.tp1cod1=11120 
                                                                                                                                                                                                                                                                                                                                                                 and a.tp1corr1 = 4) 
                                                                                                                                                                                                                                                                                                                                    and h.hrubro not in ('4212290000007', '4222290000007')
                                                                                                                                                                                                                                                                                                                                    and not exists (
                                                                                                                                                                                                                                                                                                                                                        select  1
                                                                                                                                                                                                                                                                                                                                                           from fsx016  x
                                                                                                                                                                                                                                                                                                                                                          where x.pgcod = h.pgcod
                                                                                                                                                                                                                                                                                                                                                            and x.hcmod   = h.hcmod
                                                                                                                                                                                                                                                                                                                                                            and x.hsucor  = h.hsucor
                                                                                                                                                                                                                                                                                                                                                            and x.htran   = h.htran
                                                                                                                                                                                                                                                                                                                                                            and x.hnrel   = h.hnrel
                                                                                                                                                                                                                                                                                                                                                            and x.hfcon   = h.hfcon
                                                                                                                                                                                                                                                                                                                                                            and x.txcod   = 200
                                                                                                                                                                                                                                                                                                                                                    )
                                                                                                                                                                                                                                                                                                                                order by  h.hsucor, f.sr171trmod, f.sr171trnro, h.hnrel , f.st171cpcod, f.sr171trord ;
                                                                                                                                                                                                                                                                                                                                */
    
    /* 10012019
                                                                                                                                                                                                                                                                                                                                select  f.sr171tremp,
                                                                                                                                                                                                                                                                                                                                        f.st171cpcod, 
                                                                                                                                                                                                                                                                                                                                        f.sr171trmod, 
                                                                                                                                                                                                                                                                                                                                        f.sr171trnro, 
                                                                                                                                                                                                                                                                                                                                        f.sr171trord, 
                                                                                                                                                                                                                                                                                                                                        g.st171cpdsc,
                                                                                                                                                                                                                                                                                                                                        h.hsucor  hsucor,
                                                                                                                                                                                                                                                                                                                                        h.hnrel   hnrel,
                                                                                                                                                                                                                                                                                                                                        pd_fecpro hfcon,
                                                                                                                                                                                                                                                                                                                                        h.hcta   hcta, 
                                                                                                                                                                                                                                                                                                                                        h.hsucur  hsucur,
                                                                                                                                                                                                                                                                                                                                        h.hcimp1
                                                                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                                                                   from fsr171 f , 
                                                                                                                                                                                                                                                                                                                                        FST171 G, 
                                                                                                                                                                                                                                                                                                                                        fsh016 h
                                                                                                                                                                                                                                                                                                                                  where h.pgcod      = 1
                                                                                                                                                                                                                                                                                                                                    and h.pgcod      = f.sr171tremp
                                                                                                                                                                                                                                                                                                                                    and h.hcmod      = f.sr171trmod
                                                                                                                                                                                                                                                                                                                                    and h.htran      = f.sr171trnro
                                                                                                                                                                                                                                                                                                                                    and h.hcord      = f.sr171trord
                                                                                                                                                                                                                                                                                                                                    --and h.hcsubo     = f.sr171trsbo
                                                                                                                                                                                                                                                                                                                                    and h.hfcon      = pd_fecpro --'28/09/2018' --fecha diaria
                                                                                                                                                                                                                                                                                                                                    and F.ST171CPCOD =  G.ST171CPCOD
                                                                                                                                                                                                                                                                                                                                    and h.hcafgt     = 'C'
                                                                                                                                                                                                                                                                                                                                    --and h.itafgt     = 'C'
                                                                                                                                                                                                                                                                                                                                    and (h.hcmod,h.htran) in (select a.tp1nro1,a.tp1nro2
                                                                                                                                                                                                                                                                                                                                                                from fst198 a
                                                                                                                                                                                                                                                                                                                                                               where a.tp1cod   = 1
                                                                                                                                                                                                                                                                                                                                                                 and a.tp1cod1  = 11120
                                                                                                                                                                                                                                                                                                                                                                 and a.tp1corr1 = 4)  
                                                                                                                                                                                                                                                                                                                                    and h.hrubro not in ('4212290000007', '4222290000007')
                                                                                                                                                                                                                                                                                                                                order by  h.hsucor, f.sr171trmod, f.sr171trnro, h.hnrel , f.st171cpcod, f.sr171trord ;
                                                                                                                                                                                                                                                                                                                                */
    
      select f.sr171tremp,
             f.st171cpcod,
             f.sr171trmod,
             f.sr171trnro,
             f.sr171trord,
             g.st171cpdsc,
             h.jaqz675asuc  hsucor,
             h.jaqz675anre  hnrel,
             pd_fecpro      hfcon,
             h.jaqz675acta  hcta,
             h.jaqz675asucu hsucur,
             h.jaqz675aimp1 hcimp1
        from FSR171 F, FST171 G, JAQZ675A h
       where h.jaqz675acod = F.SR171TREMP
         AND h.jaqz675amod = F.SR171TRMOD
         AND h.jaqz675atrn = F.SR171TRNRO
         AND h.jaqz675acor = F.SR171TRORD
            --AND h.jaqz675acsu = F.SR171TRSBO
         AND f.ST171CPCOD = G.ST171CPCOD
       order by h.jaqz675acod,
                f.sr171trmod,
                f.sr171trnro,
                h.jaqz675anre,
                f.st171cpcod,
                f.sr171trord;
  
    cursor cabecera is
      select * from fst171 f where f.st171cpcod in (1, 3, 4, 5);
  
    ln_txoren   number;
    ln_numero   number;
    ln_contador number;
    ln_cuenta   number;
    ln_sucursal number;
    lc_hora     char(8);
    ln_relacion number;
    --lc_flag     char(1);
    ln_modulo number;
    ln_tran   number;
    ln_sucur  number;
    lc_err    varchar2(300);
  begin
    ln_numero   := 500;
    ln_contador := 1;
  
    execute immediate ('truncate table fse170h');
    execute immediate ('truncate table JAQZ676'); --FSE170_FAC
    execute immediate ('truncate table JAQZ675'); --FSX016_FAC
  
    execute immediate ('truncate table JAQZ675A'); --FSH016
    execute immediate ('alter table JAQZ675A parallel 10'); --FSH016
  
    insert /*+append*/
    into JAQZ675A
      (jaqz675acod,
       jaqz675amod,
       jaqz675asuc,
       jaqz675atrn,
       jaqz675anre,
       jaqz675afco,
       jaqz675acor,
       jaqz675acsu,
       jaqz675acta,
       jaqz675asucu,
       jaqz675aimp1)
      select /*+parallel(H,10)*/
       PGCOD,
       HCMOD,
       HSUCOR,
       HTRAN,
       HNREL,
       HFCON,
       HCORD,
       HCSUBO,
       hcta,
       hsucur,
       hcimp1
        FROM FSH016 H
       WHERE H.PGCOD = 1
         AND H.HCAFGT = 'C'
         AND H.HFCON = pd_fecpro
         AND (H.HCMOD, H.HTRAN) IN
             (SELECT A.TP1NRO1, A.TP1NRO2
                FROM FST198 A
               WHERE A.TP1COD = 1
                 AND A.TP1COD1 = 11120
                 AND A.TP1CORR1 = 4
                 and A.TP1NRO1 is not null)
         AND H.HRUBRO NOT IN ('4212290000007', '4222290000007');
    commit;
  
    for i in movimientos loop
    
      if i.hnrel <> ln_relacion or i.sr171trmod <> ln_modulo or
         i.sr171trnro <> ln_tran or i.hsucor <> ln_sucur then
        ln_contador := 1;
        ln_numero   := ln_numero + 1;
      end if;
    
      ln_txoren   := i.ST171CPCOD + 100;
      ln_cuenta   := i.hcta;
      ln_sucursal := i.hsucur;
    
      if ln_contador = 1 then
        for y in cabecera loop
          if y.ST171CPCOD = 1 then
            --sucursal
            insert into JAQZ675
              (JAQZ675cod,
               JAQZ675mod,
               JAQZ675suc,
               JAQZ675trn,
               JAQZ675nre,
               JAQZ675fco,
               JAQZ675cor,
               JAQZ675csu,
               JAQZ675tco,
               JAQZ675toe,
               JAQZ675tor,
               JAQZ675tsu,
               JAQZ675tru,
               JAQZ675tmd,
               JAQZ675tpa,
               JAQZ675tct,
               JAQZ675top,
               JAQZ675tsb,
               JAQZ675tto,
               JAQZ675tmo)
            values
              (i.sr171tremp,
               i.sr171trmod,
               i.hsucor,
               i.sr171trnro,
               i.hnrel,
               i.hfcon,
               10,
               1,
               200,
               101,
               ln_sucursal,
               0,
               ln_numero,
               0,
               0,
               0,
               0,
               0,
               0,
               0);
          
            insert into JAQZ676
              (JAQZ676doemp,
               JAQZ676doid,
               JAQZ676cpcod,
               JAQZ676vnro,
               JAQZ676vchr,
               JAQZ676vfch,
               JAQZ676vimp,
               JAQZ676vtas)
            values
              (i.sr171tremp,
               ln_numero,
               y.ST171CPCOD,
               ln_sucursal,
               trim(y.st171cpdsc),
               null,
               0,
               0);
          
          elsif y.ST171CPCOD = 3 then
            --hora
            /*begin
              select a.hhora
                into lc_hora
                from fsh015 a 
                where a.pgcod  = i.sr171tremp 
                  and a.hcmod  = i.sr171trmod 
                  and a.hsucor = i.hsucor 
                  and a.htran  = i.sr171trnro 
                  and a.hnrel  = i.hnrel 
                  and a.hfcon  = i.hfcon;
            exception when others then
                  lc_hora := null;              
            end;*/
          
            begin
              select a.hhora
                into lc_hora
                from fsH015 a
               where a.pgcod = i.sr171tremp
                 and a.hcmod = i.sr171trmod
                 and a.hsucor = i.hsucor
                 and a.htran = i.sr171trnro
                 and a.hnrel = i.hnrel
                 and a.hfcon = i.hfcon;
            exception
              when others then
                lc_hora := null;
            end;
          
            insert into JAQZ675
              (JAQZ675cod,
               JAQZ675mod,
               JAQZ675suc,
               JAQZ675trn,
               JAQZ675nre,
               JAQZ675fco,
               JAQZ675cor,
               JAQZ675csu,
               JAQZ675tco,
               JAQZ675toe,
               JAQZ675tor,
               JAQZ675tsu,
               JAQZ675tru,
               JAQZ675tmd,
               JAQZ675tpa,
               JAQZ675tct,
               JAQZ675top,
               JAQZ675tsb,
               JAQZ675tto,
               JAQZ675tmo)
            values
              (i.sr171tremp,
               i.sr171trmod,
               i.hsucor,
               i.sr171trnro,
               i.hnrel,
               i.hfcon,
               10,
               1,
               200,
               103,
               lc_hora,
               0,
               ln_numero,
               0,
               0,
               0,
               0,
               0,
               0,
               0);
          
            insert into JAQZ676
              (JAQZ676doemp,
               JAQZ676doid,
               JAQZ676cpcod,
               JAQZ676vnro,
               JAQZ676vchr,
               JAQZ676vfch,
               JAQZ676vimp,
               JAQZ676vtas)
            values
              (i.sr171tremp,
               ln_numero,
               y.ST171CPCOD,
               0,
               lc_hora,
               null,
               0,
               0);
          
          elsif y.ST171CPCOD = 4 then
            --fecha
            insert into JAQZ675
              (JAQZ675cod,
               JAQZ675mod,
               JAQZ675suc,
               JAQZ675trn,
               JAQZ675nre,
               JAQZ675fco,
               JAQZ675cor,
               JAQZ675csu,
               JAQZ675tco,
               JAQZ675toe,
               JAQZ675tor,
               JAQZ675tsu,
               JAQZ675tru,
               JAQZ675tmd,
               JAQZ675tpa,
               JAQZ675tct,
               JAQZ675top,
               JAQZ675tsb,
               JAQZ675tto,
               JAQZ675tmo)
            values
              (i.sr171tremp,
               i.sr171trmod,
               i.hsucor,
               i.sr171trnro,
               i.hnrel,
               i.hfcon,
               10,
               1,
               200,
               104,
               i.hfcon,
               0,
               ln_numero,
               0,
               0,
               0,
               0,
               0,
               0,
               0);
          
            insert into JAQZ676
              (JAQZ676doemp,
               JAQZ676doid,
               JAQZ676cpcod,
               JAQZ676vnro,
               JAQZ676vchr,
               JAQZ676vfch,
               JAQZ676vimp,
               JAQZ676vtas)
            values
              (i.sr171tremp,
               ln_numero,
               y.ST171CPCOD,
               0,
               trim(y.st171cpdsc),
               i.hfcon,
               0,
               0);
          
          elsif y.ST171CPCOD = 5 then
            --cuenta
          
            insert into JAQZ675
              (JAQZ675cod,
               JAQZ675mod,
               JAQZ675suc,
               JAQZ675trn,
               JAQZ675nre,
               JAQZ675fco,
               JAQZ675cor,
               JAQZ675csu,
               JAQZ675tco,
               JAQZ675toe,
               JAQZ675tor,
               JAQZ675tsu,
               JAQZ675tru,
               JAQZ675tmd,
               JAQZ675tpa,
               JAQZ675tct,
               JAQZ675top,
               JAQZ675tsb,
               JAQZ675tto,
               JAQZ675tmo)
            values
              (i.sr171tremp,
               i.sr171trmod,
               i.hsucor,
               i.sr171trnro,
               i.hnrel,
               i.hfcon,
               10,
               1,
               200,
               105,
               ln_cuenta,
               0,
               ln_numero,
               0,
               0,
               0,
               0,
               0,
               0,
               0);
          
            insert into JAQZ676
              (JAQZ676doemp,
               JAQZ676doid,
               JAQZ676cpcod,
               JAQZ676vnro,
               JAQZ676vchr,
               JAQZ676vfch,
               JAQZ676vimp,
               JAQZ676vtas)
            values
              (i.sr171tremp,
               ln_numero,
               y.ST171CPCOD,
               ln_cuenta,
               trim(y.st171cpdsc),
               null,
               0,
               0);
          end if;
          commit;
        end loop;
        ln_contador := ln_contador + 1;
      end if;
    
      insert into JAQZ675
        (JAQZ675cod,
         JAQZ675mod,
         JAQZ675suc,
         JAQZ675trn,
         JAQZ675nre,
         JAQZ675fco,
         JAQZ675cor,
         JAQZ675csu,
         JAQZ675tco,
         JAQZ675toe,
         JAQZ675tor,
         JAQZ675tsu,
         JAQZ675tru,
         JAQZ675tmd,
         JAQZ675tpa,
         JAQZ675tct,
         JAQZ675top,
         JAQZ675tsb,
         JAQZ675tto,
         JAQZ675tmo)
      values
        (i.sr171tremp,
         i.sr171trmod,
         i.hsucor,
         i.sr171trnro,
         i.hnrel,
         i.hfcon,
         10,
         1,
         200,
         ln_txoren,
         i.hcimp1,
         0,
         ln_numero,
         0,
         0,
         0,
         0,
         0,
         0,
         0);
    
      insert into JAQZ676
        (JAQZ676doemp,
         JAQZ676doid,
         JAQZ676cpcod,
         JAQZ676vnro,
         JAQZ676vchr,
         JAQZ676vfch,
         JAQZ676vimp,
         JAQZ676vtas)
      values
        (i.sr171tremp,
         ln_numero,
         i.ST171CPCOD,
         0,
         trim(i.st171cpdsc),
         null,
         trunc(i.hcimp1),
         0);
    
      ln_relacion := i.hnrel;
      ln_modulo   := i.sr171trmod;
      ln_tran     := i.sr171trnro;
      ln_sucur    := i.hsucor;
      commit;
    end loop;
    commit;
  
    pq_cr_factura_electronica.Sp_cr_proceso_bach_2(pd_fecpro);
  
    --estadisticas
    /*BEGIN
      DBMS_STATS.GATHER_TABLE_STATS(OWNNAME          => 'BANTPROD',
                                    TABNAME          => 'JAQZ675',
                                    DEGREE           => 8,
                                    GRANULARITY      => 'ALL',
                                    ESTIMATE_PERCENT => 100,
                                    CASCADE          => TRUE);
    END;*/
  
    --1.2--------------
    /*BEGIN
      DBMS_STATS.GATHER_TABLE_STATS(OWNNAME          => 'BANTPROD',
                                    TABNAME          => 'JAQZ676',
                                    DEGREE           => 8,
                                    GRANULARITY      => 'ALL',
                                    ESTIMATE_PERCENT => 100,
                                    CASCADE          => TRUE);
    END;*/
  
    --modificacion de punto.   ---- , por .
    begin
      update JAQZ675 a
         set a.JAQZ675TOR = trim(case
                                   when substr(JAQZ675TOR, 1, 1) = ',' then
                                    replace(JAQZ675TOR, ',', '0.')
                                   else
                                    replace(JAQZ675TOR, ',', '.')
                                 end)
       where a.JAQZ675COD = 1
         and a.JAQZ675FCO = pd_fecpro --fecha diaria
         and a.JAQZ675TCO = 200
         and a.JAQZ675TOE > 105;
    
    exception
      when others then
        null;
    end;
    commit;
  
    --Insertar en FSX016 y FSE170H
    /*begin
     insert into fsx016
     select f.jaqz675cod,f.jaqz675mod,f.jaqz675suc,f.jaqz675trn,f.jaqz675nre,f.jaqz675fco,
            f.jaqz675cor,f.jaqz675csu,f.jaqz675tco,f.jaqz675toe,f.jaqz675tor,f.jaqz675tsu,
            f.jaqz675tru,f.jaqz675tmd,f.jaqz675tpa,f.jaqz675tct,f.jaqz675top,f.jaqz675tsb,
            f.jaqz675tto,f.jaqz675tmo from JAQZ675 f 
      where f.JAQZ675FCO = pd_fecpro
        and not exists (
                         select  1
                            from fsx016  x
                           where x.pgcod = f.jaqz675cod
                             and x.hcmod   = f.jaqz675mod
                             and x.hsucor  = f.jaqz675suc
                             and x.htran   = f.jaqz675trn
                             and x.hnrel   = f.jaqz675nre
                             and x.hfcon   = f.jaqz675fco
                             and x.txcod   = 200
                     ); --fecha diaria
     commit;
     
     exception
         when others then
         null;
         --lc_err :=sqlerrm;
         --insert into prueba_fact
         --values();
         --commit;
     end;
    */
  
    begin
      --Insertar en FSE170H aquellos registros cuyo nro de cuenta sea 0
      insert into Fse170h
        select pd_fecpro,
               JAQZ676DOEMP,
               JAQZ676DOID,
               JAQZ676CPCOD,
               JAQZ676VNRO,
               JAQZ676VCHR,
               JAQZ676VFCH,
               JAQZ676VIMP,
               JAQZ676VTAS
          from JAQZ676
         where (JAQZ676DOEMP, JAQZ676DOID, JAQZ676CPCOD, JAQZ676VNRO) not in
               (select JAQZ676DOEMP, JAQZ676DOID, JAQZ676CPCOD, JAQZ676VNRO
                  from JAQZ676 j
                 where j.jaqz676vnro = 0
                   and j.jaqz676vchr = 'Nro de Cuenta');
    
      commit;
    exception
      when others then
        lc_err := trim(sqlerrm);
        insert into aqpa460e
          (aqpa460eserie, aqpa460eamsge)
        values
          ('MMM', lc_err);
        commit;
    end;
  
    ----Colocar el codigo correspondiente al campo jaqz675cpc
    update jaqz675 a set a.jaqz675cpc = jaqz675toe - 100;
    commit;
  
    --Insertar registros de bantotal
    /* insert into Fse170h 
    select pd_fecpro, sd170doemp, sd170doid, st171cpcod, se170vnro, se170vchr, se170vfch, 
           se170vimp, se170vtas
      from fsx016 f, 
           fse170 g 
     where f.pgcod     =  g.sd170doemp
       and f.txcod     =  200
       and g.sd170doid =  f.txtrub
       and f.txoren    =  g.st171cpcod +100
       and f.hfcon     =  pd_fecpro
       and g.sd170doid >= 33000;*/
  
    /*BEGIN
      DBMS_STATS.GATHER_TABLE_STATS(OWNNAME          => 'BANTPROD',
                                    TABNAME          => 'Fse170h',
                                    DEGREE           => 8,
                                    GRANULARITY      => 'ALL',
                                    ESTIMATE_PERCENT => 100,
                                    CASCADE          => TRUE);
    END;*/
  
    execute immediate ('alter table JAQZ675A parallel 1'); --FSH016  2019.01.25 DCASTRO se modifico parallel 10 a 1
  
  end Sp_cr_proceso_bach;

  Procedure Sp_cr_proceso_bach_2(pd_fecpro in date) is
  
    cursor movimientos is
    /*
                                                                                                                                                                                                                                                                                                  select  f.sr171tremp,
                                                                                                                                                                                                                                                                                                          f.st171cpcod, 
                                                                                                                                                                                                                                                                                                          f.sr171trmod, 
                                                                                                                                                                                                                                                                                                          f.sr171trnro, 
                                                                                                                                                                                                                                                                                                          f.sr171trord, 
                                                                                                                                                                                                                                                                                                          g.st171cpdsc,
                                                                                                                                                                                                                                                                                                          h.hcimp1,
                                                                                                                                                                                                                                                                                                          h.hsucor, 
                                                                                                                                                                                                                                                                                                          h.hnrel, 
                                                                                                                                                                                                                                                                                                          h.hfcon, 
                                                                                                                                                                                                                                                                                                          h.hcta, 
                                                                                                                                                                                                                                                                                                          h.hsucur
                                                                                                                                                                                                                                                                                                     from fsr171 f , 
                                                                                                                                                                                                                                                                                                          FST171 G, 
                                                                                                                                                                                                                                                                                                          fsh016 h
                                                                                                                                                                                                                                                                                                    where h.pgcod      = 1
                                                                                                                                                                                                                                                                                                      and h.pgcod      = f.sr171tremp
                                                                                                                                                                                                                                                                                                      and h.hcmod      = f.sr171trmod
                                                                                                                                                                                                                                                                                                      and h.htran      = f.sr171trnro
                                                                                                                                                                                                                                                                                                      and h.hcord      = f.sr171trord
                                                                                                                                                                                                                                                                                                      and h.hfcon      = pd_fecpro --fecha diaria
                                                                                                                                                                                                                                                                                                      and F.ST171CPCOD =  G.ST171CPCOD
                                                                                                                                                                                                                                                                                                      and h.hcafgt     = 'C'
                                                                                                                                                                                                                                                                                                      and (h.hcmod,h.htran) in (select a.tp1nro1,a.tp1nro2 
                                                                                                                                                                                                                                                                                                                                  from fst198 a 
                                                                                                                                                                                                                                                                                                                                 where a.tp1cod = 1 
                                                                                                                                                                                                                                                                                                                                   and a.tp1cod1=11120 
                                                                                                                                                                                                                                                                                                                                   and a.tp1corr1 = 4) 
                                                                                                                                                                                                                                                                                                      and h.hrubro not in ('4212290000007', '4222290000007')
                                                                                                                                                                                                                                                                                                      and not exists (
                                                                                                                                                                                                                                                                                                                          select  1
                                                                                                                                                                                                                                                                                                                             from fsx016  x
                                                                                                                                                                                                                                                                                                                            where x.pgcod = h.pgcod
                                                                                                                                                                                                                                                                                                                              and x.hcmod   = h.hcmod
                                                                                                                                                                                                                                                                                                                              and x.hsucor  = h.hsucor
                                                                                                                                                                                                                                                                                                                              and x.htran   = h.htran
                                                                                                                                                                                                                                                                                                                              and x.hnrel   = h.hnrel
                                                                                                                                                                                                                                                                                                                              and x.hfcon   = h.hfcon
                                                                                                                                                                                                                                                                                                                              and x.txcod   = 200
                                                                                                                                                                                                                                                                                                                      )
                                                                                                                                                                                                                                                                                                  order by  h.hsucor, f.sr171trmod, f.sr171trnro, h.hnrel , f.st171cpcod, f.sr171trord ;
                                                                                                                                                                                                                                                                                                  */
    
    /* 20190110
                                                                                                                                                                                                                                                                                                                                
                                                                                                                                                                                                                                                                                                    select  f.sr171tremp,
                                                                                                                                                                                                                                                                                                          f.st171cpcod, 
                                                                                                                                                                                                                                                                                                          f.sr171trmod, 
                                                                                                                                                                                                                                                                                                          f.sr171trnro, 
                                                                                                                                                                                                                                                                                                          f.sr171trord, 
                                                                                                                                                                                                                                                                                                          g.st171cpdsc,
                                                                                                                                                                                                                                                                                                          h.hsucor  hsucor,
                                                                                                                                                                                                                                                                                                          h.hnrel   hnrel,
                                                                                                                                                                                                                                                                                                          pd_fecpro hfcon,
                                                                                                                                                                                                                                                                                                          h.hcta   hcta, 
                                                                                                                                                                                                                                                                                                          h.hsucur  hsucur,
                                                                                                                                                                                                                                                                                                          h.hcimp1
                                                                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                                     from fsr171 f , 
                                                                                                                                                                                                                                                                                                          FST171 G, 
                                                                                                                                                                                                                                                                                                          fsh016 h
                                                                                                                                                                                                                                                                                                    where h.pgcod      = 1
                                                                                                                                                                                                                                                                                                      and h.pgcod      = f.sr171tremp
                                                                                                                                                                                                                                                                                                      and h.hcmod      = f.sr171trmod
                                                                                                                                                                                                                                                                                                      and h.htran      = f.sr171trnro
                                                                                                                                                                                                                                                                                                      and h.hcord      = f.sr171trord
                                                                                                                                                                                                                                                                                                      and h.hcsubo     = f.sr171trsbo
                                                                                                                                                                                                                                                                                                      and h.hfcon      = pd_fecpro --'28/09/2018' --fecha diaria
                                                                                                                                                                                                                                                                                                      and F.ST171CPCOD =  G.ST171CPCOD
                                                                                                                                                                                                                                                                                                      and h.hcafgt     = 'C'
                                                                                                                                                                                                                                                                                                      and (h.hcmod,h.htran) in (select a.tp1nro1,a.tp1nro2
                                                                                                                                                                                                                                                                                                                                  from fst198 a
                                                                                                                                                                                                                                                                                                                                 where a.tp1cod   = 1
                                                                                                                                                                                                                                                                                                                                   and a.tp1cod1  = 11120
                                                                                                                                                                                                                                                                                                                                   and a.tp1corr1 = 5
                                                                                                                                                                                                                                                                                                                                   )  
                                                                                                                                                                                                                                                                                                      and h.hrubro not in ('4212290000007', '4222290000007')
                                                                                                                                                                                                                                                                                                    \*  and not exists (
                                                                                                                                                                                                                                                                                                                          select  1
                                                                                                                                                                                                                                                                                                                             from fsx016  x
                                                                                                                                                                                                                                                                                                                            where x.pgcod = h.pgcod
                                                                                                                                                                                                                                                                                                                              and x.hcmod   = h.hcmod
                                                                                                                                                                                                                                                                                                                              and x.hsucor  = h.hsucor
                                                                                                                                                                                                                                                                                                                              and x.htran   = h.htran
                                                                                                                                                                                                                                                                                                                              and x.hnrel   = h.hnrel
                                                                                                                                                                                                                                                                                                                              and x.hfcon   = h.hfcon
                                                                                                                                                                                                                                                                                                                              and x.txcod   = 200
                                                                                                                                                                                                                                                                                                                      )*\
                                                                                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                                  order by  h.hsucor, f.sr171trmod, f.sr171trnro, h.hnrel , f.st171cpcod, f.sr171trord ;*/
    
      select f.sr171tremp,
             f.st171cpcod,
             f.sr171trmod,
             f.sr171trnro,
             f.sr171trord,
             g.st171cpdsc,
             h.jaqz675asuc  hsucor,
             h.jaqz675anre  hnrel,
             pd_fecpro      hfcon,
             h.jaqz675acta  hcta,
             h.jaqz675asucu hsucur,
             h.jaqz675aimp1 hcimp1
        from FSR171 F, FST171 G, JAQZ675A h
       where h.jaqz675acod = F.SR171TREMP
         AND h.jaqz675amod = F.SR171TRMOD
         AND h.jaqz675atrn = F.SR171TRNRO
         AND h.jaqz675acor = F.SR171TRORD
         AND h.jaqz675acsu = F.SR171TRSBO ----Diferencia
         AND f.ST171CPCOD = G.ST171CPCOD
       order by h.jaqz675acod,
                f.sr171trmod,
                f.sr171trnro,
                h.jaqz675anre,
                f.st171cpcod,
                f.sr171trord;
  
    cursor cabecera is
      select * from fst171 f where f.st171cpcod in (1, 3, 4, 5);
  
    ln_txoren   number;
    ln_numero   number;
    ln_contador number;
    ln_cuenta   number;
    ln_sucursal number;
    lc_hora     char(8);
    ln_relacion number;
    --lc_flag     char(1);
    ln_modulo number;
    ln_tran   number;
    ln_sucur  number;
    lc_err    varchar2(300);
    ln_rub    number(16);
  begin
  
    execute immediate ('truncate table JAQZ675A'); --FSH016
  
    insert into JAQZ675A
      (jaqz675acod,
       jaqz675amod,
       jaqz675asuc,
       jaqz675atrn,
       jaqz675anre,
       jaqz675afco,
       jaqz675acor,
       jaqz675acsu,
       jaqz675acta,
       jaqz675asucu,
       jaqz675aimp1)
      select /*+parallel(H,10)*/ --20221029 se agrego hints
       PGCOD,
       HCMOD,
       HSUCOR,
       HTRAN,
       HNREL,
       HFCON,
       HCORD,
       HCSUBO,
       hcta,
       hsucur,
       hcimp1
        FROM FSH016 H
       WHERE H.PGCOD = 1
         AND H.HCAFGT = 'C'
         AND H.HFCON = pd_fecpro
         AND (H.HCMOD, H.HTRAN) IN
             (SELECT A.TP1NRO1, A.TP1NRO2
                FROM FST198 A
               WHERE A.TP1COD = 1
                 AND A.TP1COD1 = 11120
                 AND A.TP1CORR1 = 5
                 and A.TP1NRO1 is not null)
         AND H.HRUBRO NOT IN ('4212290000007', '4222290000007');
    commit;
  
    --ln_numero := 500;
    ln_contador := 1;
  
    --execute immediate('truncate table fse170h');
    --execute immediate('truncate table JAQZ676');--FSE170_FAC
    --execute immediate('truncate table JAQZ675');--FSX016_FAC
  
    begin
      select nvl(max(a.jaqz676doid), 0) into ln_rub from jaqz676 a;
    exception
      when others then
        null;
    end;
    ln_numero := ln_rub + 1;
    for i in movimientos loop
    
      if i.hnrel <> ln_relacion or i.sr171trmod <> ln_modulo or
         i.sr171trnro <> ln_tran or i.hsucor <> ln_sucur then
        ln_contador := 1;
        ln_numero   := ln_numero + 1;
      end if;
    
      ln_txoren   := i.ST171CPCOD + 100;
      ln_cuenta   := i.hcta;
      ln_sucursal := i.hsucur;
    
      if ln_contador = 1 then
        for y in cabecera loop
          if y.ST171CPCOD = 1 then
            --sucursal
            insert into JAQZ675
              (JAQZ675cod,
               JAQZ675mod,
               JAQZ675suc,
               JAQZ675trn,
               JAQZ675nre,
               JAQZ675fco,
               JAQZ675cor,
               JAQZ675csu,
               JAQZ675tco,
               JAQZ675toe,
               JAQZ675tor,
               JAQZ675tsu,
               JAQZ675tru,
               JAQZ675tmd,
               JAQZ675tpa,
               JAQZ675tct,
               JAQZ675top,
               JAQZ675tsb,
               JAQZ675tto,
               JAQZ675tmo)
            values
              (i.sr171tremp,
               i.sr171trmod,
               i.hsucor,
               i.sr171trnro,
               i.hnrel,
               i.hfcon,
               10,
               1,
               200,
               101,
               ln_sucursal,
               0,
               ln_numero,
               0,
               0,
               0,
               0,
               0,
               0,
               0);
          
            insert into JAQZ676
              (JAQZ676doemp,
               JAQZ676doid,
               JAQZ676cpcod,
               JAQZ676vnro,
               JAQZ676vchr,
               JAQZ676vfch,
               JAQZ676vimp,
               JAQZ676vtas)
            values
              (i.sr171tremp,
               ln_numero,
               y.ST171CPCOD,
               ln_sucursal,
               trim(y.st171cpdsc),
               null,
               0,
               0);
          
          elsif y.ST171CPCOD = 3 then
            --hora
          
            begin
              select a.hhora
                into lc_hora
                from fsH015 a
               where a.pgcod = i.sr171tremp
                 and a.hcmod = i.sr171trmod
                 and a.hsucor = i.hsucor
                 and a.htran = i.sr171trnro
                 and a.hnrel = i.hnrel
                 and a.hfcon = i.hfcon;
            exception
              when others then
                lc_hora := null;
            end;
          
            insert into JAQZ675
              (JAQZ675cod,
               JAQZ675mod,
               JAQZ675suc,
               JAQZ675trn,
               JAQZ675nre,
               JAQZ675fco,
               JAQZ675cor,
               JAQZ675csu,
               JAQZ675tco,
               JAQZ675toe,
               JAQZ675tor,
               JAQZ675tsu,
               JAQZ675tru,
               JAQZ675tmd,
               JAQZ675tpa,
               JAQZ675tct,
               JAQZ675top,
               JAQZ675tsb,
               JAQZ675tto,
               JAQZ675tmo)
            values
              (i.sr171tremp,
               i.sr171trmod,
               i.hsucor,
               i.sr171trnro,
               i.hnrel,
               i.hfcon,
               10,
               1,
               200,
               103,
               lc_hora,
               0,
               ln_numero,
               0,
               0,
               0,
               0,
               0,
               0,
               0);
          
            insert into JAQZ676
              (JAQZ676doemp,
               JAQZ676doid,
               JAQZ676cpcod,
               JAQZ676vnro,
               JAQZ676vchr,
               JAQZ676vfch,
               JAQZ676vimp,
               JAQZ676vtas)
            values
              (i.sr171tremp,
               ln_numero,
               y.ST171CPCOD,
               0,
               lc_hora,
               null,
               0,
               0);
          
          elsif y.ST171CPCOD = 4 then
            --fecha
            insert into JAQZ675
              (JAQZ675cod,
               JAQZ675mod,
               JAQZ675suc,
               JAQZ675trn,
               JAQZ675nre,
               JAQZ675fco,
               JAQZ675cor,
               JAQZ675csu,
               JAQZ675tco,
               JAQZ675toe,
               JAQZ675tor,
               JAQZ675tsu,
               JAQZ675tru,
               JAQZ675tmd,
               JAQZ675tpa,
               JAQZ675tct,
               JAQZ675top,
               JAQZ675tsb,
               JAQZ675tto,
               JAQZ675tmo)
            values
              (i.sr171tremp,
               i.sr171trmod,
               i.hsucor,
               i.sr171trnro,
               i.hnrel,
               i.hfcon,
               10,
               1,
               200,
               104,
               i.hfcon,
               0,
               ln_numero,
               0,
               0,
               0,
               0,
               0,
               0,
               0);
          
            insert into JAQZ676
              (JAQZ676doemp,
               JAQZ676doid,
               JAQZ676cpcod,
               JAQZ676vnro,
               JAQZ676vchr,
               JAQZ676vfch,
               JAQZ676vimp,
               JAQZ676vtas)
            values
              (i.sr171tremp,
               ln_numero,
               y.ST171CPCOD,
               0,
               trim(y.st171cpdsc),
               i.hfcon,
               0,
               0);
          
          elsif y.ST171CPCOD = 5 then
            --cuenta
          
            insert into JAQZ675
              (JAQZ675cod,
               JAQZ675mod,
               JAQZ675suc,
               JAQZ675trn,
               JAQZ675nre,
               JAQZ675fco,
               JAQZ675cor,
               JAQZ675csu,
               JAQZ675tco,
               JAQZ675toe,
               JAQZ675tor,
               JAQZ675tsu,
               JAQZ675tru,
               JAQZ675tmd,
               JAQZ675tpa,
               JAQZ675tct,
               JAQZ675top,
               JAQZ675tsb,
               JAQZ675tto,
               JAQZ675tmo)
            values
              (i.sr171tremp,
               i.sr171trmod,
               i.hsucor,
               i.sr171trnro,
               i.hnrel,
               i.hfcon,
               10,
               1,
               200,
               105,
               ln_cuenta,
               0,
               ln_numero,
               0,
               0,
               0,
               0,
               0,
               0,
               0);
          
            insert into JAQZ676
              (JAQZ676doemp,
               JAQZ676doid,
               JAQZ676cpcod,
               JAQZ676vnro,
               JAQZ676vchr,
               JAQZ676vfch,
               JAQZ676vimp,
               JAQZ676vtas)
            values
              (i.sr171tremp,
               ln_numero,
               y.ST171CPCOD,
               ln_cuenta,
               trim(y.st171cpdsc),
               null,
               0,
               0);
          end if;
          commit;
        end loop;
        ln_contador := ln_contador + 1;
      end if;
    
      insert into JAQZ675
        (JAQZ675cod,
         JAQZ675mod,
         JAQZ675suc,
         JAQZ675trn,
         JAQZ675nre,
         JAQZ675fco,
         JAQZ675cor,
         JAQZ675csu,
         JAQZ675tco,
         JAQZ675toe,
         JAQZ675tor,
         JAQZ675tsu,
         JAQZ675tru,
         JAQZ675tmd,
         JAQZ675tpa,
         JAQZ675tct,
         JAQZ675top,
         JAQZ675tsb,
         JAQZ675tto,
         JAQZ675tmo)
      values
        (i.sr171tremp,
         i.sr171trmod,
         i.hsucor,
         i.sr171trnro,
         i.hnrel,
         i.hfcon,
         10,
         1,
         200,
         ln_txoren,
         i.hcimp1,
         0,
         ln_numero,
         0,
         0,
         0,
         0,
         0,
         0,
         0);
    
      insert into JAQZ676
        (JAQZ676doemp,
         JAQZ676doid,
         JAQZ676cpcod,
         JAQZ676vnro,
         JAQZ676vchr,
         JAQZ676vfch,
         JAQZ676vimp,
         JAQZ676vtas)
      values
        (i.sr171tremp,
         ln_numero,
         i.ST171CPCOD,
         0,
         trim(i.st171cpdsc),
         null,
         trunc(i.hcimp1),
         0);
    
      ln_relacion := i.hnrel;
      ln_modulo   := i.sr171trmod;
      ln_tran     := i.sr171trnro;
      ln_sucur    := i.hsucor;
      commit;
    end loop;
    commit;
  
  end Sp_cr_proceso_bach_2;

  ---------------------------PROCESOS IGV------------------------------------
  procedure sp_tra_validas_IGV(pd_pgfape in date) is
  
    pn_pgcod  number;
    lc_serie  char(4);
    lc_corre  char(8);
    ln_relant number(4) := 0;
    lc_hipo   char(2);
    ln_emp    number(3);
    ln_mod    number(3);
    ln_suc    number(3);
    ln_mda    number(4);
    ln_pap    number(4);
    ln_cta    number(9);
    ln_ope    number(9);
    ln_sbo    number(3);
    ln_top    number(3);
    lc_flg    char(1) := 'N';
  
    lc_flg465 char(1) := 'N';
  
    ln_modulo number(3) := 0;
    ln_tran   number(3) := 0;
    ln_sucur  number(3) := 0;
  
    ln_rubro number;
  
    pn_pais   number(3);
    pn_petdoc number(2);
    pn_pendoc char(12);
    lc_tipper char(1);
  
    lc_coderr char(100);
    lc_msgerr char(1000);
  
    pd_fecpro DATE := pd_pgfape;
    
    ln_corr number; --2023.10.01
    lc_indigv char(1);
  
    cursor transacciones is
    
      select /*+all_rows*/ --2023.07.18 dcastro se agrego +all_rows
       a.jaqz675cod  pgcod,
       a.jaqz675mod  hcmod,
       a.jaqz675suc  hsucor,
       a.jaqz675trn  htran,
       a.jaqz675nre  hnrel,
       a.jaqz675fco  hfcon,
       a.jaqz675tru  txtrub,
       a.jaqz675cor  hcord,
       a.jaqz675toe  txoren,
       a.jaqz675tor  txtord,
       b.st171hcpcod st171hcpcod,
       b.se170hvnro  se170hvnro,
       b.se170hvchr  se170hvchr
        from jaqz675 a, fse170h b
       where a.jaqz675cod = b.sd170hdoemp
         and a.jaqz675tru = b.sd170hdoid
         and a.jaqz675cpc = b.st171hcpcod
         and a.jaqz675fco = b.sd170hfecha
         and a.jaqz675fco = pd_fecpro
            
            --and a.jaqz675cod = 1
            --and a.jaqz675mod = 30
            --and a.jaqz675suc = 1
            --and a.jaqz675trn = 100
            --and a.jaqz675nre in (8) ---
         and (a.jaqz675mod, a.jaqz675trn) in
             (select k.tp1nro1, k.tp1nro2
                from fst198 k
               where k.tp1cod = 1
                 and k.tp1cod1 = 11120
                 and k.tp1corr1 = 3
                 and k.tp1corr2 = 1
                 and tp1corr3 > 0)
      
       order by a.jaqz675cod,
                a.jaqz675mod,
                a.jaqz675suc,
                a.jaqz675trn,
                a.jaqz675nre,
                a.jaqz675fco;
  
  begin
    begin
    
      for p in transacciones loop
      
        --Verifica que no exista en cabecera AQPA465 
        Begin
          select 'S'
            into lc_flg465
            from aqpa465 a
           where a.aqpa465pgcod = p.pgcod
             and a.aqpa465mod = p.hcmod
             and a.aqpa465sucor = p.hsucor
             and a.aqpa465tran = p.htran
             and a.aqpa465rel = p.hnrel
             and a.aqpa465con = p.hfcon
             and rownum = 1;
        exception
          when others then
            lc_flg465 := 'N';
        end;
      
        if lc_flg465 = 'N' then
        
          --determinacion si la operacion tiene IGV
          begin
            select 'S',
                   a.pgcod,
                   a.hmodul,
                   a.hsucur,
                   a.hmda,
                   a.hpap,
                   a.hcta,
                   a.hoper,
                   a.hsubop,
                   a.htoper,
                   to_number(substr(a.hrubro, 5, 2))
              into lc_flg,
                   ln_emp,
                   ln_mod,
                   ln_suc,
                   ln_mda,
                   ln_pap,
                   ln_cta,
                   ln_ope,
                   ln_sbo,
                   ln_top,
                   ln_rubro
              from fsh016 a
             where a.pgcod = p.pgcod
               and a.hcmod = p.hcmod
               and a.hsucor = p.hsucor
               and a.htran = p.htran
               and a.hnrel = p.hnrel
               and a.hfcon = p.hfcon
               and a.hrubro in (2517030200001, 2527030200001);
          exception
            when others then
              lc_flg := 'N';
              null;
            
          end;
        
          --
          lc_indigv := 'N';
          begin
              select 'S'
                into lc_indigv
                from fst198 k
               where k.tp1cod = 1
                 and k.tp1cod1 = 11120
                 and k.tp1corr1 = 3
                 and k.tp1corr2 = 1
                 and tp1corr3 > 0  
                 and tp1imp3 = 2  
                 and TP1NRO1 = p.hcmod
                 and TP1NRO2 = p.htran; 
          exception when others then
            lc_indigv := 'N';
          end;
          --   if p.hcmod = 30 and p.htran in (977, 978) then  
          /*if (p.hcmod = 30 and p.htran in (977, 978, 405, 984, 986))
               or (p.hcmod = 98 and p.htran in (236,779) )
           then
           */ --- 22/07/2021 agrego bienes adjudicados
          if lc_indigv = 'S' then -- si tiene indicador IGV
            ln_rubro := 5; -- se agrego 984,986
          end if;
        
          if lc_flg = 'S' then
          
            pn_pgcod := p.pgcod;
          
            if ln_relant <> p.hnrel or p.hcmod <> ln_modulo or
               p.htran <> ln_tran or p.hsucor <> ln_sucur then
              lc_serie := null;
              lc_corre := null;
            
              begin
                ---se obtiene NDI/ TIPO de doc                  
                select a.pepais, a.petdoc, a.pendoc
                  into pn_pais, pn_petdoc, pn_pendoc
                  from fsr008 a
                 where a.ctnro = ln_cta
                   and a.cttfir = 'T';
              exception
                when others then
                  null;
              end;
            
              begin
                pq_cr_facturacion.sp_cr_tipo_cliente(pn_pais   => pn_pais,
                                                     pn_tipdoc => pn_petdoc,
                                                     pc_numdoc => pn_pendoc,
                                                     pc_tipper => lc_tipper);
              end;
            
              begin
                pq_cr_facturacion.sp_cr_factura(pn_rubro       => ln_rubro,
                                                pc_tipcli      => lc_tipper,
                                                pc_tipo        => 'MOV', --transaccion
                                                pc_serie       => lc_serie,
                                                pc_correlativo => lc_corre);
              
              exception
                when others then
                
                  lc_coderr := sqlcode;
                  lc_msgerr := trim(sqlerrm);
                
                  insert into aqpa460E
                    (aqpa460eserie,
                     aqpa460ecorr,
                     aqpa460epgcod,
                     aqpa460emod,
                     aqpa460esucorend,
                     aqpa460etran,
                     aqpa460erel,
                     aqpa460econ,
                     aqpa460etip,
                     Aqpa460eacoe,
                     Aqpa460eamsge)
                  values
                    ('IGV',
                     null,
                     p.pgcod,
                     p.hcmod,
                     p.hsucor,
                     p.htran,
                     p.hnrel,
                     p.hfcon,
                     'S',
                     lc_coderr,
                     lc_msgerr);
                  commit;
                
              end;
            
            end if;
          
            ln_relant := p.hnrel;
            ln_modulo := p.hcmod;
            ln_tran   := p.htran;
            ln_sucur  := p.hsucor;
          
            if lc_serie is null then
            
              insert into aqpa460E
                (aqpa460eserie,
                 aqpa460ecorr,
                 aqpa460epgcod,
                 aqpa460emod,
                 aqpa460esucorend,
                 aqpa460etran,
                 aqpa460erel,
                 aqpa460econ,
                 aqpa460etip,
                 Aqpa460eacoe,
                 Aqpa460eamsge)
              values
                ('IGV1',
                 null,
                 p.pgcod,
                 p.hcmod,
                 p.hsucor,
                 p.htran,
                 p.hnrel,
                 p.hfcon,
                 'M',
                 lc_coderr,
                 lc_msgerr);
              commit;
            else
              begin
                insert into aqpa463
                  (aqpa463txtrub,
                   aqpa463pgcod,
                   aqpa463hcmod,
                   aqpa463hsucor,
                   aqpa463htran,
                   aqpa463hnrel,
                   aqpa463hfcon,
                   aqpa463hcord,
                   aqpa463txoren,
                   aqpa463txtord,
                   aqpa463hcpcod,
                   aqpa463hvnro,
                   aqpa463hvchr,
                   aqpa463serie,
                   aqpa463corre,
                   aqpa463emp,
                   aqpa463mod,
                   aqpa463suc,
                   aqpa463mda,
                   aqpa463pap,
                   aqpa463cta,
                   aqpa463ope,
                   aqpa463sbo,
                   aqpa463top,
                   aqpa463hip
                   
                   )
                values
                  (p.txtrub,
                   p.pgcod,
                   p.hcmod,
                   p.hsucor,
                   p.htran,
                   p.hnrel,
                   p.hfcon,
                   p.hcord,
                   p.txoren,
                   p.txtord,
                   p.hcord,
                   p.se170hvnro,
                   p.se170hvchr,
                   lc_serie,
                   lc_corre,
                   ln_emp,
                   ln_mod,
                   ln_suc,
                   ln_mda,
                   ln_pap,
                   ln_cta,
                   ln_ope,
                   ln_sbo,
                   ln_top,
                   lc_hipo);
                commit;
              exception
                when others then
                  lc_coderr := sqlerrm;
              end;
            end if;
          
          else --2023.10.01
                begin
                            pq_cr_factura_electronica.sp_cr_comision_regu(p_pgcod => p.pgcod,
                                                                         p_hcmod =>  p.hcmod,
                                                                         p_hsucor => p.hsucor,
                                                                         p_htran =>  p.htran,
                                                                         p_hnrel =>  p.hnrel,
                                                                         p_hfcon =>  p.hfcon,
                                                                         p_pcorr =>  ln_corr);
              end;  
              
             --2023.10.01
          end if;
        
        end if;
        commit;
      end loop;
      Commit;
    
      begin
        ---agregado paso 2
        -- Call the procedure
        pq_cr_factura_electronica.sp_cr_Detalle_Factura_IGV(pd_pgfape);
      end;
    
     
    end;
  
    update tab_jobs g
       set g.d_fecfin = sysdate
     where g.n_numer1 = 1 -- pn_numsuc
       and g.c_codage = 'FEI';
    commit;
  EXCEPTION
    when others then
      lc_coderr := substr(sqlerrm, 1, 200);
      update tab_jobs g
         set g.c_inderr = 'S', g.c_deserr = lc_coderr
       where g.n_numer1 = 1 --pn_numsuc
         and g.c_codage = 'FEI';
      commit;
      return;
    
  end sp_tra_validas_IGV;

procedure sp_cr_Detalle_Factura_IGV(pd_pgfape in date) is
  
    pc_fecha varchar2(80);
  
    lv_codtdocC varchar2(1); --05/04/2023 dcastro 
  
    cursor aqpa463 is
    
      select *
        from aqpa463 b
       where b.aqpa463hfcon = pd_pgfape
         and (b.aqpa463hcmod, b.aqpa463htran) in
             (select k.tp1nro1, k.tp1nro2
                from fst198 k
               where k.tp1cod = 1
                 and k.tp1cod1 = 11120
                 and k.tp1corr1 = 3
                 and k.tp1corr2 = 1
                 and tp1corr3 > 0)
         --2023.11.06 se agregó que no sea IGV gratuito
       order by b.aqpa463hnrel asc, b.aqpa463txoren asc;
  
    lc_coderr char(100);
    lc_msgerr char(1000);
  
    ln_cta           number(9);
    lc_hor           char(8);
    ld_fec           date;
    lc_flg           char(1) := 'N';
    pn_pais          number;
    pn_monto_total_1 number(12, 2) := 0;
    result           character(100);
    pd_pgfape2       date;
    ln_mda           number(4);
    ln_nroitem       number(12) := 0;
    ln_cant          number(12, 10);
    lc_codpla        char(3);
    ln_docemp        number(2);
    pv_tdoc          char(25);
    lc_sistemi       char(6);
  
    lc_contrato varchar2(50);
    lv_tipemp   varchar2(1);
    lv_ruc      varchar2(11);
    lv_rzn      varchar2(1500);
    lv_ubg      varchar2(6);
    lv_NCOM     varchar2(1500);
    lv_CALLE    varchar2(200);
  
    lv_DEPA  varchar2(100);
    lv_PROV  varchar2(30);
    lv_DIST  varchar2(30);
    lv_TELF  varchar2(20);
    lv_WEB   varchar2(100);
    lv_CPAIS varchar2(2);
  
    lv_codtipo    varchar2(2);
    lv_tipomda    varchar2(3);
    lv_correo     varchar2(100);
    lv_glosa      varchar2(30);
    lv_COMA       varchar2(20);
    lv_TPLA       varchar2(3);
    lv_tipoope    varchar2(4);
    lv_TPLCO      varchar2(3);
    lv_CLOG       varchar2(3);
    lv_codtdoc    varchar2(1);
    lc_pendoc     char(12);
    lv_pendoc     varchar2(15);
    lv_penom      varchar2(1500);
    lv_hora       varchar2(8);
    ln_SIMC       number(12, 2) := 0;
    ln_SVITM      number(12, 2) := 0;
    ln_SPVI       number(12, 2) := 0;
    lv_TXML       varchar2(3);
    lv_ubgCli     varchar2(6);
    lv_sngc13dir  varchar2(500);
    lv_urb        varchar2(100);
    lv_fst071dsc1 varchar2(500);
    lv_locnom1    varchar2(500);
    lv_depnom1    varchar2(500);
    lv_cpai       varchar2(2);
    lv_PNETU      varchar2(3);
    lc_oneroso    varchar2(1);
    ln_mtoconce   number;
  
    ln_VVUIG       number;
    lv_desconce    varchar2(500);
    lv_infpredio   varchar2(500);
    ln_PRVIT       number(15, 2) := 0;
    lv_MEDEM       varchar2(50);
    lv_CSUNA       varchar2(8);
    lv_CPGS1       varchar2(14);
    ln_ITITM       number(12, 2) := 0;
    ln_IMPTB       number(12, 2) := 0;
    ln_IMPEX       number(12, 2) := 0;
    lv_afecigv     varchar2(2);
    lv_SISC        varchar2(2);
    lv_idtrbsunat  varchar2(4);
    lv_nomtrbsunat varchar2(6);
    lv_codun       varchar2(3);
    ln_MBIM        number(12, 2) := 0;
    ln_TAIMP       number(8, 5) := 0;
    ln_CDLEY       number(4) := 0;
    lv_TELEY       varchar2(200);
    lv_TEXT1       varchar2(1000);
    lv_TEXT2       varchar2(1000);
    lv_TRECV       varchar2(1000);
    lv_TEMPL       varchar2(3);
    lv_SUBJE       varchar2(100);
    lv_VPCVA       varchar2(15);
    lv_NEXP        varchar2(10);
    lv_CIND        varchar2(1);
    lv_partida     varchar2(50);
    lv_NCONT       varchar2(50);
    ld_fecoto      date;
    lv_cdisn       varchar2(6);
    lv_direccionH  varchar2(100);
    lv_urbaH       varchar2(50);
    lv_dptoH       varchar2(50);
    lv_provH       varchar2(50);
    lv_distH       varchar2(500);
    ln_MTOTAL      number(12, 2) := 0;
    ln_BAIMP       number(12, 2) := 0;
    ln_MTIMP       number(12, 2) := 0;
    ln_PCIMA       number(9, 2) := 0;
    ln_BSIMP       number(12, 2) := 0;
    ln_VAIMP       number(12, 2) := 0;
    ln_MTINF       number(12, 2) := 0;
    ln_MTGRT       number(12, 2) := 0;
    ln_BSIMPS      number(12, 2) := 0;
    ln_MTOTI       number(12, 2) := 0;
    ln_petdoc      number(2);
    lv_CTPR        varchar(2);
    lv_rzn1        varchar2(30);
    lv_rzn2        varchar2(30);
    lc_codsunat    varchar2(4);
  
    lc_nomcaja char(70);
    lc_nom1    char(30);
    lc_nom2    char(30);
  
    ln_item number(12);
  
    ld_fecSis date;
  
    lc_existe char(1) := 'N';
  
    lv_sngc13dirFin varchar2(500);
  
    ln_guiaCP      number;
    ln_mtoImpuesto number;
    lv_desmda      varchar2(30);
  
    ln_mtoTotal  number(12, 2) := 0;
    lc_serie_Ant char(4);
    lc_corr_Ant  number(8);
  
    lc_exis460 char(1);
  
  begin
    begin
    
      for p in aqpa463 loop
      
        lc_existe := 'N';
        Begin
          select 'S'
            into lc_existe
            from aqpa460 a
           where a.aqpa460seri = p.aqpa463serie
             and a.aqpa460num = p.aqpa463corre
             and a.aqpa460ore = P.AQPA463TXOREN
             and rownum = 1;
        exception
          when others then
            lc_existe := 'N';
        end;
      
        if lc_existe = 'N' then
        
          --validar concepto 
          begin
            select 'S'
              into lc_flg
              from fst198 a
             where a.tp1cod = 1
               and a.tp1cod1 = 11120
               and a.tp1corr1 = 1
               and a.tp1corr2 = 3
               and a.tp1corr3 >= 1
               and a.tp1nro1 = p.aqpa463txoren - 100;
          exception
            when others then
              lc_flg := 'N';
          end;
        
          
          --obtener cuenta moneda hora fecha
          ln_cta := p.aqpa463cta;
          ln_mda := p.aqpa463mda;
        
          begin
            select a.ithora, a.itfcon
              into lc_hor, ld_fec
              from fsd015 a
             where a.pgcod = p.aqpa463pgcod
               and a.itmod = p.aqpa463hcmod
               and a.itsuc = p.aqpa463hsucor
               and a.ittran = p.aqpa463htran
               and a.itnrel = p.aqpa463hnrel;
          exception
            when others then
              null;
          end;
        
        
          ----------Obtener codigo de sunat
          begin
            select lpad(a.tp1nro2, 4, '0')
              into lc_codsunat
              from fst198 a
             where a.tp1cod = 1
               and a.tp1cod1 = 11120
               and a.tp1corr1 = 1
               and a.tp1corr2 = 500
               and a.tp1nro1 = p.aqpa463hsucor;
          exception
            when others then
              null;
          end;
        
          begin
            -- Call the procedure
            pq_cr_factura_electronica.sp_fecha_sys(pc_fecha);
          end;
        
          if lc_flg = 'N' then
            --inserte conceptos de deuda como fila
          
            ln_mtoconce := to_number(trim(p.aqpa463txtord),
                                     '99999999999999999.99');
          
            if ln_mtoconce <> 0 then
            
              --datos persona
              begin
              
                pq_cr_factura_electronica.sp_num_documento(ln_cta,
                                                           lc_pendoc,
                                                           lv_penom,
                                                           pv_tdoc,
                                                           pn_pais,
                                                           ln_petdoc,
                                                           pd_pgfape2);
              end;
            
              --datos direccion cliente
              begin
                -- Call the procedure
                pq_cr_factura_electronica.sp_dir_cliente(lc_pendoc,
                                                         ln_petdoc,
                                                         pn_pais,
                                                         lv_sngc13dir,
                                                         lv_fst071dsc1,
                                                         lv_locnom1,
                                                         lv_depnom1,
                                                         lv_ubgCli); ---dni  pn_pendoc
              end;
            
              --Codigo del Tipo de Comprobante
            
              if substr(p.aqpa463serie, 1, 1) = 'F' then
                ln_guiaCP := 1;
              elsif substr(p.aqpa463serie, 1, 1) = 'B' then
                ln_guiaCP := 3;
              else
                ln_guiaCP := null;
              end if;
            
              begin
                select '0' || to_char(a.tp1nro1)
                  into lv_codtipo
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 7
                   and a.tp1corr3 = ln_guiaCP;
              exception
                when others then
                  null;
              end;
            
              --Codigo tipo moneda
              begin
                select trim(a.tp1desc)
                  into lv_tipomda
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 8
                   and a.tp1corr3 >= 1
                   and a.tp1nro1 = ln_mda;
              exception
                when others then
                  null;
              end;
            
              --texto moneda  
              begin
                select trim(a.tp1desc)
                  into lv_desmda
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 2
                   and a.tp1corr2 = 5
                   and a.tp1corr3 >= 1
                   and a.tp1nro1 = ln_mda;
              exception
                when others then
                  null;
              end;
            
              /*              --Codigo tipo documento cliente
                            begin
                              select to_char(a.tp1nro1)
                                into lv_codtdoc
                                from fst198 a
                               where a.tp1cod = 1
                                 and a.tp1cod1 = 11120
                                 and a.tp1corr1 = 1
                                 and a.tp1corr2 = 4
                                 and a.tp1nro2 = ln_petdoc;
                            exception
                              when others then
                                null;
                            end;
              */
              --Codigo tipo documento cliente
              begin
                select to_char(a.tp1nro1), substr(trim(TP1DESC), -1, 1)
                  into lv_codtdoc, lv_codtdocC
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 4
                   and a.tp1nro2 = ln_petdoc;
              exception
                when others then
                  null;
              end;
            
              --05/04/2023 dcastro se agrego nuevo tipo documento PTP
              if lv_codtdoc = 3 then
                lv_codtdoc := lv_codtdocC;
              end if;
              --05/04/2023 dcastro se agrego nuevo tipo documento PTP
            
              --Correo del cliente
              lv_correo := null;
              begin
                select substr(a.pextxt, 1, INSTR(a.pextxt, '\', 1) - 1)
                  into lv_correo
                  from fsx001 a
                 where a.pepais = pn_pais
                   and a.petdoc = ln_petdoc
                   and a.pendoc = lc_pendoc
                   and a.txcod = 0
                   and rownum = 1 --- 2021/11/11 dcastro se agrego condicion
                 order by a.pexren desc;
              exception
                when others then
                  null;
              end;
            
              --nro item
              ln_item := 0;
              begin
                select max(a.aqpa460item)
                  into ln_item
                  from aqpa460 a
                 where a.aqpa460seri = p.aqpa463serie
                   and a.aqpa460num = p.aqpa463corre;
              exception
                when too_many_rows then
                  begin
                    select max(a.aqpa460item)
                      into ln_item
                      from aqpa460 a
                     where a.aqpa460seri = p.aqpa463serie
                       and a.aqpa460num = p.aqpa463corre
                       and rownum = 1;
                  exception
                    when others then
                      null;
                  end;
                when no_data_found then
                  ln_item := 0;
                when others then
                  null;
              end;
              ln_nroitem := nvl(ln_item, 0) + 1;
            
              --descripcion conceptos
              lv_desconce := trim(p.aqpa463hvchr);
            
              --Codigo de plantilla
              lc_codpla := 'EST';
            
              --- Sistema de Emicion 
              lc_sistemi := 'BANTOT';
            
              --Codigo tipo doc empresa
              begin
                select a.tp1nro1
                  into ln_docemp
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 4;
              exception
                when others then
                  null;
              end;
            
              begin
                select to_char(a.tp1nro1)
                  into lv_tipemp
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 4
                   and a.tp1corr3 >= 1
                   and a.tp1nro2 = ln_docemp;
              
              exception
                when others then
                  null;
              end;
              --ruc caja
              begin
                select trim(a.tp1desc)
                  into lv_ruc
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 1;
              exception
                when others then
                  null;
              end;
            
              --NOMBRE COMERCIAL caja
              begin
                select a.tp1desc
                  into lv_NCOM
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 5;
              exception
                when others then
                  null;
              end;
            
              --Ubigeo caja
              begin
                select trim(a.tp1desc)
                  into lv_ubg
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 6;
              exception
                when others then
                  null;
              end;
              ---------------------------------------campos parte 2
              ----------hora de transacion 
              begin
                select trim(a.aqpa463txtord)
                  into lv_hora
                  from aqpa463 a
                 where a.aqpa463pgcod = p.aqpa463pgcod
                   and a.aqpa463hcmod = p.aqpa463hcmod
                   and a.aqpa463hsucor = p.aqpa463hsucor
                   and a.aqpa463htran = p.aqpa463htran
                   and a.aqpa463hnrel = p.aqpa463hnrel
                   and a.aqpa463hfcon = p.aqpa463hfcon
                   and a.aqpa463serie = p.aqpa463serie
                   and a.aqpa463corre = p.aqpa463corre
                   and a.aqpa463txtord like '%:%';
              exception
                when others then
                  null;
              end;
            
              begin
                select pgfape into ld_fecSis from fst017 where pgcod = 1;
              exception
                when others then
                  null;
              end;
              if lv_hora is null then
              
                if ld_fecSis = p.aqpa463hfcon then
                
                  begin
                    select a.ithora
                      into lv_hora
                      from fsd015 a
                     where a.pgcod = p.aqpa463pgcod
                       and a.itsuc = p.aqpa463hsucor
                       and a.itmod = p.aqpa463hcmod
                       and a.ittran = p.aqpa463htran
                       and a.itnrel = p.aqpa463hnrel;
                  exception
                    when others then
                      null;
                  end;
                
                else
                  begin
                    select a.hhora
                      into lv_hora
                      from fsh015 a
                     where a.pgcod = p.aqpa463pgcod
                       and a.hsucor = p.aqpa463hsucor
                       and a.hcmod = p.aqpa463hcmod
                       and a.htran = p.aqpa463htran
                       and a.hnrel = p.aqpa463hnrel
                       and a.hfcon = p.aqpa463hfcon;
                  exception
                    when others then
                      null;
                  end;
                end if;
              
              end if;
            
              -------Codigo de tipo de importe de afectacion
              Begin
                select to_char(a.tp1nro1)
                  into lc_oneroso
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 12
                   and a.tp1corr3 = 3;
              exception
                when others then
                  null;
              End;
            
              /* MONTO IGV */
              begin
                pq_cr_factura_electronica.sp_cr_cobroigv(pn_pgcod  => p.aqpa463pgcod,
                                                         pn_hcmod  => p.aqpa463hcmod,
                                                         pn_hsucor => p.aqpa463hsucor,
                                                         pn_htran  => p.aqpa463htran,
                                                         pn_hnrel  => p.aqpa463hnrel,
                                                         pn_hfcon  => p.aqpa463hfcon,
                                                         pc_serie  => p.aqpa463serie,
                                                         pn_corr   => p.aqpa463corre,
                                                         pn_mto    => ln_mtoImpuesto);
              
              end;
              /* MONTO IGV */
              
              pn_monto_total_1 := ln_mtoImpuesto +  ln_mtoconce;  --2023.11.06
            
              -----------------Descripcion del pais 
              begin
                Select trim(a.tp1desc)
                  Into lv_CPAIS
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 15
                   and a.tp1corr3 = 1;
              exception
                when others then
                  null;
              end;
            
              lv_partida    := null;
              lv_direccionH := null;
              lv_urbaH      := null;
              lv_dptoH      := null;
              lv_provH      := null;
              lv_distH      := null;
              lv_cdisn      := null;
            
              lc_contrato := lpad(to_char(p.aqpa463cta), 9, 0) ||
                             lpad(to_char(p.aqpa463mda), 3, 0) ||
                             lpad(to_char(p.aqpa463ope), 9, 0);
              lv_NCONT    := lc_contrato;
            
              lv_infpredio := null;
              lv_pendoc    := lc_pendoc;
            
              --Pais del cliente
            
              begin
                select trim(a.tp1desc)
                  into lv_cpai
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 20
                   and a.tp1NRO1 = pn_pais;
              exception
                when others then
                  null;
              end;
            
              --Producto del credito
              begin
                select to_char(p.aqpa463mod) || '-' || trim(a.tonom)
                  into lv_TEXT1
                  from fst004 a
                 where a.modulo = p.aqpa463mod
                   and a.totope = p.aqpa463top;
              
              exception
                when others then
                  null;
              end;
            
              --direccion
              begin
                select to_char(a.tp1desc)
                  into lv_CALLE
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 2;
              
              exception
                when others then
                  null;
              end;
            
              --telefono
              begin
                select trim(to_char(a.tp1desc))
                  into lv_TELF
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 3;
              exception
                when others then
                  null;
              end;
            
              Begin
                ---web de caja arequipa
                select trim(a.tp1desc)
                  into lv_web
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 12;
              exception
                when others then
                  null;
              End;
            
              --departamento
              begin
                select to_char(a.tp1desc)
                  into lv_DEPA
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 7;
              
              exception
                when others then
                  null;
              end;
            
              --provincia
              begin
                select to_char(a.tp1desc)
                  into lv_PROV
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 8;
              
              exception
                when others then
                  null;
              end;
            
              --distrito
              begin
                select to_char(a.tp1desc)
                  into lv_DIST
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 9;
              
              exception
                when others then
                  null;
              end;
            
              --razon social
            
              begin
                select to_char(a.tp1desc)
                  into lv_rzn1
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 10;
              
              exception
                when others then
                  null;
              end;
            
              begin
                select to_char(a.tp1desc)
                  into lv_rzn2
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 11;
              
              exception
                when others then
                  null;
              end;
              
               --2023.11.01
                if p.aqpa463mda <> 101 then
                  lv_desmda := 'SOLES';
                else
                  lv_desmda := 'DOLARES';
                end if;
               
              begin
                 result := pq_cr_factura_electronica.dintex(pn_monto_total_1);
              end;
              lv_TELEY := trim(result) || ' '||lv_desmda;
              --2023.11.01
              
              lv_rzn := trim(lv_rzn1) || ' ' || trim(lv_rzn2);
            
              lv_glosa := null;
              lv_TPLA  := 'EST';
              lv_TPLCO := 'EST';
              lv_TXML  := '2.1';
              lv_urb   := null;
              lv_PNETU := 'NIU';
              ln_cant  := 1;
              lv_CTPR  := '01';
            
              ln_PRVIT := pn_monto_total_1; --0; --ln_mtoconce;  2023.11.01
              lv_MEDEM := 'UND';
              lv_CSUNA := '84121500';
              lv_SISC  := null;
              ln_MBIM  := ln_mtoconce;
              ln_CDLEY := 1000;
            
              lv_TEXT2   := lpad(to_char(p.aqpa463cta), 9, 0) ||
                            lpad(to_char(p.aqpa463mda), 3, 0) ||
                            lpad(to_char(p.aqpa463ope), 9, 0);
              lv_TRECV   := lv_correo;
              lv_TEMPL   := 'EST';
              lv_SUBJE   := '0' || trim(lv_codtipo) || '-' ||
                            P.AQPA463SERIE || '-' ||
                            trim(to_char(P.AQPA463CORRE));
              lv_VPCVA   := null;
              lv_NEXP    := '0';
              lv_CIND    := '0';
              ln_BSIMP   := null;
              ln_VAIMP   := null;
              ln_MTGRT   := null;
              ln_BSIMPS  := null;
              ln_MTOTI   := null;
              lv_CPGS1   := null;
              ln_MTINF   := null;
              lv_COMA    := to_char(p.aqpa463hfcon, 'yymmdd') ||
                            lpad(to_char(p.aqpa463hsucor), 3, 0) ||
                            lpad(to_char(p.aqpa463hcmod), 3, 0) ||
                            lpad(to_char(p.aqpa463htran), 3, 0) ||
                            lpad(to_char(p.aqpa463hnrel), 4, 0);
              ln_MTIMP   := ln_mtoImpuesto;
              ln_IMPEX   := ln_mtoImpuesto;
              ln_ITITM   := ln_mtoImpuesto;
              ln_IMPTB   := ln_mtoImpuesto;
              ln_PCIMA   := 18.0;
              ln_TAIMP   := 18;
              ln_MTOTAL  := ln_mtoconce;
              ln_BAIMP   := ln_mtoconce;
              ln_SVITM   := ln_mtoconce;
              lv_tipoope := '0101';
              ln_SIMC    := ln_mtoImpuesto; --AQPA460SIMC   total impuesto
              lv_desconce    := 'IGV'; --AQPA460DESC  --2023.11.01
              lv_afecigv     := 10; --AQPA460AFIGV
              lv_idtrbsunat  := 1000; -- AQPA460CODTB   ---------Identificaci?n del tributo seg?n cat?logo SUNAT
              lv_nomtrbsunat := 'IGV'; --AQPA460DSTRB  
              lv_codun       := 'VAT'; --AQPA460CODUN 
              ln_VVUIG       := pn_monto_total_1;--0;  --2023.11.01
              ln_SPVI        := pn_monto_total_1;--0;  --2023.11.01
            
              ----------------------datos caja
              Begin
                ---razon social de caja arequipa
                select a.tp1desc
                  into lc_nom1
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 10;
              exception
                when others then
                  null;
              End;
            
              Begin
                ---razon social de caja arequipa
                select a.tp1desc
                  into lc_nom2
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 11;
              exception
                when others then
                  null;
              End;
            
              lc_nomcaja := trim(lc_nom1) || trim(lc_nom2);
            
              lv_sngc13dirFin := trim(lv_sngc13dir) || ' - ' ||
                                 trim(lv_fst071dsc1) || ' - ' ||
                                 trim(lv_locnom1) || ' - ' ||
                                 trim(lv_depnom1);
              lv_depnom1      := null;
              lv_locnom1      := null;
              lv_fst071dsc1   := null;
            
              if lv_correo is null then
                lv_correo := 'Reportefactele@cajaarequipa.pe';
              end if;
            
              if lv_TRECV is null then
                lv_TRECV := 'Reportefactele@cajaarequipa.pe';
              end if;
            
              ------insert detalle de factura
              BEGIN
                insert into AQPA460
                  (AQPA460TDOC, --Codigo del Tipo de Documento de Identidad oENEmpresa
                   AQPA460RUCC, --N?mero de documento de identidad del emisor oENEmpresa
                   AQPA460RSOC, --Apellidos y nombres o denominaci?n o raz?n social oENEmpresa
                   AQPA460CDIS, --Codigo de UBIGEO oENEmpresa
                   AQPA460NCOM, --Nombre Comercial oENEmpresa
                   AQPA460CALLE, --Direcci?n completa y detallada oENEmpresa
                   AQPA460URBA, --Urbanizacion o Zona  oENEmpresa
                   AQPA460DEPA, --Departamento, expresado textualmente  oENEmpresa
                   AQPA460PROV, --Provincia, expresarlo textualmente   oENEmpresa
                   AQPA460DIST, --Distrito, expresarlo textualmente oENEmpres
                   AQPA460TELF, --Telefono de la Empresa Emisora oENEmpres
                   AQPA460WEB, --Pagina Web del Emisor oENEmpres           
                   AQPA460CPAIS, --Codigo del Pais del Emisor oENEmpres
                   AQPA460CESUN, --C?digo del establecimiento de Sunat  oENEmpres
                   AQPA460SERI, --Serie del comprobante.  Datos del Comprobante
                   AQPA460NUM, --Numero Correlativo del comprobante. Datos del Comprobante
                   AQPA460FEMI, --Fecha de Emision del Comprobante Datos del Comprobante
                   AQPA460TCOMF, --Codigo del Tipo de Comprobante Datos del Comprobante
                   AQPA460MONE, --Codigo del Tipo de Moneda Datos del Comprobante
                   AQPA460CORRR, --El correo electr?nico del Receptor  Datos del Comprobante
                   AQPA460MGLO, --Multiples Informaci?n adicional u observacion del comprobante.  Datos del Comprobante
                   AQPA460COMA, --Numero Interno del Comprobante Datos del Comprobante
                   AQPA460TPLA, --Tiplo de Plantilla  Datos del Comprobante
                   AQPA460TOPE, --C?digo de Tipo de operaciones Datos del Comprobante
                   AQPA460TPLCO, --C?digo de plantilla de correo  Datos del Comprobante
                   AQPA460CLOG, --C?digo del tipo de Logo Datos del Comprobante
                   AQPA460TDOCR, --Codigo del tipo de documento de identificaci?n del Receptor Datos del Comprobante
                   AQPA460NRUC, --N?mero de documento de identificaci?n Datos del Comprobante
                   AQPA460RASOC, --Apellidos y nombres o denominaci?n o raz?n social Datos del Comprobante
                   AQPA460IMPT, --Importe total  a pagar Datos del Comprobante
                   AQPA460HEMI, --Hora de Emisi?n  Datos del Comprobante
                   AQPA460SIMC, --Suma de todos los impuestos del comprobante.  Datos del Comprobante
                   AQPA460SVITM, --Suma del valor de venta total de todos los items   Datos del Comprobante
                   AQPA460SPVI, --Suma de los precios de venta total de todos los items  Datos del Comprobante
                   AQPA460TXML, -- Indica el tipo de XML que se generar? Datos del Comprobante
                   AQPA460CDIST, --C?digo de UBIGEO Datos adicionales del Receptor
                   AQPA460CALL, --Direcci?n completa y detallada Datos adicionales del Receptor
                   AQPA460URB, --Urbanizacion o Zona   Datos adicionales del Receptor
                   AQPA460DEP, --Departamento Datos adicionales del Receptor
                   AQPA460PRV, --Provincia   Datos adicionales del Receptor
                   AQPA460DST, --Distrito Datos adicionales del Receptor
                   AQPA460CPAI, --C?digo del Pa?s  Datos adicionales del Receptor
                   AQPA460ITEM, --N?mero de orden del Item ENComprobanteDetalle 
                   AQPA460PNETU, --Unidad de medida de los bienes vendidos por item (UN/ECE rec 20) ENComprobanteDetalle 
                   AQPA460CANTF, --Cantidad de unidades vendidas pot item (Q)  ENComprobanteDetalle 
                   AQPA460TOTAL, --Importe monetario que es el total de la l?nea de detalle, incluyendo variaciones de precio (subvenciones, cargos o descuentos) pero sin impuestos.  ENComprobanteDetalle 
                   AQPA460DETE, --Codigo de identificaci?n de Onerosidad del Item ENComprobanteDetalle 
                   AQPA460CTPR, --Codigo de tipo de importe de afectacion ENComprobanteDetalle 
                   AQPA460VVUN, --Valores de venta unitarios por item (VU) no incluye impuestos  ENComprobanteDetalle 
                   AQPA460VVUIG, --Precio de Venta Unitario (Incluye impuestos)  ENComprobanteDetalle 
                   AQPA460DESC, -- Descripcion del producto ENComprobanteDetalle 
                   AQPA460MFUN, --Multi Descripcion,  puede tener varias desccripciones ENComprobanteDetalle 
                   AQPA460PRVIT, --Es el precio de venta ENComprobanteDetalle 
                   AQPA460MEDEM, --Unidad medida del emisor ENComprobanteDetalle 
                   AQPA460CSUNA, --C?digo producto establecido por Sunat   ENComprobanteDetalle 
                   AQPA460CPGS1, --C?digo de producto GS1  ENComprobanteDetalle 
                   AQPA460ITITM, --Impuesto total del item ENComprobanteDetalle 
                   AQPA460IMPTB, --Importe total de un tributo para este item Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460IMPEX, ---Importe expl?cito a tributar ( = Tasa Porcentaje * Base Imponible)   Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460AFIGV, --Afectaci?n del IGV  Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460SISC, --Sistema de ISC  (01=Especifico; 02= al valor; 03=PV al p?blico)  Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460CODTB, --Identificaci?n del tributo seg?n cat?logo SUNAT Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460DSTRB, --Nombre del Tributo (IGV, IVAP, ISC)  Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460CODUN, --C?digo del Tipo de Tributo (UN/ECE 5153) Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460MBIM, --Monto base del impuesto Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460TAIMP, --Tasa aplicada del impuesto  Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460CDLEY, --Codigo de la Leyenda Utilizado para Leyendas
                   AQPA460TELEY, --Texto de la leyenda  Utilizado para Leyendas
                   AQPA460TEXT1, --Texto libre 1 : Producto  Informaci?n adicional para la visualizacion de representaciones impresas, antes definido por el integrador.
                   AQPA460TEXT2, --Texto libre 2 : N?mero de Cr?dito Informaci?n adicional para la visualizacion de representaciones impresas, antes definido por el integrador.
                   AQPA460TRECV, --Correo del receptor Utilizado para enviar correos adicionales con copia al Correo del Receptor, ingresado en ENComprobante.Correo
                   AQPA460TEMPL, --C?digo de Tipo de Plantilla  Utilizado para enviar correos adicionales con copia al Correo del Receptor, ingresado en ENComprobante.Correo
                   AQPA460SUBJE, --Asunto del correo Utilizado para enviar correos adicionales con copia al Correo del Receptor, ingresado en ENComprobante.Correo
                   AQPA460VPCVA, --Placa del vehiculo Informaci?n adicional del item
                   AQPA460NEXP, --N?mero de Expediente Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460CIND, --C?digo de indicador  Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460NPART, --N?mero de Partida Registral  Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460NCONT, --N?mero de contrato  Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460FOTRC, --Fecha de Otorgo de cr?dito   Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460CDISN, --C?digo de Ubigeo   Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460DIREH, --Direcci?n   Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460URBH, --Urbanizaci?n Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460PRVH, --Provincia   Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460DSTH, --Distrito   Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460DEPTH, --Departamento Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460MTOTAL, --Monto total Gravado (Sin impuesto)  Informaci?n de gravada                           
                   AQPA460BAIMP, --Base del impuesto  IGV del Gravado
                   AQPA460MTIMP, --Monto total solo del impuesto   IGV del Gravado
                   AQPA460PCIMA, --Porcentaje del impuesto aplicado  IGV del Gravado
                   AQPA460BSIMP, --Base del impuesto Otros impuestos del Gravado
                   AQPA460VAIMP, --Monto total solo del impuesto  Otros impuestos del Gravado
                   AQPA460MTINF, --Monto total Inafecto  Informaci?n de inafecto
                   AQPA460MTGRT, --Monto total Gratuito  Informaci?n de gratuito
                   AQPA460BSIMPS, --Base del impuesto Impuestos del Gratuito
                   AQPA460MTOTI, --Monto total de impuestos Impuestos del Gratuito
                   AQPA460PGC, --mod@abr 20180824
                   AQPA460MOD, --mod@abr 20180824  
                   AQPA460SUC, --mod@abr 20180824 
                   AQPA460TRX, --mod@abr 20180824
                   AQPA460REL, --mod@abr 20180824
                   AQPA460ORE, --mod@abr 20180824
                   AQPA460DOCU --2023.07.18 dcastro 
                   )
                
                Values
                  (lv_tipemp, --AQPA460TDOC,  ok
                   lv_ruc, --AQPA460RUCC,  ok
                   lv_rzn, --AQPA460RSOC,  ok
                   lv_ubg, --AQPA460CDIS,  ok
                   lv_NCOM, --AQPA460NCOM,  ok
                   lv_CALLE, --AQPA460CALLE  ok
                   lv_urb, --AQPA460URBA,  ok
                   lv_DEPA, --AQPA460DEPA,  ok
                   lv_PROV, --AQPA460PROV,  ok
                   lv_DIST, --AQPA460DIST,  ok
                   lv_TELF, --AQPA460TELF,  ok
                   lv_WEB, --AQPA460WEB,   ok
                   lv_CPAIS, --AQPA460CPAIS  ok
                   lc_codsunat, --lv_CESUN,        --AQPA460CESUN
                   p.aqpa463serie, --AQPA460SERI,  ok
                   p.aqpa463corre, --AQPA460NUM,   ok
                   p.aqpa463hfcon, --AQPA460FEMI,  ok
                   lv_codtipo, --AQPA460TCOMF  ok
                   lv_tipomda, --AQPA460MONE,  ok
                   lv_correo, --AQPA460CORRR  ok
                   lv_glosa, --AQPA460MGLO,  ok
                   lv_COMA, --AQPA460COMA,  ok
                   lv_TPLA, --AQPA460TPLA,  ok
                   lv_tipoope, --AQPA460TOPE,  ok
                   lv_TPLCO, --AQPA460TPLCO  ok
                   lv_CLOG, --AQPA460CLOG,
                   lv_codtdoc, --AQPA460TDOCR  ok
                   lv_pendoc, --AQPA460NRUC,  ok
                   lv_penom, --AQPA460RASOC  ok
                   pn_monto_total_1, --AQPA460IMPT,  ok
                   lv_hora, --AQPA460HEMI,  ok
                   ln_SIMC, --AQPA460SIMC,  ok
                   ln_SVITM, --AQPA460SVITM  ok
                   ln_SPVI, --AQPA460SPVI,  ok
                   lv_TXML, --AQPA460TXML,  ok
                   lv_ubgCli, --AQPA460CDIST,  ok
                   lv_sngc13dir, --AQPA460CALL,   ok
                   lv_urb, --AQPA460URB,    ok
                   lv_depnom1, --AQPA460DEP,    ok
                   lv_locnom1, --AQPA460PRV,    ok
                   lv_fst071dsc1, --AQPA460DST,    ok
                   lv_cpai, --AQPA460CPAI,   ok
                   ln_nroitem, --AQPA460ITEM,   ok
                   lv_PNETU, --AQPA460PNETU,  ok
                   ln_cant, --AQPA460CANTF,  ok
                   ln_mtoconce, --AQPA460TOTAL,  ok
                   lc_oneroso, --AQPA460DETE,   ok
                   lv_CTPR, --AQPA460CTPR,   ok
                   ln_mtoconce, --AQPA460VVUN,   ok to number
                   ln_VVUIG, --AQPA460VVUIG,  ok
                   lv_desconce, --AQPA460DESC,   ok
                   lv_infpredio, --AQPA460MFUN,   ok
                   ln_PRVIT, --AQPA460PRVIT,  ok
                   lv_MEDEM, --AQPA460MEDEM,  ok
                   lv_CSUNA, --AQPA460CSUNA,  ok
                   lv_CPGS1, --AQPA460CPGS1,  ok
                   ln_ITITM, --AQPA460ITITM,  ok
                   ln_IMPTB, --AQPA460IMPTB,  ok
                   ln_IMPEX, --AQPA460IMPEX,  ok
                   lv_afecigv, --AQPA460AFIGV,  ok
                   lv_SISC, --AQPA460SISC,   ok
                   lv_idtrbsunat, --AQPA460CODTB,  ok
                   lv_nomtrbsunat, --AQPA460DSTRB,  ok
                   lv_codun, --AQPA460CODUN,  ok
                   ln_MBIM, --AQPA460MBIM,   ok
                   ln_TAIMP, --AQPA460TAIMP,  ok
                   ln_CDLEY, --AQPA460CDLEY,  ok
                   lv_TELEY, --AQPA460TELEY,  ok
                   lv_TEXT1, --AQPA460TEXT1,  ok
                   lv_TEXT2, --AQPA460TEXT2,  ok
                   lv_TRECV, --AQPA460TRECV,  ok
                   lv_TEMPL, --AQPA460TEMPL,  ok
                   lv_SUBJE, --AQPA460SUBJE,  ok
                   lv_VPCVA, --AQPA460VPCVA,  ok
                   lv_NEXP, --AQPA460NEXP,   ok
                   lv_CIND, --,        --AQPA460CIND,   ok
                   nvl(lv_partida, ' '), --G74.3  --AQPA460NPART,  ok
                   nvl(lv_NCONT, ' '), -- G74.4 NUMERO CONTRATO                AQPA460NCONT,  ok 
                   ld_fecoto, --G74.5  FECHA OTORGAMIENTO CREDITO   AQPA460FOTRC,  ok
                   nvl(lv_cdisn, ' '), --G74.6  Ubigeo                        AQPA460CDISN,  ok
                   nvl(lv_direccionH, ' '), --G74.7                           AQPA460DIREH,  ok
                   nvl(lv_urbaH, ' '), --G74.8                                 AQPA460URBH,   ok
                   nvl(lv_provH, ' '), --G74.9                                AQPA460PRVH,   ok
                   nvl(lv_distH, ' '), --G74.10                                AQPA460DSTH,   ok
                   nvl(lv_dptoH, ' '), --AQPA460DEPTH,  ok
                   ln_MTOTAL, --AQPA460MTOTAL  ok
                   ln_BAIMP, --AQPA460BAIMP,  ok
                   ln_MTIMP, --AQPA460MTIMP,  ok
                   ln_PCIMA, --AQPA460PCIMA,  ok
                   ln_BSIMP, --AQPA460BSIMP,  ok
                   ln_VAIMP, --AQPA460VAIMP,  ok
                   ln_MTINF, --AQPA460MTINF,  ok
                   ln_MTGRT, --AQPA460MTGRT,  ok
                   ln_BSIMPS, --AQPA460BSIMPS  ok
                   ln_MTOTI, --AQPA460MTOTI   ok
                   P.AQPA463PGCOD, --mod@abr 20180824
                   P.AQPA463HCMOD, --mod@abr 20180824
                   P.AQPA463HSUCOR, --mod@abr 20180824 
                   P.AQPA463HTRAN, --mod@abr 20180824
                   P.AQPA463HNREL, --mod@abr 20180824 
                   P.AQPA463TXOREN, --mod@abr 20180824
                   trim(lv_pendoc) --AQPA460DOCU,  2023.07.18 se agrego documento sin espacios
                   );
              
                commit;
              Exception
                when others then
                
                  lc_coderr := sqlcode;
                  lc_msgerr := sqlerrm;
                
                  insert into aqpa460E
                    (aqpa460eserie,
                     aqpa460ecorr,
                     aqpa460epgcod,
                     aqpa460emod,
                     aqpa460esucorend,
                     aqpa460etran,
                     aqpa460erel,
                     aqpa460econ,
                     aqpa460etip,
                     Aqpa460eacoe,
                     Aqpa460eamsge)
                  
                  values
                    (p.aqpa463serie,
                     p.aqpa463corre,
                     p.aqpa463pgcod,
                     p.aqpa463hcmod,
                     p.aqpa463hsucor,
                     p.aqpa463htran,
                     p.aqpa463hnrel,
                     p.aqpa463hfcon,
                     
                     'S',
                     lc_coderr,
                     lc_msgerr);
                  commit;
              END;
              commit;
              ln_MTOTAL := 0;
              ln_BAIMP  := 0;
              ln_MTIMP  := 0;
              ln_PCIMA  := 0;
              ln_BSIMP  := 0;
              ln_VAIMP  := 0;
              ln_MTINF  := 0;
              ln_MTGRT  := 0;
              ln_BSIMPS := 0;
              ln_MTOTI  := 0;
            
            end if;
          end if;
        end if;
      
      ------------------------------------------------------------------------------------------------------------- 
      end loop;
    
      ----insert cabecera de factura aqpa465 
      begin
        -- Call the procedure
        pq_cr_factura_electronica.sp_cr_cabecera_facturaIGV(pd_pgfape);
      
      end;
    
    end;
  
  exception
    when others then
      null;
    
  end sp_cr_Detalle_Factura_IGV;
  
  procedure sp_cr_Cabecera_facturaIGV(pd_pgfape in date) is
  
    pc_aqpa465hash varchar2(250) := '';
  
    cursor aqpa463 is
    
      select distinct (b.aqpa463pgcod),
                      (b.aqpa463hcmod),
                      (b.aqpa463hsucor),
                      (b.aqpa463htran),
                      (b.aqpa463hnrel),
                      (b.aqpa463hcord),
                      (b.aqpa463hfcon),
                      (b.aqpa463serie),
                      (b.aqpa463corre)
        from aqpa463 b
       where b.aqpa463hfcon = pd_pgfape
         and (b.aqpa463hcmod, b.aqpa463htran) in
             (select k.tp1nro1, k.tp1nro2
                from fst198 k
               where k.tp1cod = 1
                 and k.tp1cod1 = 11120
                 and k.tp1corr1 = 3
                 and k.tp1corr2 = 1
                 and tp1corr3 > 0)
                 --2023.11.06 se agregó que no sea IGV gratuito
      ;
  
    lc_flag char(1);
  
  begin
    begin
    
      for p in aqpa463 loop
      
        --si no existe registro insertar
        begin
          select 'S'
            into lc_flag
            from aqpa465 b
           where b.aqpa465serie = p.aqpa463serie
             and b.aqpa465corr = p.aqpa463corre
             and b.aqpa465pgcod = p.aqpa463pgcod
             and b.aqpa465mod = p.aqpa463hcmod
             and b.aqpa465sucor = p.aqpa463hsucor
             and b.aqpa465tran = p.aqpa463htran
             and b.aqpa465rel = p.aqpa463hnrel
             and b.aqpa465con = p.aqpa463hfcon;
        exception
          when others then
            lc_flag := 'N';
        end;
      
        if nvl(lc_flag, 'N') = 'N' then
        
          insert into aqpa465
            (aqpa465serie,
             aqpa465corr,
             aqpa465pgcod,
             aqpa465mod,
             aqpa465sucor,
             aqpa465tran,
             aqpa465rel,
             aqpa465con,
             aqpa465hash)
          values
            (p.aqpa463serie,
             p.aqpa463corre,
             p.aqpa463pgcod,
             p.aqpa463hcmod,
             p.aqpa463hsucor,
             p.aqpa463htran,
             p.aqpa463hnrel,
             p.aqpa463hfcon,
             pc_aqpa465hash);
        
          commit;
        end if;
      
      end loop;
      commit;
    end;
  
  end sp_cr_Cabecera_facturaIGV;


  Procedure Sp_cr_calculaTotal(pd_fecpro in date) is
  
    cursor registros is
      select a.aqpa460seri,
             a.aqpa460num,
             sum(AQPA460TOTAL + AQPA460ITITM) AQPA460TOTAL
        from aqpa460 a, aqpa465 b
       where a.aqpa460femi = pd_fecpro
         and a.aqpa460seri = b.aqpa465serie
         and a.aqpa460num = b.aqpa465corr
         and (b.aqpa465mod, b.aqpa465tran) in
             (select k.tp1nro1, k.tp1nro2
                from fst198 k
               where k.tp1cod = 1
                 and k.tp1cod1 = 11120
                 and k.tp1corr1 = 3
                 and k.tp1corr2 = 1
                 and tp1corr3 > 0)
       group by a.aqpa460seri, a.aqpa460num;
  
    lv_desmda varchar2(30);
    ln_mda    number(4);
    lv_TELEY  varchar2(200);
    result    character(100);
  
  begin
  
    for i in registros loop
    
      begin
        select distinct a.aqpa463mda
          into ln_mda
          from aqpa463 a
         where a.aqpa463serie = i.aqpa460seri
           and a.aqpa463corre = i.aqpa460num;
      exception
        when too_many_rows then
          begin
            select distinct a.aqpa463mda
              into ln_mda
              from aqpa463 a
             where a.aqpa463serie = i.aqpa460seri
               and a.aqpa463corre = i.aqpa460num
               and rownum = 1;
          exception
            when others then
              null;
          end;
        when others then
          null;
      end;
      --texto moneda  
      begin
        select trim(a.tp1desc)
          into lv_desmda
          from fst198 a
         where a.tp1cod = 1
           and a.tp1cod1 = 11120
           and a.tp1corr1 = 2
           and a.tp1corr2 = 5
           and a.tp1corr3 >= 1
           and a.tp1nro1 = ln_mda;
      exception
        when others then
          null;
      end;
    
      begin
      
        result := pq_cr_factura_electronica.dintex(i.AQPA460TOTAL);
      end;
      lv_TELEY := trim(result) || ' ' || lv_desmda;
    
      update aqpa460 a
         set a.AQPA460IMPT  = i.AQPA460TOTAL,
             a.aqpa460SPVI  = i.AQPA460TOTAL,
             a.aqpa460vvuig = i.AQPA460TOTAL,
             a.aqpa460teley = lv_TELEY,
             a.aqpa460prvit = i.AQPA460TOTAL
       where a.aqpa460seri = i.aqpa460seri
         and a.aqpa460num = i.aqpa460num;
      commit;
    
    end loop;
  
  end Sp_cr_calculaTotal;

  -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
  procedure sp_cr_verificar_fin_mes(pc_fecha in date) is
    pe_fecha    date;
    pe_mes      number;
    pe_anio     number;
    sr_mes      char(2);
    sr_anio     char(4);
    sr_mes_sig  char(2);
    sr_anio_sig char(4);
    sr_mes_act  char(2);
    sr_anio_act char(4);
    STR_SQL     varchar2(1000);
  
  begin
  
    pe_fecha := pc_fecha - 1;
  
    if (last_day(pe_fecha) - pe_fecha) = 0 then
    
      --pe_fecha := pe_fecha - 1;
    
      ---Evaluar año y mes   
      pe_mes  := extract(month from pe_fecha);
      pe_anio := extract(year from pe_fecha);
    
      sr_mes_act  := lpad(to_char(pe_mes), 2, '0');
      sr_anio_act := to_char(pe_anio);
    
      pe_mes := pe_mes + 1;
    
      if pe_mes = 13 then
        sr_mes      := lpad(to_char(1), 2, '0');
        sr_mes_sig  := lpad(to_char(2), 2, '0');
        sr_anio     := to_char(pe_anio + 1);
        sr_anio_sig := to_char(pe_anio + 1);
      elsif pe_mes = 12 then
        sr_mes      := lpad(to_char(pe_mes), 2, '0');
        sr_mes_sig  := lpad(to_char(1), 2, '0');
        sr_anio     := to_char(pe_anio);
        sr_anio_sig := to_char(pe_anio + 1);
      else
        sr_mes      := lpad(to_char(to_char(pe_mes)), 2, '0');
        sr_mes_sig  := lpad(to_char(pe_mes + 1), 2, '0');
        sr_anio     := to_char(pe_anio);
        sr_anio_sig := to_char(pe_anio);
      end if;
    
      ---Agregar particiones
      STR_SQL := 'ALTER TABLE AQPB056H ADD PARTITION AQPB056H_' || sr_anio || '' ||
                 sr_mes || ' VALUES LESS THAN (TO_DATE(''' || sr_anio_sig || '-' ||
                 sr_mes_sig || '-01'',''YYYY-MM-DD''))';
      --dbms_output.put_line(STR_SQL);
      EXECUTE IMMEDIATE STR_SQL;
    
    end if;
  
  end sp_cr_verificar_fin_mes;

  -- -- -- --  -- -- -- --  -- -- -- --  -- -- -- --  -- -- -- --  -- -- -- --  -- -- -- --  -- -- -- --
  procedure sp_cr_guardar_historico(pc_fecha in date) is
    ln_fecha date;
  
  begin
  
    ln_fecha := pc_fecha - 1;
  
    insert into AQPB056H
      select /*+all_rows */ --2023.07.18 dcastro se agrego +all_rows
      /*t.aqpb056tcomf,
      t.aqpb056seri,
      t.aqpb056num,
      t.aqpb056femi,
      t.aqpb056pgc,
      t.aqpb056mod,
      t.aqpb056suc,
      t.aqpb056trx,
      t.aqpb056rel,
      t.aqpb056fcon,
      t.aqpb056tcomp,
      t.aqpb056serie,
      t.aqpb056nro,
      t.aqpb056pgce,
      t.aqpb056mode,
      t.aqpb056suce,
      t.aqpb056trxe,
      t.aqpb056rele,
      t.aqpb056fcone,*/
       t.aqpb056tco,
       t.aqpb056ser,
       t.aqpb056num,
       t.aqpb056fem,
       t.aqpb056pgc,
       t.aqpb056mod,
       t.aqpb056suc,
       t.aqpb056trx,
       t.aqpb056rel,
       t.aqpb056fco,
       
       t.aqpb056tce,
       t.aqpb056see,
       t.aqpb056nro,
       
       t.aqpb056pge,
       t.aqpb056moe,
       t.aqpb056sue,
       t.aqpb056tre,
       t.aqpb056ree,
       t.aqpb056fce,
       to_char(sysdate, 'DD/MM/YYYY'), --aqpb056hfcr
       to_char(sysdate, 'HH24:MI:SS') --aqpb056hhcr
        from aqpb056 t
       where t.aqpb056fem = ln_fecha
         and (t.aqpb056pgc, t.aqpb056mod, t.aqpb056suc, t.aqpb056trx,
              t.aqpb056rel, t.aqpb056fco) not in
             (select x.aqpb056hpgc,
                     x.aqpb056hmod,
                     x.aqpb056hsuc,
                     x.aqpb056htrx,
                     x.aqpb056hrel,
                     x.aqpb056hfcon
                from aqpb056h x
               where x.aqpb056hfemi = ln_fecha);
    commit;
  
    delete from aqpb056 t where t.aqpb056fem = ln_fecha;
    commit;
  
  end sp_cr_guardar_historico;
  -- -- -- --  -- -- -- --  -- -- -- --  -- -- -- --  -- -- -- --  -- -- -- --  -- -- -- --  -- -- -- --  
  -- CONTINGENCIAS: PROCEDIMIENTO PARA REPROCESAR AQPA463 Y AQPA460
  procedure sp_tra_validas_HIS_2(pd_pgfape in date, pc_sucurs in number) is
  
    pn_pgcod number;
    lc_serie char(4);
    lc_corre char(8);
  
    ln_relant  number(4) := 0;
    lc_hipo    char(2);
    ln_emp     number(3);
    ln_mod     number(3);
    ln_suc     number(3);
    ln_mda     number(4);
    ln_pap     number(4);
    ln_cta     number(9);
    ln_ope     number(9);
    ln_sbo     number(3);
    ln_top     number(3);
    lc_flg     char(1) := 'N'; --controla que sea hipotecario
    lc_flgc    char(1);
    pn_ordinal number(2);
    lc_flg465  char(1) := 'N'; --controla que no exista registro AQPA465
  
    ln_modulo number(3) := 0;
    ln_tran   number(3) := 0;
    ln_sucur  number(3) := 0;
  
    ln_rubro number;
  
    pn_pais   number(3);
    pn_petdoc number(2);
    pn_pendoc char(12);
    lc_tipper char(1);
  
    lc_coderr char(100);
    lc_msgerr char(1000);
  
    pd_fecpro DATE := pd_pgfape;
    --pd_fecpro date;--mod@abr20181207
  
    ln_flag   number;
    ln_tipfin char(1);
    lc_flr    char(1);
    lc_fcont  number;
    lc_ftran  number;
  
    cursor transacciones is
    
      select a.jaqz675cod  pgcod,
             a.jaqz675mod  hcmod,
             a.jaqz675suc  hsucor,
             a.jaqz675trn  htran,
             a.jaqz675nre  hnrel,
             a.jaqz675fco  hfcon,
             a.jaqz675tru  txtrub,
             a.jaqz675cor  hcord,
             a.jaqz675toe  txoren,
             a.jaqz675tor  txtord,
             b.st171hcpcod st171hcpcod,
             b.se170hvnro  se170hvnro,
             b.se170hvchr  se170hvchr
        from jaqz675 a, fse170h b
       where a.jaqz675cod = b.sd170hdoemp
         and a.jaqz675tru = b.sd170hdoid
         and a.jaqz675cpc = b.st171hcpcod
         and a.jaqz675fco = b.sd170hfecha
         and a.jaqz675fco = pd_fecpro
            
            -----
            
            --and a.jaqz675cod = 1
            --and a.jaqz675mod = 30
         and a.jaqz675suc = pc_sucurs
            --and a.jaqz675trn = 100
            --and a.jaqz675nre in (6)
            
            ---
            
         and (a.jaqz675mod, a.jaqz675trn) not in ----EXCLUYE A LOS GRAVADOS
             (select k.tp1nro1, k.tp1nro2
                from fst198 k
               where k.tp1cod1 = 11120
                 and k.tp1corr1 = 3
                 and k.tp1corr2 = 1
                 and tp1corr3 > 0)
      
       order by a.jaqz675cod,
                a.jaqz675mod,
                a.jaqz675suc,
                a.jaqz675trn,
                a.jaqz675nre,
                a.jaqz675fco;
  
  begin
    begin
    
      --mod@abr20181207
      update tab_jobs g
         set g.d_fecini = sysdate
       where g.n_numer1 = 1 --pn_numsuc
         and g.c_codage = 'FEI';
      commit;
      --pd_fecpro := to_date(ld_fecpro,'yyyymmdd');
      --mod@abr20181207
    
      --25012019 dcastro
      begin
        select c.tp1nro1
          into ln_flag
          from fst198 c
         where c.tp1cod = 1
           and c.tp1cod1 = 11120
           and c.tp1corr1 = 7
           and c.tp1corr2 = 1;
      end;
      --25012019      
    
      for p in transacciones loop
      
        --Verifica que no exista en cabecera AQPA465 
        Begin
          select 'S'
            into lc_flg465
            from aqpa465 a
           where a.aqpa465pgcod = p.pgcod
             and a.aqpa465mod = p.hcmod
             and a.aqpa465sucor = p.hsucor
             and a.aqpa465tran = p.htran
             and a.aqpa465rel = p.hnrel
             and a.aqpa465con = p.hfcon
             and rownum = 1;
        exception
          when others then
            lc_flg465 := 'N';
        end;
      
        if lc_flg465 = 'N' then
        
          --validar concepto 
          --11120 1 3 Codigos de conc no considerar 
          /*
          begin
            select 'S'
              into lc_flgc
              from fst198 a
             where a.tp1cod = 1
               and a.tp1cod1 = 11120
               and a.tp1corr1 = 1
               and a.tp1corr2 = 3
               and a.tp1corr3 >= 1
               and a.tp1nro1 = p.txoren - 100;
          exception
            when others then
              lc_flgc := 'N';
          end;
          */
        
          --if lc_flgc = 'N' then
        
          --obtener cuenta moneda hora fecha
          Begin
          
            select a.sr171trord
              into pn_ordinal
              from fsr171 a
             where a.st171cpcod = 15
               and a.sr171tremp = p.pgcod --1
               and a.sr171trmod = p.hcmod --30
               and a.sr171trnro = p.htran; --100;   
          exception
            when others then
              null;
          end;
        
          /*20180625  
          begin
            select a.pgcod,
                   a.modulo,
                   a.itsucd,
                   a.moneda,
                   a.papel,
                   a.ctnro,
                   a.itoper,
                   a.itsubo,
                   a.ittope,
                   substr(a.rubro,5,2)
              into ln_emp,
                   ln_mod,
                   ln_suc,
                   ln_mda,
                   ln_pap,
                   ln_cta,
                   ln_ope,
                   ln_sbo,
                   ln_top,
                   lc_hipo
              from fsd016 a
             where a.pgcod  = p.pgcod
               and a.itmod  = p.hcmod
               and a.itsuc  = p.hsucor
               and a.ittran = p.htran
               and a.itnrel = p.hnrel
               and a.itord  = pn_ordinal;
          exception
               when others then null;
          end;
          if lc_hipo = '04' then
               lc_flg := 'S';
               else
                      lc_flg := 'N';
          end if;
          */
        
          begin
            pq_cr_factura_electronica.sp_cr_pk_credito(pc_aqpa465pgcod    => p.pgcod,
                                                       pc_aqpa465mod      => p.hcmod,
                                                       pc_aqpa465sucorend => p.hsucor,
                                                       pc_aqpa465tran     => p.htran,
                                                       pc_aqpa465rel      => p.hnrel,
                                                       pc_aqpa465ord      => pn_ordinal,
                                                       pd_aqpa465con      => p.hfcon,
                                                       pn_cod             => ln_emp,
                                                       pn_mod             => ln_mod,
                                                       pn_suc             => ln_suc,
                                                       pn_mda             => ln_mda,
                                                       pn_pap             => ln_pap,
                                                       pn_cta             => ln_cta,
                                                       pn_ope             => ln_ope,
                                                       pn_sbo             => ln_sbo,
                                                       pn_top             => ln_top,
                                                       pc_flag            => lc_flg,
                                                       pn_rubro           => ln_rubro);
          end;
        
          if lc_flg = 'S' then
          
            ---ln_flag: Comision 
            -- 3: consumo revolvente y no revolvente
          
            ---ln_flag: Comision 
            -- 4: hipotecario
            -- 3: consumo
          
            begin
              select 'S'
                into lc_flr
                from fst198 t
               where t.tp1cod = 1
                 and t.tp1cod1 = 11120
                 and t.tp1corr1 = 1
                 and t.tp1corr2 = 23
                 and t.tp1nro1 <> 0
                 and t.tp1nro1 = ln_rubro;
              --and t.tp1imp1 = 1;
            exception
              when others then
                lc_flr := 'N';
            end;
          
            --if (ln_flag = 0 and ln_rubro in (3,4)) or ln_flag = 1 then
            if (ln_flag = 0 and lc_flr = 'S') or ln_flag = 1 then
              --25012019
            
              -- Se verifica si el rubro se encuentra activo para F. E.
              begin
                select t.tp1imp1
                  into lc_fcont
                  from fst198 t
                 where t.tp1cod = 1
                   and t.tp1cod1 = 11120
                   and t.tp1corr1 = 1
                   and t.tp1corr2 = 23
                   and t.tp1nro1 <> 0
                   and t.tp1nro1 = ln_rubro
                   and t.tp1imp1 = 1;
              exception
                when others then
                  null;
              end;
              --
            
              pn_pgcod := p.pgcod;
              /*
              if ln_relant <> p.hnrel or p.hcmod <> ln_modulo or p.htran <> ln_tran or  p.hsucor <> ln_sucur  then   
                     begin
                       pq_cr_facturacion.sp_cr_fac_hipotecario(ln_rubro => 4,
                                                               lc_descripcion => 'SEQ_HIPOTECARIO_COR',
                                                               lc_serie => lc_serie,
                                                               lc_correlativo => lc_corre);
                       
                     end;
              
              end if;
                      
              
              ln_relant := p.hnrel;
              ln_modulo := p.hcmod;
              ln_tran :=   p.htran;
              ln_sucur :=  p.hsucor;*/
            
              if ln_relant <> p.hnrel or p.hcmod <> ln_modulo or
                 p.htran <> ln_tran or p.hsucor <> ln_sucur then
              
                lc_serie := null;
                lc_corre := null;
                /*
                  begin
                    pq_cr_facturacion.sp_cr_fac_hipotecario(ln_rubro => 4,
                                                            lc_descripcion => 'SEQ_HIPOTECARIO_COR',
                                                            lc_serie => lc_serie,
                                                            lc_correlativo => lc_corre);
                    
                  end;
                */
              
                begin
                  ---se obtiene NDI/ TIPO de doc                  
                  select a.pepais, a.petdoc, a.pendoc
                    into pn_pais, pn_petdoc, pn_pendoc
                    from fsr008 a
                   where a.ctnro = ln_cta ---
                     and a.cttfir = 'T';
                exception
                  when others then
                    null;
                end;
              
                -- Se verifica activación para F. E.
                if lc_fcont = 1 then
                
                  ---Verificar si el documento fue emitido con serie y número
                  ---si IdDocumento = 13
                  begin
                    select 'S'
                      into ln_tipfin
                      from aqpb056 a
                     where a.aqpb056pgc = p.pgcod
                       and a.aqpb056mod = p.hcmod
                       and a.aqpb056suc = p.hsucor
                       and a.aqpb056trx = p.htran
                       and a.aqpb056rel = p.hnrel
                       and a.aqpb056fco = p.hfcon
                       and a.aqpb056tco = '13';
                  
                  exception
                    when others then
                    
                      begin
                      
                        select 'S'
                          into ln_tipfin
                          from aqpb056h a
                         where a.aqpb056hpgc = p.pgcod
                           and a.aqpb056hmod = p.hcmod
                           and a.aqpb056hsuc = p.hsucor
                           and a.aqpb056htrx = p.htran
                           and a.aqpb056hrel = p.hnrel
                           and a.aqpb056hfcon = p.hfcon
                           and a.aqpb056htcomf = '13';
                      
                      exception
                        when others then
                          ln_tipfin := 'N';
                      end;
                    
                    --
                  end;
                
                  -- Verificar que el módulo/transacción estén habilitados
                
                  select count(*)
                    into lc_ftran
                    from fst198 t
                   where t.tp1cod = 1
                     and t.tp1cod1 = 11120
                     and t.tp1corr1 = 10
                     and t.tp1corr2 = 1
                     and t.tp1corr3 <> 0
                     and t.tp1imp1 = 1
                     and t.tp1nro1 = p.hcmod
                     and t.tp1nro2 = p.htran;
                
                  if ln_tipfin = 'S' and lc_ftran > 0 then
                    ---Si ha sido registrado en tipfin
                    ----->>> 
                    begin
                      --select to_char(a.aqpb056seri), a.aqpb056num
                      select to_char(a.aqpb056ser), a.aqpb056num
                        into lc_serie, lc_corre
                        from aqpb056 a
                       where a.aqpb056pgc = p.pgcod
                         and a.aqpb056mod = p.hcmod
                         and a.aqpb056suc = p.hsucor
                         and a.aqpb056trx = p.htran
                         and a.aqpb056rel = p.hnrel
                         and a.aqpb056fco = p.hfcon
                         and a.aqpb056tco = '13';
                    
                    exception
                      when others then
                      
                        begin
                        
                          select to_char(a.aqpb056hseri), a.aqpb056hnum
                            into lc_serie, lc_corre
                            from aqpb056h a
                           where a.aqpb056hpgc = p.pgcod
                             and a.aqpb056hmod = p.hcmod
                             and a.aqpb056hsuc = p.hsucor
                             and a.aqpb056htrx = p.htran
                             and a.aqpb056hrel = p.hnrel
                             and a.aqpb056hfcon = p.hfcon
                             and a.aqpb056htcomf = '13';
                        
                        exception
                          when others then
                            lc_coderr := sqlcode;
                            lc_msgerr := trim(sqlerrm);
                          
                            insert into aqpa460E
                              (aqpa460eserie,
                               aqpa460ecorr,
                               aqpa460epgcod,
                               aqpa460emod,
                               aqpa460esucorend,
                               aqpa460etran,
                               aqpa460erel,
                               aqpa460econ,
                               aqpa460etip,
                               Aqpa460eacoe,
                               Aqpa460eamsge)
                            values
                              (null,
                               null,
                               p.pgcod,
                               p.hcmod,
                               p.hsucor,
                               p.htran,
                               p.hnrel,
                               p.hfcon,
                               'S',
                               lc_coderr,
                               lc_msgerr);
                            commit;
                          
                        end;
                      
                    end;
                  
                  end if;
                
                end if;
              
                ----
              end if;
            
              ln_relant := p.hnrel;
              ln_modulo := p.hcmod;
              ln_tran   := p.htran;
              ln_sucur  := p.hsucor;
            
              --if Flag='N' then se comento
              --mod@abr 20181206
              if lc_serie is null then
              
                insert into aqpa460E
                  (aqpa460eserie,
                   aqpa460ecorr,
                   aqpa460epgcod,
                   aqpa460emod,
                   aqpa460esucorend,
                   aqpa460etran,
                   aqpa460erel,
                   aqpa460econ,
                   aqpa460etip,
                   Aqpa460eacoe,
                   Aqpa460eamsge)
                values
                  (null,
                   null,
                   p.pgcod,
                   p.hcmod,
                   p.hsucor,
                   p.htran,
                   p.hnrel,
                   p.hfcon,
                   'M',
                   lc_coderr,
                   lc_msgerr);
                commit;
              else
                begin
                  insert into aqpa463
                    (aqpa463txtrub,
                     aqpa463pgcod,
                     aqpa463hcmod,
                     aqpa463hsucor,
                     aqpa463htran,
                     aqpa463hnrel,
                     aqpa463hfcon,
                     aqpa463hcord,
                     aqpa463txoren,
                     aqpa463txtord,
                     aqpa463hcpcod,
                     aqpa463hvnro,
                     aqpa463hvchr,
                     aqpa463serie,
                     aqpa463corre,
                     aqpa463emp,
                     aqpa463mod,
                     aqpa463suc,
                     aqpa463mda,
                     aqpa463pap,
                     aqpa463cta,
                     aqpa463ope,
                     aqpa463sbo,
                     aqpa463top,
                     aqpa463hip,
                     aqpa463tcre -- guardar tipo de crédito
                     
                     )
                  values
                    (p.txtrub,
                     p.pgcod,
                     p.hcmod,
                     p.hsucor,
                     p.htran,
                     p.hnrel,
                     p.hfcon,
                     p.hcord,
                     p.txoren,
                     p.txtord,
                     p.hcord,
                     p.se170hvnro,
                     p.se170hvchr,
                     lc_serie,
                     lc_corre,
                     ln_emp,
                     ln_mod,
                     ln_suc,
                     ln_mda,
                     ln_pap,
                     ln_cta,
                     ln_ope,
                     ln_sbo,
                     ln_top,
                     lc_hipo,
                     ln_rubro);
                  commit;
                exception
                  when others then
                    lc_coderr := sqlerrm;
                    /*INSERT INTO LOG_ERROR_BANDEJA
                      (N_NRO, C_CODBDJ, C_DESERR, D_FECERR)
                    VALUES
                      (0,
                       'FEI',
                       1 \*n_numsuc*\
                       || lc_coderr,
                       TRUNC(SYSDATE));
                    COMMIT;*/
                end;
              end if;
            end if; --25012019 dcastro
          
          end if;
        
          --end if;
        
        end if;
        commit;
      end loop;
      Commit;
    
      --mod@abr 20181207
      begin
        ---agregado paso 2
        -- Call the procedure
        pq_cr_factura_electronica.sp_cr_Detalle_Factura_3(pd_pgfape,
                                                          pc_sucurs);
      end;
      --mod@abr 20181207
    
    end;
  
    update tab_jobs g
       set g.d_fecfin = sysdate
     where g.n_numer1 = 1 -- pn_numsuc
       and g.c_codage = 'FEI';
    commit;
  EXCEPTION
    when others then
      lc_coderr := substr(sqlerrm, 1, 200);
      update tab_jobs g
         set g.c_inderr = 'S', g.c_deserr = lc_coderr
       where g.n_numer1 = 1 --pn_numsuc
         and g.c_codage = 'FEI';
      commit;
      return;
    
  end sp_tra_validas_HIS_2;
  -- -- -- --  -- -- -- --  -- -- -- --  -- -- -- --  -- -- -- --  -- -- -- --  -- -- -- --  -- -- -- --  
  procedure sp_cr_Detalle_Factura_3(pd_pgfape in date, pc_sucurs in number) is
  
    pc_fecha    varchar2(80);
    lv_codtdocC varchar2(1); --05/04/2023 dcastro 
  
    cursor aqpa463 is
    
      select *
        from aqpa463 b
       where b.aqpa463hfcon = pd_pgfape --mod@abr 20180707 
            
            --and b.aqpa463pgcod = 1
            --and b.aqpa463hcmod = 30
         and b.aqpa463hsucor = pc_sucurs
            --and b.aqpa463htran = 100
            --and b.aqpa463hnrel = 6
            --and b.aqpa463hfcon='03/09/2020'
            
         and (b.aqpa463hcmod, b.aqpa463htran) not in ----EXCLUYE A LOS GRAVADOS
             (select k.tp1nro1, k.tp1nro2
                from fst198 k
               where k.tp1cod1 = 11120
                 and k.tp1corr1 = 3
                 and k.tp1corr2 = 1
                 and tp1corr3 > 0)
      
      -- and b.aqpa463serie='BF01' --comentar despues
      -- and b.aqpa463corre =38679 
      /* or (b.aqpa463serie='FH01' --comentar despues
      and b.aqpa463corre in ( 10253) )
      */
       order by b.aqpa463hnrel asc, b.aqpa463txoren asc;
  
    lc_coderr char(100);
    lc_msgerr char(1000);
  
    ln_cta           number(9);
    lc_hor           char(8);
    ld_fec           date;
    lc_flg           char(1) := 'N';
    pn_pais          number;
    pn_monto_total_1 number(12, 2) := 0;
    result           character(100);
    pd_pgfape2       date;
    ln_mda           number(4);
    ln_nroitem       number(12) := 0;
    ln_cant          number(12, 10);
    lc_codpla        char(3);
    ln_docemp        number(2);
    pv_tdoc          char(25);
    lc_sistemi       char(6);
  
    lv_destiptrb varchar2(6);
    ln_MONTO     number;
  
    lc_contrato varchar2(50);
    lv_tipemp   varchar2(1);
    lv_ruc      varchar2(11);
    lv_rzn      varchar2(1500);
    lv_ubg      varchar2(6);
    lv_NCOM     varchar2(1500);
    lv_CALLE    varchar2(200);
    --lv_URBA        varchar2(25);
    lv_DEPA  varchar2(100);
    lv_PROV  varchar2(30);
    lv_DIST  varchar2(30);
    lv_TELF  varchar2(20);
    lv_WEB   varchar2(100);
    lv_CPAIS varchar2(2);
    --lv_CESUN       varchar2(4);
    lv_codtipo      varchar2(2);
    lv_tipomda      varchar2(3);
    lv_correo       varchar2(100);
    lv_glosa        varchar2(30);
    lv_COMA         varchar2(20);
    lv_TPLA         varchar2(3);
    lv_tipoope      varchar2(4);
    lv_TPLCO        varchar2(3);
    lv_CLOG         varchar2(3);
    lv_codtdoc      varchar2(1);
    lc_pendoc       char(12);
    lv_pendoc       varchar2(15);
    lv_penom        varchar2(1500);
    lv_hora         varchar2(8);
    ln_SIMC         number(12, 2) := 0;
    ln_SVITM        number(12, 2) := 0;
    ln_SPVI         number(12, 2) := 0;
    lv_TXML         varchar2(3);
    lv_ubgCli       varchar2(6);
    lv_sngc13dir    varchar2(500);
    lv_urb          varchar2(100);
    lv_fst071dsc1   varchar2(500);
    lv_locnom1      varchar2(500);
    lv_depnom1      varchar2(500);
    lv_cpai         varchar2(2);
    lv_PNETU        varchar2(3); ------------
    lc_oneroso      varchar2(1);
    ln_mtoconce     number; --(12,10):= 0;
    ln_mtoconce_ant number; --(12,10):= 0;
    ln_VVUIG        number; --(12):= 0;
    lv_desconce     varchar2(500);
    lv_infpredio    varchar2(500);
    ln_PRVIT        number(15, 2) := 0;
    lv_MEDEM        varchar2(50);
    lv_CSUNA        varchar2(8);
    lv_CPGS1        varchar2(14);
    ln_ITITM        number(12, 2) := 0; ---2018.10.19
    ln_IMPTB        number(12, 2) := 0;
    ln_IMPEX        number(12, 2) := 0;
    lv_afecigv      varchar2(2);
    lv_SISC         varchar2(2);
    lv_idtrbsunat   varchar2(4);
    lv_nomtrbsunat  varchar2(6);
    lv_codun        varchar2(3);
    ln_MBIM         number(12, 2) := 0;
    ln_TAIMP        number(12, 2) := 0; --2018.10.19
    ln_CDLEY        number(4) := 0;
    lv_TELEY        varchar2(200);
    lv_TEXT1        varchar2(1000);
    lv_TEXT2        varchar2(1000);
    lv_TRECV        varchar2(1000);
    lv_TEMPL        varchar2(3);
    lv_SUBJE        varchar2(100);
    lv_VPCVA        varchar2(15);
    lv_NEXP         varchar2(10);
    lv_CIND         varchar2(1);
    lv_partida      varchar2(50);
    lv_NCONT        varchar2(50);
    lv_fecoto       varchar2(10);
    ld_fecoto       date;
    lv_cdisn        varchar2(6);
    lv_direccionH   varchar2(100);
    lv_urbaH        varchar2(50);
    lv_dptoH        varchar2(50);
    lv_provH        varchar2(50);
    lv_distH        varchar2(500);
    ln_MTOTAL       number(12, 2) := 0;
    ln_BAIMP        number(12, 2) := 0;
    ln_MTIMP        number(12, 2) := 0;
    ln_PCIMA        number(12, 2) := 0;
    ln_BSIMP        number(12, 2) := 0;
    ln_VAIMP        number(12, 2) := 0;
    ln_MTINF        number(12, 2) := 0;
    ln_MTGRT        number(12, 2) := 0;
    ln_BSIMPS       number(12, 2) := 0;
    ln_MTOTI        number(12, 2) := 0;
    ln_petdoc       number(2);
    lv_CTPR         varchar(2);
    lv_rzn1         varchar2(30);
    lv_rzn2         varchar2(30);
    lc_codsunat     varchar2(4);
  
    lc_nomcaja char(70);
    lc_nom1    char(30);
    lc_nom2    char(30);
  
    ln_item number(12);
  
    ln_mtoDifer number(17, 2);
    ln_mtoRedon number(17, 2);
  
    ld_fecSis date; --mod@abr 20180709
  
    lc_existe char(1) := 'N'; --mod@abr 20180824
  
    lv_sngc13dirFin varchar2(500); --mod@abr 20180905
  
    ln_guiaCP      number; --2018.10.10
    ln_mtoImpuesto number; --2018.10.15
    lv_desmda      varchar2(30); --2018.10.18
  
    /*
    pc_AQPA465SERIE  aqpa460.aqpa460seri%type;
    pc_AQPA465CORR  aqpa460.aqpa460num%type;
    pc_AQPA465PGCOD aqpa460.
    pc_AQPA465MOD   ,
    pc_AQPA465SUCOREND
    pc_AQPA465TRAN    
    pc_AQPA465REL    ,
    pc_AQPA465CON,
    */
  
    lc_flr    char(1);
    lc_fcont  number;
    ln_tipfin char(1);
    lc_ftran  number;
  
  begin
    begin
    
      for p in aqpa463 loop
      
        --mod@abr 20180824
        --Verificar si existe en aqpa460
        lc_existe := 'N';
        Begin
          select 'S'
            into lc_existe
            from aqpa460 a
           where a.aqpa460seri = p.aqpa463serie
             and a.aqpa460num = p.aqpa463corre
             and a.aqpa460ore = P.AQPA463TXOREN
             and rownum = 1;
        exception
          when others then
            lc_existe := 'N';
        end;
        --mod@abr 20180824
        if lc_existe = 'N' then
          /*
           Pq_Cr_Factura_Electronica.sp_cr_cobroEfectivo(p.aqpa463pgcod,
                                                         p.aqpa463hcmod,
                                                         p.aqpa463hsucor,
                                                         p.aqpa463htran,
                                                         p.aqpa463hnrel,
                                                         p.aqpa463hfcon,
                                                         p.aqpa463serie,
                                                         p.aqpa463corre,
                                                         pn_monto_total_1);
          */
          begin
            -- Call the function
            pn_monto_total_1 := pq_cr_factura_electronica.fn_sumatoria_total(pn_pgc   => p.aqpa463pgcod,
                                                                             pn_mod   => p.aqpa463hcmod,
                                                                             pn_suc   => p.aqpa463hsucor,
                                                                             pn_trx   => p.aqpa463htran,
                                                                             pn_rel   => p.aqpa463hnrel,
                                                                             pn_fecha => p.aqpa463hfcon);
          end;
        
          --validar concepto 
          --11120 1 3 Codigos de conc no considerar 
          begin
            select 'S'
              into lc_flg
              from fst198 a
             where a.tp1cod = 1
               and a.tp1cod1 = 11120
               and a.tp1corr1 = 1
               and a.tp1corr2 = 3
               and a.tp1corr3 >= 1
               and a.tp1nro1 = p.aqpa463txoren - 100;
          exception
            when others then
              lc_flg := 'N';
          end;
        
          --obtener cuenta moneda hora fecha
          ln_cta := p.aqpa463cta;
          ln_mda := p.aqpa463mda;
        
          begin
            select a.ithora, a.itfcon
              into lc_hor, ld_fec
              from fsd015 a ----cabecera asiento
             where a.pgcod = p.aqpa463pgcod
               and a.itmod = p.aqpa463hcmod
               and a.itsuc = p.aqpa463hsucor
               and a.ittran = p.aqpa463htran
               and a.itnrel = p.aqpa463hnrel;
          exception
            when others then
              null;
          end;
        
          begin
          
            result := pq_cr_factura_electronica.dintex(pn_monto_total_1);
          end;
        
          ----------Obtener codigo de sunat
          begin
            select lpad(a.tp1nro2, 4, '0')
              into lc_codsunat
              from fst198 a
             where a.tp1cod = 1
               and a.tp1cod1 = 11120
               and a.tp1corr1 = 1
               and a.tp1corr2 = 500
               and a.tp1nro1 = p.aqpa463hsucor;
          exception
            when others then
              null;
          end;
        
          ----Obtener DNI
          begin
            -- Call the procedure
            pq_cr_factura_electronica.sp_fecha_sys(pc_fecha); --dni
          end;
        
          --mod@abr 20181219
          pq_cr_factura_electronica.sp_cr_Dif_Red(pc_AQPA465PGCOD    => p.aqpa463pgcod,
                                                  pc_AQPA465MOD      => p.aqpa463hcmod,
                                                  pc_AQPA465SUCOREND => p.aqpa463hsucor,
                                                  pc_AQPA465TRAN     => p.aqpa463htran,
                                                  pc_AQPA465REL      => p.aqpa463hnrel,
                                                  pd_AQPA465CON      => p.aqpa463hfcon,
                                                  pn_dif             => ln_mtoDifer,
                                                  pn_red             => ln_mtoRedon);
          --pn_monto_total_1 := pn_monto_total_1 - nvl(ln_mtoRedon, 0);
          --mod@abr 20181219
        
          if lc_flg = 'N' then
            --1:- SN
            --inserte conceptos de deuda como fila
          
            ln_mtoconce_ant := to_number(trim(p.aqpa463txtord),
                                         '99999999999999999.99'); --20180622
          
            if p.aqpa463txoren - 100 = 18 then
              ln_mtoconce := to_number(ln_mtoconce_ant) -
                             nvl(ln_mtoDifer, 0);
            else
              ln_mtoconce := to_number(ln_mtoconce_ant); ---verficar 222 
            end if;
          
            if ln_mtoconce <> 0 then
            
              --datos persona
              begin
              
                pq_cr_factura_electronica.sp_num_documento(ln_cta,
                                                           lc_pendoc,
                                                           lv_penom,
                                                           pv_tdoc,
                                                           pn_pais,
                                                           ln_petdoc,
                                                           pd_pgfape2);
              end;
            
              --datos direccion cliente
              begin
                -- Call the procedure
                pq_cr_factura_electronica.sp_dir_cliente(lc_pendoc,
                                                         ln_petdoc,
                                                         pn_pais,
                                                         lv_sngc13dir,
                                                         lv_fst071dsc1,
                                                         lv_locnom1,
                                                         lv_depnom1,
                                                         lv_ubgCli); ---dni  pn_pendoc
              end;
            
              --Codigo del Tipo de Comprobante
              --!!1 REVISAR AQUI: TIPO DE DOCUMENTO
              --2018.10.10
              /*if substr(p.aqpa463serie, 1, 1) = 'F' then
                ln_guiaCP := 1;    ----01: Factura
                --ln_guiaCP := 5;      ----13: Documento Financiero
              elsif substr(p.aqpa463serie, 1, 1) = 'B' then
                ln_guiaCP := 3;    ----03: Boleta
                --ln_guiaCP := 5;      ----13: Documento Financiero
              else
                ln_guiaCP := null;
              end if;*/
              --2018.10.10 
            
              -- >>> Inicio control
              ---ln_flag: Comision 
              -- 4: hipotecario
              -- 3: consumo
            
              begin
                select 'S'
                  into lc_flr
                  from fst198 t
                 where t.tp1cod = 1
                   and t.tp1cod1 = 11120
                   and t.tp1corr1 = 1
                   and t.tp1corr2 = 23
                   and t.tp1nro1 <> 0
                   and t.tp1nro1 = p.aqpa463tcre;
                --and t.tp1imp1 = 1;
              exception
                when others then
                  lc_flr := 'N';
              end;
            
              if lc_flr = 'S' then
              
                -- Se verifica si el rubro se encuentra activo para F. E.
                begin
                  select t.tp1imp1
                    into lc_fcont
                    from fst198 t
                   where t.tp1cod = 1
                     and t.tp1cod1 = 11120
                     and t.tp1corr1 = 1
                     and t.tp1corr2 = 23
                     and t.tp1nro1 <> 0
                     and t.tp1nro1 = p.aqpa463tcre
                     and t.tp1imp1 = 1;
                exception
                  when others then
                    null;
                end;
              
                if lc_fcont = 1 then
                  /*
                  if substr(p.aqpa463serie, 1, 1) in ('F','B') then
                    ln_guiaCP := 5;      ----13: Documento Financiero
                  else
                    ln_guiaCP := null;
                  end if;
                  */
                
                  ---Verificar si el documento fue emitido con serie y número
                  ---si IdDocumento = 13
                  begin
                    select 'S'
                      into ln_tipfin
                      from aqpb056 a
                     where a.aqpb056pgc = p.aqpa463pgcod
                       and a.aqpb056mod = p.aqpa463hcmod
                       and a.aqpb056suc = p.aqpa463hsucor
                       and a.aqpb056trx = p.aqpa463htran
                       and a.aqpb056rel = p.aqpa463hnrel
                       and a.aqpb056fco = p.aqpa463hfcon
                       and a.aqpb056tco = '13';
                  
                  exception
                    when others then
                    
                      begin
                      
                        select 'S'
                          into ln_tipfin
                          from aqpb056h a
                         where a.aqpb056hpgc = p.aqpa463pgcod
                           and a.aqpb056hmod = p.aqpa463hcmod
                           and a.aqpb056hsuc = p.aqpa463hsucor
                           and a.aqpb056htrx = p.aqpa463htran
                           and a.aqpb056hrel = p.aqpa463hnrel
                           and a.aqpb056hfcon = p.aqpa463hfcon
                           and a.aqpb056htcomf = '13';
                      
                      exception
                        when others then
                        
                          ln_tipfin := 'N';
                      end;
                    
                  end;
                
                  -- Verificar que el módulo/transacción estén habilitados
                  select count(*)
                    into lc_ftran
                    from fst198 t
                   where t.tp1cod = 1
                     and t.tp1cod1 = 11120
                     and t.tp1corr1 = 10
                     and t.tp1corr2 = 1
                     and t.tp1corr3 <> 0
                     and t.tp1imp1 = 1
                     and t.tp1nro1 = p.aqpa463hcmod
                     and t.tp1nro2 = p.aqpa463htran;
                
                  if ln_tipfin = 'S' and lc_ftran > 0 then
                  
                    if substr(p.aqpa463serie, 1, 1) in ('F', 'B') then
                      ln_guiaCP := 5; ----13: Documento Financiero
                    else
                      ln_guiaCP := null;
                    end if;
                  
                  end if;
                
                end if;
              
              end if;
            
              -- >>>>>>>>>
              /*
              if substr(p.aqpa463serie, 1, 1) in ('F','B') then
                ln_guiaCP := 5;      ----13: Documento Financiero
              else
                ln_guiaCP := null;
              end if;   
              */
              -- >>>>>>>>>
            
              begin
                --select '0' || to_char(a.tp1nro1)
                select lpad(trim(a.tp1nro1), 2, '0')
                  into lv_codtipo
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 7
                   and a.tp1corr3 = ln_guiaCP; --2018.10.10 se modifico codigo de guia para tipo comprobante
              exception
                when others then
                  null;
              end;
              -- >>>>>>>>>
            
              --Codigo tipo moneda
              begin
                select trim(a.tp1desc)
                  into lv_tipomda
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 8
                   and a.tp1corr3 >= 1
                   and a.tp1nro1 = ln_mda;
              exception
                when others then
                  null;
              end;
            
              --texto moneda  2018.10.18
              begin
                select trim(a.tp1desc)
                  into lv_desmda
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 2
                   and a.tp1corr2 = 5
                   and a.tp1corr3 >= 1
                   and a.tp1nro1 = ln_mda;
              exception
                when others then
                  null;
              end;
              ---  2018.10.18
            
              /*             --Codigo tipo documento cliente
                           begin
                             select to_char(a.tp1nro1)
                               into lv_codtdoc
                               from fst198 a
                              where a.tp1cod = 1
                                and a.tp1cod1 = 11120
                                and a.tp1corr1 = 1
                                and a.tp1corr2 = 4
                                and a.tp1nro2 = ln_petdoc;
                           exception
                             when others then
                               null;
                           end;
              */
            
              --Codigo tipo documento cliente
              begin
                select to_char(a.tp1nro1), substr(trim(TP1DESC), -1, 1)
                  into lv_codtdoc, lv_codtdocC
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 4
                   and a.tp1nro2 = ln_petdoc;
              exception
                when others then
                  null;
              end;
            
              --05/04/2023 dcastro se agrego nuevo tipo documento PTP
              if lv_codtdoc = 3 then
                lv_codtdoc := lv_codtdocC;
              end if;
              --05/04/2023 dcastro se agrego nuevo tipo documento PTP
            
              --Correo del cliente
              lv_correo := null;
              begin
                select substr(a.pextxt, 1, INSTR(a.pextxt, '\', 1) - 1)
                  into lv_correo
                  from fsx001 a
                 where a.pepais = pn_pais
                   and a.petdoc = ln_petdoc
                   and a.pendoc = lc_pendoc
                   and a.txcod = 0
                   and rownum = 1 --- 2021/11/11 dcastro se agrego condicion
                 order by a.pexren desc;
              exception
                when others then
                  null;
              end;
            
              --nro item
              ln_item := 0;
              begin
                select max(a.aqpa460item)
                  into ln_item
                  from aqpa460 a
                 where a.aqpa460seri = p.aqpa463serie
                   and a.aqpa460num = p.aqpa463corre;
              exception
                when too_many_rows then
                  begin
                    select max(a.aqpa460item)
                      into ln_item
                      from aqpa460 a
                     where a.aqpa460seri = p.aqpa463serie
                       and a.aqpa460num = p.aqpa463corre
                       and rownum = 1;
                  exception
                    when others then
                      null;
                  end;
                when no_data_found then
                  ln_item := 0;
                when others then
                  null;
              end;
              ln_nroitem := nvl(ln_item, 0) + 1;
            
              --monto conceptos
              --  ln_mtoconce := to_number(replace(trim(p.aqpa463txtord),'.',','));
            
              --       ln_mtoconce_ant:= round(trim(p.aqpa463txtord),2);
            
              --descripcion conceptos
              lv_desconce := trim(p.aqpa463hvchr);
            
              --Codigo de plantilla
              lc_codpla := 'EST';
            
              --- Sistema de Emicion 
              lc_sistemi := 'BANTOT';
            
              --Codigo tipo doc empresa
              begin
                select a.tp1nro1
                  into ln_docemp
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 4;
              exception
                when others then
                  null;
              end;
            
              begin
                select to_char(a.tp1nro1)
                  into lv_tipemp
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 4
                   and a.tp1corr3 >= 1
                   and a.tp1nro2 = ln_docemp;
              
              exception
                when others then
                  null;
              end;
              --ruc caja
              begin
                select trim(a.tp1desc)
                  into lv_ruc
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 1;
              exception
                when others then
                  null;
              end;
            
              --NOMBRE COMERCIAL caja
              begin
                select a.tp1desc
                  into lv_NCOM
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 5;
              exception
                when others then
                  null;
              end;
            
              --Ubigeo caja
              begin
                select trim(a.tp1desc)
                  into lv_ubg
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 6;
              exception
                when others then
                  null;
              end;
              ---------------------------------------campos parte 2
              ----------hora de transacion 
              begin
                select trim(a.aqpa463txtord)
                  into lv_hora
                  from aqpa463 a
                 where a.aqpa463pgcod = p.aqpa463pgcod
                   and a.aqpa463hcmod = p.aqpa463hcmod
                   and a.aqpa463hsucor = p.aqpa463hsucor
                   and a.aqpa463htran = p.aqpa463htran
                   and a.aqpa463hnrel = p.aqpa463hnrel
                   and a.aqpa463hfcon = p.aqpa463hfcon
                   and a.aqpa463serie = p.aqpa463serie
                   and a.aqpa463corre = p.aqpa463corre
                   and a.aqpa463txtord like '%:%';
              exception
                when others then
                  null;
              end;
            
              --mod@abr 20180907
              begin
                select pgfape into ld_fecSis from fst017 where pgcod = 1;
              exception
                when others then
                  null;
              end;
              if lv_hora is null then
              
                if ld_fecSis = p.aqpa463hfcon then
                
                  begin
                    select a.ithora
                      into lv_hora
                      from fsd015 a
                     where a.pgcod = p.aqpa463pgcod
                       and a.itsuc = p.aqpa463hsucor
                       and a.itmod = p.aqpa463hcmod
                       and a.ittran = p.aqpa463htran
                       and a.itnrel = p.aqpa463hnrel;
                  exception
                    when others then
                      null;
                  end;
                
                else
                  begin
                    select a.hhora
                      into lv_hora
                      from fsh015 a
                     where a.pgcod = p.aqpa463pgcod
                       and a.hsucor = p.aqpa463hsucor
                       and a.hcmod = p.aqpa463hcmod
                       and a.htran = p.aqpa463htran
                       and a.hnrel = p.aqpa463hnrel
                       and a.hfcon = p.aqpa463hfcon;
                  exception
                    when others then
                      null;
                  end;
                end if;
              
              end if;
              --mod@br 20180907
            
              --------tipo de operacion 
              begin
                select trim(a.tp1desc)
                  into lv_tipoope
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 11
                   and a.tp1corr3 = 1;
              exception
                when others then
                  null;
                
              end;
              -------Codigo de tipo de importe de afectacion
              Begin
                select to_char(a.tp1nro1)
                  into lc_oneroso
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 12
                   and a.tp1corr3 = 3;
              exception
                when others then
                  null;
              End;
            
              -----Afectaci?n del IGV  
              begin
                select to_char(a.tp1nro1)
                  into lv_afecigv
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 13
                   and a.tp1corr3 = 1;
              exception
                when others then
                  null;
                
              end;
            
              ---------Identificaci?n del tributo seg?n cat?logo SUNAT
              begin
                select to_char(a.tp1nro1), trim(a.tp1desc)
                  into lv_idtrbsunat, lv_nomtrbsunat
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 14
                   and a.tp1corr3 = 1;
              exception
                when others then
                  null;
              end; ---ojo
              ----------C?digo del Tipo de Tributo
              begin
                select trim(a.tp1desc)
                  into lv_destiptrb
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 14
                   and a.tp1corr3 = 2;
              exception
                when others then
                  null;
              end;
            
              /*2018.10.15 MONTO IGV */
              begin
                pq_cr_factura_electronica.sp_cr_cobroigv(pn_pgcod  => p.aqpa463pgcod,
                                                         pn_hcmod  => p.aqpa463hcmod,
                                                         pn_hsucor => p.aqpa463hsucor,
                                                         pn_htran  => p.aqpa463htran,
                                                         pn_hnrel  => p.aqpa463hnrel,
                                                         pn_hfcon  => p.aqpa463hfcon,
                                                         pc_serie  => p.aqpa463serie,
                                                         pn_corr   => p.aqpa463corre,
                                                         pn_mto    => ln_mtoImpuesto);
              
              end;
              /*2018.10.15 MONTO IGV */
            
              ---Monto del descuento o recargo
              ln_MONTO := 0;
            
              -----------------Descripcion del pais 
              begin
                Select trim(a.tp1desc)
                  Into lv_CPAIS
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 15
                   and a.tp1corr3 = 1;
              exception
                when others then
                  null;
              end;
            
              if ln_mtoImpuesto <> 0 then
                --2018.10.20
                lv_partida := null;
                --lc_contrato := null;   
                lv_direccionH := null;
                lv_urbaH      := null;
                lv_dptoH      := null;
                lv_provH      := null;
                lv_distH      := null;
                lv_cdisn      := null;
              
              else
                --2018.10.20
              
                ----------informacion del predio
                begin
                  pq_cr_factura_electronica.sp_cr_detalle_predio(pc_aqpa463mod => p.aqpa463mod,
                                                                 pc_aqpa463suc => p.aqpa463suc,
                                                                 pc_aqpa463mda => p.aqpa463mda,
                                                                 pc_aqpa463pap => p.aqpa463pap,
                                                                 pc_aqpa463cta => p.aqpa463cta,
                                                                 pc_aqpa463ope => p.aqpa463ope,
                                                                 pc_aqpa463sbo => p.aqpa463sbo,
                                                                 pc_aqpa463top => p.aqpa463top,
                                                                 pc_partida    => lv_partida,
                                                                 pc_contrato   => lc_contrato,
                                                                 pc_direccion  => lv_direccionH,
                                                                 pc_urba       => lv_urbaH,
                                                                 pc_dpto       => lv_dptoH,
                                                                 pc_prov       => lv_provH,
                                                                 pc_dist       => lv_distH,
                                                                 pc_ubigeo     => lv_cdisn);
                end;
              
              end if; --2018.10.20
            
              if lv_cdisn is null then
                --20180626
                lv_cdisn      := lv_ubgCli;
                lv_urbaH      := substr(lv_urb, 1, 25);
                lv_dptoH      := substr(lv_depnom1, 1, 30);
                lv_provH      := substr(lv_locnom1, 1, 30);
                lv_distH      := substr(lv_fst071dsc1, 1, 30);
                lv_direccionH := substr(lv_sngc13dir, 1, 100);
              end if;
            
              lc_contrato := lpad(to_char(p.aqpa463cta), 9, 0) ||
                             lpad(to_char(p.aqpa463mda), 3, 0) ||
                             lpad(to_char(p.aqpa463ope), 9, 0); --lv_text2; --numero credito
              lv_NCONT    := lc_contrato;
            
              ld_fecoto := pq_cr_factura_electronica.fn_fecha_desembolso(pc_aqpa463cta => p.aqpa463cta,
                                                                         pc_aqpa463ope => p.aqpa463ope);
            
              lv_fecoto := to_char(ld_fecoto, 'DD-MM-YYYY');
              --agregar a info predio G74.1, G74.2
              lv_infpredio := '0' || '0' || lv_partida || '|' ||
                              lc_contrato || '|' || lv_fecoto || '|' ||
                              lv_direccionH || '|' || lv_urbaH || '|' ||
                              lv_provH || '|' || lv_distH || '|' ||
                              lv_dptoH;
              lv_pendoc    := lc_pendoc;
            
              --Pais del cliente
            
              begin
                select trim(a.tp1desc)
                  into lv_cpai
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 20
                   and a.tp1NRO1 = pn_pais;
              exception
                when others then
                  null;
              end;
            
              --Producto del credito
              begin
                select to_char(p.aqpa463mod) || '-' || trim(a.tonom)
                  into lv_TEXT1
                  from fst004 a
                 where a.modulo = p.aqpa463mod
                   and a.totope = p.aqpa463top;
              
              exception
                when others then
                  null;
              end;
            
              --direccion
              begin
                select to_char(a.tp1desc)
                  into lv_CALLE
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 2;
              
              exception
                when others then
                  null;
              end;
            
              --telefono
              begin
                select trim(to_char(a.tp1desc))
                  into lv_TELF
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 3;
              exception
                when others then
                  null;
              end;
            
              Begin
                ---web de caja arequipa
                select trim(a.tp1desc)
                  into lv_web
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 12;
              exception
                when others then
                  null;
              End;
            
              --departamento
              begin
                select to_char(a.tp1desc)
                  into lv_DEPA
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 7;
              
              exception
                when others then
                  null;
              end;
            
              --provincia
              begin
                select to_char(a.tp1desc)
                  into lv_PROV
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 8;
              
              exception
                when others then
                  null;
              end;
            
              --distrito
              begin
                select to_char(a.tp1desc)
                  into lv_DIST
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 9;
              
              exception
                when others then
                  null;
              end;
            
              --razon social
            
              begin
                select to_char(a.tp1desc)
                  into lv_rzn1
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 10;
              
              exception
                when others then
                  null;
              end;
            
              begin
                select to_char(a.tp1desc)
                  into lv_rzn2
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 11;
              
              exception
                when others then
                  null;
              end;
              lv_rzn := trim(lv_rzn1) || ' ' || trim(lv_rzn2);
            
              lv_glosa := null;
              lv_TPLA  := 'EST';
              lv_TPLCO := 'EST';
              ln_SIMC  := null;
              ln_SVITM := pn_monto_total_1;
              ln_SPVI  := pn_monto_total_1;
              lv_TXML  := '2.1';
              lv_urb   := null;
              lv_PNETU := 'NIU';
              ln_cant  := 1;
              lv_CTPR  := '01';
              ln_VVUIG := ln_mtoconce;
              ln_PRVIT := ln_mtoconce;
              lv_MEDEM := 'UND';
              lv_CSUNA := '84121901';
              ln_ITITM := null;
              ln_IMPTB := null;
              ln_IMPEX := null;
              --lv_afecigv  := '9996';
              lv_SISC   := null;
              lv_codun  := 'FRE';
              ln_MBIM   := ln_mtoconce; --null; 20180623
              ln_TAIMP  := null;
              ln_CDLEY  := 1000;
              lv_TELEY  := trim(result) || ' ' || lv_desmda; --2018.10.17
              lv_TEXT2  := lpad(to_char(p.aqpa463cta), 9, 0) ||
                           lpad(to_char(p.aqpa463mda), 3, 0) ||
                           lpad(to_char(p.aqpa463ope), 9, 0);
              lv_TRECV  := lv_correo;
              lv_TEMPL  := 'EST';
              lv_SUBJE  := '0' || trim(lv_codtipo) || '-' || P.AQPA463SERIE || '-' ||
                           trim(to_char(P.AQPA463CORRE));
              lv_VPCVA  := null;
              lv_NEXP   := '0';
              lv_CIND   := '0';
              ln_MTOTAL := null;
              ln_BAIMP  := null;
              ln_MTIMP  := null;
              ln_PCIMA  := null;
              ln_BSIMP  := null;
              ln_VAIMP  := null;
              ln_MTINF  := pn_monto_total_1;
              ln_MTGRT  := null;
              ln_BSIMPS := null;
              ln_MTOTI  := null;
              lv_CPGS1  := null;
              lv_COMA   := to_char(p.aqpa463hfcon, 'yymmdd') ||
                           lpad(to_char(p.aqpa463hsucor), 3, 0) ||
                           lpad(to_char(p.aqpa463hcmod), 3, 0) ||
                           lpad(to_char(p.aqpa463htran), 3, 0) ||
                           lpad(to_char(p.aqpa463hnrel), 4, 0);
            
              /*2018.10.15 IGV*/
              if nvl(ln_mtoImpuesto, 0) <> 0 then
                --si existe impuesto
                ln_MTOTI  := null;
                ln_MTINF  := null;
                ln_MTGRT  := null;
                ln_BSIMPS := null;
                ln_MTIMP  := ln_mtoImpuesto;
                ln_IMPEX  := ln_mtoImpuesto;
                ln_ITITM  := ln_mtoImpuesto;
                ln_IMPTB  := ln_mtoImpuesto;
                ln_PCIMA  := 18;
                ln_TAIMP  := 18;
                ln_MTOTAL := ln_mtoconce;
                ln_BAIMP  := ln_mtoconce;
                ln_SVITM  := ln_mtoconce; --AQPA460SVITM
              
                lv_tipoope  := '0101'; --AQPA460TOPE  
                ln_SIMC     := ln_mtoImpuesto; --AQPA460SIMC   total impuesto
                lv_desconce := 'IGV'; --AQPA460DESC 
                lv_afecigv  := 10; --AQPA460AFIGV 
              
                lv_idtrbsunat  := 1000; -- AQPA460CODTB  
                lv_nomtrbsunat := 'IGV'; --AQPA460DSTRB  
                lv_codun       := 'VAT'; --AQPA460CODUN 
              
                ln_VVUIG := pn_monto_total_1;
              end if;
              /*2018.10.15 IGV*/
            
              ----------------------datos caja
              Begin
                ---razon social de caja arequipa
                select a.tp1desc
                  into lc_nom1
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 10;
              exception
                when others then
                  null;
              End;
            
              Begin
                ---razon social de caja arequipa
                select a.tp1desc
                  into lc_nom2
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 11;
              exception
                when others then
                  null;
              End;
            
              lc_nomcaja := trim(lc_nom1) || trim(lc_nom2);
            
              --mod@abr 20180903 modificacion de ubigeo TEMPORAL
              lv_sngc13dirFin := trim(lv_sngc13dir) || ' - ' ||
                                 trim(lv_fst071dsc1) || ' - ' ||
                                 trim(lv_locnom1) || ' - ' ||
                                 trim(lv_depnom1);
              lv_depnom1      := null;
              lv_locnom1      := null;
              lv_fst071dsc1   := null;
            
              --mod@abr 20180903 modificacion de ubigeo TEMPORAL
            
              --mod@abr 20180905
              if lv_correo is null then
                lv_correo := 'Reportefactele@cajaarequipa.pe';
              end if;
            
              if lv_TRECV is null then
                lv_TRECV := 'Reportefactele@cajaarequipa.pe';
              end if;
              --mod@abr 20180905
            
              ------insert detalle de factura
              BEGIN
                insert into AQPA460
                  (AQPA460TDOC, --Codigo del Tipo de Documento de Identidad oENEmpresa
                   AQPA460RUCC, --N?mero de documento de identidad del emisor oENEmpresa
                   AQPA460RSOC, --Apellidos y nombres o denominaci?n o raz?n social oENEmpresa
                   AQPA460CDIS, --Codigo de UBIGEO oENEmpresa
                   AQPA460NCOM, --Nombre Comercial oENEmpresa
                   AQPA460CALLE, --Direcci?n completa y detallada oENEmpresa
                   AQPA460URBA, --Urbanizacion o Zona  oENEmpresa
                   AQPA460DEPA, --Departamento, expresado textualmente  oENEmpresa
                   AQPA460PROV, --Provincia, expresarlo textualmente   oENEmpresa
                   AQPA460DIST, --Distrito, expresarlo textualmente oENEmpres
                   AQPA460TELF, --Telefono de la Empresa Emisora oENEmpres
                   AQPA460WEB, --Pagina Web del Emisor oENEmpres           
                   AQPA460CPAIS, --Codigo del Pais del Emisor oENEmpres
                   AQPA460CESUN, --C?digo del establecimiento de Sunat  oENEmpres
                   AQPA460SERI, --Serie del comprobante.  Datos del Comprobante
                   AQPA460NUM, --Numero Correlativo del comprobante. Datos del Comprobante
                   AQPA460FEMI, --Fecha de Emision del Comprobante Datos del Comprobante
                   AQPA460TCOMF, --Codigo del Tipo de Comprobante Datos del Comprobante
                   AQPA460MONE, --Codigo del Tipo de Moneda Datos del Comprobante
                   AQPA460CORRR, --El correo electr?nico del Receptor  Datos del Comprobante
                   AQPA460MGLO, --Multiples Informaci?n adicional u observacion del comprobante.  Datos del Comprobante
                   AQPA460COMA, --Numero Interno del Comprobante Datos del Comprobante
                   AQPA460TPLA, --Tiplo de Plantilla  Datos del Comprobante
                   AQPA460TOPE, --C?digo de Tipo de operaciones Datos del Comprobante
                   AQPA460TPLCO, --C?digo de plantilla de correo  Datos del Comprobante
                   AQPA460CLOG, --C?digo del tipo de Logo Datos del Comprobante
                   AQPA460TDOCR, --Codigo del tipo de documento de identificaci?n del Receptor Datos del Comprobante
                   AQPA460NRUC, --N?mero de documento de identificaci?n Datos del Comprobante
                   AQPA460RASOC, --Apellidos y nombres o denominaci?n o raz?n social Datos del Comprobante
                   AQPA460IMPT, --Importe total  a pagar Datos del Comprobante
                   AQPA460HEMI, --Hora de Emisi?n  Datos del Comprobante
                   AQPA460SIMC, --Suma de todos los impuestos del comprobante.  Datos del Comprobante
                   AQPA460SVITM, --Suma del valor de venta total de todos los items   Datos del Comprobante
                   AQPA460SPVI, --Suma de los precios de venta total de todos los items  Datos del Comprobante
                   AQPA460TXML, -- Indica el tipo de XML que se generar? Datos del Comprobante
                   --  no va para factura   --AQPA460SDREF, --Serie documento al que se aplica la nota. ENComprobanteMotivoDocumento
                   --  no va para factura   --AQPA460NDREF, --Numero  documento al que se aplica la nota.  ENComprobanteMotivoDocumento
                   --  no va para factura    --AQPA460CMEM,  --C?digo por el cual se emite la nota.  ENComprobanteMotivoDocumento
                   ---  no va para factura  --AQPA460SUST,  --Sustento ENComprobanteMotivoDocumentoSustento
                   --  no va para factura     AQPA460SERIE, --Serie del comprobante referenciado. Referencia a un comprobante
                   --  no va para factura     AQPA460NRO,   --N?mero del comprobante referenciado Referencia a un comprobante
                   ---  no va para factura   --AQPA460TCOMP, --C?digo del tipo de comprobante.  Referencia a un comprobante
                   ---  no va para factura  --AQPA460FDREF, --Fecha de emisi?n del comprobante referenciado. Referencia a un comprobante  
                   AQPA460CDIST, --C?digo de UBIGEO Datos adicionales del Receptor
                   AQPA460CALL, --Direcci?n completa y detallada Datos adicionales del Receptor
                   AQPA460URB, --Urbanizacion o Zona   Datos adicionales del Receptor
                   AQPA460DEP, --Departamento Datos adicionales del Receptor
                   AQPA460PRV, --Provincia   Datos adicionales del Receptor
                   AQPA460DST, --Distrito Datos adicionales del Receptor
                   AQPA460CPAI, --C?digo del Pa?s  Datos adicionales del Receptor
                   AQPA460ITEM, --N?mero de orden del Item ENComprobanteDetalle 
                   AQPA460PNETU, --Unidad de medida de los bienes vendidos por item (UN/ECE rec 20) ENComprobanteDetalle 
                   AQPA460CANTF, --Cantidad de unidades vendidas pot item (Q)  ENComprobanteDetalle 
                   AQPA460TOTAL, --Importe monetario que es el total de la l?nea de detalle, incluyendo variaciones de precio (subvenciones, cargos o descuentos) pero sin impuestos.  ENComprobanteDetalle 
                   AQPA460DETE, --Codigo de identificaci?n de Onerosidad del Item ENComprobanteDetalle 
                   AQPA460CTPR, --Codigo de tipo de importe de afectacion ENComprobanteDetalle 
                   /*ok */
                   AQPA460VVUN, --Valores de venta unitarios por item (VU) no incluye impuestos  ENComprobanteDetalle 
                   /*campos probl*/
                   AQPA460VVUIG, --Precio de Venta Unitario (Incluye impuestos)  ENComprobanteDetalle 
                   AQPA460DESC, -- Descripcion del producto ENComprobanteDetalle 
                   AQPA460MFUN, --Multi Descripcion,  puede tener varias desccripciones ENComprobanteDetalle 
                   AQPA460PRVIT, --Es el precio de venta ENComprobanteDetalle 
                   AQPA460MEDEM, --Unidad medida del emisor ENComprobanteDetalle 
                   AQPA460CSUNA, --C?digo producto establecido por Sunat   ENComprobanteDetalle 
                   AQPA460CPGS1, --C?digo de producto GS1  ENComprobanteDetalle 
                   AQPA460ITITM, --Impuesto total del item ENComprobanteDetalle 
                   AQPA460IMPTB, --Importe total de un tributo para este item Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460IMPEX, ---Importe expl?cito a tributar ( = Tasa Porcentaje * Base Imponible)   Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460AFIGV, --Afectaci?n del IGV  Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460SISC, --Sistema de ISC  (01=Especifico; 02= al valor; 03=PV al p?blico)  Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   /*ojo*/
                   AQPA460CODTB, --Identificaci?n del tributo seg?n cat?logo SUNAT Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460DSTRB, --Nombre del Tributo (IGV, IVAP, ISC)  Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460CODUN, --C?digo del Tipo de Tributo (UN/ECE 5153) Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460MBIM, --Monto base del impuesto Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460TAIMP, --Tasa aplicada del impuesto  Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460CDLEY, --Codigo de la Leyenda Utilizado para Leyendas
                   AQPA460TELEY, --Texto de la leyenda  Utilizado para Leyendas
                   AQPA460TEXT1, --Texto libre 1 : Producto  Informaci?n adicional para la visualizacion de representaciones impresas, antes definido por el integrador.
                   AQPA460TEXT2, --Texto libre 2 : N?mero de Cr?dito Informaci?n adicional para la visualizacion de representaciones impresas, antes definido por el integrador.
                   AQPA460TRECV, --Correo del receptor Utilizado para enviar correos adicionales con copia al Correo del Receptor, ingresado en ENComprobante.Correo
                   AQPA460TEMPL, --C?digo de Tipo de Plantilla  Utilizado para enviar correos adicionales con copia al Correo del Receptor, ingresado en ENComprobante.Correo
                   AQPA460SUBJE, --Asunto del correo Utilizado para enviar correos adicionales con copia al Correo del Receptor, ingresado en ENComprobante.Correo
                   AQPA460VPCVA, --Placa del vehiculo Informaci?n adicional del item
                   AQPA460NEXP, --N?mero de Expediente Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460CIND, --C?digo de indicador  Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460NPART, --N?mero de Partida Registral  Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460NCONT, --N?mero de contrato  Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460FOTRC, --Fecha de Otorgo de cr?dito   Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460CDISN, --C?digo de Ubigeo   Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460DIREH, --Direcci?n   Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460URBH, --Urbanizaci?n Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460PRVH, --Provincia   Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460DSTH, --Distrito   Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460DEPTH, --Departamento Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460MTOTAL, --Monto total Gravado (Sin impuesto)  Informaci?n de gravada                           
                   AQPA460BAIMP, --Base del impuesto  IGV del Gravado
                   AQPA460MTIMP, --Monto total solo del impuesto   IGV del Gravado
                   AQPA460PCIMA, --Porcentaje del impuesto aplicado  IGV del Gravado
                   AQPA460BSIMP, --Base del impuesto Otros impuestos del Gravado
                   AQPA460VAIMP, --Monto total solo del impuesto  Otros impuestos del Gravado
                   AQPA460MTINF, --Monto total Inafecto  Informaci?n de inafecto
                   AQPA460MTGRT, --Monto total Gratuito  Informaci?n de gratuito
                   AQPA460BSIMPS, --Base del impuesto Impuestos del Gratuito
                   AQPA460MTOTI, --Monto total de impuestos Impuestos del Gratuito
                   AQPA460PGC, --mod@abr 20180824
                   AQPA460MOD, --mod@abr 20180824  
                   AQPA460SUC, --mod@abr 20180824 
                   AQPA460TRX, --mod@abr 20180824
                   AQPA460REL, --mod@abr 20180824
                   AQPA460ORE --mod@abr 20180824
                   
                   )
                
                Values
                  (lv_tipemp, --AQPA460TDOC,  ok
                   lv_ruc, --AQPA460RUCC,  ok
                   lv_rzn, --AQPA460RSOC,  ok
                   lv_ubg, --AQPA460CDIS,  ok
                   lv_NCOM, --AQPA460NCOM,  ok
                   lv_CALLE, --AQPA460CALLE  ok
                   lv_urb, --AQPA460URBA,  ok
                   lv_DEPA, --AQPA460DEPA,  ok
                   lv_PROV, --AQPA460PROV,  ok
                   lv_DIST, --AQPA460DIST,  ok
                   lv_TELF, --AQPA460TELF,  ok
                   lv_WEB, --AQPA460WEB,   ok
                   lv_CPAIS, --AQPA460CPAIS  ok
                   lc_codsunat, --lv_CESUN,        --AQPA460CESUN
                   p.aqpa463serie, --AQPA460SERI,  ok
                   p.aqpa463corre, --AQPA460NUM,   ok
                   p.aqpa463hfcon, --AQPA460FEMI,  ok
                   lv_codtipo, --AQPA460TCOMF  ok
                   lv_tipomda, --AQPA460MONE,  ok
                   lv_correo, --AQPA460CORRR  ok
                   lv_glosa, --AQPA460MGLO,  ok
                   lv_COMA, --AQPA460COMA,  ok
                   lv_TPLA, --AQPA460TPLA,  ok
                   lv_tipoope, --AQPA460TOPE,  ok
                   lv_TPLCO, --AQPA460TPLCO  ok
                   lv_CLOG, --AQPA460CLOG,
                   lv_codtdoc, --AQPA460TDOCR  ok
                   lv_pendoc, --AQPA460NRUC,  ok
                   lv_penom, --AQPA460RASOC  ok
                   pn_monto_total_1, --AQPA460IMPT,  ok
                   lv_hora, --AQPA460HEMI,  ok
                   ln_SIMC, --AQPA460SIMC,  ok
                   ln_SVITM, --AQPA460SVITM  ok
                   ln_SPVI, --AQPA460SPVI,  ok
                   lv_TXML, --AQPA460TXML,  ok
                   --AQPA460SDREF, --Serie documento al que se aplica la nota. ENComprobanteMotivoDocumento
                   --AQPA460NDREF, --Numero  documento al que se aplica la nota.  ENComprobanteMotivoDocumento
                   --AQPA460CMEM,  --C?digo por el cual se emite la nota.  ENComprobanteMotivoDocumento
                   --     no va para factura--      lc_sustento,  --Sustento ENComprobanteMotivoDocumentoSustento
                   --AQPA460SERIE, --Serie del comprobante referenciado. Referencia a un comprobante
                   --AQPA460NRO,   --N?mero del comprobante referenciado Referencia a un comprobante
                   --AQPA460TCOMP, --C?digo del tipo de comprobante.  Referencia a un comprobante
                   --AQPA460FDREF, --Fecha de emisi?n del comprobante referenciado. Referencia a un comprobante  
                   lv_ubgCli, --AQPA460CDIST,  ok
                   lv_sngc13dir, --AQPA460CALL,   ok
                   lv_urb, --AQPA460URB,    ok
                   lv_depnom1, --AQPA460DEP,    ok
                   lv_locnom1, --AQPA460PRV,    ok
                   lv_fst071dsc1, --AQPA460DST,    ok
                   lv_cpai, --AQPA460CPAI,   ok
                   ln_nroitem, --AQPA460ITEM,   ok
                   lv_PNETU, --AQPA460PNETU,  ok
                   /*ok*/
                   ln_cant, --AQPA460CANTF,  ok
                   ln_mtoconce, --AQPA460TOTAL,  ok
                   lc_oneroso, --AQPA460DETE,   ok
                   lv_CTPR, --AQPA460CTPR,   ok
                   ln_mtoconce, --AQPA460VVUN,   ok to number
                   ln_VVUIG, --AQPA460VVUIG,  ok
                   lv_desconce, --AQPA460DESC,   ok
                   lv_infpredio, --AQPA460MFUN,   ok
                   ln_PRVIT, --AQPA460PRVIT,  ok
                   lv_MEDEM, --AQPA460MEDEM,  ok
                   lv_CSUNA, --AQPA460CSUNA,  ok
                   lv_CPGS1, --AQPA460CPGS1,  ok
                   ln_ITITM, --AQPA460ITITM,  ok
                   ln_IMPTB, --AQPA460IMPTB,  ok
                   ln_IMPEX, --AQPA460IMPEX,  ok
                   lv_afecigv, --AQPA460AFIGV,  ok
                   lv_SISC, --AQPA460SISC,   ok
                   lv_idtrbsunat, --AQPA460CODTB,  ok
                   lv_nomtrbsunat, --AQPA460DSTRB,  ok
                   lv_codun, --AQPA460CODUN,  ok
                   ln_MBIM, --AQPA460MBIM,   ok
                   ln_TAIMP, --AQPA460TAIMP,  ok
                   ln_CDLEY, --AQPA460CDLEY,  ok
                   lv_TELEY, --AQPA460TELEY,  ok
                   lv_TEXT1, --AQPA460TEXT1,  ok
                   lv_TEXT2, --AQPA460TEXT2,  ok
                   lv_TRECV, --AQPA460TRECV,  ok
                   lv_TEMPL, --AQPA460TEMPL,  ok
                   lv_SUBJE, --AQPA460SUBJE,  ok
                   lv_VPCVA, --AQPA460VPCVA,  ok
                   lv_NEXP, --AQPA460NEXP,   ok
                   lv_CIND, --,        --AQPA460CIND,   ok
                   nvl(lv_partida, ' '), --G74.3  --AQPA460NPART,  ok
                   nvl(lv_NCONT, ' '), -- G74.4 NUMERO CONTRATO                AQPA460NCONT,  ok 
                   ld_fecoto, --G74.5  FECHA OTORGAMIENTO CREDITO   AQPA460FOTRC,  ok
                   nvl(lv_cdisn, ' '), --G74.6  Ubigeo                        AQPA460CDISN,  ok
                   nvl(lv_direccionH, ' '), --G74.7                           AQPA460DIREH,  ok
                   nvl(lv_urbaH, ' '), --G74.8                                 AQPA460URBH,   ok
                   nvl(lv_provH, ' '), --G74.9                                AQPA460PRVH,   ok
                   nvl(lv_distH, ' '), --G74.10                                AQPA460DSTH,   ok
                   nvl(lv_dptoH, ' '), --AQPA460DEPTH,  ok
                   ln_MTOTAL, --AQPA460MTOTAL  ok
                   ln_BAIMP, --AQPA460BAIMP,  ok
                   ln_MTIMP, --AQPA460MTIMP,  ok
                   ln_PCIMA, --AQPA460PCIMA,  ok
                   ln_BSIMP, --AQPA460BSIMP,  ok
                   ln_VAIMP, --AQPA460VAIMP,  ok
                   ln_MTINF, --AQPA460MTINF,  ok
                   ln_MTGRT, --AQPA460MTGRT,  ok
                   ln_BSIMPS, --AQPA460BSIMPS  ok
                   ln_MTOTI, --AQPA460MTOTI   ok
                   P.AQPA463PGCOD, --mod@abr 20180824
                   P.AQPA463HCMOD, --mod@abr 20180824
                   P.AQPA463HSUCOR, --mod@abr 20180824 
                   P.AQPA463HTRAN, --mod@abr 20180824
                   P.AQPA463HNREL, --mod@abr 20180824 
                   P.AQPA463TXOREN --mod@abr 20180824
                   );
              
                commit;
              Exception
                when others then
                
                  lc_coderr := sqlcode;
                  lc_msgerr := sqlerrm;
                
                  insert into aqpa460E
                    (aqpa460eserie,
                     aqpa460ecorr,
                     aqpa460epgcod,
                     aqpa460emod,
                     aqpa460esucorend,
                     aqpa460etran,
                     aqpa460erel,
                     aqpa460econ,
                     aqpa460etip,
                     Aqpa460eacoe,
                     Aqpa460eamsge)
                  
                  values
                    (p.aqpa463serie,
                     p.aqpa463corre,
                     p.aqpa463pgcod,
                     p.aqpa463hcmod,
                     p.aqpa463hsucor,
                     p.aqpa463htran,
                     p.aqpa463hnrel,
                     p.aqpa463hfcon,
                     
                     'S',
                     lc_coderr,
                     lc_msgerr);
                  commit;
              END;
            
              ln_MTOTAL := 0;
              ln_BAIMP  := 0;
              ln_MTIMP  := 0;
              ln_PCIMA  := 0;
              ln_BSIMP  := 0;
              ln_VAIMP  := 0;
              ln_MTINF  := 0;
              ln_MTGRT  := 0;
              ln_BSIMPS := 0;
              ln_MTOTI  := 0;
            
            end if;
          
          end if; --1:- SN
        end if;
      
      ------------------------------------------------------------------------------------------------------------- 
      end loop;
    
      ----insert cabecera de factura aqpa465 
      /*
      begin
         pq_cr_factura_electronica.sp_cr_cabecera_factura(pd_pgfape);
      end;
      */
    
    end;
  
  exception
    when others then
      null;
    
  end sp_cr_Detalle_Factura_3;
  -- -- -- --  -- -- -- --  -- -- -- --  -- -- -- --  -- -- -- --  -- -- -- --  -- -- -- --  -- -- -- --    
  -- CONTINGENCIAS: PROCEDIMIENTO PARA REPROCESAR AQPA464 Y AQPA460  
  procedure sp_cr_Nota_Credito_COM_3(pd_pgfape in date,
                                     pc_sucurs in number) is
  
    pn_hcmod        number;
    pn_hsucor       number;
    pn_htran        number;
    pn_hnrel        number;
    pd_hfcon        date;
    pn_NRO_RELACION number;
    pd_FECHA_TX     date;
    pn_hcmod2       number;
    pn_hcmod3       number;
    pn_hsucor3      number;
    pn_htran3       number;
    pn_hnrel3       number;
    pn_hfcon3       date;
    lc_serie        char(4);
    lc_correlativo  char(8);
  
    pn_pgcod number;
    --Flag char(1):='N';
  
    lc_flg466 char(1) := 'N'; --controla que no exista en la aqpa466
  
    ln_rubro  number;
    lc_tipper char(1);
  
    lv_tipodocu     char(1);
    lc_comision     char(1);
    ln_guiaCP       number;
    lv_codtipo      char(2);
    lc_coderr       varchar2(1000);
    lc_msgerr       varchar2(1000);
    ln_cont         number;
    lc_serieI       char(4);
    lc_correlativoI char(8);
    lv_codrpt       number;
    lv_tipocre      varchar2(2);
    ln_flag         number;
  
    lc_tipo_doc char(1);
    lv_tipo_doc char(2);
    lv_doc_ori  char(2);
  
    --ln_rubro number;
    --pd_rubro        number;
    lc_flr    char(1);
    lc_ftran  number;
    lc_fcont  char(1);
    lc_tipfin char(1);
  
    lc_trxe char(1);
    lc_esta char(1);
  
    cursor fsx015 is
    
      select distinct a.pgcod,
                      a.hcmod,
                      a.hsucor,
                      a.htran,
                      a.hnrel,
                      a.hfcon,
                      'E' Indicador
        from fsx015 a
       inner join fsh015 c
          on a.pgcod = c.pgcod
         and a.hcmod = c.hcmod
         and a.hsucor = c.hsucor
         and a.htran = c.htran
         and a.hnrel = c.hnrel
         and a.hfcon = c.hfcon
       inner join FSR170 b
          on a.hcmod = b.sr170trmod + 500
         and a.htran = b.sr170trnro
       where a.pgcod = 1
         and a.hcmod > 499
            --       and a.hsucor = pc_sucurs se comento 2022.04.21 dcastro
            -- -- --
         and ((c.hcmod = 518 and c.hsucor = 50 and c.htran = 30) -- and c.hnrel = 3)
             or (c.hcmod = 550 and c.hsucor = 75 and c.htran = 426) -- and c.hnrel = 20)
             or (c.hcmod = 550 and c.hsucor = 98 and c.htran = 501) -- and c.hnrel = 23)
             or (c.hcmod = 990 and c.hsucor = 902 and c.htran = 6) --and c.hnrel = 361)
             )
            -- -- --
         and a.hfcon = pd_pgfape
         and a.txcod = 0
      
      ---todas las transacciones extornadas
      --   and  a.hcmod= 19 and a.hsucor= 11  and a.htran=801 and a.hnrel in(1)         
      --   and  a.hcmod= 530 and a.hsucor= 18  and a.htran=972 and a.hnrel in(1)      
      --and  a.hcmod= 530 and a.hsucor= 18  and a.htran=978 and a.hnrel in(1)      
      --and  a.hcmod= 530 and a.hsucor= 18  and a.htran=350 and a.hnrel in(4)   
      --  and  a.hcmod= 530 and a.hsucor= 18  and a.htran=355 and a.hnrel in(9)   
      -- order by a.pgcod, a.hcmod, a.hsucor, a.htran, a.hnrel, a.hfcon;   
      
      union all
      --2018.10.22   
      select distinct a.pgcod,
                      a.hcmod,
                      a.hsucor,
                      a.htran,
                      a.hnrel,
                      a.hfcon,
                      'C' Indicador
        from fsx016 a
       inner join fst198 c
          on c.tp1cod = a.pgcod
       where a.pgcod = 1
         and a.hcmod = c.tp1nro1
         and a.hsucor = pc_sucurs
         and a.htran = c.tp1nro2
         and a.hfcon = pd_pgfape
         and c.tp1cod1 = 11120
         and c.tp1corr1 = 2
         and c.tp1corr2 = 4
      -- and  a.hcmod=19 and a.hsucor= 11  and a.htran=801 --and a.hnrel in (9)
      --and  a.hcmod=10 and a.hsucor= 18  and a.htran=222 and a.hnrel in (9)
      --  and  a.hcmod=492 and a.hsucor= 18  and a.htran=30 --and a.hnrel in (9)
      --and  a.hcmod= 550 and a.hsucor= 11  and a.htran=503 and a.hnrel in(1)
      --order by a.pgcod, a.hcmod, a.hsucor, a.htran, a.hnrel, a.hfcon
      ;
  
    cursor base(pn_pgcod        in number,
                pn_hcmod3       in number,
                pn_hsucor3      in number,
                pn_htran3       in number,
                pn_hnrel3       in number,
                pn_hfcon3       in date,
                lc_serieI       in char,
                lc_correlativoI in number) is
    
      select aqpa463txtrub,
             aqpa463pgcod,
             aqpa463hcmod,
             aqpa463hsucor,
             aqpa463htran,
             aqpa463hnrel,
             aqpa463hfcon,
             aqpa463hcpcod,
             aqpa463hvnro,
             trim(aqpa463hvchr) aqpa463hvchr,
             aqpa463hvnro aqpa463emp,
             aqpa463mod,
             aqpa463suc,
             aqpa463mda,
             aqpa463pap,
             aqpa463cta,
             aqpa463ope,
             aqpa463sbo,
             aqpa463top,
             aqpa463hip,
             trim(aqpa463txtord) aqpa463txtord,
             aqpa463txoren
        from aqpa463 a
       where a.aqpa463pgcod = pn_pgcod
         and a.aqpa463hcmod = pn_hcmod3
         and a.aqpa463hsucor = pn_hsucor3
         and a.aqpa463htran = pn_htran3
         and a.aqpa463hnrel = pn_hnrel3
         and a.aqpa463hfcon = pn_hfcon3
         and a.aqpa463serie = lc_serieI
         and a.aqpa463corre = lc_correlativoI;
  
  begin
  
    --25012019 dcastro
    begin
      select c.tp1nro1
        into ln_flag
        from fst198 c
       where c.tp1cod = 1
         and c.tp1cod1 = 11120
         and c.tp1corr1 = 7
         and c.tp1corr2 = 1;
    exception
      when others then
        null;
    end;
    --25012019
  
    for p in fsx015 loop
      --Verifica que no exista en cabecera AQPA466
      Begin
        select 'S'
          into lc_flg466
          from aqpa466 a
         where a.aqpa466pgcod = p.pgcod
           and a.aqpa466mod = p.hcmod
           and a.aqpa466sucor = p.hsucor
           and a.aqpa466tran = p.htran
           and a.aqpa466rel = p.hnrel
           and a.aqpa466con = p.hfcon
           and rownum = 1;
      exception
        when others then
          lc_flg466 := 'N';
      end;
      --Clave del documento a la cual se aplica: factura y boleta
      pn_pgcod  := p.pgcod;
      pn_hcmod  := p.hcmod;
      pn_hsucor := p.hsucor;
      pn_htran  := p.htran;
      pn_hnrel  := p.hnrel;
      pd_hfcon  := p.hfcon;
    
      if lc_flg466 = 'N' then
      
        if p.indicador = 'E' then
          --Por extorno 
        
          begin
            select f.txtext as NRO_RELACION
              into pn_NRO_RELACION
              from fsx015 f
             where f.hfcon = pd_pgfape --to_date('20092017', 'ddmmyyyy')----cambiar fecha de proceso
               and f.hcmod = pn_hcmod --530
               and f.htran = pn_htran --100
               and f.hnrel = pn_hnrel --2
               and f.hsucor = pn_hsucor --mod@abr 20180707
               and f.txcod = 0
               and f.txreng = 1;
          exception
            --mod@abr 20180707
            when too_many_rows then
              begin
                select f.txtext as NRO_RELACION
                  into pn_NRO_RELACION
                  from fsx015 f
                 where f.hfcon = pd_pgfape --to_date('20092017', 'ddmmyyyy')----cambiar fecha de proceso
                   and f.hcmod = pn_hcmod --530
                   and f.htran = pn_htran --100
                   and f.hnrel = pn_hnrel --2
                   and f.hsucor = pn_hsucor
                   and f.txcod = 0
                   and f.txreng = 1
                   and rownum = 1 --mod@abr 20180707
                ;
              exception
                when others then
                  pn_NRO_RELACION := null;
              end;
            when others then
              pn_NRO_RELACION := null;
            
          end;
        
          if pn_NRO_RELACION is not null then
          
            begin
              select to_date(f.txtext, 'DD/MM/RR') as FECHA_TX
                into pd_FECHA_TX
                from fsx015 f
               where f.hfcon = pd_pgfape --to_date('20092017', 'ddmmyyyy')
                 and f.hcmod = pn_hcmod -- 530
                 and f.htran = pn_htran --100
                 and f.hnrel = pn_hnrel --2
                 and f.hsucor = pn_hsucor --mod@abr 20180707
                 and f.txcod = 0
                 and f.txreng = 2;
            exception
              when others then
                pd_FECHA_TX := null;
            end;
          
            pn_hcmod2 := pn_hcmod - 500;
          
            -- 4. obtener transaccion original
            -- 4.1 Verificar si la transacción tiene una excepcion
            begin
              select 'S'
                into lc_trxe
                from fst198 t
               where t.tp1cod = 1
                 and t.tp1cod1 = 11120
                 and t.tp1corr1 = 10
                 and t.tp1corr2 = 1
                 and t.tp1corr3 <> 0
                 and t.tp1nro1 = pn_hcmod2 --- mod
                 and t.tp1nro2 = pn_htran -- trax
                 and t.tp1imp3 = 1; --<<=== Se valida en el IMP3
            exception
              when others then
                lc_trxe := 'N';
            end;
          
            if lc_trxe = 'N' then
            
              begin
                --obtener transaccion original
                select a.pgcod,
                       a.hcmod,
                       a.hsucor,
                       a.htran,
                       a.hnrel,
                       a.hfcon
                  into pn_pgcod,
                       pn_hcmod3,
                       pn_hsucor3,
                       pn_htran3,
                       pn_hnrel3,
                       pn_hfcon3 --clave de transaccion
                  from fsx016 a
                 where a.hcmod = pn_hcmod2 --30
                   and a.htran = pn_htran --100
                   and a.hfcon = pd_FECHA_TX --to_date('20092017', 'ddmmyyyy')
                   and a.hnrel = pn_NRO_RELACION --164
                   and a.hsucor = pn_hsucor --mod@abr 20180707
                   and rownum = 1;
              exception
                when others then
                  pn_pgcod   := null;
                  pn_hcmod3  := null;
                  pn_hsucor3 := null;
                  pn_htran3  := null;
                  pn_hnrel3  := null;
                  pn_hfcon3  := null;
                
              end;
            
            else
            
              pn_pgcod   := p.pgcod;
              pn_hcmod3  := pn_hcmod2;
              pn_hsucor3 := pn_hsucor;
              pn_htran3  := pn_htran;
              pn_hnrel3  := pn_NRO_RELACION;
              pn_hfcon3  := pd_FECHA_TX;
            
            end if;
          
          end if;
        
        elsif p.indicador = 'C' then
          --Por comision
        
          begin
            pq_op_transacciones.sp_op_retorna_origen(ppgcod   => pn_pgcod,
                                                     pitsuc   => pn_hsucor,
                                                     pitmod   => pn_hcmod,
                                                     pittran  => pn_htran,
                                                     pitnrel  => pn_hnrel,
                                                     pitfcon  => pd_hfcon,
                                                     itsuc_o  => pn_hsucor3,
                                                     itmod_o  => pn_hcmod3,
                                                     ittran_o => pn_htran3,
                                                     itnrel_o => pn_hnrel3,
                                                     itfcon_o => pn_hfcon3,
                                                     codrpt   => lv_codrpt);
          end;
        
        end if;
      
        ---buscar transaccion en aqpa460 / aqpa463/ aqpa465
        ---obtener DOCUMENTO DE REFERENCIA
        begin
          select distinct a.aqpa463serie, a.aqpa463corre
            into lc_serieI, lc_correlativoI
            from aqpa463 a
           where a.aqpa463pgcod = pn_pgcod
             and a.aqpa463hcmod = pn_hcmod3
             and a.aqpa463hsucor = pn_hsucor3
             and a.aqpa463htran = pn_htran3
             and a.aqpa463hnrel = pn_hnrel3
             and a.aqpa463hfcon = pn_hfcon3;
        exception
          when too_many_rows then
            ---obtener ultimo documento enviado
            begin
              select max(a.aqpa463serie), max(a.aqpa463corre)
                into lc_serieI, lc_correlativoI
                from aqpa463 a
               where a.aqpa463pgcod = pn_pgcod
                 and a.aqpa463hcmod = pn_hcmod3
                 and a.aqpa463hsucor = pn_hsucor3
                 and a.aqpa463htran = pn_htran3
                 and a.aqpa463hnrel = pn_hnrel3
                 and a.aqpa463hfcon = pn_hfcon3;
            
            exception
              when others then
                lc_serieI       := null;
                lc_correlativoI := null;
            end;
          when no_data_found then
            --si no existe trx origen
            lc_serieI := null;
        end;
      
        lv_tipodocu := substr(lc_serieI, 1, 1);
        lv_tipocre  := substr(lc_serieI, 2, 1);
      
        if lv_tipodocu is not null then
        
          --determinar tipo del documento origen
          --dbms_output.put_line('================');
          --dbms_output.put_line('pn_hcmod3 ' || pn_hcmod3);
          --dbms_output.put_line('pn_hsucor3 ' || pn_hsucor3);
          --dbms_output.put_line('pn_htran3 ' || pn_htran3);
          --dbms_output.put_line('pn_hnrel3 ' || pn_hnrel3);
          --dbms_output.put_line('pn_hfcon3 ' || pn_hfcon3);                                        
        
          begin
            select distinct t.aqpa460tcomf
              into lv_doc_ori
              from aqpa460 t
             where t.aqpa460pgc = pn_pgcod
               and t.aqpa460mod = pn_hcmod3
               and t.aqpa460suc = pn_hsucor3
               and t.aqpa460trx = pn_htran3
               and t.aqpa460rel = pn_hnrel3
               and t.aqpa460femi = pn_hfcon3
               and t.aqpa460tcomf in ('01', '03', '13');
          exception
            when others then
              null;
          end;
        
          if lv_doc_ori in ('01', '03') then
          
            --determinar tipo de cliente
            if lv_tipodocu = 'F' then
              lc_tipper := 'J';
              ln_guiaCP := 1;
            else
              lc_tipper := 'N';
              ln_guiaCP := 3;
            end if;
          
            begin
              select
              --'0' || to_char(a.tp1nro1)
               lpad(trim(a.tp1nro1), 2, '0')
                into lv_codtipo
                from fst198 a
               where a.tp1cod = 1
                 and a.tp1cod1 = 11120
                 and a.tp1corr1 = 1
                 and a.tp1corr2 = 7
                 and a.tp1corr3 = ln_guiaCP; --2018.10.10 se modifico codigo de guia para tipo comprobante
            exception
              when others then
                null;
            end;
          
          else
            lv_codtipo := '13';
          end if;
        
          -- Determinar rubro
          -- 5. Obtener rubro
          begin
            -- Como el proceso siempre será ejecutado al menos un día después, 
            -- se busca en históricos
          
            select to_number(substr(m.hrubro, 5, 2))
              into ln_rubro
              from fsh016 m, fsr171 aa
             where aa.st171cpcod = 15
               and aa.sr171tremp = 1 --1
               and aa.sr171trmod = m.hcmod --30
               and aa.sr171trnro = m.htran
               and m.PGCOD = pn_pgcod
               and m.hsucor = pn_hsucor3
               and m.hcmod = pn_hcmod3
               and m.htran = pn_htran3
               and m.hnrel = pn_hnrel3
               and m.hfcon = pn_hfcon3
               and m.hcord = aa.sr171trord
               and rownum = 1;
          exception
            when others then
              --ln_rubro := null;
              begin
              
                select distinct x.aqpa463tcre
                  into ln_rubro
                  from aqpa463 x
                 where x.aqpa463pgcod = pn_pgcod
                   and x.aqpa463hcmod = pn_hcmod3
                   and x.aqpa463hsucor = pn_hsucor3
                   and x.aqpa463htran = pn_htran3
                   and x.aqpa463hnrel = pn_hnrel3
                   and x.aqpa463hfcon = pn_hfcon3;
              
              exception
                when others then
                  ln_rubro := null;
                
              end;
          end;
        
          /*if ln_flag = 0 then  --25012019 dcastro se agrego validacion de flag si es =1 incluye comision   
            exit;
          end if;  --25012019 dcastro 
          */
        
          --end if;
        
          --determinar si es comision
          begin
            select 'S'
              into lc_comision
              from fst198 h
             where h.tp1cod = 1
               and h.tp1cod1 = 11120
               and h.tp1corr1 = 3
               and h.tp1corr2 = 1
               and h.tp1nro1 = pn_hcmod3
               and h.tp1nro2 = pn_htran3
               and rownum = 1;
          exception
            when others then
              lc_comision := 'N';
          end;
        
          if lc_comision = 'S' then
            ln_rubro := 1;
          end if;
        
          -- b. Determinar si el rubro es considerado
          begin
            select 'S'
              into lc_flr
              from fst198 t
             where t.tp1cod = 1
               and t.tp1cod1 = 11120
               and t.tp1corr1 = 1
               and t.tp1corr2 = 23
               and t.tp1nro1 <> 0
               and t.tp1nro1 = ln_rubro;
          exception
            when others then
              lc_flr := 'N';
          end;
        
          --if (lv_tipocre in ('H','F') and ln_flag = 0) or ln_flag = 1 then
          if (lc_flr = 'S' and ln_flag = 0) or ln_flag = 1 then
          
            --Seleccionar tipo de documento    !!3
            -- Guía obtener transacciones GRAVADAS
            begin
              select 'S'
                into lc_tipo_doc
                from fst198 h
               where h.tp1cod = 1
                 and h.tp1cod1 = 11120
                 and h.tp1corr1 = 3
                 and h.tp1corr2 = 1
                 and h.tp1corr3 > 0
                 and h.tp1nro1 = pn_hcmod3
                 and h.tp1nro2 = pn_htran3;
            exception
              when others then
                lc_tipo_doc := 'N';
            end;
          
            ---Si es gravado --> 07  sino ---> 87
            lv_tipo_doc := '87';
          
            if lc_tipo_doc = 'S' then
              lv_tipo_doc := '07';
              lc_tipfin   := 'N';
            else
              ------
            
              begin
              
                -- c. Verificar si el rubro esta activo
                -- (4): hipotecario
                -- (3): consumo
                begin
                  select 'S'
                    into lc_fcont
                    from fst198 t
                   where t.tp1cod = 1
                     and t.tp1cod1 = 11120
                     and t.tp1corr1 = 1
                     and t.tp1corr2 = 23
                     and t.tp1nro1 <> 0
                     and t.tp1nro1 = ln_rubro
                     and t.tp1imp1 = 1;
                exception
                  when others then
                    lc_fcont := 'N';
                end;
              
                if lc_fcont = 'S' then
                
                  --Verificar en AQPB056
                  begin
                    select 'S'
                      into lc_tipfin
                      from aqpb056 a
                     where a.aqpb056pgc = pn_pgcod
                       and a.aqpb056mod = pn_hcmod
                       and a.aqpb056suc = pn_hsucor
                       and a.aqpb056trx = pn_htran
                       and a.aqpb056rel = pn_hnrel
                       and a.aqpb056fco = pd_hfcon
                       and a.aqpb056pge = pn_pgcod
                       and a.aqpb056moe = pn_hcmod3
                       and a.aqpb056sue = pn_hsucor3
                       and a.aqpb056tre = pn_htran3
                       and a.aqpb056ree = pn_hnrel3
                       and a.aqpb056fce = pn_hfcon3
                       and a.aqpb056tco = '87';
                  
                  exception
                    when others then
                      begin
                        select 'S'
                          into lc_tipfin
                          from aqpb056h a
                         where a.aqpb056hpgc = pn_pgcod
                           and a.aqpb056hmod = pn_hcmod
                           and a.aqpb056hsuc = pn_hsucor
                           and a.aqpb056htrx = pn_htran
                           and a.aqpb056hrel = pn_hnrel
                           and a.aqpb056hfcon = pd_hfcon
                           and a.aqpb056hpgce = pn_pgcod
                           and a.aqpb056hmode = pn_hcmod3
                           and a.aqpb056hsuce = pn_hsucor3
                           and a.aqpb056htrxe = pn_htran3
                           and a.aqpb056hrele = pn_hnrel3
                           and a.aqpb056hfcone = pn_hfcon3
                           and a.aqpb056htcomf = '87';
                      exception
                        when others then
                          lc_tipfin := 'N';
                      end;
                    
                  end;
                
                  --Verificar si la transacción sigue activa
                  begin
                    select count(*)
                      into lc_ftran
                      from fst198 t
                     where t.tp1cod = 1
                       and t.tp1cod1 = 11120
                       and t.tp1corr1 = 10
                       and t.tp1corr2 = 1
                       and t.tp1corr3 <> 0
                       and t.tp1imp1 = 1
                       and t.tp1nro1 = pn_hcmod3
                       and t.tp1nro2 = pn_htran3;
                  exception
                    when others then
                      null;
                  end;
                  if (lc_tipfin = 'S' and lc_ftran > 0) then
                  
                    begin
                      --select to_char(a.aqpb056seri), a.aqpb056num
                      select to_char(a.aqpb056ser), a.aqpb056num
                        into lc_serie, lc_correlativo
                        from aqpb056 a
                       where
                      
                       a.aqpb056pgc = pn_pgcod
                       and a.aqpb056mod = pn_hcmod
                       and a.aqpb056suc = pn_hsucor
                       and a.aqpb056trx = pn_htran
                       and a.aqpb056rel = pn_hnrel
                       and a.aqpb056fco = pd_hfcon
                      
                       and a.aqpb056pge = pn_pgcod
                       and a.aqpb056moe = pn_hcmod3
                       and a.aqpb056sue = pn_hsucor3
                       and a.aqpb056tre = pn_htran3
                       and a.aqpb056ree = pn_hnrel3
                       and a.aqpb056fce = pn_hfcon3
                      
                       and a.aqpb056tco = '87';
                    
                    exception
                      when others then
                      
                        select to_char(a.aqpb056hseri), a.aqpb056hnum
                          into lc_serie, lc_correlativo
                          from aqpb056h a
                         where
                        
                         a.aqpb056hpgc = pn_pgcod
                         and a.aqpb056hmod = pn_hcmod
                         and a.aqpb056hsuc = pn_hsucor
                         and a.aqpb056htrx = pn_htran
                         and a.aqpb056hrel = pn_hnrel
                         and a.aqpb056hfcon = pd_hfcon
                        
                         and a.aqpb056hpgce = pn_pgcod
                         and a.aqpb056hmode = pn_hcmod3
                         and a.aqpb056hsuce = pn_hsucor3
                         and a.aqpb056htrxe = pn_htran3
                         and a.aqpb056hrele = pn_hnrel3
                         and a.aqpb056hfcone = pn_hfcon3
                        
                         and a.aqpb056htcomf = '87';
                      
                    end;
                  
                  end if;
                
                end if;
              
              end;
              ------
            
            end if;
          
            if (lv_tipo_doc = '87' and lc_tipfin = 'S') or
               (lv_tipo_doc = '07' and lc_tipfin = 'N') then
              --if (lv_tipo_doc = '87') then
              --insertamos en AQPA460            
              begin
              
                --if to_number(lc_correlativo) > 43 then
                --  lc_msgerr := '';
                --end if;
              
                insert into AQPA460
                  (aqpa460tdoc,
                   aqpa460rucc,
                   aqpa460rsoc,
                   aqpa460cdis,
                   aqpa460ncom,
                   aqpa460calle,
                   aqpa460urba,
                   aqpa460depa,
                   aqpa460prov,
                   aqpa460dist,
                   aqpa460telf,
                   aqpa460web,
                   aqpa460cpais,
                   aqpa460cesun,
                   aqpa460seri,
                   aqpa460num,
                   aqpa460femi,
                   aqpa460tcomf,
                   aqpa460mone,
                   aqpa460corrr,
                   aqpa460mglo,
                   aqpa460coma,
                   aqpa460tpla,
                   aqpa460tope,
                   aqpa460tplco,
                   aqpa460clog,
                   aqpa460tdocr,
                   aqpa460nruc,
                   aqpa460rasoc,
                   aqpa460impt,
                   aqpa460hemi,
                   aqpa460simc,
                   aqpa460svitm,
                   aqpa460spvi,
                   aqpa460txml,
                   aqpa460sdref,
                   aqpa460ndref,
                   aqpa460cmem,
                   aqpa460sust,
                   aqpa460serie,
                   aqpa460nro,
                   aqpa460tcomp,
                   aqpa460fdref,
                   aqpa460cdist,
                   aqpa460call,
                   aqpa460urb,
                   aqpa460dep,
                   aqpa460prv,
                   aqpa460dst,
                   aqpa460cpai,
                   aqpa460item,
                   aqpa460pnetu,
                   aqpa460cantf,
                   aqpa460total,
                   aqpa460dete,
                   aqpa460ctpr,
                   aqpa460vvun,
                   aqpa460vvuig,
                   aqpa460desc,
                   aqpa460mfun,
                   aqpa460prvit,
                   aqpa460medem,
                   aqpa460csuna,
                   aqpa460cpgs1,
                   aqpa460ititm,
                   aqpa460imptb,
                   aqpa460impex,
                   aqpa460afigv,
                   aqpa460sisc,
                   aqpa460codtb,
                   aqpa460dstrb,
                   aqpa460codun,
                   aqpa460mbim,
                   aqpa460taimp,
                   aqpa460cdley,
                   aqpa460teley,
                   aqpa460text1,
                   aqpa460text2,
                   aqpa460trecv,
                   aqpa460templ,
                   aqpa460subje,
                   aqpa460vpcva,
                   aqpa460nexp,
                   aqpa460cind,
                   aqpa460npart,
                   aqpa460ncont,
                   aqpa460fotrc,
                   aqpa460cdisn,
                   aqpa460direh,
                   aqpa460urbh,
                   aqpa460prvh,
                   aqpa460dsth,
                   aqpa460depth,
                   aqpa460mtotal,
                   aqpa460baimp,
                   aqpa460mtimp,
                   aqpa460pcima,
                   aqpa460bsimp,
                   aqpa460vaimp,
                   aqpa460mtinf,
                   aqpa460mtgrt,
                   aqpa460bsimps,
                   aqpa460mtoti,
                   aqpa460pgc,
                   aqpa460mod,
                   aqpa460suc,
                   aqpa460trx,
                   aqpa460rel,
                   aqpa460ore,
                   aqpa460pgce,
                   aqpa460mode,
                   aqpa460suce,
                   aqpa460trxe,
                   aqpa460rele,
                   aqpa460fcone,
                   aqpa460glos,
                   aqpa460tipag,
                   aqpa460text3,
                   aqpa460text4,
                   aqpa460conce)
                  select aqpa460tdoc, --aqpa460tdoc,
                         aqpa460rucc, --aqpa460rucc,
                         aqpa460rsoc, --aqpa460rsoc,
                         aqpa460cdis, --aqpa460cdis,
                         aqpa460ncom, --aqpa460ncom,
                         aqpa460calle, --aqpa460calle,
                         aqpa460urba, --aqpa460urba,
                         aqpa460depa, --aqpa460depa,
                         aqpa460prov, --aqpa460prov,
                         aqpa460dist, --aqpa460dist,
                         aqpa460telf, --aqpa460telf,
                         aqpa460web, --aqpa460web,
                         aqpa460cpais, --aqpa460cpais,
                         aqpa460cesun, --aqpa460cesun,
                         lc_serie, --aqpa460seri,
                         lc_correlativo, --aqpa460num,
                         --aqpa460femi, --aqpa460femi,
                         pd_hfcon, --aqpa460femi,
                         --'07',
                         lv_tipo_doc, --aqpa460tcomf,
                         aqpa460mone, --aqpa460mone,
                         aqpa460corrr, --aqpa460corrr,
                         aqpa460mglo, --aqpa460mglo,
                         aqpa460coma, --aqpa460coma,
                         aqpa460tpla, --aqpa460tpla,
                         aqpa460tope, --aqpa460tope,
                         aqpa460tplco, --aqpa460tplco,
                         aqpa460clog, --aqpa460clog,
                         aqpa460tdocr, --aqpa460tdocr,
                         aqpa460nruc, --aqpa460nruc,
                         aqpa460rasoc, --aqpa460rasoc,
                         aqpa460impt, --aqpa460impt,
                         aqpa460hemi, --aqpa460hemi,
                         aqpa460simc, --aqpa460simc,
                         aqpa460svitm, --aqpa460svitm,
                         aqpa460spvi, --aqpa460spvi,
                         aqpa460txml, --aqpa460txml,
                         aqpa460seri, --aqpa460sdref,
                         aqpa460num, --aqpa460ndref,
                         lv_doc_ori, --'01', --aqpa460cmem,
                         'Extorno de la operacion', --aqpa460sust,
                         aqpa460seri, --aqpa460serie,
                         aqpa460num, --aqpa460nro,
                         lv_codtipo, --aqpa460tcomp,
                         --pd_hfcon,    --aqpa460fdref,
                         aqpa460femi, --aqpa460fdref,
                         aqpa460cdist, --aqpa460cdist,
                         aqpa460call, --aqpa460call,
                         aqpa460urb, --aqpa460urb,
                         aqpa460dep, --aqpa460dep,
                         aqpa460prv, --aqpa460prv,
                         aqpa460dst, --aqpa460dst,
                         aqpa460cpai, --aqpa460cpai,
                         aqpa460item, --aqpa460item,
                         aqpa460pnetu, --aqpa460pnetu,
                         aqpa460cantf, --aqpa460cantf,
                         aqpa460total, --aqpa460total,
                         aqpa460dete, --aqpa460dete,
                         aqpa460ctpr, --aqpa460ctpr,
                         aqpa460vvun, --aqpa460vvun,
                         aqpa460vvuig, --aqpa460vvuig,
                         aqpa460desc, --aqpa460desc,
                         substr(trim(aqpa460mfun), 499), --aqpa460mfun, 2023 
                         aqpa460prvit, --aqpa460prvit,
                         aqpa460medem, --aqpa460medem,
                         aqpa460csuna, --aqpa460csuna,
                         aqpa460cpgs1, --aqpa460cpgs1,
                         aqpa460ititm, --aqpa460ititm,
                         aqpa460imptb, --aqpa460imptb,
                         aqpa460impex, --aqpa460impex,
                         aqpa460afigv, --aqpa460afigv,
                         aqpa460sisc, --aqpa460sisc,
                         aqpa460codtb, --aqpa460codtb,
                         aqpa460dstrb, --aqpa460dstrb,
                         aqpa460codun, --aqpa460codun,
                         aqpa460mbim, --aqpa460mbim,
                         aqpa460taimp, --aqpa460taimp,
                         aqpa460cdley, --aqpa460cdley,
                         aqpa460teley, --aqpa460teley,
                         aqpa460text1, --aqpa460text1,
                         aqpa460text2, --aqpa460text2,
                         aqpa460trecv, --aqpa460trecv,
                         aqpa460templ, --aqpa460templ,
                         aqpa460subje, --aqpa460subje,
                         aqpa460vpcva, --aqpa460vpcva,
                         aqpa460nexp, --aqpa460nexp,
                         aqpa460cind, --aqpa460cind,
                         aqpa460npart, --aqpa460npart,
                         aqpa460ncont, --aqpa460ncont,
                         aqpa460fotrc, --aqpa460fotrc,
                         aqpa460cdisn, --aqpa460cdisn,
                         aqpa460direh, --aqpa460direh,
                         aqpa460urbh, --aqpa460urbh,
                         aqpa460prvh, --aqpa460prvh,
                         aqpa460dsth, --aqpa460dsth,
                         aqpa460depth, --aqpa460depth,
                         aqpa460mtotal, --aqpa460mtotal,
                         aqpa460baimp, --aqpa460baimp,
                         aqpa460mtimp, --aqpa460mtimp,
                         aqpa460pcima, --aqpa460pcima,
                         aqpa460bsimp, --aqpa460bsimp,
                         aqpa460vaimp, --aqpa460vaimp,
                         aqpa460mtinf, --aqpa460mtinf,
                         aqpa460mtgrt, --aqpa460mtgrt,
                         aqpa460bsimps, --aqpa460bsimps,
                         aqpa460mtoti, --aqpa460mtoti,
                         aqpa460pgc, --aqpa460pgc,
                         aqpa460mod, --aqpa460mod,
                         aqpa460suc, --aqpa460suc,
                         aqpa460trx, --aqpa460trx,
                         aqpa460rel, --aqpa460rel,
                         aqpa460ore, --aqpa460ore,
                         pn_pgcod, --aqpa460pgce,
                         pn_hcmod, --aqpa460mode,
                         pn_hsucor, --aqpa460suce,
                         pn_htran, --aqpa460trxe,
                         pn_hnrel, --aqpa460rele,
                         --pd_hfcon,--aqpa460fcone,
                         aqpa460femi, --aqpa460fcone,
                         aqpa460glos, --aqpa460glos,
                         aqpa460tipag, --aqpa460tipag,
                         aqpa460text3, --aqpa460text3,
                         aqpa460text4, --aqpa460text4,
                         aqpa460conce --aqpa460conce
                    from aqpa460 a
                   where a.aqpa460pgc = pn_pgcod
                     and a.aqpa460mod = pn_hcmod3
                     and a.aqpa460suc = pn_hsucor3
                     and a.aqpa460trx = pn_htran3
                     and a.aqpa460rel = pn_hnrel3
                     and a.aqpa460femi = pn_hfcon3
                     and a.aqpa460seri = lc_serieI
                     and a.aqpa460num = lc_correlativoI;
              
                commit;
              exception
                when others then
                  lc_coderr := sqlcode;
                  lc_msgerr := sqlerrm;
                
              end;
            
              --insertamos en AQPA464
              ln_cont := 1;
              for i in base(pn_pgcod,
                            pn_hcmod3,
                            pn_hsucor3,
                            pn_htran3,
                            pn_hnrel3,
                            pn_hfcon3,
                            lc_serieI,
                            lc_correlativoI) loop
              
                begin
                  insert into aqpa464
                    (aqpa464txtrub,
                     aqpa464pgcod,
                     aqpa464hcmod,
                     aqpa464hsucor,
                     aqpa464htran,
                     aqpa464hnrel,
                     aqpa464hfcon,
                     aqpa464doid,
                     aqpa464cpcod,
                     aqpa464vnro,
                     aqpa464vchr,
                     aqpa464vfch,
                     aqpa464vimp /*, aqpa464vtas*/,
                     aqpa464serie,
                     aqpa464nro,
                     aqpa464emp,
                     aqpa464mod,
                     aqpa464suc,
                     aqpa464mda,
                     aqpa464pap,
                     aqpa464cta,
                     aqpa464ope,
                     aqpa464sbo,
                     aqpa464top,
                     aqpa464hip,
                     aqpa464txtord,
                     aqpa464txoren,
                     aqpa464pgcode,
                     aqpa464hcmode,
                     aqpa464hsucore,
                     aqpa464htrane,
                     aqpa464hnrele,
                     aqpa464hfcone)
                  
                  values
                    (i.aqpa463txtrub,
                     i.aqpa463pgcod,
                     i.aqpa463hcmod,
                     i.aqpa463hsucor,
                     i.aqpa463htran,
                     i.aqpa463hnrel,
                     i.aqpa463hfcon,
                     ln_cont,
                     i.aqpa463hcpcod,
                     i.aqpa463hvnro,
                     i.aqpa463hvchr,
                     pd_hfcon,
                     ln_cont,
                     lc_serie,
                     lc_correlativo,
                     i.aqpa463emp,
                     i.aqpa463mod,
                     i.aqpa463suc,
                     i.aqpa463mda,
                     i.aqpa463pap,
                     i.aqpa463cta,
                     i.aqpa463ope,
                     i.aqpa463sbo,
                     i.aqpa463top,
                     i.aqpa463hip,
                     i.aqpa463txtord,
                     i.aqpa463txoren,
                     pn_pgcod,
                     pn_hcmod,
                     pn_hsucor,
                     pn_htran,
                     pn_hnrel,
                     pd_hfcon);
                
                  commit;
                exception
                  when others then
                    lc_coderr := sqlcode;
                    lc_msgerr := sqlerrm;
                  
                end;
                ln_cont := ln_cont + 1;
              
              end loop;
            
              --insertamos en AQPA466, NO
              lc_esta := null;
              if lv_tipo_doc = '87' then
                lc_esta := 'Z';
              end if;
            
            end if;
          end if; --25012019
        
        end if; ---fin de tipodocu 
      
      end if;
    
    end loop;
  
  end sp_cr_Nota_Credito_COM_3;

  -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --      
  -- **** PROCESO PARA PROCESAR EL DAE DE CONTINGENCIA POR SCHEDULERS  
  procedure sp_cr_sch_dae(pd_fecpro in date) is
  
    ln_ini      number;
    lc_variable varchar2(4000);
    ln_job      number := 0;
    lc_fecpro   char(10);
    ld_finmes   date;
    lc_hostname varchar2(64);
  
    pi_vc2_nomjob varchar2(65);
    lc_prefjob    varchar2(64);
    ln_numjob     number(9) := 0;
  
    cursor sucursal is
      select *
        from fst001
       where pgcod = 1
      --and sucurs < 800
      --or sucurs >= 900
      ;
  
  begin
    begin
      select host_name into lc_hostname from v$instance;
    exception
      when others then
        null;
    end;
  
    -- Eliminación del registro por usuario
    --delete from aqpb073 t where trim(t.aqpb073usur) = pn_usuario;
    --commit;
  
    lc_fecpro := to_char(pd_fecpro, 'RRRR.MM.DD');
  
    ---carga diaria
    for i in sucursal loop
      ln_ini        := i.sucurs;
      ln_job        := ln_job + 1;
      lc_prefjob    := 'DAE_REP_1';
      pi_vc2_nomjob := lc_prefjob || to_char(pd_fecpro, 'ddmmrrrr') ||
                       lpad(ln_ini, 3, '0'); ---ln_job
      lc_variable   := 'begin ' ||
                       '  pq_cr_Factura_Electronica.sp_tra_validas_HIS_2( TO_DATE(''' ||
                       lc_fecpro || ''',''RRRR.MM.DD''),' || ln_ini || ');' ||
                       ' End;';
    
      IF SYS.FN_BD_ISRAC = 'TRUE' THEN
        dbms_scheduler.create_job(job_name   => pi_vc2_nomjob,
                                  job_type   => 'PLSQL_BLOCK',
                                  job_action => lc_variable,
                                  start_date => sysdate, -- + 1 / (24 * 180),
                                  enabled    => true,
                                  auto_drop  => TRUE,
                                  comments   => 'Proc_Dae_1');
        begin
          dbms_scheduler.set_attribute(pi_vc2_nomjob, 'instance_id', 2);
        end;
      Else
        dbms_scheduler.create_job(job_name   => pi_vc2_nomjob,
                                  job_type   => 'PLSQL_BLOCK',
                                  job_action => lc_variable,
                                  start_date => sysdate, -- + 1 / (24 * 180),
                                  enabled    => true,
                                  auto_drop  => TRUE,
                                  comments   => 'Proc_Dae_1');
        begin
          dbms_scheduler.set_attribute(pi_vc2_nomjob, 'instance_id', 1);
        end;
      End If;
      commit;
    
      INSERT INTO Tab_jobs
        (c_codage, n_Numer1, c_detjob)
      VALUES
        ('DAEREP_1', ln_ini, lc_variable);
      COMMIT;
    
    end loop;
  
    ln_numjob := pq_cr_Factura_Electronica.fn_cr_verifica_tarea(lc_prefjob,
                                                                lc_hostname);
  
    While ln_numjob > 0 loop
      ln_numjob := pq_cr_Factura_Electronica.fn_cr_verifica_tarea(lc_prefjob,
                                                                  lc_hostname);
    End loop;
  
  end sp_cr_sch_dae;
  -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --       
  -- **** PROCESO PARA PROCESAR EL NCE DE CONTINGENCIA POR SCHEDULERS    
  procedure sp_cr_sch_nce(pd_fecpro in date) is
  
    ln_ini      number;
    lc_variable varchar2(4000);
    ln_job      number := 0;
    lc_fecpro   char(10);
    ld_finmes   date;
    lc_hostname varchar2(64);
  
    pi_vc2_nomjob varchar2(65);
    lc_prefjob    varchar2(64);
    ln_numjob     number(9) := 0;
  
    cursor sucursal is
      select *
        from fst001
       where pgcod = 1
      --and sucurs < 800
      --or sucurs >= 900
      ;
  
  begin
    begin
      select host_name into lc_hostname from v$instance;
    exception
      when others then
        null;
    end;
  
    -- Eliminación del registro por usuario
    --delete from aqpb073 t where trim(t.aqpb073usur) = pn_usuario;
    --commit;
  
    lc_fecpro := to_char(pd_fecpro, 'RRRR.MM.DD');
  
    ---carga diaria
    for i in sucursal loop
      ln_ini        := i.sucurs;
      ln_job        := ln_job + 1;
      lc_prefjob    := 'NCE_REP_1';
      pi_vc2_nomjob := lc_prefjob || to_char(pd_fecpro, 'ddmmrrrr') ||
                       lpad(ln_ini, 3, '0'); ---ln_job
      lc_variable   := 'begin ' ||
                       '  pq_cr_Factura_Electronica.sp_cr_Nota_Credito_COM_3( TO_DATE(''' ||
                       lc_fecpro || ''',''RRRR.MM.DD''),' || ln_ini || ');' ||
                       ' End;';
    
      IF SYS.FN_BD_ISRAC = 'TRUE' THEN
        dbms_scheduler.create_job(job_name   => pi_vc2_nomjob,
                                  job_type   => 'PLSQL_BLOCK',
                                  job_action => lc_variable,
                                  start_date => sysdate, -- + 1 / (24 * 180),
                                  enabled    => true,
                                  auto_drop  => TRUE,
                                  comments   => 'Proc_Nce_1');
        begin
          dbms_scheduler.set_attribute(pi_vc2_nomjob, 'instance_id', 2);
        end;
      Else
        dbms_scheduler.create_job(job_name   => pi_vc2_nomjob,
                                  job_type   => 'PLSQL_BLOCK',
                                  job_action => lc_variable,
                                  start_date => sysdate, -- + 1 / (24 * 180),
                                  enabled    => true,
                                  auto_drop  => TRUE,
                                  comments   => 'Proc_Nce_1');
        begin
          dbms_scheduler.set_attribute(pi_vc2_nomjob, 'instance_id', 1);
        end;
      End If;
      commit;
    
      INSERT INTO Tab_jobs
        (c_codage, n_Numer1, c_detjob)
      VALUES
        ('NCEREP_1', ln_ini, lc_variable);
      COMMIT;
    
    end loop;
  
    ln_numjob := pq_cr_Factura_Electronica.fn_cr_verifica_tarea(lc_prefjob,
                                                                lc_hostname);
  
    While ln_numjob > 0 loop
      ln_numjob := pq_cr_Factura_Electronica.fn_cr_verifica_tarea(lc_prefjob,
                                                                  lc_hostname);
    End loop;
  
  end sp_cr_sch_nce;
  -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --         
  Function fn_cr_verifica_tarea(P_C_NOMJOB IN VARCHAR2,
                                P_C_HOSTNA IN VARCHAR2) return number is
    --2019.07.22 DCASTRO se implementaron schedulers para optimizar la carga, creacion guia de proceso para hostname
    ln_numjob number(9) := 0;
    lc_nomusr varchar2(50);
  
  begin
  
    begin
      select TRIM(TP1DESC)
        INTO lc_nomusr
        from fst198
       where tp1cod = 1
         and tp1cod1 = 10847
         and tp1corr1 = 999; ---2019.07.22 guia de proceso para hostname
    exception
      when others then
        null;
    end;
  
    begin
      SELECT COUNT(1)
        INTO ln_numjob
        FROM dba_scheduler_jobs job
       WHERE owner = lc_nomusr
         AND job.job_name LIKE P_C_NOMJOB || '%';
    exception
      when others then
        null;
    end;
  
    return ln_numjob;
  end fn_cr_verifica_tarea;
  -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --          
  function fn_sumatoria_total(pn_pgc   number,
                              pn_mod   number,
                              pn_suc   number,
                              pn_trx   number,
                              pn_rel   number,
                              pn_fecha date) return number is
  
    --- Penalidad: 5117 o 5127
    --- Interés compensatorio vencido o mora: 5114:  
    --- Interés compensatorio normal: 1418, 1428             FSD014, plan de cuenta, fsd016 módulo: 403
    --- Seguro Desgravamen: 2514020000005, 2524020000005
    --- Seguro garantia: 2514020000007, 2524020000007
    --- Seguro Movigas: 2514020000002, 2524020000002
    --- Microseguro: 2514020000008, 2524020000008
    --- Familia segura: 2514020000013, 2524020000013
  
    -- multiriesgo     2514020000015
    -- seguro AGRICOLA   2514020000020
    -- Seguro Desempleo  2514020000022
  
    -- fsd016 - itdbha= 2
    -- fsh016 - hcodmo=2                                
  
    lc_indc  char(1);
    lc_sumc  NUMBER(17, 2);
    lc_fecha date;
  
  begin
  
    --- INTERES COMPENSATORIO: 1
    begin
      select sum(f.total)
        into lc_sumc
        from (select nvl(sum(t.hcimp1), 0) total
                from fsh016 t
               where t.pgcod = pn_pgc
                 and t.hcmod = pn_mod
                 and t.hsucor = pn_suc
                 and t.htran = pn_trx
                 and t.hnrel = pn_rel
                 and t.hfcon = pn_fecha
                 and t.hrubro in
                     (select x.rubro
                        from fsd014 x
                       where substr(x.rubro, 1, 4) in ('1418', '1428')
                         and x.pmtit = 1
                         and x.pmcap = 4
                         and x.pmpzo = 8
                         and x.pcnivc = 403)
                 and t.hcodmo = 2 ---1428, 1418
              union all
              ---- INTERES COPENSATORIO VENCIDO O MORA: 2
              select nvl(sum(t.hcimp1), 0)
                from fsh016 t
               where t.pgcod = pn_pgc
                 and t.hcmod = pn_mod
                 and t.hsucor = pn_suc
                 and t.htran = pn_trx
                 and t.hnrel = pn_rel
                 and t.hfcon = pn_fecha
                 and t.hrubro in
                     (select x.rubro
                        from fsd014 x
                       where substr(x.rubro, 1, 4) in ('5114', '5124')
                         and x.pmtit = 5
                         and x.pmcap = 1
                         and x.pmpzo = 4
                         and x.pcnivc = 461)
                 and t.hcodmo = 2 ---5124,5114  
              union all
              ---- PENALIDAD: 2
              select nvl(sum(t.hcimp1), 0)
                from fsh016 t
               where t.pgcod = pn_pgc
                 and t.hcmod = pn_mod
                 and t.hsucor = pn_suc
                 and t.htran = pn_trx
                 and t.hnrel = pn_rel
                 and t.hfcon = pn_fecha
                 and t.hrubro in
                     (select x.rubro
                        from fsd014 x
                       where substr(x.rubro, 1, 4) in ('5117', '5127')
                         and x.pmtit = 5
                         and x.pmcap = 1
                         and x.pmpzo = 7
                         and x.pcnivc = 461)
                 and t.hcodmo = 2
              union all
              --- DESGRAVAMEN: 3
              select nvl(sum(t.hcimp1), 0)
                from fsh016 t
               where t.pgcod = pn_pgc
                 and t.hcmod = pn_mod
                 and t.hsucor = pn_suc
                 and t.htran = pn_trx
                 and t.hnrel = pn_rel
                 and t.hfcon = pn_fecha
                 and t.hrubro in ('2514020000005', '2524020000005')
                 and t.hcodmo = 2
              union all
              ---- SEGURO FAMILIA: 3
              select nvl(sum(t.hcimp1), 0)
                from fsh016 t
               where t.pgcod = pn_pgc
                 and t.hcmod = pn_mod
                 and t.hsucor = pn_suc
                 and t.htran = pn_trx
                 and t.hnrel = pn_rel
                 and t.hfcon = pn_fecha
                 and t.hrubro in ('2514020000013', '2524020000013')
                 and t.hcodmo = 2
              union all
              ---- MICROSEGURO: 3
              select nvl(sum(t.hcimp1), 0)
                from fsh016 t
               where t.pgcod = pn_pgc
                 and t.hcmod = pn_mod
                 and t.hsucor = pn_suc
                 and t.htran = pn_trx
                 and t.hnrel = pn_rel
                 and t.hfcon = pn_fecha
                 and t.hrubro in ('2514020000008', '2524020000008')
                 and t.hcodmo = 2
              union all
              ---- MOVIGAS: 3
              select nvl(sum(t.hcimp1), 0)
                from fsh016 t
               where t.pgcod = pn_pgc
                 and t.hcmod = pn_mod
                 and t.hsucor = pn_suc
                 and t.htran = pn_trx
                 and t.hnrel = pn_rel
                 and t.hfcon = pn_fecha
                 and t.hrubro in ('2514020000002', '2524020000002')
                 and t.hcodmo = 2
              union all
              ---- GARANTIA: 3
              select nvl(sum(t.hcimp1), 0)
                from fsh016 t
               where t.pgcod = pn_pgc
                 and t.hcmod = pn_mod
                 and t.hsucor = pn_suc
                 and t.htran = pn_trx
                 and t.hnrel = pn_rel
                 and t.hfcon = pn_fecha
                 and t.hrubro in ('2514020000007', '2524020000007')
                 and t.hcodmo = 2
              --2023.07.18 dcastro se agrego
              -- multiriesgo     2514020000015
              union all
              select nvl(sum(t.hcimp1), 0)
                from fsh016 t
               where t.pgcod = pn_pgc
                 and t.hcmod = pn_mod
                 and t.hsucor = pn_suc
                 and t.htran = pn_trx
                 and t.hnrel = pn_rel
                 and t.hfcon = pn_fecha
                 and t.hrubro in ('2514020000015', '2524020000015')
                 and t.hcodmo = 2
              -- seguro AGRICOLA   2514020000020
              union all
              select nvl(sum(t.hcimp1), 0)
                from fsh016 t
               where t.pgcod = pn_pgc
                 and t.hcmod = pn_mod
                 and t.hsucor = pn_suc
                 and t.htran = pn_trx
                 and t.hnrel = pn_rel
                 and t.hfcon = pn_fecha
                 and t.hrubro in ('2514020000020', '2524020000020')
                 and t.hcodmo = 2
              -- Seguro Desempleo  2514020000022
              union all
              select nvl(sum(t.hcimp1), 0)
                from fsh016 t
               where t.pgcod = pn_pgc
                 and t.hcmod = pn_mod
                 and t.hsucor = pn_suc
                 and t.htran = pn_trx
                 and t.hnrel = pn_rel
                 and t.hfcon = pn_fecha
                 and t.hrubro in ('2514020000022', '2524020000022')
                 and t.hcodmo = 2
              --2023.07.18 dcastro se agrego
              ) f;
    exception
      when others then
        lc_sumc := 0;
    end;
  
    return lc_sumc;
  
  end fn_sumatoria_total;
  -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --  
  -- *** PROC. GENERAL MODIFICADO POR SHEDULERS
  procedure sp_tra_validas_HIS_M(pd_pgfape in date, pc_sucurs in number) is
  
    pn_pgcod number;
    lc_serie char(4);
    lc_corre char(8);
  
    ln_relant  number(4) := 0;
    lc_hipo    char(2);
    ln_emp     number(3);
    ln_mod     number(3);
    ln_suc     number(3);
    ln_mda     number(4);
    ln_pap     number(4);
    ln_cta     number(9);
    ln_ope     number(9);
    ln_sbo     number(3);
    ln_top     number(3);
    lc_flg     char(1) := 'N'; --controla que sea hipotecario
    lc_flgc    char(1);
    pn_ordinal number(2);
    lc_flg465  char(1) := 'N'; --controla que no exista registro AQPA465
  
    ln_modulo number(3) := 0;
    ln_tran   number(3) := 0;
    ln_sucur  number(3) := 0;
  
    ln_rubro number;
  
    pn_pais   number(3);
    pn_petdoc number(2);
    pn_pendoc char(12);
    lc_tipper char(1);
  
    lc_coderr char(100);
    lc_msgerr char(1000);
  
    pd_fecpro DATE := pd_pgfape;
    --pd_fecpro date;--mod@abr20181207
  
    ln_flag   number;
    ln_tipfin char(1);
    lc_flr    char(1);
    lc_fcont  number;
    lc_ftran  number;
  
    cursor transacciones is
    
      select a.jaqz675cod  pgcod,
             a.jaqz675mod  hcmod,
             a.jaqz675suc  hsucor,
             a.jaqz675trn  htran,
             a.jaqz675nre  hnrel,
             a.jaqz675fco  hfcon,
             a.jaqz675tru  txtrub,
             a.jaqz675cor  hcord,
             a.jaqz675toe  txoren,
             a.jaqz675tor  txtord,
             b.st171hcpcod st171hcpcod,
             b.se170hvnro  se170hvnro,
             b.se170hvchr  se170hvchr
        from jaqz675 a, fse170h b
       where a.jaqz675cod = b.sd170hdoemp
         and a.jaqz675tru = b.sd170hdoid
         and a.jaqz675cpc = b.st171hcpcod
         and a.jaqz675fco = b.sd170hfecha
         and a.jaqz675fco = pd_fecpro
            
            -----
            
            --and a.jaqz675cod = 1
            --and a.jaqz675mod = 30
         and a.jaqz675suc = pc_sucurs
            --and a.jaqz675trn = 100
            --and a.jaqz675nre in (3)
            
            ---
            
         and (a.jaqz675mod, a.jaqz675trn) not in ----EXCLUYE A LOS GRAVADOS
             (select k.tp1nro1, k.tp1nro2
                from fst198 k
               where k.tp1cod1 = 11120
                 and k.tp1corr1 = 3
                 and k.tp1corr2 = 1
                 and tp1corr3 > 0)
      
      /*and a.jaqz675mod = 50
      and a.jaqz675trn = 503 
      and a.jaqz675nre in (17,18,19,20,21,22,23,24)*/
      
       order by a.jaqz675cod,
                a.jaqz675mod,
                a.jaqz675suc,
                a.jaqz675trn,
                a.jaqz675nre,
                a.jaqz675fco;
  
  begin
    begin
    
      --mod@abr20181207
      update tab_jobs g
         set g.d_fecini = sysdate
       where g.n_numer1 = 1 --pn_numsuc
         and g.c_codage = 'FEI';
      commit;
      --pd_fecpro := to_date(ld_fecpro,'yyyymmdd');
      --mod@abr20181207
    
      --25012019 dcastro
      begin
        select c.tp1nro1
          into ln_flag
          from fst198 c
         where c.tp1cod = 1
           and c.tp1cod1 = 11120
           and c.tp1corr1 = 7
           and c.tp1corr2 = 1;
      exception
        when others then
          null;
      end;
      --25012019      
    
      for p in transacciones loop
      
        --Verifica que no exista en cabecera AQPA465 
        Begin
          select 'S'
            into lc_flg465
            from aqpa465 a
           where a.aqpa465pgcod = p.pgcod
             and a.aqpa465mod = p.hcmod
             and a.aqpa465sucor = p.hsucor
             and a.aqpa465tran = p.htran
             and a.aqpa465rel = p.hnrel
             and a.aqpa465con = p.hfcon
             and rownum = 1;
        exception
          when others then
            lc_flg465 := 'N';
        end;
      
        if lc_flg465 = 'N' then
        
          --validar concepto 
          --11120 1 3 Codigos de conc no considerar 
          /*
          begin
            select 'S'
              into lc_flgc
              from fst198 a
             where a.tp1cod = 1
               and a.tp1cod1 = 11120
               and a.tp1corr1 = 1
               and a.tp1corr2 = 3
               and a.tp1corr3 >= 1
               and a.tp1nro1 = p.txoren - 100;
          exception
            when others then
              lc_flgc := 'N';
          end;
          */
        
          --if lc_flgc = 'N' then
        
          --obtener cuenta moneda hora fecha
          Begin
          
            select a.sr171trord
              into pn_ordinal
              from fsr171 a
             where a.st171cpcod = 15
               and a.sr171tremp = p.pgcod --1
               and a.sr171trmod = p.hcmod --30
               and a.sr171trnro = p.htran; --100;   
          exception
            when others then
              null;
          end;
        
          /*20180625  
          begin
            select a.pgcod,
                   a.modulo,
                   a.itsucd,
                   a.moneda,
                   a.papel,
                   a.ctnro,
                   a.itoper,
                   a.itsubo,
                   a.ittope,
                   substr(a.rubro,5,2)
              into ln_emp,
                   ln_mod,
                   ln_suc,
                   ln_mda,
                   ln_pap,
                   ln_cta,
                   ln_ope,
                   ln_sbo,
                   ln_top,
                   lc_hipo
              from fsd016 a
             where a.pgcod  = p.pgcod
               and a.itmod  = p.hcmod
               and a.itsuc  = p.hsucor
               and a.ittran = p.htran
               and a.itnrel = p.hnrel
               and a.itord  = pn_ordinal;
          exception
               when others then null;
          end;
          if lc_hipo = '04' then
               lc_flg := 'S';
               else
                      lc_flg := 'N';
          end if;
          */
        
          begin
            pq_cr_factura_electronica.sp_cr_pk_credito(pc_aqpa465pgcod    => p.pgcod,
                                                       pc_aqpa465mod      => p.hcmod,
                                                       pc_aqpa465sucorend => p.hsucor,
                                                       pc_aqpa465tran     => p.htran,
                                                       pc_aqpa465rel      => p.hnrel,
                                                       pc_aqpa465ord      => pn_ordinal,
                                                       pd_aqpa465con      => p.hfcon,
                                                       pn_cod             => ln_emp,
                                                       pn_mod             => ln_mod,
                                                       pn_suc             => ln_suc,
                                                       pn_mda             => ln_mda,
                                                       pn_pap             => ln_pap,
                                                       pn_cta             => ln_cta,
                                                       pn_ope             => ln_ope,
                                                       pn_sbo             => ln_sbo,
                                                       pn_top             => ln_top,
                                                       pc_flag            => lc_flg,
                                                       pn_rubro           => ln_rubro);
          end;
        
          if lc_flg = 'S' then
          
            ---ln_flag: Comision 
            -- 3: consumo revolvente y no revolvente
          
            ---ln_flag: Comision 
            -- 4: hipotecario
            -- 3: consumo
          
            begin
              select 'S'
                into lc_flr
                from fst198 t
               where t.tp1cod = 1
                 and t.tp1cod1 = 11120
                 and t.tp1corr1 = 1
                 and t.tp1corr2 = 23
                 and t.tp1nro1 <> 0
                 and t.tp1nro1 = ln_rubro;
              --and t.tp1imp1 = 1;
            exception
              when others then
                lc_flr := 'N';
            end;
          
            --if (ln_flag = 0 and ln_rubro in (3,4)) or ln_flag = 1 then
            if (ln_flag = 0 and lc_flr = 'S') or ln_flag = 1 then
              --25012019
            
              -- Se verifica si el rubro se encuentra activo para F. E.
              begin
                select t.tp1imp1
                  into lc_fcont
                  from fst198 t
                 where t.tp1cod = 1
                   and t.tp1cod1 = 11120
                   and t.tp1corr1 = 1
                   and t.tp1corr2 = 23
                   and t.tp1nro1 <> 0
                   and t.tp1nro1 = ln_rubro
                   and t.tp1imp1 = 1;
              exception
                when others then
                  null;
              end;
              --
            
              pn_pgcod := p.pgcod;
              /*
              if ln_relant <> p.hnrel or p.hcmod <> ln_modulo or p.htran <> ln_tran or  p.hsucor <> ln_sucur  then   
                     begin
                       pq_cr_facturacion.sp_cr_fac_hipotecario(ln_rubro => 4,
                                                               lc_descripcion => 'SEQ_HIPOTECARIO_COR',
                                                               lc_serie => lc_serie,
                                                               lc_correlativo => lc_corre);
                       
                     end;
              
              end if;
                      
              
              ln_relant := p.hnrel;
              ln_modulo := p.hcmod;
              ln_tran :=   p.htran;
              ln_sucur :=  p.hsucor;*/
            
              if ln_relant <> p.hnrel or p.hcmod <> ln_modulo or
                 p.htran <> ln_tran or p.hsucor <> ln_sucur then
              
                lc_serie := null;
                lc_corre := null;
                /*
                  begin
                    pq_cr_facturacion.sp_cr_fac_hipotecario(ln_rubro => 4,
                                                            lc_descripcion => 'SEQ_HIPOTECARIO_COR',
                                                            lc_serie => lc_serie,
                                                            lc_correlativo => lc_corre);
                    
                  end;
                */
              
                begin
                  ---se obtiene NDI/ TIPO de doc                  
                  select a.pepais, a.petdoc, a.pendoc
                    into pn_pais, pn_petdoc, pn_pendoc
                    from fsr008 a
                   where a.ctnro = ln_cta ---
                     and a.cttfir = 'T';
                exception
                  when others then
                    null;
                end;
              
                -- Se verifica activación para F. E.
                if lc_fcont = 1 then
                
                  ---Verificar si el documento fue emitido con serie y número
                  ---si IdDocumento = 13
                  begin
                    select 'S'
                      into ln_tipfin
                      from aqpb056 a
                     where a.aqpb056pgc = p.pgcod
                       and a.aqpb056mod = p.hcmod
                       and a.aqpb056suc = p.hsucor
                       and a.aqpb056trx = p.htran
                       and a.aqpb056rel = p.hnrel
                       and a.aqpb056fco = p.hfcon
                       and a.aqpb056tco = '13';
                  
                  exception
                    when others then
                    
                      begin
                      
                        select 'S'
                          into ln_tipfin
                          from aqpb056h a
                         where a.aqpb056hpgc = p.pgcod
                           and a.aqpb056hmod = p.hcmod
                           and a.aqpb056hsuc = p.hsucor
                           and a.aqpb056htrx = p.htran
                           and a.aqpb056hrel = p.hnrel
                           and a.aqpb056hfcon = p.hfcon
                           and a.aqpb056htcomf = '13';
                      
                      exception
                        when others then
                          ln_tipfin := 'N';
                      end;
                    
                    --
                  end;
                
                  -- Verificar que el módulo/transacción estén habilitados
                  begin
                    select count(*)
                      into lc_ftran
                      from fst198 t
                     where t.tp1cod = 1
                       and t.tp1cod1 = 11120
                       and t.tp1corr1 = 10
                       and t.tp1corr2 = 1
                       and t.tp1corr3 <> 0
                       and t.tp1imp1 = 1
                       and t.tp1nro1 = p.hcmod
                       and t.tp1nro2 = p.htran;
                  exception
                    when others then
                      null;
                  end;
                
                  if ln_tipfin = 'S' and lc_ftran > 0 then
                    ---Si ha sido registrado en tipfin
                    ----->>> 
                    begin
                      --select to_char(a.aqpb056seri), a.aqpb056num
                      select to_char(a.aqpb056ser), a.aqpb056num
                        into lc_serie, lc_corre
                        from aqpb056 a
                       where a.aqpb056pgc = p.pgcod
                         and a.aqpb056mod = p.hcmod
                         and a.aqpb056suc = p.hsucor
                         and a.aqpb056trx = p.htran
                         and a.aqpb056rel = p.hnrel
                         and a.aqpb056fco = p.hfcon
                         and a.aqpb056tco = '13';
                    
                    exception
                      when others then
                      
                        begin
                        
                          select to_char(a.aqpb056hseri), a.aqpb056hnum
                            into lc_serie, lc_corre
                            from aqpb056h a
                           where a.aqpb056hpgc = p.pgcod
                             and a.aqpb056hmod = p.hcmod
                             and a.aqpb056hsuc = p.hsucor
                             and a.aqpb056htrx = p.htran
                             and a.aqpb056hrel = p.hnrel
                             and a.aqpb056hfcon = p.hfcon
                             and a.aqpb056htcomf = '13';
                        
                        exception
                          when others then
                            lc_coderr := sqlcode;
                            lc_msgerr := trim(sqlerrm);
                          
                            insert into aqpa460E
                              (aqpa460eserie,
                               aqpa460ecorr,
                               aqpa460epgcod,
                               aqpa460emod,
                               aqpa460esucorend,
                               aqpa460etran,
                               aqpa460erel,
                               aqpa460econ,
                               aqpa460etip,
                               Aqpa460eacoe,
                               Aqpa460eamsge)
                            values
                              (null,
                               null,
                               p.pgcod,
                               p.hcmod,
                               p.hsucor,
                               p.htran,
                               p.hnrel,
                               p.hfcon,
                               'S',
                               lc_coderr,
                               lc_msgerr);
                            commit;
                          
                        end;
                      
                    end;
                  
                  end if;
                
                end if;
              
                ----
              end if;
            
              ln_relant := p.hnrel;
              ln_modulo := p.hcmod;
              ln_tran   := p.htran;
              ln_sucur  := p.hsucor;
            
              --if Flag='N' then se comento
              --mod@abr 20181206
              if lc_serie is null then
              
                insert into aqpa460E
                  (aqpa460eserie,
                   aqpa460ecorr,
                   aqpa460epgcod,
                   aqpa460emod,
                   aqpa460esucorend,
                   aqpa460etran,
                   aqpa460erel,
                   aqpa460econ,
                   aqpa460etip,
                   Aqpa460eacoe,
                   Aqpa460eamsge)
                values
                  (null,
                   null,
                   p.pgcod,
                   p.hcmod,
                   p.hsucor,
                   p.htran,
                   p.hnrel,
                   p.hfcon,
                   'M',
                   lc_coderr,
                   lc_msgerr);
                commit;
              else
                begin
                  insert into aqpa463
                    (aqpa463txtrub,
                     aqpa463pgcod,
                     aqpa463hcmod,
                     aqpa463hsucor,
                     aqpa463htran,
                     aqpa463hnrel,
                     aqpa463hfcon,
                     aqpa463hcord,
                     aqpa463txoren,
                     aqpa463txtord,
                     aqpa463hcpcod,
                     aqpa463hvnro,
                     aqpa463hvchr,
                     aqpa463serie,
                     aqpa463corre,
                     aqpa463emp,
                     aqpa463mod,
                     aqpa463suc,
                     aqpa463mda,
                     aqpa463pap,
                     aqpa463cta,
                     aqpa463ope,
                     aqpa463sbo,
                     aqpa463top,
                     aqpa463hip,
                     aqpa463tcre -- guardar tipo de crédito
                     
                     )
                  values
                    (p.txtrub,
                     p.pgcod,
                     p.hcmod,
                     p.hsucor,
                     p.htran,
                     p.hnrel,
                     p.hfcon,
                     p.hcord,
                     p.txoren,
                     p.txtord,
                     p.hcord,
                     p.se170hvnro,
                     p.se170hvchr,
                     lc_serie,
                     lc_corre,
                     ln_emp,
                     ln_mod,
                     ln_suc,
                     ln_mda,
                     ln_pap,
                     ln_cta,
                     ln_ope,
                     ln_sbo,
                     ln_top,
                     lc_hipo,
                     ln_rubro);
                  commit;
                exception
                  when others then
                    lc_coderr := sqlerrm;
                    /*INSERT INTO LOG_ERROR_BANDEJA
                      (N_NRO, C_CODBDJ, C_DESERR, D_FECERR)
                    VALUES
                      (0,
                       'FEI',
                       1 \*n_numsuc*\
                       || lc_coderr,
                       TRUNC(SYSDATE));
                    COMMIT;*/
                end;
              end if;
            end if; --25012019 dcastro
          
          end if;
        
          --end if;
        
        end if;
        commit;
      end loop;
      Commit;
    
      --mod@abr 20181207
      begin
        ---agregado paso 2
        -- Call the procedure
        pq_cr_factura_electronica.sp_cr_Detalle_Factura_M(pd_pgfape,
                                                          pc_sucurs);
      end;
      --mod@abr 20181207
    
    end;
  
    update tab_jobs g
       set g.d_fecfin = sysdate
     where g.n_numer1 = 1 -- pn_numsuc
       and g.c_codage = 'FEI';
    commit;
  EXCEPTION
    when others then
      lc_coderr := substr(sqlerrm, 1, 200);
      update tab_jobs g
         set g.c_inderr = 'S', g.c_deserr = lc_coderr
       where g.n_numer1 = 1 --pn_numsuc
         and g.c_codage = 'FEI';
      commit;
      return;
    
  end sp_tra_validas_HIS_M;
  -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --            
  procedure sp_cr_Detalle_Factura_M(pd_pgfape in date, pc_sucurs in number) is
  
    pc_fecha    varchar2(80);
    lv_codtdocC varchar2(1); --05/04/2023 dcastro 
  
    cursor aqpa463 is
    
      select *
        from aqpa463 b
       where b.aqpa463hfcon = pd_pgfape --mod@abr 20180707 
            
            ---
            
            --and b.aqpa463pgcod = 1
            --and b.aqpa463hcmod = 30
         and b.aqpa463hsucor = pc_sucurs
            --and b.aqpa463htran = 100
            --and b.aqpa463hnrel = 3
            
            --
            
         and (b.aqpa463hcmod, b.aqpa463htran) not in ----EXCLUYE A LOS GRAVADOS
             (select k.tp1nro1, k.tp1nro2
                from fst198 k
               where k.tp1cod1 = 11120
                 and k.tp1corr1 = 3
                 and k.tp1corr2 = 1
                 and tp1corr3 > 0)
      
      -- and b.aqpa463serie='BF01' --comentar despues
      -- and b.aqpa463corre =38679 
      /* or (b.aqpa463serie='FH01' --comentar despues
      and b.aqpa463corre in ( 10253) )
      */
       order by b.aqpa463hnrel asc, b.aqpa463txoren asc;
  
    lc_coderr char(100);
    lc_msgerr char(1000);
  
    ln_cta           number(9);
    lc_hor           char(8);
    ld_fec           date;
    lc_flg           char(1) := 'N';
    pn_pais          number;
    pn_monto_total_1 number(12, 2) := 0;
    result           character(100);
    pd_pgfape2       date;
    ln_mda           number(4);
    ln_nroitem       number(12) := 0;
    ln_cant          number(12, 10);
    lc_codpla        char(3);
    ln_docemp        number(2);
    pv_tdoc          char(25);
    lc_sistemi       char(6);
  
    lv_destiptrb varchar2(6);
    ln_MONTO     number;
  
    lc_contrato varchar2(50);
    lv_tipemp   varchar2(1);
    lv_ruc      varchar2(11);
    lv_rzn      varchar2(1500);
    lv_ubg      varchar2(6);
    lv_NCOM     varchar2(1500);
    lv_CALLE    varchar2(200);
    --lv_URBA        varchar2(25);
    lv_DEPA  varchar2(100);
    lv_PROV  varchar2(30);
    lv_DIST  varchar2(30);
    lv_TELF  varchar2(20);
    lv_WEB   varchar2(100);
    lv_CPAIS varchar2(2);
    --lv_CESUN       varchar2(4);
    lv_codtipo      varchar2(2);
    lv_tipomda      varchar2(3);
    lv_correo       varchar2(100);
    lv_glosa        varchar2(30);
    lv_COMA         varchar2(20);
    lv_TPLA         varchar2(3);
    lv_tipoope      varchar2(4);
    lv_TPLCO        varchar2(3);
    lv_CLOG         varchar2(3);
    lv_codtdoc      varchar2(1);
    lc_pendoc       char(12);
    lv_pendoc       varchar2(15);
    lv_penom        varchar2(1500);
    lv_hora         varchar2(8);
    ln_SIMC         number(12, 2) := 0;
    ln_SVITM        number(12, 2) := 0;
    ln_SPVI         number(12, 2) := 0;
    lv_TXML         varchar2(3);
    lv_ubgCli       varchar2(6);
    lv_sngc13dir    varchar2(500);
    lv_urb          varchar2(100);
    lv_fst071dsc1   varchar2(500);
    lv_locnom1      varchar2(500);
    lv_depnom1      varchar2(500);
    lv_cpai         varchar2(2);
    lv_PNETU        varchar2(3); ------------
    lc_oneroso      varchar2(1);
    ln_mtoconce     number; --(12,10):= 0;
    ln_mtoconce_ant number; --(12,10):= 0;
    ln_VVUIG        number; --(12):= 0;
    lv_desconce     varchar2(500);
    lv_infpredio    varchar2(500);
    ln_PRVIT        number(15, 2) := 0;
    lv_MEDEM        varchar2(50);
    lv_CSUNA        varchar2(8);
    lv_CPGS1        varchar2(14);
    ln_ITITM        number(12, 2) := 0; ---2018.10.19
    ln_IMPTB        number(12, 2) := 0;
    ln_IMPEX        number(12, 2) := 0;
    lv_afecigv      varchar2(2);
    lv_SISC         varchar2(2);
    lv_idtrbsunat   varchar2(4);
    lv_nomtrbsunat  varchar2(6);
    lv_codun        varchar2(3);
    ln_MBIM         number(12, 2) := 0;
    ln_TAIMP        number(12, 2) := 0; --2018.10.19
    ln_CDLEY        number(4) := 0;
    lv_TELEY        varchar2(200);
    lv_TEXT1        varchar2(1000);
    lv_TEXT2        varchar2(1000);
    lv_TRECV        varchar2(1000);
    lv_TEMPL        varchar2(3);
    lv_SUBJE        varchar2(100);
    lv_VPCVA        varchar2(15);
    lv_NEXP         varchar2(10);
    lv_CIND         varchar2(1);
    lv_partida      varchar2(50);
    lv_NCONT        varchar2(50);
    lv_fecoto       varchar2(10);
    ld_fecoto       date;
    lv_cdisn        varchar2(6);
    lv_direccionH   varchar2(100);
    lv_urbaH        varchar2(50);
    lv_dptoH        varchar2(50);
    lv_provH        varchar2(50);
    lv_distH        varchar2(500);
    ln_MTOTAL       number(12, 2) := 0;
    ln_BAIMP        number(12, 2) := 0;
    ln_MTIMP        number(12, 2) := 0;
    ln_PCIMA        number(12, 2) := 0;
    ln_BSIMP        number(12, 2) := 0;
    ln_VAIMP        number(12, 2) := 0;
    ln_MTINF        number(12, 2) := 0;
    ln_MTGRT        number(12, 2) := 0;
    ln_BSIMPS       number(12, 2) := 0;
    ln_MTOTI        number(12, 2) := 0;
    ln_petdoc       number(2);
    lv_CTPR         varchar(2);
    lv_rzn1         varchar2(30);
    lv_rzn2         varchar2(30);
    lc_codsunat     varchar2(4);
  
    lc_nomcaja char(70);
    lc_nom1    char(30);
    lc_nom2    char(30);
  
    ln_item number(12);
  
    ln_mtoDifer number(17, 2);
    ln_mtoRedon number(17, 2);
  
    ld_fecSis date; --mod@abr 20180709
  
    lc_existe char(1) := 'N'; --mod@abr 20180824
  
    lv_sngc13dirFin varchar2(500); --mod@abr 20180905
  
    ln_guiaCP      number; --2018.10.10
    ln_mtoImpuesto number; --2018.10.15
    lv_desmda      varchar2(30); --2018.10.18
  
    /*
    pc_AQPA465SERIE  aqpa460.aqpa460seri%type;
    pc_AQPA465CORR  aqpa460.aqpa460num%type;
    pc_AQPA465PGCOD aqpa460.
    pc_AQPA465MOD   ,
    pc_AQPA465SUCOREND
    pc_AQPA465TRAN    
    pc_AQPA465REL    ,
    pc_AQPA465CON,
    */
  
    lc_flr    char(1);
    lc_fcont  number;
    ln_tipfin char(1);
    lc_ftran  number;
  
  begin
    begin
    
      for p in aqpa463 loop
      
        --mod@abr 20180824
        --Verificar si existe en aqpa460
        lc_existe := 'N';
        Begin
          select 'S'
            into lc_existe
            from aqpa460 a
           where a.aqpa460seri = p.aqpa463serie
             and a.aqpa460num = p.aqpa463corre
             and a.aqpa460ore = P.AQPA463TXOREN
             and rownum = 1;
        exception
          when others then
            lc_existe := 'N';
        end;
        --mod@abr 20180824
        if lc_existe = 'N' then
          /*
           Pq_Cr_Factura_Electronica.sp_cr_cobroEfectivo(p.aqpa463pgcod,
                                                         p.aqpa463hcmod,
                                                         p.aqpa463hsucor,
                                                         p.aqpa463htran,
                                                         p.aqpa463hnrel,
                                                         p.aqpa463hfcon,
                                                         p.aqpa463serie,
                                                         p.aqpa463corre,
                                                         pn_monto_total_1);
          */
          begin
            -- Call the function
            pn_monto_total_1 := pq_cr_factura_electronica.fn_sumatoria_total(pn_pgc   => p.aqpa463pgcod,
                                                                             pn_mod   => p.aqpa463hcmod,
                                                                             pn_suc   => p.aqpa463hsucor,
                                                                             pn_trx   => p.aqpa463htran,
                                                                             pn_rel   => p.aqpa463hnrel,
                                                                             pn_fecha => p.aqpa463hfcon);
          end;
        
          --validar concepto 
          --11120 1 3 Codigos de conc no considerar 
          begin
            select 'S'
              into lc_flg
              from fst198 a
             where a.tp1cod = 1
               and a.tp1cod1 = 11120
               and a.tp1corr1 = 1
               and a.tp1corr2 = 3
               and a.tp1corr3 >= 1
               and a.tp1nro1 = p.aqpa463txoren - 100;
          exception
            when others then
              lc_flg := 'N';
          end;
        
          --obtener cuenta moneda hora fecha
          ln_cta := p.aqpa463cta;
          ln_mda := p.aqpa463mda;
        
          begin
            select a.ithora, a.itfcon
              into lc_hor, ld_fec
              from fsd015 a ----cabecera asiento
             where a.pgcod = p.aqpa463pgcod
               and a.itmod = p.aqpa463hcmod
               and a.itsuc = p.aqpa463hsucor
               and a.ittran = p.aqpa463htran
               and a.itnrel = p.aqpa463hnrel;
          exception
            when others then
              null;
          end;
        
          begin
          
            result := pq_cr_factura_electronica.dintex(pn_monto_total_1);
          end;
        
          ----------Obtener codigo de sunat
          begin
            select lpad(a.tp1nro2, 4, '0')
              into lc_codsunat
              from fst198 a
             where a.tp1cod = 1
               and a.tp1cod1 = 11120
               and a.tp1corr1 = 1
               and a.tp1corr2 = 500
               and a.tp1nro1 = p.aqpa463hsucor;
          exception
            when others then
              null;
          end;
        
          ----Obtener DNI
          begin
            -- Call the procedure
            pq_cr_factura_electronica.sp_fecha_sys(pc_fecha); --dni
          end;
        
          --mod@abr 20181219
          pq_cr_factura_electronica.sp_cr_Dif_Red(pc_AQPA465PGCOD    => p.aqpa463pgcod,
                                                  pc_AQPA465MOD      => p.aqpa463hcmod,
                                                  pc_AQPA465SUCOREND => p.aqpa463hsucor,
                                                  pc_AQPA465TRAN     => p.aqpa463htran,
                                                  pc_AQPA465REL      => p.aqpa463hnrel,
                                                  pd_AQPA465CON      => p.aqpa463hfcon,
                                                  pn_dif             => ln_mtoDifer,
                                                  pn_red             => ln_mtoRedon);
          --pn_monto_total_1 := pn_monto_total_1 - nvl(ln_mtoRedon, 0);
          --mod@abr 20181219
        
          if lc_flg = 'N' then
            --1:- SN
            --inserte conceptos de deuda como fila
          
            ln_mtoconce_ant := to_number(trim(p.aqpa463txtord),
                                         '99999999999999999.99'); --20180622
          
            if p.aqpa463txoren - 100 = 18 then
              ln_mtoconce := to_number(ln_mtoconce_ant) -
                             nvl(ln_mtoDifer, 0);
            else
              ln_mtoconce := to_number(ln_mtoconce_ant); ---verficar 222 
            end if;
          
            if ln_mtoconce <> 0 then
            
              --datos persona
              begin
              
                pq_cr_factura_electronica.sp_num_documento(ln_cta,
                                                           lc_pendoc,
                                                           lv_penom,
                                                           pv_tdoc,
                                                           pn_pais,
                                                           ln_petdoc,
                                                           pd_pgfape2);
              end;
            
              --datos direccion cliente
              begin
                -- Call the procedure
                pq_cr_factura_electronica.sp_dir_cliente(lc_pendoc,
                                                         ln_petdoc,
                                                         pn_pais,
                                                         lv_sngc13dir,
                                                         lv_fst071dsc1,
                                                         lv_locnom1,
                                                         lv_depnom1,
                                                         lv_ubgCli); ---dni  pn_pendoc
              end;
            
              --Codigo del Tipo de Comprobante
              --!!1 REVISAR AQUI: TIPO DE DOCUMENTO
              --2018.10.10
              /*if substr(p.aqpa463serie, 1, 1) = 'F' then
                ln_guiaCP := 1;    ----01: Factura
                --ln_guiaCP := 5;      ----13: Documento Financiero
              elsif substr(p.aqpa463serie, 1, 1) = 'B' then
                ln_guiaCP := 3;    ----03: Boleta
                --ln_guiaCP := 5;      ----13: Documento Financiero
              else
                ln_guiaCP := null;
              end if;*/
              --2018.10.10 
            
              -- >>> Inicio control
              ---ln_flag: Comision 
              -- 4: hipotecario
              -- 3: consumo
            
              begin
                select 'S'
                  into lc_flr
                  from fst198 t
                 where t.tp1cod = 1
                   and t.tp1cod1 = 11120
                   and t.tp1corr1 = 1
                   and t.tp1corr2 = 23
                   and t.tp1nro1 <> 0
                   and t.tp1nro1 = p.aqpa463tcre;
                --and t.tp1imp1 = 1;
              exception
                when others then
                  lc_flr := 'N';
              end;
            
              if lc_flr = 'S' then
              
                -- Se verifica si el rubro se encuentra activo para F. E.
                begin
                  select t.tp1imp1
                    into lc_fcont
                    from fst198 t
                   where t.tp1cod = 1
                     and t.tp1cod1 = 11120
                     and t.tp1corr1 = 1
                     and t.tp1corr2 = 23
                     and t.tp1nro1 <> 0
                     and t.tp1nro1 = p.aqpa463tcre
                     and t.tp1imp1 = 1;
                exception
                  when others then
                    null;
                end;
              
                if lc_fcont = 1 then
                  /*
                  if substr(p.aqpa463serie, 1, 1) in ('F','B') then
                    ln_guiaCP := 5;      ----13: Documento Financiero
                  else
                    ln_guiaCP := null;
                  end if;
                  */
                
                  ---Verificar si el documento fue emitido con serie y número
                  ---si IdDocumento = 13
                  begin
                    select 'S'
                      into ln_tipfin
                      from aqpb056 a
                     where a.aqpb056pgc = p.aqpa463pgcod
                       and a.aqpb056mod = p.aqpa463hcmod
                       and a.aqpb056suc = p.aqpa463hsucor
                       and a.aqpb056trx = p.aqpa463htran
                       and a.aqpb056rel = p.aqpa463hnrel
                       and a.aqpb056fco = p.aqpa463hfcon
                       and a.aqpb056tco = '13';
                  
                  exception
                    when others then
                    
                      begin
                      
                        select 'S'
                          into ln_tipfin
                          from aqpb056h a
                         where a.aqpb056hpgc = p.aqpa463pgcod
                           and a.aqpb056hmod = p.aqpa463hcmod
                           and a.aqpb056hsuc = p.aqpa463hsucor
                           and a.aqpb056htrx = p.aqpa463htran
                           and a.aqpb056hrel = p.aqpa463hnrel
                           and a.aqpb056hfcon = p.aqpa463hfcon
                           and a.aqpb056htcomf = '13';
                      
                      exception
                        when others then
                        
                          ln_tipfin := 'N';
                      end;
                    
                  end;
                
                  -- Verificar que el módulo/transacción estén habilitados
                  begin
                    select count(*)
                      into lc_ftran
                      from fst198 t
                     where t.tp1cod = 1
                       and t.tp1cod1 = 11120
                       and t.tp1corr1 = 10
                       and t.tp1corr2 = 1
                       and t.tp1corr3 <> 0
                       and t.tp1imp1 = 1
                       and t.tp1nro1 = p.aqpa463hcmod
                       and t.tp1nro2 = p.aqpa463htran;
                  exception
                    when others then
                      null;
                  end;
                  if ln_tipfin = 'S' and lc_ftran > 0 then
                  
                    if substr(p.aqpa463serie, 1, 1) in ('F', 'B') then
                      ln_guiaCP := 5; ----13: Documento Financiero
                    else
                      ln_guiaCP := null;
                    end if;
                  
                  end if;
                
                end if;
              
              end if;
            
              -- >>>>>>>>>
              /*
              if substr(p.aqpa463serie, 1, 1) in ('F','B') then
                ln_guiaCP := 5;      ----13: Documento Financiero
              else
                ln_guiaCP := null;
              end if;   
              */
              -- >>>>>>>>>
            
              begin
                --select '0' || to_char(a.tp1nro1)
                select lpad(trim(a.tp1nro1), 2, '0')
                  into lv_codtipo
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 7
                   and a.tp1corr3 = ln_guiaCP; --2018.10.10 se modifico codigo de guia para tipo comprobante
              exception
                when others then
                  null;
              end;
              -- >>>>>>>>>
            
              --Codigo tipo moneda
              begin
                select trim(a.tp1desc)
                  into lv_tipomda
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 8
                   and a.tp1corr3 >= 1
                   and a.tp1nro1 = ln_mda;
              exception
                when others then
                  null;
              end;
            
              --texto moneda  2018.10.18
              begin
                select trim(a.tp1desc)
                  into lv_desmda
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 2
                   and a.tp1corr2 = 5
                   and a.tp1corr3 >= 1
                   and a.tp1nro1 = ln_mda;
              exception
                when others then
                  null;
              end;
              ---  2018.10.18
            
              /*              --Codigo tipo documento cliente
                            begin
                              select to_char(a.tp1nro1)
                                into lv_codtdoc
                                from fst198 a
                               where a.tp1cod = 1
                                 and a.tp1cod1 = 11120
                                 and a.tp1corr1 = 1
                                 and a.tp1corr2 = 4
                                 and a.tp1nro2 = ln_petdoc;
                            exception
                              when others then
                                null;
                            end;
              */
              --Codigo tipo documento cliente
              begin
                select to_char(a.tp1nro1), substr(trim(TP1DESC), -1, 1)
                  into lv_codtdoc, lv_codtdocC
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 4
                   and a.tp1nro2 = ln_petdoc;
              exception
                when others then
                  null;
              end;
            
              --05/04/2023 dcastro se agrego nuevo tipo documento PTP
              if lv_codtdoc = 3 then
                lv_codtdoc := lv_codtdocC;
              end if;
              --05/04/2023 dcastro se agrego nuevo tipo documento PTP
            
              --Correo del cliente
              lv_correo := null;
              begin
                select substr(a.pextxt, 1, INSTR(a.pextxt, '\', 1) - 1)
                  into lv_correo
                  from fsx001 a
                 where a.pepais = pn_pais
                   and a.petdoc = ln_petdoc
                   and a.pendoc = lc_pendoc
                   and a.txcod = 0
                   and rownum = 1 --- 2021/11/11 dcastro se agrego condicion                   
                 order by a.pexren desc;
              exception
                when others then
                  null;
              end;
            
              --nro item
              ln_item := 0;
              begin
                select max(a.aqpa460item)
                  into ln_item
                  from aqpa460 a
                 where a.aqpa460seri = p.aqpa463serie
                   and a.aqpa460num = p.aqpa463corre;
              exception
                when too_many_rows then
                  begin
                    select max(a.aqpa460item)
                      into ln_item
                      from aqpa460 a
                     where a.aqpa460seri = p.aqpa463serie
                       and a.aqpa460num = p.aqpa463corre
                       and rownum = 1;
                  exception
                    when others then
                      null;
                  end;
                when no_data_found then
                  ln_item := 0;
                when others then
                  null;
              end;
              ln_nroitem := nvl(ln_item, 0) + 1;
            
              --monto conceptos
              --  ln_mtoconce := to_number(replace(trim(p.aqpa463txtord),'.',','));
            
              --       ln_mtoconce_ant:= round(trim(p.aqpa463txtord),2);
            
              --descripcion conceptos
              lv_desconce := trim(p.aqpa463hvchr);
            
              --Codigo de plantilla
              lc_codpla := 'EST';
            
              --- Sistema de Emicion 
              lc_sistemi := 'BANTOT';
            
              --Codigo tipo doc empresa
              begin
                select a.tp1nro1
                  into ln_docemp
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 4;
              exception
                when others then
                  null;
              end;
            
              begin
                select to_char(a.tp1nro1)
                  into lv_tipemp
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 4
                   and a.tp1corr3 >= 1
                   and a.tp1nro2 = ln_docemp;
              
              exception
                when others then
                  null;
              end;
              --ruc caja
              begin
                select trim(a.tp1desc)
                  into lv_ruc
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 1;
              exception
                when others then
                  null;
              end;
            
              --NOMBRE COMERCIAL caja
              begin
                select a.tp1desc
                  into lv_NCOM
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 5;
              exception
                when others then
                  null;
              end;
            
              --Ubigeo caja
              begin
                select trim(a.tp1desc)
                  into lv_ubg
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 6;
              exception
                when others then
                  null;
              end;
              ---------------------------------------campos parte 2
              ----------hora de transacion 
              begin
                select trim(a.aqpa463txtord)
                  into lv_hora
                  from aqpa463 a
                 where a.aqpa463pgcod = p.aqpa463pgcod
                   and a.aqpa463hcmod = p.aqpa463hcmod
                   and a.aqpa463hsucor = p.aqpa463hsucor
                   and a.aqpa463htran = p.aqpa463htran
                   and a.aqpa463hnrel = p.aqpa463hnrel
                   and a.aqpa463hfcon = p.aqpa463hfcon
                   and a.aqpa463serie = p.aqpa463serie
                   and a.aqpa463corre = p.aqpa463corre
                   and a.aqpa463txtord like '%:%';
              exception
                when others then
                  null;
              end;
            
              --mod@abr 20180907
              begin
                select pgfape into ld_fecSis from fst017 where pgcod = 1;
              exception
                when others then
                  null;
              end;
              if lv_hora is null then
              
                if ld_fecSis = p.aqpa463hfcon then
                
                  begin
                    select a.ithora
                      into lv_hora
                      from fsd015 a
                     where a.pgcod = p.aqpa463pgcod
                       and a.itsuc = p.aqpa463hsucor
                       and a.itmod = p.aqpa463hcmod
                       and a.ittran = p.aqpa463htran
                       and a.itnrel = p.aqpa463hnrel;
                  exception
                    when others then
                      null;
                  end;
                
                else
                  begin
                    select a.hhora
                      into lv_hora
                      from fsh015 a
                     where a.pgcod = p.aqpa463pgcod
                       and a.hsucor = p.aqpa463hsucor
                       and a.hcmod = p.aqpa463hcmod
                       and a.htran = p.aqpa463htran
                       and a.hnrel = p.aqpa463hnrel
                       and a.hfcon = p.aqpa463hfcon;
                  exception
                    when others then
                      null;
                  end;
                end if;
              
              end if;
              --mod@br 20180907
            
              --------tipo de operacion 
              begin
                select trim(a.tp1desc)
                  into lv_tipoope
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 11
                   and a.tp1corr3 = 1;
              exception
                when others then
                  null;
                
              end;
              -------Codigo de tipo de importe de afectacion
              Begin
                select to_char(a.tp1nro1)
                  into lc_oneroso
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 12
                   and a.tp1corr3 = 3;
              exception
                when others then
                  null;
              End;
            
              -----Afectaci?n del IGV  
              begin
                select to_char(a.tp1nro1)
                  into lv_afecigv
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 13
                   and a.tp1corr3 = 1;
              exception
                when others then
                  null;
                
              end;
            
              ---------Identificaci?n del tributo seg?n cat?logo SUNAT
              begin
                select to_char(a.tp1nro1), trim(a.tp1desc)
                  into lv_idtrbsunat, lv_nomtrbsunat
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 14
                   and a.tp1corr3 = 1;
              exception
                when others then
                  null;
              end; ---ojo
              ----------C?digo del Tipo de Tributo
              begin
                select trim(a.tp1desc)
                  into lv_destiptrb
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 14
                   and a.tp1corr3 = 2;
              exception
                when others then
                  null;
              end;
            
              /*2018.10.15 MONTO IGV */
              begin
                pq_cr_factura_electronica.sp_cr_cobroigv(pn_pgcod  => p.aqpa463pgcod,
                                                         pn_hcmod  => p.aqpa463hcmod,
                                                         pn_hsucor => p.aqpa463hsucor,
                                                         pn_htran  => p.aqpa463htran,
                                                         pn_hnrel  => p.aqpa463hnrel,
                                                         pn_hfcon  => p.aqpa463hfcon,
                                                         pc_serie  => p.aqpa463serie,
                                                         pn_corr   => p.aqpa463corre,
                                                         pn_mto    => ln_mtoImpuesto);
              
              end;
              /*2018.10.15 MONTO IGV */
            
              ---Monto del descuento o recargo
              ln_MONTO := 0;
            
              -----------------Descripcion del pais 
              begin
                Select trim(a.tp1desc)
                  Into lv_CPAIS
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 15
                   and a.tp1corr3 = 1;
              exception
                when others then
                  null;
              end;
            
              if ln_mtoImpuesto <> 0 then
                --2018.10.20
                lv_partida := null;
                --lc_contrato := null;   
                lv_direccionH := null;
                lv_urbaH      := null;
                lv_dptoH      := null;
                lv_provH      := null;
                lv_distH      := null;
                lv_cdisn      := null;
              
              else
                --2018.10.20
              
                ----------informacion del predio
                begin
                  pq_cr_factura_electronica.sp_cr_detalle_predio(pc_aqpa463mod => p.aqpa463mod,
                                                                 pc_aqpa463suc => p.aqpa463suc,
                                                                 pc_aqpa463mda => p.aqpa463mda,
                                                                 pc_aqpa463pap => p.aqpa463pap,
                                                                 pc_aqpa463cta => p.aqpa463cta,
                                                                 pc_aqpa463ope => p.aqpa463ope,
                                                                 pc_aqpa463sbo => p.aqpa463sbo,
                                                                 pc_aqpa463top => p.aqpa463top,
                                                                 pc_partida    => lv_partida,
                                                                 pc_contrato   => lc_contrato,
                                                                 pc_direccion  => lv_direccionH,
                                                                 pc_urba       => lv_urbaH,
                                                                 pc_dpto       => lv_dptoH,
                                                                 pc_prov       => lv_provH,
                                                                 pc_dist       => lv_distH,
                                                                 pc_ubigeo     => lv_cdisn);
                end;
              
              end if; --2018.10.20
            
              if lv_cdisn is null then
                --20180626
                lv_cdisn      := lv_ubgCli;
                lv_urbaH      := substr(lv_urb, 1, 25);
                lv_dptoH      := substr(lv_depnom1, 1, 30);
                lv_provH      := substr(lv_locnom1, 1, 30);
                lv_distH      := substr(lv_fst071dsc1, 1, 30);
                lv_direccionH := substr(lv_sngc13dir, 1, 100);
              end if;
            
              lc_contrato := lpad(to_char(p.aqpa463cta), 9, 0) ||
                             lpad(to_char(p.aqpa463mda), 3, 0) ||
                             lpad(to_char(p.aqpa463ope), 9, 0); --lv_text2; --numero credito
              lv_NCONT    := lc_contrato;
            
              ld_fecoto := pq_cr_factura_electronica.fn_fecha_desembolso(pc_aqpa463cta => p.aqpa463cta,
                                                                         pc_aqpa463ope => p.aqpa463ope);
            
              lv_fecoto := to_char(ld_fecoto, 'DD-MM-YYYY');
              --agregar a info predio G74.1, G74.2
              lv_infpredio := '0' || '0' || lv_partida || '|' ||
                              lc_contrato || '|' || lv_fecoto || '|' ||
                              lv_direccionH || '|' || lv_urbaH || '|' ||
                              lv_provH || '|' || lv_distH || '|' ||
                              lv_dptoH;
              lv_pendoc    := lc_pendoc;
            
              --Pais del cliente
            
              begin
                select trim(a.tp1desc)
                  into lv_cpai
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 20
                   and a.tp1NRO1 = pn_pais;
              exception
                when others then
                  null;
              end;
            
              --Producto del credito
              begin
                select to_char(p.aqpa463mod) || '-' || trim(a.tonom)
                  into lv_TEXT1
                  from fst004 a
                 where a.modulo = p.aqpa463mod
                   and a.totope = p.aqpa463top;
              
              exception
                when others then
                  null;
              end;
            
              --direccion
              begin
                select to_char(a.tp1desc)
                  into lv_CALLE
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 2;
              
              exception
                when others then
                  null;
              end;
            
              --telefono
              begin
                select trim(to_char(a.tp1desc))
                  into lv_TELF
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 3;
              exception
                when others then
                  null;
              end;
            
              Begin
                ---web de caja arequipa
                select trim(a.tp1desc)
                  into lv_web
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 12;
              exception
                when others then
                  null;
              End;
            
              --departamento
              begin
                select to_char(a.tp1desc)
                  into lv_DEPA
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 7;
              
              exception
                when others then
                  null;
              end;
            
              --provincia
              begin
                select to_char(a.tp1desc)
                  into lv_PROV
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 8;
              
              exception
                when others then
                  null;
              end;
            
              --distrito
              begin
                select to_char(a.tp1desc)
                  into lv_DIST
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 9;
              
              exception
                when others then
                  null;
              end;
            
              --razon social
            
              begin
                select to_char(a.tp1desc)
                  into lv_rzn1
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 10;
              
              exception
                when others then
                  null;
              end;
            
              begin
                select to_char(a.tp1desc)
                  into lv_rzn2
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 11;
              
              exception
                when others then
                  null;
              end;
              lv_rzn := trim(lv_rzn1) || ' ' || trim(lv_rzn2);
            
              lv_glosa := null;
              lv_TPLA  := 'EST';
              lv_TPLCO := 'EST';
              ln_SIMC  := null;
              ln_SVITM := pn_monto_total_1;
              ln_SPVI  := pn_monto_total_1;
              lv_TXML  := '2.1';
              lv_urb   := null;
              lv_PNETU := 'NIU';
              ln_cant  := 1;
              lv_CTPR  := '01';
              ln_VVUIG := ln_mtoconce;
              ln_PRVIT := ln_mtoconce;
              lv_MEDEM := 'UND';
              lv_CSUNA := '84121901';
              ln_ITITM := null;
              ln_IMPTB := null;
              ln_IMPEX := null;
              --lv_afecigv  := '9996';
              lv_SISC   := null;
              lv_codun  := 'FRE';
              ln_MBIM   := ln_mtoconce; --null; 20180623
              ln_TAIMP  := null;
              ln_CDLEY  := 1000;
              lv_TELEY  := trim(result) || ' ' || lv_desmda; --2018.10.17
              lv_TEXT2  := lpad(to_char(p.aqpa463cta), 9, 0) ||
                           lpad(to_char(p.aqpa463mda), 3, 0) ||
                           lpad(to_char(p.aqpa463ope), 9, 0);
              lv_TRECV  := lv_correo;
              lv_TEMPL  := 'EST';
              lv_SUBJE  := '0' || trim(lv_codtipo) || '-' || P.AQPA463SERIE || '-' ||
                           trim(to_char(P.AQPA463CORRE));
              lv_VPCVA  := null;
              lv_NEXP   := '0';
              lv_CIND   := '0';
              ln_MTOTAL := null;
              ln_BAIMP  := null;
              ln_MTIMP  := null;
              ln_PCIMA  := null;
              ln_BSIMP  := null;
              ln_VAIMP  := null;
              ln_MTINF  := pn_monto_total_1;
              ln_MTGRT  := null;
              ln_BSIMPS := null;
              ln_MTOTI  := null;
              lv_CPGS1  := null;
              lv_COMA   := to_char(p.aqpa463hfcon, 'yymmdd') ||
                           lpad(to_char(p.aqpa463hsucor), 3, 0) ||
                           lpad(to_char(p.aqpa463hcmod), 3, 0) ||
                           lpad(to_char(p.aqpa463htran), 3, 0) ||
                           lpad(to_char(p.aqpa463hnrel), 4, 0);
            
              /*2018.10.15 IGV*/
              if nvl(ln_mtoImpuesto, 0) <> 0 then
                --si existe impuesto
                ln_MTOTI  := null;
                ln_MTINF  := null;
                ln_MTGRT  := null;
                ln_BSIMPS := null;
                ln_MTIMP  := ln_mtoImpuesto;
                ln_IMPEX  := ln_mtoImpuesto;
                ln_ITITM  := ln_mtoImpuesto;
                ln_IMPTB  := ln_mtoImpuesto;
                ln_PCIMA  := 18;
                ln_TAIMP  := 18;
                ln_MTOTAL := ln_mtoconce;
                ln_BAIMP  := ln_mtoconce;
                ln_SVITM  := ln_mtoconce; --AQPA460SVITM
              
                lv_tipoope  := '0101'; --AQPA460TOPE  
                ln_SIMC     := ln_mtoImpuesto; --AQPA460SIMC   total impuesto
                lv_desconce := 'IGV'; --AQPA460DESC 
                lv_afecigv  := 10; --AQPA460AFIGV 
              
                lv_idtrbsunat  := 1000; -- AQPA460CODTB  
                lv_nomtrbsunat := 'IGV'; --AQPA460DSTRB  
                lv_codun       := 'VAT'; --AQPA460CODUN 
              
                ln_VVUIG := pn_monto_total_1;
              end if;
              /*2018.10.15 IGV*/
            
              ----------------------datos caja
              Begin
                ---razon social de caja arequipa
                select a.tp1desc
                  into lc_nom1
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 10;
              exception
                when others then
                  null;
              End;
            
              Begin
                ---razon social de caja arequipa
                select a.tp1desc
                  into lc_nom2
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 11;
              exception
                when others then
                  null;
              End;
            
              lc_nomcaja := trim(lc_nom1) || trim(lc_nom2);
            
              --mod@abr 20180903 modificacion de ubigeo TEMPORAL
              lv_sngc13dirFin := trim(lv_sngc13dir) || ' - ' ||
                                 trim(lv_fst071dsc1) || ' - ' ||
                                 trim(lv_locnom1) || ' - ' ||
                                 trim(lv_depnom1);
              lv_depnom1      := null;
              lv_locnom1      := null;
              lv_fst071dsc1   := null;
            
              --mod@abr 20180903 modificacion de ubigeo TEMPORAL
            
              --mod@abr 20180905
              if lv_correo is null then
                lv_correo := 'Reportefactele@cajaarequipa.pe';
              end if;
            
              if lv_TRECV is null then
                lv_TRECV := 'Reportefactele@cajaarequipa.pe';
              end if;
              --mod@abr 20180905
            
              ------insert detalle de factura
              BEGIN
                insert into AQPA460
                  (AQPA460TDOC, --Codigo del Tipo de Documento de Identidad oENEmpresa
                   AQPA460RUCC, --N?mero de documento de identidad del emisor oENEmpresa
                   AQPA460RSOC, --Apellidos y nombres o denominaci?n o raz?n social oENEmpresa
                   AQPA460CDIS, --Codigo de UBIGEO oENEmpresa
                   AQPA460NCOM, --Nombre Comercial oENEmpresa
                   AQPA460CALLE, --Direcci?n completa y detallada oENEmpresa
                   AQPA460URBA, --Urbanizacion o Zona  oENEmpresa
                   AQPA460DEPA, --Departamento, expresado textualmente  oENEmpresa
                   AQPA460PROV, --Provincia, expresarlo textualmente   oENEmpresa
                   AQPA460DIST, --Distrito, expresarlo textualmente oENEmpres
                   AQPA460TELF, --Telefono de la Empresa Emisora oENEmpres
                   AQPA460WEB, --Pagina Web del Emisor oENEmpres           
                   AQPA460CPAIS, --Codigo del Pais del Emisor oENEmpres
                   AQPA460CESUN, --C?digo del establecimiento de Sunat  oENEmpres
                   AQPA460SERI, --Serie del comprobante.  Datos del Comprobante
                   AQPA460NUM, --Numero Correlativo del comprobante. Datos del Comprobante
                   AQPA460FEMI, --Fecha de Emision del Comprobante Datos del Comprobante
                   AQPA460TCOMF, --Codigo del Tipo de Comprobante Datos del Comprobante
                   AQPA460MONE, --Codigo del Tipo de Moneda Datos del Comprobante
                   AQPA460CORRR, --El correo electr?nico del Receptor  Datos del Comprobante
                   AQPA460MGLO, --Multiples Informaci?n adicional u observacion del comprobante.  Datos del Comprobante
                   AQPA460COMA, --Numero Interno del Comprobante Datos del Comprobante
                   AQPA460TPLA, --Tiplo de Plantilla  Datos del Comprobante
                   AQPA460TOPE, --C?digo de Tipo de operaciones Datos del Comprobante
                   AQPA460TPLCO, --C?digo de plantilla de correo  Datos del Comprobante
                   AQPA460CLOG, --C?digo del tipo de Logo Datos del Comprobante
                   AQPA460TDOCR, --Codigo del tipo de documento de identificaci?n del Receptor Datos del Comprobante
                   AQPA460NRUC, --N?mero de documento de identificaci?n Datos del Comprobante
                   AQPA460RASOC, --Apellidos y nombres o denominaci?n o raz?n social Datos del Comprobante
                   AQPA460IMPT, --Importe total  a pagar Datos del Comprobante
                   AQPA460HEMI, --Hora de Emisi?n  Datos del Comprobante
                   AQPA460SIMC, --Suma de todos los impuestos del comprobante.  Datos del Comprobante
                   AQPA460SVITM, --Suma del valor de venta total de todos los items   Datos del Comprobante
                   AQPA460SPVI, --Suma de los precios de venta total de todos los items  Datos del Comprobante
                   AQPA460TXML, -- Indica el tipo de XML que se generar? Datos del Comprobante
                   --  no va para factura   --AQPA460SDREF, --Serie documento al que se aplica la nota. ENComprobanteMotivoDocumento
                   --  no va para factura   --AQPA460NDREF, --Numero  documento al que se aplica la nota.  ENComprobanteMotivoDocumento
                   --  no va para factura    --AQPA460CMEM,  --C?digo por el cual se emite la nota.  ENComprobanteMotivoDocumento
                   ---  no va para factura  --AQPA460SUST,  --Sustento ENComprobanteMotivoDocumentoSustento
                   --  no va para factura     AQPA460SERIE, --Serie del comprobante referenciado. Referencia a un comprobante
                   --  no va para factura     AQPA460NRO,   --N?mero del comprobante referenciado Referencia a un comprobante
                   ---  no va para factura   --AQPA460TCOMP, --C?digo del tipo de comprobante.  Referencia a un comprobante
                   ---  no va para factura  --AQPA460FDREF, --Fecha de emisi?n del comprobante referenciado. Referencia a un comprobante  
                   AQPA460CDIST, --C?digo de UBIGEO Datos adicionales del Receptor
                   AQPA460CALL, --Direcci?n completa y detallada Datos adicionales del Receptor
                   AQPA460URB, --Urbanizacion o Zona   Datos adicionales del Receptor
                   AQPA460DEP, --Departamento Datos adicionales del Receptor
                   AQPA460PRV, --Provincia   Datos adicionales del Receptor
                   AQPA460DST, --Distrito Datos adicionales del Receptor
                   AQPA460CPAI, --C?digo del Pa?s  Datos adicionales del Receptor
                   AQPA460ITEM, --N?mero de orden del Item ENComprobanteDetalle 
                   AQPA460PNETU, --Unidad de medida de los bienes vendidos por item (UN/ECE rec 20) ENComprobanteDetalle 
                   AQPA460CANTF, --Cantidad de unidades vendidas pot item (Q)  ENComprobanteDetalle 
                   AQPA460TOTAL, --Importe monetario que es el total de la l?nea de detalle, incluyendo variaciones de precio (subvenciones, cargos o descuentos) pero sin impuestos.  ENComprobanteDetalle 
                   AQPA460DETE, --Codigo de identificaci?n de Onerosidad del Item ENComprobanteDetalle 
                   AQPA460CTPR, --Codigo de tipo de importe de afectacion ENComprobanteDetalle 
                   /*ok */
                   AQPA460VVUN, --Valores de venta unitarios por item (VU) no incluye impuestos  ENComprobanteDetalle 
                   /*campos probl*/
                   AQPA460VVUIG, --Precio de Venta Unitario (Incluye impuestos)  ENComprobanteDetalle 
                   AQPA460DESC, -- Descripcion del producto ENComprobanteDetalle 
                   AQPA460MFUN, --Multi Descripcion,  puede tener varias desccripciones ENComprobanteDetalle 
                   AQPA460PRVIT, --Es el precio de venta ENComprobanteDetalle 
                   AQPA460MEDEM, --Unidad medida del emisor ENComprobanteDetalle 
                   AQPA460CSUNA, --C?digo producto establecido por Sunat   ENComprobanteDetalle 
                   AQPA460CPGS1, --C?digo de producto GS1  ENComprobanteDetalle 
                   AQPA460ITITM, --Impuesto total del item ENComprobanteDetalle 
                   AQPA460IMPTB, --Importe total de un tributo para este item Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460IMPEX, ---Importe expl?cito a tributar ( = Tasa Porcentaje * Base Imponible)   Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460AFIGV, --Afectaci?n del IGV  Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460SISC, --Sistema de ISC  (01=Especifico; 02= al valor; 03=PV al p?blico)  Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   /*ojo*/
                   AQPA460CODTB, --Identificaci?n del tributo seg?n cat?logo SUNAT Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460DSTRB, --Nombre del Tributo (IGV, IVAP, ISC)  Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460CODUN, --C?digo del Tipo de Tributo (UN/ECE 5153) Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460MBIM, --Monto base del impuesto Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460TAIMP, --Tasa aplicada del impuesto  Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460CDLEY, --Codigo de la Leyenda Utilizado para Leyendas
                   AQPA460TELEY, --Texto de la leyenda  Utilizado para Leyendas
                   AQPA460TEXT1, --Texto libre 1 : Producto  Informaci?n adicional para la visualizacion de representaciones impresas, antes definido por el integrador.
                   AQPA460TEXT2, --Texto libre 2 : N?mero de Cr?dito Informaci?n adicional para la visualizacion de representaciones impresas, antes definido por el integrador.
                   AQPA460TRECV, --Correo del receptor Utilizado para enviar correos adicionales con copia al Correo del Receptor, ingresado en ENComprobante.Correo
                   AQPA460TEMPL, --C?digo de Tipo de Plantilla  Utilizado para enviar correos adicionales con copia al Correo del Receptor, ingresado en ENComprobante.Correo
                   AQPA460SUBJE, --Asunto del correo Utilizado para enviar correos adicionales con copia al Correo del Receptor, ingresado en ENComprobante.Correo
                   AQPA460VPCVA, --Placa del vehiculo Informaci?n adicional del item
                   AQPA460NEXP, --N?mero de Expediente Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460CIND, --C?digo de indicador  Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460NPART, --N?mero de Partida Registral  Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460NCONT, --N?mero de contrato  Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460FOTRC, --Fecha de Otorgo de cr?dito   Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460CDISN, --C?digo de Ubigeo   Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460DIREH, --Direcci?n   Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460URBH, --Urbanizaci?n Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460PRVH, --Provincia   Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460DSTH, --Distrito   Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460DEPTH, --Departamento Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460MTOTAL, --Monto total Gravado (Sin impuesto)  Informaci?n de gravada                           
                   AQPA460BAIMP, --Base del impuesto  IGV del Gravado
                   AQPA460MTIMP, --Monto total solo del impuesto   IGV del Gravado
                   AQPA460PCIMA, --Porcentaje del impuesto aplicado  IGV del Gravado
                   AQPA460BSIMP, --Base del impuesto Otros impuestos del Gravado
                   AQPA460VAIMP, --Monto total solo del impuesto  Otros impuestos del Gravado
                   AQPA460MTINF, --Monto total Inafecto  Informaci?n de inafecto
                   AQPA460MTGRT, --Monto total Gratuito  Informaci?n de gratuito
                   AQPA460BSIMPS, --Base del impuesto Impuestos del Gratuito
                   AQPA460MTOTI, --Monto total de impuestos Impuestos del Gratuito
                   AQPA460PGC, --mod@abr 20180824
                   AQPA460MOD, --mod@abr 20180824  
                   AQPA460SUC, --mod@abr 20180824 
                   AQPA460TRX, --mod@abr 20180824
                   AQPA460REL, --mod@abr 20180824
                   AQPA460ORE --mod@abr 20180824
                   
                   )
                
                Values
                  (lv_tipemp, --AQPA460TDOC,  ok
                   lv_ruc, --AQPA460RUCC,  ok
                   lv_rzn, --AQPA460RSOC,  ok
                   lv_ubg, --AQPA460CDIS,  ok
                   lv_NCOM, --AQPA460NCOM,  ok
                   lv_CALLE, --AQPA460CALLE  ok
                   lv_urb, --AQPA460URBA,  ok
                   lv_DEPA, --AQPA460DEPA,  ok
                   lv_PROV, --AQPA460PROV,  ok
                   lv_DIST, --AQPA460DIST,  ok
                   lv_TELF, --AQPA460TELF,  ok
                   lv_WEB, --AQPA460WEB,   ok
                   lv_CPAIS, --AQPA460CPAIS  ok
                   lc_codsunat, --lv_CESUN,        --AQPA460CESUN
                   p.aqpa463serie, --AQPA460SERI,  ok
                   p.aqpa463corre, --AQPA460NUM,   ok
                   p.aqpa463hfcon, --AQPA460FEMI,  ok
                   lv_codtipo, --AQPA460TCOMF  ok
                   lv_tipomda, --AQPA460MONE,  ok
                   lv_correo, --AQPA460CORRR  ok
                   lv_glosa, --AQPA460MGLO,  ok
                   lv_COMA, --AQPA460COMA,  ok
                   lv_TPLA, --AQPA460TPLA,  ok
                   lv_tipoope, --AQPA460TOPE,  ok
                   lv_TPLCO, --AQPA460TPLCO  ok
                   lv_CLOG, --AQPA460CLOG,
                   lv_codtdoc, --AQPA460TDOCR  ok
                   lv_pendoc, --AQPA460NRUC,  ok
                   lv_penom, --AQPA460RASOC  ok
                   pn_monto_total_1, --AQPA460IMPT,  ok
                   lv_hora, --AQPA460HEMI,  ok
                   ln_SIMC, --AQPA460SIMC,  ok
                   ln_SVITM, --AQPA460SVITM  ok
                   ln_SPVI, --AQPA460SPVI,  ok
                   lv_TXML, --AQPA460TXML,  ok
                   --AQPA460SDREF, --Serie documento al que se aplica la nota. ENComprobanteMotivoDocumento
                   --AQPA460NDREF, --Numero  documento al que se aplica la nota.  ENComprobanteMotivoDocumento
                   --AQPA460CMEM,  --C?digo por el cual se emite la nota.  ENComprobanteMotivoDocumento
                   --     no va para factura--      lc_sustento,  --Sustento ENComprobanteMotivoDocumentoSustento
                   --AQPA460SERIE, --Serie del comprobante referenciado. Referencia a un comprobante
                   --AQPA460NRO,   --N?mero del comprobante referenciado Referencia a un comprobante
                   --AQPA460TCOMP, --C?digo del tipo de comprobante.  Referencia a un comprobante
                   --AQPA460FDREF, --Fecha de emisi?n del comprobante referenciado. Referencia a un comprobante  
                   lv_ubgCli, --AQPA460CDIST,  ok
                   lv_sngc13dir, --AQPA460CALL,   ok
                   lv_urb, --AQPA460URB,    ok
                   lv_depnom1, --AQPA460DEP,    ok
                   lv_locnom1, --AQPA460PRV,    ok
                   lv_fst071dsc1, --AQPA460DST,    ok
                   lv_cpai, --AQPA460CPAI,   ok
                   ln_nroitem, --AQPA460ITEM,   ok
                   lv_PNETU, --AQPA460PNETU,  ok
                   /*ok*/
                   ln_cant, --AQPA460CANTF,  ok
                   ln_mtoconce, --AQPA460TOTAL,  ok
                   lc_oneroso, --AQPA460DETE,   ok
                   lv_CTPR, --AQPA460CTPR,   ok
                   ln_mtoconce, --AQPA460VVUN,   ok to number
                   ln_VVUIG, --AQPA460VVUIG,  ok
                   lv_desconce, --AQPA460DESC,   ok
                   lv_infpredio, --AQPA460MFUN,   ok
                   ln_PRVIT, --AQPA460PRVIT,  ok
                   lv_MEDEM, --AQPA460MEDEM,  ok
                   lv_CSUNA, --AQPA460CSUNA,  ok
                   lv_CPGS1, --AQPA460CPGS1,  ok
                   ln_ITITM, --AQPA460ITITM,  ok
                   ln_IMPTB, --AQPA460IMPTB,  ok
                   ln_IMPEX, --AQPA460IMPEX,  ok
                   lv_afecigv, --AQPA460AFIGV,  ok
                   lv_SISC, --AQPA460SISC,   ok
                   lv_idtrbsunat, --AQPA460CODTB,  ok
                   lv_nomtrbsunat, --AQPA460DSTRB,  ok
                   lv_codun, --AQPA460CODUN,  ok
                   ln_MBIM, --AQPA460MBIM,   ok
                   ln_TAIMP, --AQPA460TAIMP,  ok
                   ln_CDLEY, --AQPA460CDLEY,  ok
                   lv_TELEY, --AQPA460TELEY,  ok
                   lv_TEXT1, --AQPA460TEXT1,  ok
                   lv_TEXT2, --AQPA460TEXT2,  ok
                   lv_TRECV, --AQPA460TRECV,  ok
                   lv_TEMPL, --AQPA460TEMPL,  ok
                   lv_SUBJE, --AQPA460SUBJE,  ok
                   lv_VPCVA, --AQPA460VPCVA,  ok
                   lv_NEXP, --AQPA460NEXP,   ok
                   lv_CIND, --,        --AQPA460CIND,   ok
                   nvl(lv_partida, ' '), --G74.3  --AQPA460NPART,  ok
                   nvl(lv_NCONT, ' '), -- G74.4 NUMERO CONTRATO                AQPA460NCONT,  ok 
                   ld_fecoto, --G74.5  FECHA OTORGAMIENTO CREDITO   AQPA460FOTRC,  ok
                   nvl(lv_cdisn, ' '), --G74.6  Ubigeo                        AQPA460CDISN,  ok
                   nvl(lv_direccionH, ' '), --G74.7                           AQPA460DIREH,  ok
                   nvl(lv_urbaH, ' '), --G74.8                                 AQPA460URBH,   ok
                   nvl(lv_provH, ' '), --G74.9                                AQPA460PRVH,   ok
                   nvl(lv_distH, ' '), --G74.10                                AQPA460DSTH,   ok
                   nvl(lv_dptoH, ' '), --AQPA460DEPTH,  ok
                   ln_MTOTAL, --AQPA460MTOTAL  ok
                   ln_BAIMP, --AQPA460BAIMP,  ok
                   ln_MTIMP, --AQPA460MTIMP,  ok
                   ln_PCIMA, --AQPA460PCIMA,  ok
                   ln_BSIMP, --AQPA460BSIMP,  ok
                   ln_VAIMP, --AQPA460VAIMP,  ok
                   ln_MTINF, --AQPA460MTINF,  ok
                   ln_MTGRT, --AQPA460MTGRT,  ok
                   ln_BSIMPS, --AQPA460BSIMPS  ok
                   ln_MTOTI, --AQPA460MTOTI   ok
                   P.AQPA463PGCOD, --mod@abr 20180824
                   P.AQPA463HCMOD, --mod@abr 20180824
                   P.AQPA463HSUCOR, --mod@abr 20180824 
                   P.AQPA463HTRAN, --mod@abr 20180824
                   P.AQPA463HNREL, --mod@abr 20180824 
                   P.AQPA463TXOREN --mod@abr 20180824
                   );
              
                commit;
              Exception
                when others then
                
                  lc_coderr := sqlcode;
                  lc_msgerr := sqlerrm;
                
                  insert into aqpa460E
                    (aqpa460eserie,
                     aqpa460ecorr,
                     aqpa460epgcod,
                     aqpa460emod,
                     aqpa460esucorend,
                     aqpa460etran,
                     aqpa460erel,
                     aqpa460econ,
                     aqpa460etip,
                     Aqpa460eacoe,
                     Aqpa460eamsge)
                  
                  values
                    (p.aqpa463serie,
                     p.aqpa463corre,
                     p.aqpa463pgcod,
                     p.aqpa463hcmod,
                     p.aqpa463hsucor,
                     p.aqpa463htran,
                     p.aqpa463hnrel,
                     p.aqpa463hfcon,
                     
                     'S',
                     lc_coderr,
                     lc_msgerr);
                  commit;
              END;
            
              ln_MTOTAL := 0;
              ln_BAIMP  := 0;
              ln_MTIMP  := 0;
              ln_PCIMA  := 0;
              ln_BSIMP  := 0;
              ln_VAIMP  := 0;
              ln_MTINF  := 0;
              ln_MTGRT  := 0;
              ln_BSIMPS := 0;
              ln_MTOTI  := 0;
            
            end if;
          
          end if; --1:- SN
        end if;
      
      ------------------------------------------------------------------------------------------------------------- 
      end loop;
    
      ----insert cabecera de factura aqpa465 
      begin
        -- Call the procedure
        pq_cr_factura_electronica.sp_cr_Cabecera_factura_M(pd_pgfape,
                                                           pc_sucurs);
      
      end;
    
    end;
  
  exception
    when others then
      null;
    
  end sp_cr_Detalle_Factura_M;
  -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --   
  procedure sp_cr_Cabecera_factura_M(pd_pgfape in date,
                                     pc_sucurs in number) is
  
    pc_aqpa465hash varchar2(250) := '';
    pc_estat       char(1);
    pc_tdoc        char(2);
  
    cursor aqpa463 is
    
      select distinct (b.aqpa463pgcod),
                      (b.aqpa463hcmod),
                      (b.aqpa463hsucor),
                      (b.aqpa463htran),
                      (b.aqpa463hnrel),
                      (b.aqpa463hcord),
                      (b.aqpa463hfcon),
                      (b.aqpa463serie),
                      (b.aqpa463corre)
        from aqpa463 b
       where b.aqpa463hfcon = pd_pgfape
            
            --and b.aqpa463pgcod = 1
            --and b.aqpa463hcmod = 30
         and b.aqpa463hsucor = pc_sucurs
      --and b.aqpa463htran = 100
      --and b.aqpa463hnrel = 3
      
      ; --order by b.aqpa463hnrel asc;
  
    lc_flag char(1);
  
  begin
    begin
    
      for p in aqpa463 loop
      
        --si no existe registro insertar
        begin
          select 'S'
            into lc_flag
            from aqpa465 b
           where b.aqpa465serie = p.aqpa463serie
             and b.aqpa465corr = p.aqpa463corre
             and b.aqpa465pgcod = p.aqpa463pgcod
             and b.aqpa465mod = p.aqpa463hcmod
             and b.aqpa465sucor = p.aqpa463hsucor
             and b.aqpa465tran = p.aqpa463htran
             and b.aqpa465rel = p.aqpa463hnrel
             and b.aqpa465con = p.aqpa463hfcon;
        exception
          when others then
            lc_flag := 'N';
        end;
      
        if nvl(lc_flag, 'N') = 'N' then
          begin
            select distinct t.aqpa460tcomf
              into pc_tdoc
              from aqpa460 t
             where t.aqpa460seri = p.aqpa463serie
               and t.aqpa460num = p.aqpa463corre;
          exception
            when others then
              null;
          end;
          pc_estat := null;
          if pc_tdoc = '13' then
            pc_estat := 'Z';
          end if;
        
          insert into aqpa465
            (aqpa465serie,
             aqpa465corr,
             aqpa465pgcod,
             aqpa465mod,
             aqpa465sucor,
             aqpa465tran,
             aqpa465rel,
             aqpa465con,
             aqpa465hash,
             aqpa465est)
          values
            (p.aqpa463serie,
             p.aqpa463corre,
             p.aqpa463pgcod,
             p.aqpa463hcmod,
             p.aqpa463hsucor,
             p.aqpa463htran,
             p.aqpa463hnrel,
             p.aqpa463hfcon,
             pc_aqpa465hash,
             pc_estat);
        
          commit;
        end if;
      
      end loop;
    
    end;
  
  end sp_cr_Cabecera_factura_M;
  -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --       
  procedure sp_cr_Nota_Credito_COM_M(pd_pgfape in date,
                                     pc_sucurs in number) is
  
    pn_hcmod        number;
    pn_hsucor       number;
    pn_htran        number;
    pn_hnrel        number;
    pd_hfcon        date;
    pn_NRO_RELACION number;
    pd_FECHA_TX     date;
    pn_hcmod2       number;
    pn_hcmod3       number;
    pn_hsucor3      number;
    pn_htran3       number;
    pn_hnrel3       number;
    pn_hfcon3       date;
    lc_serie        char(4);
    lc_correlativo  char(8);
  
    pn_pgcod number;
    --Flag char(1):='N';
  
    lc_flg466 char(1) := 'N'; --controla que no exista en la aqpa466
  
    ln_rubro  number;
    lc_tipper char(1);
  
    lv_tipodocu     char(1);
    lc_comision     char(1);
    ln_guiaCP       number;
    lv_codtipo      char(2);
    lc_coderr       varchar2(1000);
    lc_msgerr       varchar2(1000);
    ln_cont         number;
    lc_serieI       char(4);
    lc_correlativoI char(8);
    lv_codrpt       number;
    lv_tipocre      varchar2(2);
    ln_flag         number;
  
    lc_tipo_doc char(1);
    lv_tipo_doc char(2);
    lv_doc_ori  char(2);
  
    --ln_rubro number;
    --pd_rubro        number;
    lc_flr    char(1);
    lc_ftran  number;
    lc_fcont  char(1);
    lc_tipfin char(1);
  
    lc_trxe char(1);
    lc_esta char(1);
  
    cursor fsx015 is
    
      select /*+index(A FSX01504) index(C SYS_C00977884) index(B FSR17002)*/
      distinct a.pgcod,
               a.hcmod,
               a.hsucor,
               a.htran,
               a.hnrel,
               a.hfcon,
               'E' Indicador
        from fsx015 a
       inner join fsh015 c
          on a.pgcod = c.pgcod
         and a.hcmod = c.hcmod
         and a.hsucor = c.hsucor
         and a.htran = c.htran
         and a.hnrel = c.hnrel
         and a.hfcon = c.hfcon
       inner join FSR170 b
          on a.hcmod = b.sr170trmod + 500
         and a.htran = b.sr170trnro
       where a.pgcod = 1
         and a.hcmod > 499
         and a.hsucor = pc_sucurs
            -- -- --
            /*
            and a.hcmod = 530
            and a.hsucor = 2
            and a.htran = 97
            and a.hnrel = 3
            */
            -- -- --
         and a.hfcon = pd_pgfape
         and a.txcod = 0
      
      ---todas las transacciones extornadas
      --   and  a.hcmod= 19 and a.hsucor= 11  and a.htran=801 and a.hnrel in(1)         
      --   and  a.hcmod= 530 and a.hsucor= 18  and a.htran=972 and a.hnrel in(1)      
      --and  a.hcmod= 530 and a.hsucor= 18  and a.htran=978 and a.hnrel in(1)      
      --and  a.hcmod= 530 and a.hsucor= 18  and a.htran=350 and a.hnrel in(4)   
      --  and  a.hcmod= 530 and a.hsucor= 18  and a.htran=355 and a.hnrel in(9)   
      -- order by a.pgcod, a.hcmod, a.hsucor, a.htran, a.hnrel, a.hfcon;   
      
      union all
      --2018.10.22   
      select distinct a.pgcod,
                      a.hcmod,
                      a.hsucor,
                      a.htran,
                      a.hnrel,
                      a.hfcon,
                      'C' Indicador
        from fsx016 a
       inner join fst198 c
          on c.tp1cod = a.pgcod
       where a.pgcod = 1
         and a.hcmod = c.tp1nro1
         and a.hsucor = pc_sucurs
         and a.htran = c.tp1nro2
         and a.hfcon = pd_pgfape
         and c.tp1cod1 = 11120
         and c.tp1corr1 = 2
         and c.tp1corr2 = 4
      -- and  a.hcmod=19 and a.hsucor= 11  and a.htran=801 --and a.hnrel in (9)
      --and  a.hcmod=10 and a.hsucor= 18  and a.htran=222 and a.hnrel in (9)
      --  and  a.hcmod=492 and a.hsucor= 18  and a.htran=30 --and a.hnrel in (9)
      --and  a.hcmod= 550 and a.hsucor= 11  and a.htran=503 and a.hnrel in(1)
      --order by a.pgcod, a.hcmod, a.hsucor, a.htran, a.hnrel, a.hfcon
      ;
  
    cursor base(pn_pgcod        in number,
                pn_hcmod3       in number,
                pn_hsucor3      in number,
                pn_htran3       in number,
                pn_hnrel3       in number,
                pn_hfcon3       in date,
                lc_serieI       in char,
                lc_correlativoI in number) is
    
      select aqpa463txtrub,
             aqpa463pgcod,
             aqpa463hcmod,
             aqpa463hsucor,
             aqpa463htran,
             aqpa463hnrel,
             aqpa463hfcon,
             aqpa463hcpcod,
             aqpa463hvnro,
             trim(aqpa463hvchr) aqpa463hvchr,
             aqpa463hvnro aqpa463emp,
             aqpa463mod,
             aqpa463suc,
             aqpa463mda,
             aqpa463pap,
             aqpa463cta,
             aqpa463ope,
             aqpa463sbo,
             aqpa463top,
             aqpa463hip,
             trim(aqpa463txtord) aqpa463txtord,
             aqpa463txoren
        from aqpa463 a
       where a.aqpa463pgcod = pn_pgcod
         and a.aqpa463hcmod = pn_hcmod3
         and a.aqpa463hsucor = pn_hsucor3
         and a.aqpa463htran = pn_htran3
         and a.aqpa463hnrel = pn_hnrel3
         and a.aqpa463hfcon = pn_hfcon3
         and a.aqpa463serie = lc_serieI
         and a.aqpa463corre = lc_correlativoI;
  
  begin
  
    --25012019 dcastro
    begin
      select c.tp1nro1
        into ln_flag
        from fst198 c
       where c.tp1cod = 1
         and c.tp1cod1 = 11120
         and c.tp1corr1 = 7
         and c.tp1corr2 = 1;
    exception
      when others then
        null;
    end;
    --25012019
  
    for p in fsx015 loop
      --Verifica que no exista en cabecera AQPA466
      Begin
        select 'S'
          into lc_flg466
          from aqpa466 a
         where a.aqpa466pgcod = p.pgcod
           and a.aqpa466mod = p.hcmod
           and a.aqpa466sucor = p.hsucor
           and a.aqpa466tran = p.htran
           and a.aqpa466rel = p.hnrel
           and a.aqpa466con = p.hfcon
           and rownum = 1;
      exception
        when others then
          lc_flg466 := 'N';
      end;
      --Clave del documento a la cual se aplica: factura y boleta
      pn_pgcod  := p.pgcod;
      pn_hcmod  := p.hcmod;
      pn_hsucor := p.hsucor;
      pn_htran  := p.htran;
      pn_hnrel  := p.hnrel;
      pd_hfcon  := p.hfcon;
    
      if lc_flg466 = 'N' then
      
        if p.indicador = 'E' then
          --Por extorno 
        
          begin
            select f.txtext as NRO_RELACION
              into pn_NRO_RELACION
              from fsx015 f
             where f.hfcon = pd_pgfape --to_date('20092017', 'ddmmyyyy')----cambiar fecha de proceso
               and f.hcmod = pn_hcmod --530
               and f.htran = pn_htran --100
               and f.hnrel = pn_hnrel --2
               and f.hsucor = pn_hsucor --mod@abr 20180707
               and f.txcod = 0
               and f.txreng = 1;
          exception
            --mod@abr 20180707
            when too_many_rows then
              begin
                select f.txtext as NRO_RELACION
                  into pn_NRO_RELACION
                  from fsx015 f
                 where f.hfcon = pd_pgfape --to_date('20092017', 'ddmmyyyy')----cambiar fecha de proceso
                   and f.hcmod = pn_hcmod --530
                   and f.htran = pn_htran --100
                   and f.hnrel = pn_hnrel --2
                   and f.hsucor = pn_hsucor
                   and f.txcod = 0
                   and f.txreng = 1
                   and rownum = 1 --mod@abr 20180707
                ;
              exception
                when others then
                  pn_NRO_RELACION := null;
              end;
            when others then
              pn_NRO_RELACION := null;
            
          end;
        
          if pn_NRO_RELACION is not null then
          
            begin
              select to_date(f.txtext, 'DD/MM/RR') as FECHA_TX
                into pd_FECHA_TX
                from fsx015 f
               where f.hfcon = pd_pgfape --to_date('20092017', 'ddmmyyyy')
                 and f.hcmod = pn_hcmod -- 530
                 and f.htran = pn_htran --100
                 and f.hnrel = pn_hnrel --2
                 and f.hsucor = pn_hsucor --mod@abr 20180707
                 and f.txcod = 0
                 and f.txreng = 2;
            exception
              when others then
                pd_FECHA_TX := null;
            end;
          
            pn_hcmod2 := pn_hcmod - 500;
          
            -- 4. obtener transaccion original
            -- 4.1 Verificar si la transacción tiene una excepcion
            begin
              select 'S'
                into lc_trxe
                from fst198 t
               where t.tp1cod = 1
                 and t.tp1cod1 = 11120
                 and t.tp1corr1 = 10
                 and t.tp1corr2 = 1
                 and t.tp1corr3 <> 0
                 and t.tp1nro1 = pn_hcmod2 --- mod
                 and t.tp1nro2 = pn_htran -- trax
                 and t.tp1imp3 = 1; --<<=== Se valida en el IMP3
            exception
              when others then
                lc_trxe := 'N';
            end;
          
            if lc_trxe = 'N' then
            
              begin
                --obtener transaccion original
                select a.pgcod,
                       a.hcmod,
                       a.hsucor,
                       a.htran,
                       a.hnrel,
                       a.hfcon
                  into pn_pgcod,
                       pn_hcmod3,
                       pn_hsucor3,
                       pn_htran3,
                       pn_hnrel3,
                       pn_hfcon3 --clave de transaccion
                  from fsx016 a
                 where a.hcmod = pn_hcmod2 --30
                   and a.htran = pn_htran --100
                   and a.hfcon = pd_FECHA_TX --to_date('20092017', 'ddmmyyyy')
                   and a.hnrel = pn_NRO_RELACION --164
                   and a.hsucor = pn_hsucor --mod@abr 20180707
                   and rownum = 1;
              exception
                when others then
                  pn_pgcod   := null;
                  pn_hcmod3  := null;
                  pn_hsucor3 := null;
                  pn_htran3  := null;
                  pn_hnrel3  := null;
                  pn_hfcon3  := null;
                
              end;
            
            else
            
              pn_pgcod   := p.pgcod;
              pn_hcmod3  := pn_hcmod2;
              pn_hsucor3 := pn_hsucor;
              pn_htran3  := pn_htran;
              pn_hnrel3  := pn_NRO_RELACION;
              pn_hfcon3  := pd_FECHA_TX;
            
            end if;
          
          end if;
        
        elsif p.indicador = 'C' then
          --Por comision
        
          begin
            pq_op_transacciones.sp_op_retorna_origen(ppgcod   => pn_pgcod,
                                                     pitsuc   => pn_hsucor,
                                                     pitmod   => pn_hcmod,
                                                     pittran  => pn_htran,
                                                     pitnrel  => pn_hnrel,
                                                     pitfcon  => pd_hfcon,
                                                     itsuc_o  => pn_hsucor3,
                                                     itmod_o  => pn_hcmod3,
                                                     ittran_o => pn_htran3,
                                                     itnrel_o => pn_hnrel3,
                                                     itfcon_o => pn_hfcon3,
                                                     codrpt   => lv_codrpt);
          end;
        
        end if;
      
        ---buscar transaccion en aqpa460 / aqpa463/ aqpa465
        ---obtener DOCUMENTO DE REFERENCIA
        begin
          select distinct a.aqpa463serie, a.aqpa463corre
            into lc_serieI, lc_correlativoI
            from aqpa463 a
           where a.aqpa463pgcod = pn_pgcod
             and a.aqpa463hcmod = pn_hcmod3
             and a.aqpa463hsucor = pn_hsucor3
             and a.aqpa463htran = pn_htran3
             and a.aqpa463hnrel = pn_hnrel3
             and a.aqpa463hfcon = pn_hfcon3;
        exception
          when too_many_rows then
            ---obtener ultimo documento enviado
            begin
              select max(a.aqpa463serie), max(a.aqpa463corre)
                into lc_serieI, lc_correlativoI
                from aqpa463 a
               where a.aqpa463pgcod = pn_pgcod
                 and a.aqpa463hcmod = pn_hcmod3
                 and a.aqpa463hsucor = pn_hsucor3
                 and a.aqpa463htran = pn_htran3
                 and a.aqpa463hnrel = pn_hnrel3
                 and a.aqpa463hfcon = pn_hfcon3;
            
            exception
              when others then
                lc_serieI       := null;
                lc_correlativoI := null;
            end;
          when no_data_found then
            --si no existe trx origen
            lc_serieI := null;
        end;
      
        lv_tipodocu := substr(lc_serieI, 1, 1);
        lv_tipocre  := substr(lc_serieI, 2, 1);
      
        if lv_tipodocu is not null then
        
          --determinar tipo de cliente
          /*if lv_tipodocu = 'F' then
             lc_tipper := 'J';
             ln_guiaCP := 1;
           else
             lc_tipper := 'N';
             ln_guiaCP := 3;
           end if;
          
           begin
             --select '0' || to_char(a.tp1nro1)        ---!!2
               select lpad(trim(a.tp1nro1), 2, '0')
               into lv_codtipo
               from fst198 a
              where a.tp1cod = 1
                and a.tp1cod1 = 11120
                and a.tp1corr1 = 1
                and a.tp1corr2 = 7
                and a.tp1corr3 = ln_guiaCP; --2018.10.10 se modifico codigo de guia para tipo comprobante
           exception
             when others then
               null;
           end;
          */
        
          --determinar tipo del documento origen
          --dbms_output.put_line('================');
          --dbms_output.put_line('pn_hcmod3 ' || pn_hcmod3);
          --dbms_output.put_line('pn_hsucor3 ' || pn_hsucor3);
          --dbms_output.put_line('pn_htran3 ' || pn_htran3);
          --dbms_output.put_line('pn_hnrel3 ' || pn_hnrel3);
          --dbms_output.put_line('pn_hfcon3 ' || pn_hfcon3);                                        
        
          begin
            select distinct t.aqpa460tcomf
              into lv_doc_ori
              from aqpa460 t
             where t.aqpa460pgc = pn_pgcod
               and t.aqpa460mod = pn_hcmod3
               and t.aqpa460suc = pn_hsucor3
               and t.aqpa460trx = pn_htran3
               and t.aqpa460rel = pn_hnrel3
               and t.aqpa460femi = pn_hfcon3
               and t.aqpa460tcomf in ('01', '03', '13');
          exception
            when others then
              null;
          end;
        
          if lv_doc_ori in ('01', '03') then
          
            --determinar tipo de cliente
            if lv_tipodocu = 'F' then
              lc_tipper := 'J';
              ln_guiaCP := 1;
            else
              lc_tipper := 'N';
              ln_guiaCP := 3;
            end if;
          
            begin
              select
              --'0' || to_char(a.tp1nro1)
               lpad(trim(a.tp1nro1), 2, '0')
                into lv_codtipo
                from fst198 a
               where a.tp1cod = 1
                 and a.tp1cod1 = 11120
                 and a.tp1corr1 = 1
                 and a.tp1corr2 = 7
                 and a.tp1corr3 = ln_guiaCP; --2018.10.10 se modifico codigo de guia para tipo comprobante
            exception
              when others then
                null;
            end;
          
          else
            lv_codtipo := '13';
          end if;
        
          -- Determinar rubro
          -- 5. Obtener rubro
          begin
            -- Como el proceso siempre será ejecutado al menos un día después, 
            -- se busca en históricos
          
            select to_number(substr(m.hrubro, 5, 2))
              into ln_rubro
              from fsh016 m, fsr171 aa
             where aa.st171cpcod = 15
               and aa.sr171tremp = 1 --1
               and aa.sr171trmod = m.hcmod --30
               and aa.sr171trnro = m.htran
               and m.PGCOD = pn_pgcod
               and m.hsucor = pn_hsucor3
               and m.hcmod = pn_hcmod3
               and m.htran = pn_htran3
               and m.hnrel = pn_hnrel3
               and m.hfcon = pn_hfcon3
               and m.hcord = aa.sr171trord
               and rownum = 1;
          exception
            when others then
            
              --ln_rubro := null;
            
              begin
              
                select distinct x.aqpa463tcre
                  into ln_rubro
                  from aqpa463 x
                 where x.aqpa463pgcod = pn_pgcod
                   and x.aqpa463hcmod = pn_hcmod3
                   and x.aqpa463hsucor = pn_hsucor3
                   and x.aqpa463htran = pn_htran3
                   and x.aqpa463hnrel = pn_hnrel3
                   and x.aqpa463hfcon = pn_hfcon3;
              
              exception
                when others then
                  ln_rubro := null;
                
              end;
            
          end;
        
          /*if ln_flag = 0 then  --25012019 dcastro se agrego validacion de flag si es =1 incluye comision   
            exit;
          end if;  --25012019 dcastro 
          */
        
          --end if;
        
          --determinar si es comision
          begin
            select 'S'
              into lc_comision
              from fst198 h
             where h.tp1cod = 1
               and h.tp1cod1 = 11120
               and h.tp1corr1 = 3
               and h.tp1corr2 = 1
               and h.tp1nro1 = pn_hcmod3
               and h.tp1nro2 = pn_htran3
               and rownum = 1;
          exception
            when others then
              lc_comision := 'N';
          end;
        
          if lc_comision = 'S' then
            ln_rubro := 1;
          end if;
        
          -- b. Determinar si el rubro es considerado
          begin
            select 'S'
              into lc_flr
              from fst198 t
             where t.tp1cod = 1
               and t.tp1cod1 = 11120
               and t.tp1corr1 = 1
               and t.tp1corr2 = 23
               and t.tp1nro1 <> 0
               and t.tp1nro1 = ln_rubro;
          exception
            when others then
              lc_flr := 'N';
          end;
        
          --if (lv_tipocre in ('H','F') and ln_flag = 0) or ln_flag = 1 then
          if (lc_flr = 'S' and ln_flag = 0) or ln_flag = 1 then
          
            --Seleccionar tipo de documento    !!3
            -- Guía obtener transacciones GRAVADAS
            begin
              select 'S'
                into lc_tipo_doc
                from fst198 h
               where h.tp1cod = 1
                 and h.tp1cod1 = 11120
                 and h.tp1corr1 = 3
                 and h.tp1corr2 = 1
                 and h.tp1corr3 > 0
                 and h.tp1nro1 = pn_hcmod3
                 and h.tp1nro2 = pn_htran3;
            exception
              when others then
                lc_tipo_doc := 'N';
            end;
          
            ---Si es gravado --> 07  sino ---> 87
            lv_tipo_doc := '87';
          
            if lc_tipo_doc = 'S' then
              lv_tipo_doc := '07';
            
              --25012019 dcastro
            
              begin
                pq_cr_facturacion.sp_cr_factura(pn_rubro       => ln_rubro,
                                                pc_tipcli      => lc_tipper,
                                                pc_tipo        => 'NC',
                                                pc_serie       => lc_serie,
                                                pc_correlativo => lc_correlativo);
              exception
                when others then
                
                  lc_coderr := sqlcode;
                  lc_msgerr := trim(sqlerrm);
                
                  insert into aqpa460E
                    (aqpa460eserie,
                     aqpa460ecorr,
                     aqpa460epgcod,
                     aqpa460emod,
                     aqpa460esucorend,
                     aqpa460etran,
                     aqpa460erel,
                     aqpa460econ,
                     aqpa460etip,
                     Aqpa460eacoe,
                     Aqpa460eamsge)
                  values
                    (null,
                     null,
                     pn_pgcod,
                     pn_hcmod,
                     pn_hsucor,
                     pn_htran,
                     pn_hnrel,
                     pd_hfcon,
                     'S',
                     lc_coderr,
                     lc_msgerr);
                  commit;
                
              end;
            
              lc_tipfin := 'N';
            else
              ------
            
              begin
              
                -- c. Verificar si el rubro esta activo
                -- (4): hipotecario
                -- (3): consumo
                begin
                  select 'S'
                    into lc_fcont
                    from fst198 t
                   where t.tp1cod = 1
                     and t.tp1cod1 = 11120
                     and t.tp1corr1 = 1
                     and t.tp1corr2 = 23
                     and t.tp1nro1 <> 0
                     and t.tp1nro1 = ln_rubro
                     and t.tp1imp1 = 1;
                exception
                  when others then
                    lc_fcont := 'N';
                end;
              
                if lc_fcont = 'S' then
                
                  --Verificar en AQPB056
                  begin
                    select 'S'
                      into lc_tipfin
                      from aqpb056 a
                     where a.aqpb056pgc = pn_pgcod
                       and a.aqpb056mod = pn_hcmod
                       and a.aqpb056suc = pn_hsucor
                       and a.aqpb056trx = pn_htran
                       and a.aqpb056rel = pn_hnrel
                       and a.aqpb056fco = pd_hfcon
                       and a.aqpb056pge = pn_pgcod
                       and a.aqpb056moe = pn_hcmod3
                       and a.aqpb056sue = pn_hsucor3
                       and a.aqpb056tre = pn_htran3
                       and a.aqpb056ree = pn_hnrel3
                       and a.aqpb056fce = pn_hfcon3
                       and a.aqpb056tco = '87';
                  
                  exception
                    when others then
                      begin
                        select 'S'
                          into lc_tipfin
                          from aqpb056h a
                         where a.aqpb056hpgc = pn_pgcod
                           and a.aqpb056hmod = pn_hcmod
                           and a.aqpb056hsuc = pn_hsucor
                           and a.aqpb056htrx = pn_htran
                           and a.aqpb056hrel = pn_hnrel
                           and a.aqpb056hfcon = pd_hfcon
                           and a.aqpb056hpgce = pn_pgcod
                           and a.aqpb056hmode = pn_hcmod3
                           and a.aqpb056hsuce = pn_hsucor3
                           and a.aqpb056htrxe = pn_htran3
                           and a.aqpb056hrele = pn_hnrel3
                           and a.aqpb056hfcone = pn_hfcon3
                           and a.aqpb056htcomf = '87';
                      exception
                        when others then
                          lc_tipfin := 'N';
                      end;
                    
                  end;
                
                  --Verificar si la transacción sigue activa
                  begin
                    select count(*)
                      into lc_ftran
                      from fst198 t
                     where t.tp1cod = 1
                       and t.tp1cod1 = 11120
                       and t.tp1corr1 = 10
                       and t.tp1corr2 = 1
                       and t.tp1corr3 <> 0
                       and t.tp1imp1 = 1
                       and t.tp1nro1 = pn_hcmod3
                       and t.tp1nro2 = pn_htran3;
                  exception
                    when others then
                      null;
                  end;
                  if (lc_tipfin = 'S' and lc_ftran > 0) then
                  
                    begin
                      --select to_char(a.aqpb056seri), a.aqpb056num
                      select to_char(a.aqpb056ser), a.aqpb056num
                        into lc_serie, lc_correlativo
                        from aqpb056 a
                       where
                      
                       a.aqpb056pgc = pn_pgcod
                       and a.aqpb056mod = pn_hcmod
                       and a.aqpb056suc = pn_hsucor
                       and a.aqpb056trx = pn_htran
                       and a.aqpb056rel = pn_hnrel
                       and a.aqpb056fco = pd_hfcon
                      
                       and a.aqpb056pge = pn_pgcod
                       and a.aqpb056moe = pn_hcmod3
                       and a.aqpb056sue = pn_hsucor3
                       and a.aqpb056tre = pn_htran3
                       and a.aqpb056ree = pn_hnrel3
                       and a.aqpb056fce = pn_hfcon3
                      
                       and a.aqpb056tco = '87';
                    
                    exception
                      when others then
                        begin
                          select to_char(a.aqpb056hseri), a.aqpb056hnum
                            into lc_serie, lc_correlativo
                            from aqpb056h a
                           where
                          
                           a.aqpb056hpgc = pn_pgcod
                           and a.aqpb056hmod = pn_hcmod
                           and a.aqpb056hsuc = pn_hsucor
                           and a.aqpb056htrx = pn_htran
                           and a.aqpb056hrel = pn_hnrel
                           and a.aqpb056hfcon = pd_hfcon
                          
                           and a.aqpb056hpgce = pn_pgcod
                           and a.aqpb056hmode = pn_hcmod3
                           and a.aqpb056hsuce = pn_hsucor3
                           and a.aqpb056htrxe = pn_htran3
                           and a.aqpb056hrele = pn_hnrel3
                           and a.aqpb056hfcone = pn_hfcon3
                          
                           and a.aqpb056htcomf = '87';
                        exception
                          when others then
                            null;
                        end;
                    end;
                  
                  end if;
                
                end if;
              
              end;
              ------
            
            end if;
          
            if (lv_tipo_doc = '87' and lc_tipfin = 'S') or
               (lv_tipo_doc = '07' and lc_tipfin = 'N') then
              --insertamos en AQPA460            
              begin
              
                --if to_number(lc_correlativo) > 43 then
                --  lc_msgerr := '';
                --end if;
              
                insert into AQPA460
                  (aqpa460tdoc,
                   aqpa460rucc,
                   aqpa460rsoc,
                   aqpa460cdis,
                   aqpa460ncom,
                   aqpa460calle,
                   aqpa460urba,
                   aqpa460depa,
                   aqpa460prov,
                   aqpa460dist,
                   aqpa460telf,
                   aqpa460web,
                   aqpa460cpais,
                   aqpa460cesun,
                   aqpa460seri,
                   aqpa460num,
                   aqpa460femi,
                   aqpa460tcomf,
                   aqpa460mone,
                   aqpa460corrr,
                   aqpa460mglo,
                   aqpa460coma,
                   aqpa460tpla,
                   aqpa460tope,
                   aqpa460tplco,
                   aqpa460clog,
                   aqpa460tdocr,
                   aqpa460nruc,
                   aqpa460rasoc,
                   aqpa460impt,
                   aqpa460hemi,
                   aqpa460simc,
                   aqpa460svitm,
                   aqpa460spvi,
                   aqpa460txml,
                   aqpa460sdref,
                   aqpa460ndref,
                   aqpa460cmem,
                   aqpa460sust,
                   aqpa460serie,
                   aqpa460nro,
                   aqpa460tcomp,
                   aqpa460fdref,
                   aqpa460cdist,
                   aqpa460call,
                   aqpa460urb,
                   aqpa460dep,
                   aqpa460prv,
                   aqpa460dst,
                   aqpa460cpai,
                   aqpa460item,
                   aqpa460pnetu,
                   aqpa460cantf,
                   aqpa460total,
                   aqpa460dete,
                   aqpa460ctpr,
                   aqpa460vvun,
                   aqpa460vvuig,
                   aqpa460desc,
                   aqpa460mfun,
                   aqpa460prvit,
                   aqpa460medem,
                   aqpa460csuna,
                   aqpa460cpgs1,
                   aqpa460ititm,
                   aqpa460imptb,
                   aqpa460impex,
                   aqpa460afigv,
                   aqpa460sisc,
                   aqpa460codtb,
                   aqpa460dstrb,
                   aqpa460codun,
                   aqpa460mbim,
                   aqpa460taimp,
                   aqpa460cdley,
                   aqpa460teley,
                   aqpa460text1,
                   aqpa460text2,
                   aqpa460trecv,
                   aqpa460templ,
                   aqpa460subje,
                   aqpa460vpcva,
                   aqpa460nexp,
                   aqpa460cind,
                   aqpa460npart,
                   aqpa460ncont,
                   aqpa460fotrc,
                   aqpa460cdisn,
                   aqpa460direh,
                   aqpa460urbh,
                   aqpa460prvh,
                   aqpa460dsth,
                   aqpa460depth,
                   aqpa460mtotal,
                   aqpa460baimp,
                   aqpa460mtimp,
                   aqpa460pcima,
                   aqpa460bsimp,
                   aqpa460vaimp,
                   aqpa460mtinf,
                   aqpa460mtgrt,
                   aqpa460bsimps,
                   aqpa460mtoti,
                   aqpa460pgc,
                   aqpa460mod,
                   aqpa460suc,
                   aqpa460trx,
                   aqpa460rel,
                   aqpa460ore,
                   aqpa460pgce,
                   aqpa460mode,
                   aqpa460suce,
                   aqpa460trxe,
                   aqpa460rele,
                   aqpa460fcone,
                   aqpa460glos,
                   aqpa460tipag,
                   aqpa460text3,
                   aqpa460text4,
                   aqpa460conce)
                  select aqpa460tdoc, --aqpa460tdoc,
                         aqpa460rucc, --aqpa460rucc,
                         aqpa460rsoc, --aqpa460rsoc,
                         aqpa460cdis, --aqpa460cdis,
                         aqpa460ncom, --aqpa460ncom,
                         aqpa460calle, --aqpa460calle,
                         aqpa460urba, --aqpa460urba,
                         aqpa460depa, --aqpa460depa,
                         aqpa460prov, --aqpa460prov,
                         aqpa460dist, --aqpa460dist,
                         aqpa460telf, --aqpa460telf,
                         aqpa460web, --aqpa460web,
                         aqpa460cpais, --aqpa460cpais,
                         aqpa460cesun, --aqpa460cesun,
                         lc_serie, --aqpa460seri,
                         lc_correlativo, --aqpa460num,
                         --aqpa460femi, --aqpa460femi,
                         pd_hfcon, --aqpa460femi,
                         --'07',
                         lv_tipo_doc, --aqpa460tcomf,
                         aqpa460mone, --aqpa460mone,
                         aqpa460corrr, --aqpa460corrr,
                         aqpa460mglo, --aqpa460mglo,
                         aqpa460coma, --aqpa460coma,
                         aqpa460tpla, --aqpa460tpla,
                         aqpa460tope, --aqpa460tope,
                         aqpa460tplco, --aqpa460tplco,
                         aqpa460clog, --aqpa460clog,
                         aqpa460tdocr, --aqpa460tdocr,
                         aqpa460nruc, --aqpa460nruc,
                         aqpa460rasoc, --aqpa460rasoc,
                         aqpa460impt, --aqpa460impt,
                         aqpa460hemi, --aqpa460hemi,
                         aqpa460simc, --aqpa460simc,
                         aqpa460svitm, --aqpa460svitm,
                         aqpa460spvi, --aqpa460spvi,
                         aqpa460txml, --aqpa460txml,
                         aqpa460seri, --aqpa460sdref,
                         aqpa460num, --aqpa460ndref,
                         lv_doc_ori, --'01', --aqpa460cmem,
                         'Extorno de la operacion', --aqpa460sust,
                         aqpa460seri, --aqpa460serie,
                         aqpa460num, --aqpa460nro,
                         lv_codtipo, --aqpa460tcomp,
                         --pd_hfcon,    --aqpa460fdref,
                         aqpa460femi, --aqpa460fdref,
                         aqpa460cdist, --aqpa460cdist,
                         aqpa460call, --aqpa460call,
                         aqpa460urb, --aqpa460urb,
                         aqpa460dep, --aqpa460dep,
                         aqpa460prv, --aqpa460prv,
                         aqpa460dst, --aqpa460dst,
                         aqpa460cpai, --aqpa460cpai,
                         aqpa460item, --aqpa460item,
                         aqpa460pnetu, --aqpa460pnetu,
                         aqpa460cantf, --aqpa460cantf,
                         aqpa460total, --aqpa460total,
                         aqpa460dete, --aqpa460dete,
                         aqpa460ctpr, --aqpa460ctpr,
                         aqpa460vvun, --aqpa460vvun,
                         aqpa460vvuig, --aqpa460vvuig,
                         aqpa460desc, --aqpa460desc,
                         aqpa460mfun, --aqpa460mfun,
                         aqpa460prvit, --aqpa460prvit,
                         aqpa460medem, --aqpa460medem,
                         aqpa460csuna, --aqpa460csuna,
                         aqpa460cpgs1, --aqpa460cpgs1,
                         aqpa460ititm, --aqpa460ititm,
                         aqpa460imptb, --aqpa460imptb,
                         aqpa460impex, --aqpa460impex,
                         aqpa460afigv, --aqpa460afigv,
                         aqpa460sisc, --aqpa460sisc,
                         aqpa460codtb, --aqpa460codtb,
                         aqpa460dstrb, --aqpa460dstrb,
                         aqpa460codun, --aqpa460codun,
                         aqpa460mbim, --aqpa460mbim,
                         aqpa460taimp, --aqpa460taimp,
                         aqpa460cdley, --aqpa460cdley,
                         aqpa460teley, --aqpa460teley,
                         aqpa460text1, --aqpa460text1,
                         aqpa460text2, --aqpa460text2,
                         aqpa460trecv, --aqpa460trecv,
                         aqpa460templ, --aqpa460templ,
                         aqpa460subje, --aqpa460subje,
                         aqpa460vpcva, --aqpa460vpcva,
                         aqpa460nexp, --aqpa460nexp,
                         aqpa460cind, --aqpa460cind,
                         aqpa460npart, --aqpa460npart,
                         aqpa460ncont, --aqpa460ncont,
                         aqpa460fotrc, --aqpa460fotrc,
                         aqpa460cdisn, --aqpa460cdisn,
                         aqpa460direh, --aqpa460direh,
                         aqpa460urbh, --aqpa460urbh,
                         aqpa460prvh, --aqpa460prvh,
                         aqpa460dsth, --aqpa460dsth,
                         aqpa460depth, --aqpa460depth,
                         aqpa460mtotal, --aqpa460mtotal,
                         aqpa460baimp, --aqpa460baimp,
                         aqpa460mtimp, --aqpa460mtimp,
                         aqpa460pcima, --aqpa460pcima,
                         aqpa460bsimp, --aqpa460bsimp,
                         aqpa460vaimp, --aqpa460vaimp,
                         aqpa460mtinf, --aqpa460mtinf,
                         aqpa460mtgrt, --aqpa460mtgrt,
                         aqpa460bsimps, --aqpa460bsimps,
                         aqpa460mtoti, --aqpa460mtoti,
                         aqpa460pgc, --aqpa460pgc,
                         aqpa460mod, --aqpa460mod,
                         aqpa460suc, --aqpa460suc,
                         aqpa460trx, --aqpa460trx,
                         aqpa460rel, --aqpa460rel,
                         aqpa460ore, --aqpa460ore,
                         pn_pgcod, --aqpa460pgce,
                         pn_hcmod, --aqpa460mode,
                         pn_hsucor, --aqpa460suce,
                         pn_htran, --aqpa460trxe,
                         pn_hnrel, --aqpa460rele,
                         --pd_hfcon,--aqpa460fcone,
                         aqpa460femi, --aqpa460fcone,
                         aqpa460glos, --aqpa460glos,
                         aqpa460tipag, --aqpa460tipag,
                         aqpa460text3, --aqpa460text3,
                         aqpa460text4, --aqpa460text4,
                         aqpa460conce --aqpa460conce
                    from aqpa460 a
                   where a.aqpa460pgc = pn_pgcod
                     and a.aqpa460mod = pn_hcmod3
                     and a.aqpa460suc = pn_hsucor3
                     and a.aqpa460trx = pn_htran3
                     and a.aqpa460rel = pn_hnrel3
                     and a.aqpa460femi = pn_hfcon3
                     and a.aqpa460seri = lc_serieI
                     and a.aqpa460num = lc_correlativoI;
              
                commit;
              exception
                when others then
                  lc_coderr := sqlcode;
                  lc_msgerr := sqlerrm;
                
              end;
            
              --insertamos en AQPA464
              ln_cont := 1;
              for i in base(pn_pgcod,
                            pn_hcmod3,
                            pn_hsucor3,
                            pn_htran3,
                            pn_hnrel3,
                            pn_hfcon3,
                            lc_serieI,
                            lc_correlativoI) loop
              
                begin
                  insert into aqpa464
                    (aqpa464txtrub,
                     aqpa464pgcod,
                     aqpa464hcmod,
                     aqpa464hsucor,
                     aqpa464htran,
                     aqpa464hnrel,
                     aqpa464hfcon,
                     aqpa464doid,
                     aqpa464cpcod,
                     aqpa464vnro,
                     aqpa464vchr,
                     aqpa464vfch,
                     aqpa464vimp /*, aqpa464vtas*/,
                     aqpa464serie,
                     aqpa464nro,
                     aqpa464emp,
                     aqpa464mod,
                     aqpa464suc,
                     aqpa464mda,
                     aqpa464pap,
                     aqpa464cta,
                     aqpa464ope,
                     aqpa464sbo,
                     aqpa464top,
                     aqpa464hip,
                     aqpa464txtord,
                     aqpa464txoren,
                     aqpa464pgcode,
                     aqpa464hcmode,
                     aqpa464hsucore,
                     aqpa464htrane,
                     aqpa464hnrele,
                     aqpa464hfcone)
                  
                  values
                    (i.aqpa463txtrub,
                     i.aqpa463pgcod,
                     i.aqpa463hcmod,
                     i.aqpa463hsucor,
                     i.aqpa463htran,
                     i.aqpa463hnrel,
                     i.aqpa463hfcon,
                     ln_cont,
                     i.aqpa463hcpcod,
                     i.aqpa463hvnro,
                     i.aqpa463hvchr,
                     pd_hfcon,
                     ln_cont,
                     lc_serie,
                     lc_correlativo,
                     i.aqpa463emp,
                     i.aqpa463mod,
                     i.aqpa463suc,
                     i.aqpa463mda,
                     i.aqpa463pap,
                     i.aqpa463cta,
                     i.aqpa463ope,
                     i.aqpa463sbo,
                     i.aqpa463top,
                     i.aqpa463hip,
                     i.aqpa463txtord,
                     i.aqpa463txoren,
                     pn_pgcod,
                     pn_hcmod,
                     pn_hsucor,
                     pn_htran,
                     pn_hnrel,
                     pd_hfcon);
                
                  commit;
                exception
                  when others then
                    lc_coderr := sqlcode;
                    lc_msgerr := sqlerrm;
                  
                end;
                ln_cont := ln_cont + 1;
              
              end loop;
              --insertamos en AQPA466
              lc_esta := null;
              if lv_tipo_doc = '87' then
                lc_esta := 'Z';
              end if;
            
              begin
              
                insert into aqpa466
                  (aqpa466serie,
                   aqpa466corr,
                   aqpa466pgcod,
                   aqpa466mod,
                   aqpa466sucor,
                   aqpa466tran,
                   aqpa466rel,
                   aqpa466con,
                   aqpa466est)
                
                values
                  (lc_serie,
                   lc_correlativo,
                   pn_pgcod,
                   pn_hcmod,
                   pn_hsucor,
                   pn_htran,
                   pn_hnrel,
                   pd_hfcon,
                   lc_esta);
                /*select lc_serie,
                      lc_correlativo,
                      aqpa465pgcod,
                      aqpa465mod,
                      aqpa465sucor,
                      aqpa465tran,
                      aqpa465rel,
                      aqpa465con
                 from aqpa465 a
                where a.aqpa465pgcod = pn_pgcod
                  and a.aqpa465mod = pn_hcmod3
                  and a.aqpa465sucor = pn_hsucor3
                  and a.aqpa465tran = pn_htran3
                  and a.aqpa465rel = pn_hnrel3
                  and a.aqpa465con = pn_hfcon3
                  and a.aqpa465serie = lc_serieI
                  and a.aqpa465corr = lc_correlativoI;*/
                commit;
              exception
                when others then
                  lc_coderr := sqlcode;
                  lc_msgerr := sqlerrm;
              end;
            
            end if;
          end if; --25012019
        
        end if; ---fin de tipodocu 
      
      end if;
    
    end loop;
  
  end sp_cr_Nota_Credito_COM_M;
  -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --         
  -- **** PROCESO PARA PROCESAR EL DAE POR SCHEDULERS
  procedure sp_cr_sch_dae_m(pd_fecpro in date) is
  
    ln_ini      number;
    lc_variable varchar2(4000);
    ln_job      number := 0;
    lc_fecpro   char(10);
    ld_finmes   date;
    lc_hostname varchar2(64);
  
    pi_vc2_nomjob varchar2(65);
    lc_prefjob    varchar2(64);
    ln_numjob     number(9) := 0;
  
    cursor sucursal is
      select *
        from fst001
       where pgcod = 1
      --and sucurs < 800
      --or sucurs >= 900
      ;
  
  begin
    begin
      select host_name into lc_hostname from v$instance;
    exception
      when others then
        null;
    end;
  
    -- Eliminación del registro por usuario
    --delete from aqpb073 t where trim(t.aqpb073usur) = pn_usuario;
    --commit;
  
    lc_fecpro := to_char(pd_fecpro, 'RRRR.MM.DD');
  
    ---carga diaria
    for i in sucursal loop
      ln_ini        := i.sucurs;
      ln_job        := ln_job + 1;
      lc_prefjob    := 'DAE_REP_M';
      pi_vc2_nomjob := lc_prefjob || to_char(pd_fecpro, 'ddmmrrrr') ||
                       lpad(ln_ini, 3, '0'); ---ln_job
      lc_variable   := 'begin ' ||
                       '  pq_cr_Factura_Electronica.sp_tra_validas_HIS_M( TO_DATE(''' ||
                       lc_fecpro || ''',''RRRR.MM.DD''),' || ln_ini || ');' ||
                       ' End;';
    
      IF SYS.FN_BD_ISRAC = 'TRUE' THEN
        dbms_scheduler.create_job(job_name   => pi_vc2_nomjob,
                                  job_type   => 'PLSQL_BLOCK',
                                  job_action => lc_variable,
                                  start_date => sysdate, -- + 1 / (24 * 180),
                                  enabled    => true,
                                  auto_drop  => TRUE,
                                  comments   => 'Proc_Dae_M');
        begin
          dbms_scheduler.set_attribute(pi_vc2_nomjob, 'instance_id', 2);
        end;
      Else
        dbms_scheduler.create_job(job_name   => pi_vc2_nomjob,
                                  job_type   => 'PLSQL_BLOCK',
                                  job_action => lc_variable,
                                  start_date => sysdate, -- + 1 / (24 * 180),
                                  enabled    => true,
                                  auto_drop  => TRUE,
                                  comments   => 'Proc_Dae_M');
        begin
          dbms_scheduler.set_attribute(pi_vc2_nomjob, 'instance_id', 1);
        end;
      End If;
      commit;
    
      INSERT INTO Tab_jobs
        (c_codage, n_Numer1, c_detjob)
      VALUES
        ('DAEREP_M', ln_ini, lc_variable);
      COMMIT;
    
    end loop;
  
    ln_numjob := pq_cr_Factura_Electronica.fn_cr_verifica_tarea(lc_prefjob,
                                                                lc_hostname);
  
    While ln_numjob > 0 loop
      ln_numjob := pq_cr_Factura_Electronica.fn_cr_verifica_tarea(lc_prefjob,
                                                                  lc_hostname);
    End loop;
  
  end sp_cr_sch_dae_m;
  -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --       
  -- **** PROCESO PARA PROCESAR EL NCE POR SCHEDULERS  
  procedure sp_cr_sch_nce_m(pd_fecpro in date) is
  
    ln_ini      number;
    lc_variable varchar2(4000);
    ln_job      number := 0;
    lc_fecpro   char(10);
    ld_finmes   date;
    lc_hostname varchar2(64);
  
    pi_vc2_nomjob varchar2(65);
    lc_prefjob    varchar2(64);
    ln_numjob     number(9) := 0;
  
    cursor sucursal is
      select *
        from fst001
       where pgcod = 1
      --and sucurs < 800
      --or sucurs >= 900
      ;
  
  begin
    begin
      select host_name into lc_hostname from v$instance;
    exception
      when others then
        null;
    end;
  
    -- Generación de NCE's Pendientes de la fecha anterior
    -- pq_cr_facturacion_generacion.sp_cr_generar_nce_his(pd_fecpro);
  
    lc_fecpro := to_char(pd_fecpro, 'RRRR.MM.DD');
  
    ---carga diaria
    for i in sucursal loop
      ln_ini        := i.sucurs;
      ln_job        := ln_job + 1;
      lc_prefjob    := 'NCE_REP_M';
      pi_vc2_nomjob := lc_prefjob || to_char(pd_fecpro, 'ddmmrrrr') ||
                       lpad(ln_ini, 3, '0'); ---ln_job
      lc_variable   := 'begin ' ||
                       '  pq_cr_Factura_Electronica.sp_cr_Nota_Credito_COM_M( TO_DATE(''' ||
                       lc_fecpro || ''',''RRRR.MM.DD''),' || ln_ini || ');' ||
                       ' End;';
    
      IF SYS.FN_BD_ISRAC = 'TRUE' THEN
        dbms_scheduler.create_job(job_name   => pi_vc2_nomjob,
                                  job_type   => 'PLSQL_BLOCK',
                                  job_action => lc_variable,
                                  start_date => sysdate, -- + 1 / (24 * 180),
                                  enabled    => true,
                                  auto_drop  => TRUE,
                                  comments   => 'Proc_Nce_M');
        begin
          dbms_scheduler.set_attribute(pi_vc2_nomjob, 'instance_id', 1); --20082024
        exception
          when others then
            null;
        end;
      Else
        dbms_scheduler.create_job(job_name   => pi_vc2_nomjob,
                                  job_type   => 'PLSQL_BLOCK',
                                  job_action => lc_variable,
                                  start_date => sysdate, -- + 1 / (24 * 180),
                                  enabled    => true,
                                  auto_drop  => TRUE,
                                  comments   => 'Proc_Nce_M');
        begin
          dbms_scheduler.set_attribute(pi_vc2_nomjob, 'instance_id', 1);
        end;
      End If;
      commit;
    
      INSERT INTO Tab_jobs
        (c_codage, n_Numer1, c_detjob)
      VALUES
        ('NCEREP_M', ln_ini, lc_variable);
      COMMIT;
    
    end loop;
  
    ln_numjob := pq_cr_Factura_Electronica.fn_cr_verifica_tarea(lc_prefjob,
                                                                lc_hostname);
  
    While ln_numjob > 0 loop
      ln_numjob := pq_cr_Factura_Electronica.fn_cr_verifica_tarea(lc_prefjob,
                                                                  lc_hostname);
    End loop;
  
  end sp_cr_sch_nce_m;
  -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --           
  -- **** PROCESO DE CARGA MODIFICADO POR SCHEDULERS *****
  Procedure sp_cr_proceso_inserta_M(pd_Fecpro in date, pc_sucurs in number) is
  
    cursor movimientos is
    
      select f.sr171tremp,
             f.st171cpcod,
             f.sr171trmod,
             f.sr171trnro,
             f.sr171trord,
             g.st171cpdsc,
             h.jaqz675asuc  hsucor,
             h.jaqz675anre  hnrel,
             pd_fecpro      hfcon,
             h.jaqz675acta  hcta,
             h.jaqz675asucu hsucur,
             h.jaqz675aimp1 hcimp1
        from FSR171 F, FST171 G, JAQZ675A h
       where h.jaqz675acod = F.SR171TREMP
         AND h.jaqz675amod = F.SR171TRMOD
         AND h.jaqz675atrn = F.SR171TRNRO
         AND h.jaqz675acor = F.SR171TRORD
            
         and h.jaqz675asuc = pc_sucurs ----- SUCURSAL
            --AND h.jaqz675acsu = F.SR171TRSBO
         AND f.ST171CPCOD = G.ST171CPCOD
       order by h.jaqz675acod,
                f.sr171trmod,
                f.sr171trnro,
                h.jaqz675anre,
                f.st171cpcod,
                f.sr171trord;
  
    cursor cabecera is
      select * from fst171 f where f.st171cpcod in (1, 3, 4, 5);
  
    lc_fechaproceso varchar2(8);
    ln_txoren       number;
    ln_numero       number;
    ln_contador     number;
    ln_cuenta       number;
    ln_sucursal     number;
    lc_hora         char(8);
    ln_relacion     number;
    --lc_flag     char(1);
    ln_modulo number;
    ln_tran   number;
    ln_sucur  number;
    lc_err    varchar2(300);
  begin
  
    lc_fechaproceso := to_char(pd_Fecpro, 'yyyymmdd');
  
    --ln_numero   := 500;
    begin
      sp_correl_sq(p_c_nomseq => 'SEQ_FACTJAQZ_SEE',
                   p_c_codusu => 'BANTOTAL',
                   p_n_correl => ln_numero); --out
    end;
  
    ln_contador := 1;
    /*
      execute immediate ('truncate table fse170h');
      execute immediate ('truncate table JAQZ676'); --FSE170_FAC
      execute immediate ('truncate table JAQZ675'); --FSX016_FAC
    
      execute immediate ('truncate table JAQZ675A'); --FSH016
      execute immediate ('alter table JAQZ675A parallel 10'); --FSH016
    
      execute immediate ('truncate table JAQZ685'); --mod@abr 20190304
    */
    insert into JAQZ685 --parallel (degree 10) nologging AS 
      SELECT ---parallel(H,10)
       H.PGCOD,
       H.HCMOD,
       H.HSUCOR,
       H.HTRAN,
       H.HNREL,
       H.HFCON,
       H.HCORD,
       H.HCSUBO,
       H.HCTA,
       H.HSUCUR,
       H.HCIMP1,
       H.HRUBRO,
       HCAFGT
        FROM FSH016 H
       WHERE H.PGCOD = 1
         and h.hsucor = pc_sucurs
         AND H.HFCON = pd_Fecpro;
    commit;
  
    INSERT INTO JAQZ675A
      (JAQZ675ACOD,
       JAQZ675AMOD,
       JAQZ675ASUC,
       JAQZ675ATRN,
       JAQZ675ANRE,
       JAQZ675AFCO,
       JAQZ675ACOR,
       JAQZ675ACSU,
       JAQZ675ACTA,
       JAQZ675ASUCU,
       JAQZ675AIMP1)
      select H.JAQZ685PGC, ----
             H.JAQZ685MOD, ---
             H.JAQZ685SUC,
             H.JAQZ685TRA, --
             H.JAQZ685REL,
             H.JAQZ685HFC,
             H.JAQZ685HCO, ----
             H.JAQZ685HCS,
             H.JAQZ685CTA,
             H.JAQZ685SUX,
             H.JAQZ685IMP
        from JAQZ685 H
       where H.JAQZ685CAF = 'C'
         and h.jaqz685suc = pc_sucurs
         and (H.JAQZ685MOD, H.JAQZ685TRA) IN
             (SELECT A.TP1NRO1, A.TP1NRO2 ----TRX PROCESO BACH
                FROM FST198 A
               WHERE A.TP1COD = 1
                 AND A.TP1COD1 = 11120
                 AND A.TP1CORR1 = 4
                 AND A.TP1NRO1 IS NOT NULL)
         AND H.JAQZ685RUB NOT IN (4212290000007, 4222290000007);
    commit;
  
    for i in movimientos loop
    
      if i.hnrel <> ln_relacion or i.sr171trmod <> ln_modulo or
         i.sr171trnro <> ln_tran or i.hsucor <> ln_sucur then
        ln_contador := 1;
        --ln_numero   := ln_numero + 1;
        begin
          sp_correl_sq(p_c_nomseq => 'SEQ_FACTJAQZ_SEE',
                       p_c_codusu => 'BANTOTAL',
                       p_n_correl => ln_numero); --out
        end;
      end if;
    
      ln_txoren   := i.ST171CPCOD + 100;
      ln_cuenta   := i.hcta;
      ln_sucursal := i.hsucur;
    
      if ln_contador = 1 then
        for y in cabecera loop
          ----ST171CPCOD -> 1: SUCURSAL
          if y.ST171CPCOD = 1 then
            --sucursal
            insert into JAQZ675
              (JAQZ675cod,
               JAQZ675mod,
               JAQZ675suc,
               JAQZ675trn,
               JAQZ675nre,
               JAQZ675fco,
               JAQZ675cor,
               JAQZ675csu,
               JAQZ675tco,
               JAQZ675toe,
               JAQZ675tor,
               JAQZ675tsu,
               JAQZ675tru,
               JAQZ675tmd,
               JAQZ675tpa,
               JAQZ675tct,
               JAQZ675top,
               JAQZ675tsb,
               JAQZ675tto,
               JAQZ675tmo)
            values
              (i.sr171tremp,
               i.sr171trmod,
               i.hsucor,
               i.sr171trnro,
               i.hnrel,
               i.hfcon,
               10,
               1,
               200, --
               101,
               ln_sucursal,
               0,
               ln_numero,
               0,
               0,
               0,
               0,
               0,
               0,
               0);
          
            insert into JAQZ676
              (JAQZ676doemp,
               JAQZ676doid,
               JAQZ676cpcod,
               JAQZ676vnro,
               JAQZ676vchr,
               JAQZ676vfch,
               JAQZ676vimp,
               JAQZ676vtas)
            values
              (i.sr171tremp,
               ln_numero,
               y.ST171CPCOD,
               ln_sucursal,
               trim(y.st171cpdsc),
               null,
               0,
               0);
          
            ----ST171CPCOD -> 3: HORA DE LA TRANSACCION
          elsif y.ST171CPCOD = 3 then
            --hora
            /*begin
              select a.hhora
                into lc_hora
                from fsh015 a 
                where a.pgcod  = i.sr171tremp 
                  and a.hcmod  = i.sr171trmod 
                  and a.hsucor = i.hsucor 
                  and a.htran  = i.sr171trnro 
                  and a.hnrel  = i.hnrel 
                  and a.hfcon  = i.hfcon;
            exception when others then
                  lc_hora := null;              
            end;*/
          
            begin
              select a.hhora
                into lc_hora
                from fsH015 a
               where a.pgcod = i.sr171tremp
                 and a.hcmod = i.sr171trmod
                 and a.hsucor = i.hsucor
                 and a.htran = i.sr171trnro
                 and a.hnrel = i.hnrel
                 and a.hfcon = i.hfcon;
            exception
              when others then
                lc_hora := null;
            end;
          
            insert into JAQZ675
              (JAQZ675cod,
               JAQZ675mod,
               JAQZ675suc,
               JAQZ675trn,
               JAQZ675nre,
               JAQZ675fco,
               JAQZ675cor,
               JAQZ675csu,
               JAQZ675tco,
               JAQZ675toe,
               JAQZ675tor,
               JAQZ675tsu,
               JAQZ675tru,
               JAQZ675tmd,
               JAQZ675tpa,
               JAQZ675tct,
               JAQZ675top,
               JAQZ675tsb,
               JAQZ675tto,
               JAQZ675tmo)
            values
              (i.sr171tremp,
               i.sr171trmod,
               i.hsucor,
               i.sr171trnro,
               i.hnrel,
               i.hfcon,
               10,
               1,
               200, --
               103,
               lc_hora,
               0,
               ln_numero,
               0,
               0,
               0,
               0,
               0,
               0,
               0);
          
            insert into JAQZ676
              (JAQZ676doemp,
               JAQZ676doid,
               JAQZ676cpcod,
               JAQZ676vnro,
               JAQZ676vchr,
               JAQZ676vfch,
               JAQZ676vimp,
               JAQZ676vtas)
            values
              (i.sr171tremp,
               ln_numero,
               y.ST171CPCOD,
               0,
               lc_hora,
               null,
               0,
               0);
          
            ----ST171CPCOD -> 4: FECHA DE LA TRANSACCION
          elsif y.ST171CPCOD = 4 then
            --fecha
            insert into JAQZ675
              (JAQZ675cod,
               JAQZ675mod,
               JAQZ675suc,
               JAQZ675trn,
               JAQZ675nre,
               JAQZ675fco,
               JAQZ675cor,
               JAQZ675csu,
               JAQZ675tco,
               JAQZ675toe,
               JAQZ675tor,
               JAQZ675tsu,
               JAQZ675tru,
               JAQZ675tmd,
               JAQZ675tpa,
               JAQZ675tct,
               JAQZ675top,
               JAQZ675tsb,
               JAQZ675tto,
               JAQZ675tmo)
            values
              (i.sr171tremp,
               i.sr171trmod,
               i.hsucor,
               i.sr171trnro,
               i.hnrel,
               i.hfcon,
               10,
               1,
               200, --
               104,
               i.hfcon,
               0,
               ln_numero,
               0,
               0,
               0,
               0,
               0,
               0,
               0);
          
            insert into JAQZ676
              (JAQZ676doemp,
               JAQZ676doid,
               JAQZ676cpcod,
               JAQZ676vnro,
               JAQZ676vchr,
               JAQZ676vfch,
               JAQZ676vimp,
               JAQZ676vtas)
            values
              (i.sr171tremp,
               ln_numero,
               y.ST171CPCOD,
               0,
               trim(y.st171cpdsc),
               i.hfcon,
               0,
               0);
          
            ----ST171CPCOD -> 5: NRO DE CUENTA
          elsif y.ST171CPCOD = 5 then
            --cuenta
          
            insert into JAQZ675
              (JAQZ675cod,
               JAQZ675mod,
               JAQZ675suc,
               JAQZ675trn,
               JAQZ675nre,
               JAQZ675fco,
               JAQZ675cor,
               JAQZ675csu,
               JAQZ675tco,
               JAQZ675toe,
               JAQZ675tor,
               JAQZ675tsu,
               JAQZ675tru,
               JAQZ675tmd,
               JAQZ675tpa,
               JAQZ675tct,
               JAQZ675top,
               JAQZ675tsb,
               JAQZ675tto,
               JAQZ675tmo)
            values
              (i.sr171tremp,
               i.sr171trmod,
               i.hsucor,
               i.sr171trnro,
               i.hnrel,
               i.hfcon,
               10,
               1,
               200,
               105,
               ln_cuenta,
               0,
               ln_numero,
               0,
               0,
               0,
               0,
               0,
               0,
               0);
          
            insert into JAQZ676
              (JAQZ676doemp,
               JAQZ676doid,
               JAQZ676cpcod,
               JAQZ676vnro,
               JAQZ676vchr,
               JAQZ676vfch,
               JAQZ676vimp,
               JAQZ676vtas)
            values
              (i.sr171tremp,
               ln_numero,
               y.ST171CPCOD,
               ln_cuenta,
               trim(y.st171cpdsc),
               null,
               0,
               0);
          end if;
          commit;
        end loop;
        ln_contador := ln_contador + 1;
      end if;
    
      ----INSERCIÓN DE MONTOS
      ----ST171CPCOD -> 15: CAPITAL
      ----ST171CPCOD -> 16: Interes Compensatorio                             
      ----ST171CPCOD -> 18: Interes Moratorio                                 
      ----ST171CPCOD -> 25: I.T.F.    
      ----ST171CPCOD -> 30: Cobro en efectivo    
      insert into JAQZ675
        (JAQZ675cod,
         JAQZ675mod,
         JAQZ675suc,
         JAQZ675trn,
         JAQZ675nre,
         JAQZ675fco,
         JAQZ675cor,
         JAQZ675csu,
         JAQZ675tco,
         JAQZ675toe,
         JAQZ675tor,
         JAQZ675tsu,
         JAQZ675tru,
         JAQZ675tmd,
         JAQZ675tpa,
         JAQZ675tct,
         JAQZ675top,
         JAQZ675tsb,
         JAQZ675tto,
         JAQZ675tmo)
      values
        (i.sr171tremp,
         i.sr171trmod,
         i.hsucor,
         i.sr171trnro,
         i.hnrel,
         i.hfcon,
         10,
         1,
         200,
         ln_txoren,
         i.hcimp1,
         0,
         ln_numero,
         0,
         0,
         0,
         0,
         0,
         0,
         0);
    
      insert into JAQZ676
        (JAQZ676doemp,
         JAQZ676doid,
         JAQZ676cpcod,
         JAQZ676vnro,
         JAQZ676vchr,
         JAQZ676vfch,
         JAQZ676vimp,
         JAQZ676vtas)
      values
        (i.sr171tremp,
         ln_numero,
         i.ST171CPCOD,
         0,
         trim(i.st171cpdsc),
         null,
         trunc(i.hcimp1),
         0);
    
      ln_relacion := i.hnrel;
      ln_modulo   := i.sr171trmod;
      ln_tran     := i.sr171trnro;
      ln_sucur    := i.hsucor;
      commit;
    end loop;
    commit;
  
    --pq_cr_factura_electronica.Sp_cr_proceso_bach_2M(pd_fecpro, pc_sucurs);
  
    /*
    execute immediate ('alter table JAQZ675A parallel 1'); --FSH016  2019.02.19 DCASTRO se modifico parallel 10 a 1
    
    --estadisticas
    BEGIN
      DBMS_STATS.GATHER_TABLE_STATS(OWNNAME          => 'DESA240820', ----BANTPROD, --DESA200120
                                    TABNAME          => 'JAQZ675',
                                    DEGREE           => 8,
                                    GRANULARITY      => 'ALL',
                                    ESTIMATE_PERCENT => 100,
                                    CASCADE          => TRUE);
    END;
    
    --1.2--------------
    BEGIN
      DBMS_STATS.GATHER_TABLE_STATS(OWNNAME          => 'DESA240820', ----BANTPROD, --DESA200120
                                    TABNAME          => 'JAQZ676',
                                    DEGREE           => 8,
                                    GRANULARITY      => 'ALL',
                                    ESTIMATE_PERCENT => 100,
                                    CASCADE          => TRUE);
    END;
    */
  
    --modificacion de punto
    /*    
      begin
        update JAQZ675 a
           set a.JAQZ675TOR = trim(case
                                     when substr(JAQZ675TOR, 1, 1) = ',' then
                                      replace(JAQZ675TOR, ',', '0.')
                                     else
                                      replace(JAQZ675TOR, ',', '.')
                                   end)
         where a.JAQZ675COD = 1
           and a.JAQZ675FCO = pd_fecpro --fecha diaria
           and a.jaqz675suc = pc_sucurs
           and a.JAQZ675TCO = 200
           and a.JAQZ675TOE > 105;
      
      exception
        when others then
          null;
      end;
      commit;
    
    
      begin
        insert into Fse170h
          select distinct pd_fecpro,
                          JAQZ676DOEMP,
                          JAQZ676DOID,
                          JAQZ676CPCOD,
                          JAQZ676VNRO,
                          JAQZ676VCHR,
                          JAQZ676VFCH,
                          JAQZ676VIMP,
                          JAQZ676VTAS
            from JAQZ676
           where (JAQZ676DOEMP, JAQZ676DOID, JAQZ676CPCOD, JAQZ676VNRO) not in
                 (select JAQZ676DOEMP, JAQZ676DOID, JAQZ676CPCOD, JAQZ676VNRO
                    from JAQZ676 j
                   where j.jaqz676vnro = 0
                     and j.jaqz676vchr = 'Nro de Cuenta')
                      ;
      
        commit;
      exception
        when others then
          lc_err := trim(sqlerrm);
          insert into aqpa460e
            (aqpa460eserie, aqpa460eamsge)
          values
            ('MMM', lc_err);
          commit;
      end;
    
      update jaqz675 a set a.jaqz675cpc = jaqz675toe - 100;
      commit;
    
      -----8-------insertar registros de bantotal
    
      ----8.1 aplicar estadisticas
      BEGIN
        DBMS_STATS.GATHER_TABLE_STATS(OWNNAME          => 'DESA240820', --'DESA021118',--'BANTPROD', DESA250219,DESA200120
                                      TABNAME          => 'Fse170h',
                                      DEGREE           => 8,
                                      GRANULARITY      => 'ALL',
                                      ESTIMATE_PERCENT => 100,
                                      CASCADE          => TRUE);
      END;
    
    */
  
  end sp_cr_proceso_inserta_M;
  -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --   
  Procedure Sp_cr_proceso_bach_2M(pd_fecpro in date, pc_sucurs in number) is
  
    cursor movimientos is
    
      select f.sr171tremp,
             f.st171cpcod,
             f.sr171trmod,
             f.sr171trnro,
             f.sr171trord,
             g.st171cpdsc,
             h.jaqz675asuc  hsucor,
             h.jaqz675anre  hnrel,
             pd_fecpro      hfcon,
             h.jaqz675acta  hcta,
             h.jaqz675asucu hsucur,
             h.jaqz675aimp1 hcimp1
        from FSR171 F, FST171 G, JAQZ675A h
       where h.jaqz675acod = F.SR171TREMP
         AND h.jaqz675amod = F.SR171TRMOD
         AND h.jaqz675atrn = F.SR171TRNRO
         AND h.jaqz675acor = F.SR171TRORD
         AND h.jaqz675acsu = F.SR171TRSBO ----Diferencia
         and h.jaqz675asuc = pc_sucurs
         AND f.ST171CPCOD = G.ST171CPCOD
       order by h.jaqz675acod,
                f.sr171trmod,
                f.sr171trnro,
                h.jaqz675anre,
                f.st171cpcod,
                f.sr171trord;
  
    cursor cabecera is
      select * from fst171 f where f.st171cpcod in (1, 3, 4, 5);
  
    ln_txoren   number;
    ln_numero   number;
    ln_contador number;
    ln_cuenta   number;
    ln_sucursal number;
    lc_hora     char(8);
    ln_relacion number;
    --lc_flag     char(1);
    ln_modulo number;
    ln_tran   number;
    ln_sucur  number;
    lc_err    varchar2(300);
    ln_rub    number(16);
  begin
  
    --execute immediate ('truncate table JAQZ675A'); --FSH016
  
    insert into JAQZ675A
      (jaqz675acod,
       jaqz675amod,
       jaqz675asuc,
       jaqz675atrn,
       jaqz675anre,
       jaqz675afco,
       jaqz675acor,
       jaqz675acsu,
       jaqz675acta,
       jaqz675asucu,
       jaqz675aimp1)
      select PGCOD,
             HCMOD,
             HSUCOR,
             HTRAN,
             HNREL,
             HFCON,
             HCORD,
             HCSUBO,
             hcta,
             hsucur,
             hcimp1
        FROM FSH016 H
       WHERE H.PGCOD = 1
         AND H.HCAFGT = 'C'
         AND H.HFCON = pd_fecpro
         and h.hsucor = pc_sucurs
         AND (H.HCMOD, H.HTRAN) IN
             (SELECT A.TP1NRO1, A.TP1NRO2
                FROM FST198 A
               WHERE A.TP1COD = 1
                 AND A.TP1COD1 = 11120
                 AND A.TP1CORR1 = 5
                 and A.TP1NRO1 is not null)
         AND H.HRUBRO NOT IN ('4212290000007', '4222290000007');
    commit;
  
    --ln_numero := 500;
    ln_contador := 1;
  
    --execute immediate('truncate table fse170h');
    --execute immediate('truncate table JAQZ676');--FSE170_FAC
    --execute immediate('truncate table JAQZ675');--FSX016_FAC
  
    /*
    begin
      select nvl(max(a.jaqz676doid), 0) into ln_rub from jaqz676 a;
    exception
      when others then
        null;
    end;
    ln_numero := ln_rub + 1;*/
    begin
      sp_correl_sq(p_c_nomseq => 'SEQ_FACTJAQZ_SEE',
                   p_c_codusu => 'BANTOTAL',
                   p_n_correl => ln_numero); --out
    end;
  
    for i in movimientos loop
    
      if i.hnrel <> ln_relacion or i.sr171trmod <> ln_modulo or
         i.sr171trnro <> ln_tran or i.hsucor <> ln_sucur then
        ln_contador := 1;
        --ln_numero   := ln_numero + 1;
        begin
          sp_correl_sq(p_c_nomseq => 'SEQ_FACTJAQZ_SEE',
                       p_c_codusu => 'BANTOTAL',
                       p_n_correl => ln_numero); --out
        end;
      end if;
    
      ln_txoren   := i.ST171CPCOD + 100;
      ln_cuenta   := i.hcta;
      ln_sucursal := i.hsucur;
    
      if ln_contador = 1 then
        for y in cabecera loop
          if y.ST171CPCOD = 1 then
            --sucursal
            insert into JAQZ675
              (JAQZ675cod,
               JAQZ675mod,
               JAQZ675suc,
               JAQZ675trn,
               JAQZ675nre,
               JAQZ675fco,
               JAQZ675cor,
               JAQZ675csu,
               JAQZ675tco,
               JAQZ675toe,
               JAQZ675tor,
               JAQZ675tsu,
               JAQZ675tru,
               JAQZ675tmd,
               JAQZ675tpa,
               JAQZ675tct,
               JAQZ675top,
               JAQZ675tsb,
               JAQZ675tto,
               JAQZ675tmo)
            values
              (i.sr171tremp,
               i.sr171trmod,
               i.hsucor,
               i.sr171trnro,
               i.hnrel,
               i.hfcon,
               10,
               1,
               200,
               101,
               ln_sucursal,
               0,
               ln_numero,
               0,
               0,
               0,
               0,
               0,
               0,
               0);
          
            insert into JAQZ676
              (JAQZ676doemp,
               JAQZ676doid,
               JAQZ676cpcod,
               JAQZ676vnro,
               JAQZ676vchr,
               JAQZ676vfch,
               JAQZ676vimp,
               JAQZ676vtas)
            values
              (i.sr171tremp,
               ln_numero,
               y.ST171CPCOD,
               ln_sucursal,
               trim(y.st171cpdsc),
               null,
               0,
               0);
          
          elsif y.ST171CPCOD = 3 then
            --hora
          
            begin
              select a.hhora
                into lc_hora
                from fsH015 a
               where a.pgcod = i.sr171tremp
                 and a.hcmod = i.sr171trmod
                 and a.hsucor = i.hsucor
                 and a.htran = i.sr171trnro
                 and a.hnrel = i.hnrel
                 and a.hfcon = i.hfcon;
            exception
              when others then
                lc_hora := null;
            end;
          
            insert into JAQZ675
              (JAQZ675cod,
               JAQZ675mod,
               JAQZ675suc,
               JAQZ675trn,
               JAQZ675nre,
               JAQZ675fco,
               JAQZ675cor,
               JAQZ675csu,
               JAQZ675tco,
               JAQZ675toe,
               JAQZ675tor,
               JAQZ675tsu,
               JAQZ675tru,
               JAQZ675tmd,
               JAQZ675tpa,
               JAQZ675tct,
               JAQZ675top,
               JAQZ675tsb,
               JAQZ675tto,
               JAQZ675tmo)
            values
              (i.sr171tremp,
               i.sr171trmod,
               i.hsucor,
               i.sr171trnro,
               i.hnrel,
               i.hfcon,
               10,
               1,
               200,
               103,
               lc_hora,
               0,
               ln_numero,
               0,
               0,
               0,
               0,
               0,
               0,
               0);
          
            insert into JAQZ676
              (JAQZ676doemp,
               JAQZ676doid,
               JAQZ676cpcod,
               JAQZ676vnro,
               JAQZ676vchr,
               JAQZ676vfch,
               JAQZ676vimp,
               JAQZ676vtas)
            values
              (i.sr171tremp,
               ln_numero,
               y.ST171CPCOD,
               0,
               lc_hora,
               null,
               0,
               0);
          
          elsif y.ST171CPCOD = 4 then
            --fecha
            insert into JAQZ675
              (JAQZ675cod,
               JAQZ675mod,
               JAQZ675suc,
               JAQZ675trn,
               JAQZ675nre,
               JAQZ675fco,
               JAQZ675cor,
               JAQZ675csu,
               JAQZ675tco,
               JAQZ675toe,
               JAQZ675tor,
               JAQZ675tsu,
               JAQZ675tru,
               JAQZ675tmd,
               JAQZ675tpa,
               JAQZ675tct,
               JAQZ675top,
               JAQZ675tsb,
               JAQZ675tto,
               JAQZ675tmo)
            values
              (i.sr171tremp,
               i.sr171trmod,
               i.hsucor,
               i.sr171trnro,
               i.hnrel,
               i.hfcon,
               10,
               1,
               200,
               104,
               i.hfcon,
               0,
               ln_numero,
               0,
               0,
               0,
               0,
               0,
               0,
               0);
          
            insert into JAQZ676
              (JAQZ676doemp,
               JAQZ676doid,
               JAQZ676cpcod,
               JAQZ676vnro,
               JAQZ676vchr,
               JAQZ676vfch,
               JAQZ676vimp,
               JAQZ676vtas)
            values
              (i.sr171tremp,
               ln_numero,
               y.ST171CPCOD,
               0,
               trim(y.st171cpdsc),
               i.hfcon,
               0,
               0);
          
          elsif y.ST171CPCOD = 5 then
            --cuenta
          
            insert into JAQZ675
              (JAQZ675cod,
               JAQZ675mod,
               JAQZ675suc,
               JAQZ675trn,
               JAQZ675nre,
               JAQZ675fco,
               JAQZ675cor,
               JAQZ675csu,
               JAQZ675tco,
               JAQZ675toe,
               JAQZ675tor,
               JAQZ675tsu,
               JAQZ675tru,
               JAQZ675tmd,
               JAQZ675tpa,
               JAQZ675tct,
               JAQZ675top,
               JAQZ675tsb,
               JAQZ675tto,
               JAQZ675tmo)
            values
              (i.sr171tremp,
               i.sr171trmod,
               i.hsucor,
               i.sr171trnro,
               i.hnrel,
               i.hfcon,
               10,
               1,
               200,
               105,
               ln_cuenta,
               0,
               ln_numero,
               0,
               0,
               0,
               0,
               0,
               0,
               0);
          
            insert into JAQZ676
              (JAQZ676doemp,
               JAQZ676doid,
               JAQZ676cpcod,
               JAQZ676vnro,
               JAQZ676vchr,
               JAQZ676vfch,
               JAQZ676vimp,
               JAQZ676vtas)
            values
              (i.sr171tremp,
               ln_numero,
               y.ST171CPCOD,
               ln_cuenta,
               trim(y.st171cpdsc),
               null,
               0,
               0);
          end if;
          commit;
        end loop;
        ln_contador := ln_contador + 1;
      end if;
    
      insert into JAQZ675
        (JAQZ675cod,
         JAQZ675mod,
         JAQZ675suc,
         JAQZ675trn,
         JAQZ675nre,
         JAQZ675fco,
         JAQZ675cor,
         JAQZ675csu,
         JAQZ675tco,
         JAQZ675toe,
         JAQZ675tor,
         JAQZ675tsu,
         JAQZ675tru,
         JAQZ675tmd,
         JAQZ675tpa,
         JAQZ675tct,
         JAQZ675top,
         JAQZ675tsb,
         JAQZ675tto,
         JAQZ675tmo)
      values
        (i.sr171tremp,
         i.sr171trmod,
         i.hsucor,
         i.sr171trnro,
         i.hnrel,
         i.hfcon,
         10,
         1,
         200,
         ln_txoren,
         i.hcimp1,
         0,
         ln_numero,
         0,
         0,
         0,
         0,
         0,
         0,
         0);
    
      insert into JAQZ676
        (JAQZ676doemp,
         JAQZ676doid,
         JAQZ676cpcod,
         JAQZ676vnro,
         JAQZ676vchr,
         JAQZ676vfch,
         JAQZ676vimp,
         JAQZ676vtas)
      values
        (i.sr171tremp,
         ln_numero,
         i.ST171CPCOD,
         0,
         trim(i.st171cpdsc),
         null,
         trunc(i.hcimp1),
         0);
    
      ln_relacion := i.hnrel;
      ln_modulo   := i.sr171trmod;
      ln_tran     := i.sr171trnro;
      ln_sucur    := i.hsucor;
      commit;
    end loop;
    commit;
  
  end Sp_cr_proceso_bach_2M;
  -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --     
  procedure sp_cr_Detalle_Factura_COH(pd_pgfape      in date,
                                      pc_serie       in char,
                                      pn_correlativo in number,
                                      pn_concepto    in number) is
  
    pc_fecha    varchar2(80);
    lv_codtdocC varchar2(1); --05/04/2023 dcastro 
  
    cursor aqpa463 is
    
      select *
        from aqpa463 b
       where b.aqpa463hfcon = pd_pgfape --mod@abr 20180707
         and b.aqpa463serie = pc_serie --comentar despues
         and b.aqpa463corre = pn_correlativo
       order by b.aqpa463hnrel asc, b.aqpa463txoren asc;
  
    lc_coderr char(100);
    lc_msgerr char(1000);
  
    ln_cta           number(9);
    lc_hor           char(8);
    ld_fec           date;
    lc_flg           char(1) := 'N';
    pn_pais          number;
    pn_monto_total_1 number(12, 2) := 0;
    result           character(100);
    pd_pgfape2       date;
    ln_mda           number(4);
    ln_nroitem       number(12) := 0;
    ln_cant          number(12, 10);
    lc_codpla        char(3);
    ln_docemp        number(2);
    pv_tdoc          char(25);
    lc_sistemi       char(6);
  
    lv_destiptrb varchar2(6);
    ln_MONTO     number;
  
    lc_contrato varchar2(50);
    lv_tipemp   varchar2(1);
    lv_ruc      varchar2(11);
    lv_rzn      varchar2(1500);
    lv_ubg      varchar2(6);
    lv_NCOM     varchar2(1500);
    lv_CALLE    varchar2(200);
    --lv_URBA        varchar2(25);
    lv_DEPA  varchar2(100);
    lv_PROV  varchar2(30);
    lv_DIST  varchar2(30);
    lv_TELF  varchar2(20);
    lv_WEB   varchar2(100);
    lv_CPAIS varchar2(2);
    --lv_CESUN       varchar2(4);
    lv_codtipo      varchar2(2);
    lv_tipomda      varchar2(3);
    lv_correo       varchar2(100);
    lv_glosa        varchar2(30);
    lv_COMA         varchar2(20);
    lv_TPLA         varchar2(3);
    lv_tipoope      varchar2(4);
    lv_TPLCO        varchar2(3);
    lv_CLOG         varchar2(3);
    lv_codtdoc      varchar2(1);
    lc_pendoc       char(12);
    lv_pendoc       varchar2(15);
    lv_penom        varchar2(1500);
    lv_hora         varchar2(8);
    ln_SIMC         number(12, 2) := 0;
    ln_SVITM        number(12, 2) := 0;
    ln_SPVI         number(12, 2) := 0;
    lv_TXML         varchar2(3);
    lv_ubgCli       varchar2(6);
    lv_sngc13dir    varchar2(500);
    lv_urb          varchar2(100);
    lv_fst071dsc1   varchar2(500);
    lv_locnom1      varchar2(500);
    lv_depnom1      varchar2(500);
    lv_cpai         varchar2(2);
    lv_PNETU        varchar2(3); ------------
    lc_oneroso      varchar2(1);
    ln_mtoconce     number; --(12,10):= 0;
    ln_mtoconce_ant number; --(12,10):= 0;
    ln_VVUIG        number; --(12):= 0;
    lv_desconce     varchar2(500);
    lv_infpredio    varchar2(500);
    ln_PRVIT        number(15, 2) := 0;
    lv_MEDEM        varchar2(50);
    lv_CSUNA        varchar2(8);
    lv_CPGS1        varchar2(14);
    ln_ITITM        number(12, 2) := 0; ---2018.10.19 
    ln_IMPTB        number(12, 2) := 0;
    ln_IMPEX        number(12, 2) := 0;
    lv_afecigv      varchar2(2);
    lv_SISC         varchar2(2);
    lv_idtrbsunat   varchar2(4);
    lv_nomtrbsunat  varchar2(6);
    lv_codun        varchar2(3);
    ln_MBIM         number(12, 2) := 0;
    ln_TAIMP        number(12, 2) := 0; --2018.10.19
    ln_CDLEY        number(4) := 0;
    lv_TELEY        varchar2(200);
    lv_TEXT1        varchar2(1000);
    lv_TEXT2        varchar2(1000);
    lv_TRECV        varchar2(1000);
    lv_TEMPL        varchar2(3);
    lv_SUBJE        varchar2(100);
    lv_VPCVA        varchar2(15);
    lv_NEXP         varchar2(10);
    lv_CIND         varchar2(1);
    lv_partida      varchar2(50);
    lv_NCONT        varchar2(50);
    lv_fecoto       varchar2(10);
    ld_fecoto       date;
    lv_cdisn        varchar2(6);
    lv_direccionH   varchar2(100);
    lv_urbaH        varchar2(50);
    lv_dptoH        varchar2(50);
    lv_provH        varchar2(50);
    lv_distH        varchar2(500);
    ln_MTOTAL       number(12, 2) := 0;
    ln_BAIMP        number(12, 2) := 0;
    ln_MTIMP        number(12, 2) := 0;
    ln_PCIMA        number(12, 2) := 0;
    ln_BSIMP        number(12, 2) := 0;
    ln_VAIMP        number(12, 2) := 0;
    ln_MTINF        number(12, 2) := 0;
    ln_MTGRT        number(12, 2) := 0;
    ln_BSIMPS       number(12, 2) := 0;
    ln_MTOTI        number(12, 2) := 0;
    ln_petdoc       number(2);
    lv_CTPR         varchar(2);
    lv_rzn1         varchar2(30);
    lv_rzn2         varchar2(30);
    lc_codsunat     varchar2(4);
  
    lc_nomcaja char(70);
    lc_nom1    char(30);
    lc_nom2    char(30);
  
    ln_item number(12);
  
    ln_mtoDifer number(17, 2);
    ln_mtoRedon number(17, 2);
  
    ld_fecSis date; --mod@abr 20180709
  
    lc_existe char(1) := 'N'; --mod@abr 20180824
  
    lv_sngc13dirFin varchar2(500); --mod@abr 20180905
  
    ln_guiaCP number; --2018.10.10
    lv_desmda varchar2(30); --2018.10.18
  
    /*
    pc_AQPA465SERIE  aqpa460.aqpa460seri%type;
    pc_AQPA465CORR  aqpa460.aqpa460num%type;
    pc_AQPA465PGCOD aqpa460.
    pc_AQPA465MOD   ,
    pc_AQPA465SUCOREND
    pc_AQPA465TRAN    
    pc_AQPA465REL    ,
    pc_AQPA465CON,
    */
  begin
    begin
    
      for p in aqpa463 loop
      
        --mod@abr 20180824
        lc_existe := 'N';
        Begin
          select 'S'
            into lc_existe
            from aqpa460 a
           where a.aqpa460seri = p.aqpa463serie
             and a.aqpa460num = p.aqpa463corre
             and a.aqpa460ore = P.AQPA463TXOREN
             and rownum = 1;
        exception
          when others then
            lc_existe := 'N';
        end;
        --mod@abr 20180824
        if lc_existe = 'N' then
          Pq_Cr_Factura_Electronica.sp_cr_cobroEfectivo(p.aqpa463pgcod,
                                                        p.aqpa463hcmod,
                                                        p.aqpa463hsucor,
                                                        p.aqpa463htran,
                                                        p.aqpa463hnrel,
                                                        p.aqpa463hfcon,
                                                        p.aqpa463serie,
                                                        p.aqpa463corre,
                                                        pn_monto_total_1);
        
          --validar concepto 
          begin
            select 'S'
              into lc_flg
              from fst198 a
             where a.tp1cod = 1
               and a.tp1cod1 = 11120
               and a.tp1corr1 = 1
               and a.tp1corr2 = 3
               and a.tp1corr3 >= 1
               and a.tp1nro1 = p.aqpa463txoren - 100;
          exception
            when others then
              lc_flg := 'N';
          end;
        
          --obtener cuenta moneda hora fecha
          ln_cta := p.aqpa463cta;
          ln_mda := p.aqpa463mda;
        
          begin
            select a.ithora, a.itfcon
              into lc_hor, ld_fec
              from fsd015 a
             where a.pgcod = p.aqpa463pgcod
               and a.itmod = p.aqpa463hcmod
               and a.itsuc = p.aqpa463hsucor
               and a.ittran = p.aqpa463htran
               and a.itnrel = p.aqpa463hnrel;
          exception
            when others then
              null;
          end;
        
          /*2018.10.12
                 
          begin
          
             result := pq_cr_factura_electronica.dintex(pn_monto_total_1);
          end;
          */
        
          ----------Obtener codigo de sunat
          begin
            select lpad(a.tp1nro2, 4, '0')
              into lc_codsunat
              from fst198 a
             where a.tp1cod = 1
               and a.tp1cod1 = 11120
               and a.tp1corr1 = 1
               and a.tp1corr2 = 500
               and a.tp1nro1 = p.aqpa463hsucor;
          exception
            when others then
              null;
          end;
        
          begin
            -- Call the procedure
            pq_cr_factura_electronica.sp_fecha_sys(pc_fecha); --dni
          end;
        
          if lc_flg = 'N' then
            --inserte conceptos de deuda como fila
          
            pq_cr_factura_electronica.sp_cr_Dif_Red(pc_AQPA465PGCOD    => p.aqpa463pgcod,
                                                    pc_AQPA465MOD      => p.aqpa463hcmod,
                                                    pc_AQPA465SUCOREND => p.aqpa463hsucor,
                                                    pc_AQPA465TRAN     => p.aqpa463htran,
                                                    pc_AQPA465REL      => p.aqpa463hnrel,
                                                    pd_AQPA465CON      => p.aqpa463hfcon,
                                                    pn_dif             => ln_mtoDifer,
                                                    pn_red             => ln_mtoRedon);
          
            ln_mtoconce_ant := to_number(trim(p.aqpa463txtord),
                                         '99999999999999999.99'); --20180622
          
            if p.aqpa463txoren - 100 = 18 then
              ln_mtoconce := to_number(ln_mtoconce_ant) -
                             nvl(ln_mtoDifer, 0) - nvl(ln_mtoRedon, 0);
            else
              ln_mtoconce := to_number(ln_mtoconce_ant); ---verficar 222 
            end if;
          
            if ln_mtoconce <> 0 then
            
              --datos persona
              begin
              
                pq_cr_factura_electronica.sp_num_documento(ln_cta,
                                                           lc_pendoc,
                                                           lv_penom,
                                                           pv_tdoc,
                                                           pn_pais,
                                                           ln_petdoc,
                                                           pd_pgfape2);
              end;
            
              --datos direccion cliente
              begin
                -- Call the procedure
                pq_cr_factura_electronica.sp_dir_cliente(lc_pendoc,
                                                         ln_petdoc,
                                                         pn_pais,
                                                         lv_sngc13dir,
                                                         lv_fst071dsc1,
                                                         lv_locnom1,
                                                         lv_depnom1,
                                                         lv_ubgCli); ---dni  pn_pendoc
              end;
            
              --Codigo del Tipo de Comprobante
            
              --2018.10.10
              if substr(p.aqpa463serie, 1, 1) = 'F' then
                ln_guiaCP := 1;
              elsif substr(p.aqpa463serie, 1, 1) = 'B' then
                ln_guiaCP := 3;
              else
                ln_guiaCP := null;
              end if;
              --2018.10.10    
            
              begin
                select '0' || to_char(a.tp1nro1)
                  into lv_codtipo
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 7
                   and a.tp1corr3 = ln_guiaCP; --2018.10.10 se modifico codigo de guia para tipo comprobante
              exception
                when others then
                  null;
              end;
            
              --Codigo tipo moneda
              begin
                select trim(a.tp1desc)
                  into lv_tipomda
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 8
                   and a.tp1corr3 >= 1
                   and a.tp1nro1 = ln_mda;
              exception
                when others then
                  null;
              end;
            
              /*              --Codigo tipo documento cliente
                            begin
                              select to_char(a.tp1nro1)
                                into lv_codtdoc
                                from fst198 a
                               where a.tp1cod = 1
                                 and a.tp1cod1 = 11120
                                 and a.tp1corr1 = 1
                                 and a.tp1corr2 = 4
                                 and a.tp1nro2 = ln_petdoc;
                            exception
                              when others then
                                null;
                            end;
              */
              --Codigo tipo documento cliente
              begin
                select to_char(a.tp1nro1), substr(trim(TP1DESC), -1, 1)
                  into lv_codtdoc, lv_codtdocC
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 4
                   and a.tp1nro2 = ln_petdoc;
              exception
                when others then
                  null;
              end;
            
              --05/04/2023 dcastro se agrego nuevo tipo documento PTP
              if lv_codtdoc = 3 then
                lv_codtdoc := lv_codtdocC;
              end if;
              --05/04/2023 dcastro se agrego nuevo tipo documento PTP
            
              --Correo del cliente
              lv_correo := null;
              begin
                select substr(a.pextxt, 1, INSTR(a.pextxt, '\', 1) - 1)
                  into lv_correo
                  from fsx001 a
                 where a.pepais = pn_pais
                   and a.petdoc = ln_petdoc
                   and a.pendoc = lc_pendoc
                   and a.txcod = 0
                   and rownum = 1 --- 2021/11/11 dcastro se agrego condicion                   
                 order by a.pexren desc;
              exception
                when others then
                  null;
              end;
            
              --nro item
              ln_item := 0;
              begin
                select max(a.aqpa460item)
                  into ln_item
                  from aqpa460 a
                 where a.aqpa460seri = p.aqpa463serie
                   and a.aqpa460num = p.aqpa463corre;
              exception
                when too_many_rows then
                  begin
                    select max(a.aqpa460item)
                      into ln_item
                      from aqpa460 a
                     where a.aqpa460seri = p.aqpa463serie
                       and a.aqpa460num = p.aqpa463corre
                       and rownum = 1;
                  exception
                    when others then
                      null;
                  end;
                when no_data_found then
                  ln_item := 0;
                when others then
                  null;
              end;
              ln_nroitem := nvl(ln_item, 0) + 1;
            
              --monto conceptos
              --  ln_mtoconce := to_number(replace(trim(p.aqpa463txtord),'.',','));
            
              --       ln_mtoconce_ant:= round(trim(p.aqpa463txtord),2);
            
              --descripcion conceptos
              lv_desconce := trim(p.aqpa463hvchr);
            
              --Codigo de plantilla
              lc_codpla := 'EST';
            
              --- Sistema de Emicion 
              lc_sistemi := 'BANTOT';
            
              --Codigo tipo doc empresa
              begin
                select a.tp1nro1
                  into ln_docemp
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 4;
              exception
                when others then
                  null;
              end;
            
              begin
                select to_char(a.tp1nro1)
                  into lv_tipemp
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 4
                   and a.tp1corr3 >= 1
                   and a.tp1nro2 = ln_docemp;
              
              exception
                when others then
                  null;
              end;
              --ruc caja
              begin
                select trim(a.tp1desc)
                  into lv_ruc
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 1;
              exception
                when others then
                  null;
              end;
            
              --NOMBRE COMERCIAL caja
              begin
                select a.tp1desc
                  into lv_NCOM
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 5;
              exception
                when others then
                  null;
              end;
            
              --Ubigeo caja
              begin
                select trim(a.tp1desc)
                  into lv_ubg
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 6;
              exception
                when others then
                  null;
              end;
              ---------------------------------------campos parte 2
              ----------hora de transacion 
              begin
                select trim(a.aqpa463txtord)
                  into lv_hora
                  from aqpa463 a
                 where a.aqpa463pgcod = p.aqpa463pgcod
                   and a.aqpa463hcmod = p.aqpa463hcmod
                   and a.aqpa463hsucor = p.aqpa463hsucor
                   and a.aqpa463htran = p.aqpa463htran
                   and a.aqpa463hnrel = p.aqpa463hnrel
                   and a.aqpa463hfcon = p.aqpa463hfcon
                   and a.aqpa463serie = p.aqpa463serie
                   and a.aqpa463corre = p.aqpa463corre
                   and a.aqpa463txtord like '%:%';
              exception
                when others then
                  null;
              end;
            
              --mod@abr 20180907
              begin
                select pgfape into ld_fecSis from fst017 where pgcod = 1;
              exception
                when others then
                  null;
              end;
              if lv_hora is null then
              
                if ld_fecSis = p.aqpa463hfcon then
                
                  begin
                    select a.ithora
                      into lv_hora
                      from fsd015 a
                     where a.pgcod = p.aqpa463pgcod
                       and a.itsuc = p.aqpa463hsucor
                       and a.itmod = p.aqpa463hcmod
                       and a.ittran = p.aqpa463htran
                       and a.itnrel = p.aqpa463hnrel;
                  exception
                    when others then
                      null;
                  end;
                
                else
                  begin
                    select a.hhora
                      into lv_hora
                      from fsh015 a
                     where a.pgcod = p.aqpa463pgcod
                       and a.hsucor = p.aqpa463hsucor
                       and a.hcmod = p.aqpa463hcmod
                       and a.htran = p.aqpa463htran
                       and a.hnrel = p.aqpa463hnrel
                       and a.hfcon = p.aqpa463hfcon;
                  exception
                    when others then
                      null;
                  end;
                end if;
              
              end if;
              --mod@br 20180907
            
              --------tipo de operacion 
              begin
                select trim(a.tp1desc)
                  into lv_tipoope
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 11
                   and a.tp1corr3 = 1;
              exception
                when others then
                  null;
                
              end;
              -------Codigo de tipo de importe de afectacion
              Begin
                select to_char(a.tp1nro1)
                  into lc_oneroso
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 12
                   and a.tp1corr3 = 3;
              exception
                when others then
                  null;
              End;
            
              -----Afectaci?n del IGV  
              begin
                select to_char(a.tp1nro1)
                  into lv_afecigv
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 13
                   and a.tp1corr3 = 1;
              exception
                when others then
                  null;
                
              end;
            
              ---------Identificaci?n del tributo seg?n cat?logo SUNAT
              begin
                select to_char(a.tp1nro1), trim(a.tp1desc)
                  into lv_idtrbsunat, lv_nomtrbsunat
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 14
                   and a.tp1corr3 = 1;
              exception
                when others then
                  null;
              end; ---ojo
              ----------C?digo del Tipo de Tributo
              begin
                select trim(a.tp1desc)
                  into lv_destiptrb
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 14
                   and a.tp1corr3 = 2;
              exception
                when others then
                  null;
              end;
            
              ---Monto del descuento o recargo
              ln_MONTO := 0;
            
              -----------------Descripcion del pais 
              begin
                Select trim(a.tp1desc)
                  Into lv_CPAIS
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 15
                   and a.tp1corr3 = 1;
              exception
                when others then
                  null;
              end;
            
              ----------informacion del predio
              begin
                pq_cr_factura_electronica.sp_cr_detalle_predio(pc_aqpa463mod => p.aqpa463mod,
                                                               pc_aqpa463suc => p.aqpa463suc,
                                                               pc_aqpa463mda => p.aqpa463mda,
                                                               pc_aqpa463pap => p.aqpa463pap,
                                                               pc_aqpa463cta => p.aqpa463cta,
                                                               pc_aqpa463ope => p.aqpa463ope,
                                                               pc_aqpa463sbo => p.aqpa463sbo,
                                                               pc_aqpa463top => p.aqpa463top,
                                                               pc_partida    => lv_partida,
                                                               pc_contrato   => lc_contrato,
                                                               pc_direccion  => lv_direccionH,
                                                               pc_urba       => lv_urbaH,
                                                               pc_dpto       => lv_dptoH,
                                                               pc_prov       => lv_provH,
                                                               pc_dist       => lv_distH,
                                                               pc_ubigeo     => lv_cdisn);
              end;
            
              if lv_cdisn is null then
                --20180626
                lv_cdisn      := lv_ubgCli;
                lv_urbaH      := substr(lv_urb, 1, 25);
                lv_dptoH      := substr(lv_depnom1, 1, 30);
                lv_provH      := substr(lv_locnom1, 1, 30);
                lv_distH      := substr(lv_fst071dsc1, 1, 30);
                lv_direccionH := substr(lv_sngc13dir, 1, 100);
              end if;
            
              lc_contrato := lpad(to_char(p.aqpa463cta), 9, 0) ||
                             lpad(to_char(p.aqpa463mda), 3, 0) ||
                             lpad(to_char(p.aqpa463ope), 9, 0); --lv_text2; --numero credito
              lv_NCONT    := lc_contrato;
            
              ld_fecoto := pq_cr_factura_electronica.fn_fecha_desembolso(pc_aqpa463cta => p.aqpa463cta,
                                                                         pc_aqpa463ope => p.aqpa463ope);
            
              ld_fecoto := nvl(ld_fecoto, p.aqpa463hfcon);
              lv_fecoto := nvl(ld_fecoto, p.aqpa463hfcon);
            
              --agregar a info predio G74.1, G74.2
              lv_infpredio := '0' || '0' || lv_partida || '|' ||
                              lc_contrato || '|' || lv_fecoto || '|' ||
                              lv_direccionH || '|' || lv_urbaH || '|' ||
                              lv_provH || '|' || lv_distH || '|' ||
                              lv_dptoH;
              lv_pendoc    := lc_pendoc;
            
              --Pais del cliente
            
              begin
                select trim(a.tp1desc)
                  into lv_cpai
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 20
                   and a.tp1NRO1 = pn_pais;
              exception
                when others then
                  null;
              end;
            
              --Producto del credito
              begin
                select to_char(p.aqpa463mod) || '-' || trim(a.tonom)
                  into lv_TEXT1
                  from fst004 a
                 where a.modulo = p.aqpa463mod
                   and a.totope = p.aqpa463top;
              
              exception
                when others then
                  null;
              end;
            
              --direccion
              begin
                select to_char(a.tp1desc)
                  into lv_CALLE
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 2;
              
              exception
                when others then
                  null;
              end;
            
              --telefono
              begin
                select trim(to_char(a.tp1desc))
                  into lv_TELF
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 3;
              exception
                when others then
                  null;
              end;
            
              ---web de caja arequipa
              Begin
                select trim(a.tp1desc)
                  into lv_web
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 12;
              exception
                when others then
                  null;
              End;
            
              --departamento
              begin
                select to_char(a.tp1desc)
                  into lv_DEPA
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 7;
              
              exception
                when others then
                  null;
              end;
            
              --provincia
              begin
                select to_char(a.tp1desc)
                  into lv_PROV
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 8;
              
              exception
                when others then
                  null;
              end;
            
              --distrito
              begin
                select to_char(a.tp1desc)
                  into lv_DIST
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 9;
              
              exception
                when others then
                  null;
              end;
            
              --razon social
            
              begin
                select to_char(a.tp1desc)
                  into lv_rzn1
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 10;
              
              exception
                when others then
                  null;
              end;
            
              begin
                select to_char(a.tp1desc)
                  into lv_rzn2
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 11;
              
              exception
                when others then
                  null;
              end;
              lv_rzn := trim(lv_rzn1) || ' ' || trim(lv_rzn2);
            
              pn_monto_total_1 := ln_mtoconce; --2018.10.10 en comisiones se agrego monto a todos los campos
            
              begin
              
                result := pq_cr_factura_electronica.dintex(pn_monto_total_1);
              end;
            
              lv_glosa := null;
              lv_TPLA  := 'EST';
              lv_TPLCO := 'EST';
              ln_SIMC  := null;
              ln_SVITM := pn_monto_total_1;
              ln_SPVI  := pn_monto_total_1;
              lv_TXML  := '2.1';
              lv_urb   := null;
              lv_PNETU := 'NIU';
              ln_cant  := 1;
              lv_CTPR  := '01';
              ln_VVUIG := ln_mtoconce;
              ln_PRVIT := ln_mtoconce;
              lv_MEDEM := 'UND';
              lv_CSUNA := '84121901';
              ln_ITITM := null;
              ln_IMPTB := null;
              ln_IMPEX := null;
              --lv_afecigv  := '9996';
              lv_SISC   := null;
              lv_codun  := 'FRE';
              ln_MBIM   := ln_mtoconce; --null; 20180623
              ln_TAIMP  := null;
              ln_CDLEY  := 1000;
              lv_TELEY  := trim(result) || ' ' || lv_desmda; --2018.10.17  result;
              lv_TEXT2  := lpad(to_char(p.aqpa463cta), 9, 0) ||
                           lpad(to_char(p.aqpa463mda), 3, 0) ||
                           lpad(to_char(p.aqpa463ope), 9, 0);
              lv_TRECV  := lv_correo;
              lv_TEMPL  := 'EST';
              lv_SUBJE  := '0' || trim(lv_codtipo) || '-' || P.AQPA463SERIE || '-' ||
                           trim(to_char(P.AQPA463CORRE));
              lv_VPCVA  := null;
              lv_NEXP   := '0';
              lv_CIND   := '0';
              ln_MTOTAL := null;
              ln_BAIMP  := null;
              ln_MTIMP  := null;
              ln_PCIMA  := null;
              ln_BSIMP  := null;
              ln_VAIMP  := null;
              ln_MTINF  := pn_monto_total_1;
              ln_MTGRT  := null;
              ln_BSIMPS := null;
              ln_MTOTI  := null;
              lv_CPGS1  := null;
              lv_COMA   := to_char(p.aqpa463hfcon, 'yymmdd') ||
                           lpad(to_char(p.aqpa463hsucor), 3, 0) ||
                           lpad(to_char(p.aqpa463hcmod), 3, 0) ||
                           lpad(to_char(p.aqpa463htran), 3, 0) ||
                           lpad(to_char(p.aqpa463hnrel), 4, 0);
            
              ----------------------datos caja
              ---razon social de caja arequipa
              Begin
              
                select a.tp1desc
                  into lc_nom1
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 10;
              exception
                when others then
                  null;
              End;
            
              ---razon social de caja arequipa
              Begin
                select a.tp1desc
                  into lc_nom2
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 11;
              exception
                when others then
                  null;
              End;
            
              lc_nomcaja := trim(lc_nom1) || trim(lc_nom2);
            
              --mod@abr 20180903 modificacion de ubigeo TEMPORAL
              lv_sngc13dirFin := trim(lv_sngc13dir) || ' - ' ||
                                 trim(lv_fst071dsc1) || ' - ' ||
                                 trim(lv_locnom1) || ' - ' ||
                                 trim(lv_depnom1);
              lv_depnom1      := null;
              lv_locnom1      := null;
              lv_fst071dsc1   := null;
            
              --mod@abr 20180903 modificacion de ubigeo TEMPORAL
            
              --mod@abr 20180905
              if lv_correo is null then
                lv_correo := 'Reportefactele@cajaarequipa.pe';
              end if;
            
              if lv_TRECV is null then
                lv_TRECV := 'Reportefactele@cajaarequipa.pe';
              end if;
              --mod@abr 20180905
            
              --2018.10.17 ---2018.12.26
              if ln_cta = 999999999 or trim(ln_cta) = 99 or ln_cta = 0 then
                --inicio valida cuenta cliente  2018.10.17
                lv_codtdoc := 1;
                lv_pendoc  := '00000000';
                lv_penom   := 'Clientes Varios';
              End if;
            
              --              if P.AQPA463HCMOD = 30 and P.AQPA463HTRAN in (977, 978) then  22/07/2021
              if P.AQPA463HCMOD = 30 and
                 P.AQPA463HTRAN in (977, 978, 405, 984, 986) then
                ---30/405  22/07/2021
                ---si es igv bantotal                                           -- se agrego 984,986
                lv_afecigv := 17; --se agrego concepto 978 26122018
              end if;
            
              --2018.10.17
            
              --2018.12.26
              lv_penom := replace(lv_penom, '&', '');
              --2018.12.26
            
              ------insert detalle de factura
              BEGIN
                insert into AQPA460
                  (AQPA460TDOC, --Codigo del Tipo de Documento de Identidad oENEmpresa
                   AQPA460RUCC, --N?mero de documento de identidad del emisor oENEmpresa
                   AQPA460RSOC, --Apellidos y nombres o denominaci?n o raz?n social oENEmpresa
                   AQPA460CDIS, --Codigo de UBIGEO oENEmpresa
                   AQPA460NCOM, --Nombre Comercial oENEmpresa
                   AQPA460CALLE, --Direcci?n completa y detallada oENEmpresa
                   AQPA460URBA, --Urbanizacion o Zona  oENEmpresa
                   AQPA460DEPA, --Departamento, expresado textualmente  oENEmpresa
                   AQPA460PROV, --Provincia, expresarlo textualmente   oENEmpresa
                   AQPA460DIST, --Distrito, expresarlo textualmente oENEmpres
                   AQPA460TELF, --Telefono de la Empresa Emisora oENEmpres
                   AQPA460WEB, --Pagina Web del Emisor oENEmpres           
                   AQPA460CPAIS, --Codigo del Pais del Emisor oENEmpres
                   AQPA460CESUN, --C?digo del establecimiento de Sunat  oENEmpres
                   AQPA460SERI, --Serie del comprobante.  Datos del Comprobante
                   AQPA460NUM, --Numero Correlativo del comprobante. Datos del Comprobante
                   AQPA460FEMI, --Fecha de Emision del Comprobante Datos del Comprobante
                   AQPA460TCOMF, --Codigo del Tipo de Comprobante Datos del Comprobante
                   AQPA460MONE, --Codigo del Tipo de Moneda Datos del Comprobante
                   AQPA460CORRR, --El correo electr?nico del Receptor  Datos del Comprobante
                   AQPA460MGLO, --Multiples Informaci?n adicional u observacion del comprobante.  Datos del Comprobante
                   AQPA460COMA, --Numero Interno del Comprobante Datos del Comprobante
                   AQPA460TPLA, --Tiplo de Plantilla  Datos del Comprobante
                   AQPA460TOPE, --C?digo de Tipo de operaciones Datos del Comprobante
                   AQPA460TPLCO, --C?digo de plantilla de correo  Datos del Comprobante
                   AQPA460CLOG, --C?digo del tipo de Logo Datos del Comprobante
                   AQPA460TDOCR, --Codigo del tipo de documento de identificaci?n del Receptor Datos del Comprobante
                   AQPA460NRUC, --N?mero de documento de identificaci?n Datos del Comprobante
                   AQPA460RASOC, --Apellidos y nombres o denominaci?n o raz?n social Datos del Comprobante
                   AQPA460IMPT, --Importe total  a pagar Datos del Comprobante
                   AQPA460HEMI, --Hora de Emisi?n  Datos del Comprobante
                   AQPA460SIMC, --Suma de todos los impuestos del comprobante.  Datos del Comprobante
                   AQPA460SVITM, --Suma del valor de venta total de todos los items   Datos del Comprobante
                   AQPA460SPVI, --Suma de los precios de venta total de todos los items  Datos del Comprobante
                   AQPA460TXML, -- Indica el tipo de XML que se generar? Datos del Comprobante
                   --  no va para factura   --AQPA460SDREF, --Serie documento al que se aplica la nota. ENComprobanteMotivoDocumento
                   --  no va para factura   --AQPA460NDREF, --Numero  documento al que se aplica la nota.  ENComprobanteMotivoDocumento
                   --  no va para factura    --AQPA460CMEM,  --C?digo por el cual se emite la nota.  ENComprobanteMotivoDocumento
                   ---  no va para factura  --AQPA460SUST,  --Sustento ENComprobanteMotivoDocumentoSustento
                   --  no va para factura     AQPA460SERIE, --Serie del comprobante referenciado. Referencia a un comprobante
                   --  no va para factura     AQPA460NRO,   --N?mero del comprobante referenciado Referencia a un comprobante
                   ---  no va para factura   --AQPA460TCOMP, --C?digo del tipo de comprobante.  Referencia a un comprobante
                   ---  no va para factura  --AQPA460FDREF, --Fecha de emisi?n del comprobante referenciado. Referencia a un comprobante  
                   AQPA460CDIST, --C?digo de UBIGEO Datos adicionales del Receptor
                   AQPA460CALL, --Direcci?n completa y detallada Datos adicionales del Receptor
                   AQPA460URB, --Urbanizacion o Zona   Datos adicionales del Receptor
                   AQPA460DEP, --Departamento Datos adicionales del Receptor
                   AQPA460PRV, --Provincia   Datos adicionales del Receptor
                   AQPA460DST, --Distrito Datos adicionales del Receptor
                   AQPA460CPAI, --C?digo del Pa?s  Datos adicionales del Receptor
                   AQPA460ITEM, --N?mero de orden del Item ENComprobanteDetalle 
                   AQPA460PNETU, --Unidad de medida de los bienes vendidos por item (UN/ECE rec 20) ENComprobanteDetalle 
                   AQPA460CANTF, --Cantidad de unidades vendidas pot item (Q)  ENComprobanteDetalle 
                   AQPA460TOTAL, --Importe monetario que es el total de la l?nea de detalle, incluyendo variaciones de precio (subvenciones, cargos o descuentos) pero sin impuestos.  ENComprobanteDetalle 
                   AQPA460DETE, --Codigo de identificaci?n de Onerosidad del Item ENComprobanteDetalle 
                   AQPA460CTPR, --Codigo de tipo de importe de afectacion ENComprobanteDetalle 
                   /*ok */
                   AQPA460VVUN, --Valores de venta unitarios por item (VU) no incluye impuestos  ENComprobanteDetalle 
                   /*campos probl*/
                   AQPA460VVUIG, --Precio de Venta Unitario (Incluye impuestos)  ENComprobanteDetalle 
                   AQPA460DESC, -- Descripcion del producto ENComprobanteDetalle 
                   AQPA460MFUN, --Multi Descripcion,  puede tener varias desccripciones ENComprobanteDetalle 
                   AQPA460PRVIT, --Es el precio de venta ENComprobanteDetalle 
                   AQPA460MEDEM, --Unidad medida del emisor ENComprobanteDetalle 
                   AQPA460CSUNA, --C?digo producto establecido por Sunat   ENComprobanteDetalle 
                   AQPA460CPGS1, --C?digo de producto GS1  ENComprobanteDetalle 
                   AQPA460ITITM, --Impuesto total del item ENComprobanteDetalle 
                   AQPA460IMPTB, --Importe total de un tributo para este item Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460IMPEX, ---Importe expl?cito a tributar ( = Tasa Porcentaje * Base Imponible)   Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460AFIGV, --Afectaci?n del IGV  Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460SISC, --Sistema de ISC  (01=Especifico; 02= al valor; 03=PV al p?blico)  Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   /*ojo*/
                   AQPA460CODTB, --Identificaci?n del tributo seg?n cat?logo SUNAT Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460DSTRB, --Nombre del Tributo (IGV, IVAP, ISC)  Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460CODUN, --C?digo del Tipo de Tributo (UN/ECE 5153) Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460MBIM, --Monto base del impuesto Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460TAIMP, --Tasa aplicada del impuesto  Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460CDLEY, --Codigo de la Leyenda Utilizado para Leyendas
                   AQPA460TELEY, --Texto de la leyenda  Utilizado para Leyendas
                   AQPA460TEXT1, --Texto libre 1 : Producto  Informaci?n adicional para la visualizacion de representaciones impresas, antes definido por el integrador.
                   AQPA460TEXT2, --Texto libre 2 : N?mero de Cr?dito Informaci?n adicional para la visualizacion de representaciones impresas, antes definido por el integrador.
                   AQPA460TRECV, --Correo del receptor Utilizado para enviar correos adicionales con copia al Correo del Receptor, ingresado en ENComprobante.Correo
                   AQPA460TEMPL, --C?digo de Tipo de Plantilla  Utilizado para enviar correos adicionales con copia al Correo del Receptor, ingresado en ENComprobante.Correo
                   AQPA460SUBJE, --Asunto del correo Utilizado para enviar correos adicionales con copia al Correo del Receptor, ingresado en ENComprobante.Correo
                   AQPA460VPCVA, --Placa del vehiculo Informaci?n adicional del item
                   AQPA460NEXP, --N?mero de Expediente Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460CIND, --C?digo de indicador  Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460NPART, --N?mero de Partida Registral  Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460NCONT, --N?mero de contrato  Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460FOTRC, --Fecha de Otorgo de cr?dito   Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460CDISN, --C?digo de Ubigeo   Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460DIREH, --Direcci?n   Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460URBH, --Urbanizaci?n Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460PRVH, --Provincia   Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460DSTH, --Distrito   Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460DEPTH, --Departamento Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460MTOTAL, --Monto total Gravado (Sin impuesto)  Informaci?n de gravada                           
                   AQPA460BAIMP, --Base del impuesto  IGV del Gravado
                   AQPA460MTIMP, --Monto total solo del impuesto   IGV del Gravado
                   AQPA460PCIMA, --Porcentaje del impuesto aplicado  IGV del Gravado
                   AQPA460BSIMP, --Base del impuesto Otros impuestos del Gravado
                   AQPA460VAIMP, --Monto total solo del impuesto  Otros impuestos del Gravado
                   AQPA460MTINF, --Monto total Inafecto  Informaci?n de inafecto
                   AQPA460MTGRT, --Monto total Gratuito  Informaci?n de gratuito
                   AQPA460BSIMPS, --Base del impuesto Impuestos del Gratuito
                   AQPA460MTOTI, --Monto total de impuestos Impuestos del Gratuito
                   AQPA460PGC, --mod@abr 20180824
                   AQPA460MOD, --mod@abr 20180824  
                   AQPA460SUC, --mod@abr 20180824 
                   AQPA460TRX, --mod@abr 20180824
                   AQPA460REL, --mod@abr 20180824
                   AQPA460ORE --mod@abr 20180824
                   
                   )
                
                Values
                  (lv_tipemp, --AQPA460TDOC,  ok
                   lv_ruc, --AQPA460RUCC,  ok
                   lv_rzn, --AQPA460RSOC,  ok
                   lv_ubg, --AQPA460CDIS,  ok
                   lv_NCOM, --AQPA460NCOM,  ok
                   lv_CALLE, --AQPA460CALLE  ok
                   lv_urb, --AQPA460URBA,  ok
                   lv_DEPA, --AQPA460DEPA,  ok
                   lv_PROV, --AQPA460PROV,  ok
                   lv_DIST, --AQPA460DIST,  ok
                   lv_TELF, --AQPA460TELF,  ok
                   lv_WEB, --AQPA460WEB,   ok
                   lv_CPAIS, --AQPA460CPAIS  ok
                   lc_codsunat, --lv_CESUN,        --AQPA460CESUN
                   p.aqpa463serie, --AQPA460SERI,  ok
                   p.aqpa463corre, --AQPA460NUM,   ok
                   p.aqpa463hfcon, --AQPA460FEMI,  ok
                   lv_codtipo, --AQPA460TCOMF  ok
                   lv_tipomda, --AQPA460MONE,  ok
                   lv_correo, --AQPA460CORRR  ok
                   lv_glosa, --AQPA460MGLO,  ok
                   lv_COMA, --AQPA460COMA,  ok
                   lv_TPLA, --AQPA460TPLA,  ok
                   lv_tipoope, --AQPA460TOPE,  ok
                   lv_TPLCO, --AQPA460TPLCO  ok
                   lv_CLOG, --AQPA460CLOG,
                   lv_codtdoc, --AQPA460TDOCR  ok
                   lv_pendoc, --AQPA460NRUC,  ok
                   lv_penom, --AQPA460RASOC  ok
                   pn_monto_total_1, --AQPA460IMPT,  ok
                   lv_hora, --AQPA460HEMI,  ok
                   ln_SIMC, --AQPA460SIMC,  ok
                   ln_SVITM, --AQPA460SVITM  ok
                   ln_SPVI, --AQPA460SPVI,  ok
                   lv_TXML, --AQPA460TXML,  ok
                   --AQPA460SDREF, --Serie documento al que se aplica la nota. ENComprobanteMotivoDocumento
                   --AQPA460NDREF, --Numero  documento al que se aplica la nota.  ENComprobanteMotivoDocumento
                   --AQPA460CMEM,  --C?digo por el cual se emite la nota.  ENComprobanteMotivoDocumento
                   --     no va para factura--      lc_sustento,  --Sustento ENComprobanteMotivoDocumentoSustento
                   --AQPA460SERIE, --Serie del comprobante referenciado. Referencia a un comprobante
                   --AQPA460NRO,   --N?mero del comprobante referenciado Referencia a un comprobante
                   --AQPA460TCOMP, --C?digo del tipo de comprobante.  Referencia a un comprobante
                   --AQPA460FDREF, --Fecha de emisi?n del comprobante referenciado. Referencia a un comprobante  
                   lv_ubgCli, --AQPA460CDIST,  ok
                   lv_sngc13dir, --AQPA460CALL,   ok
                   lv_urb, --AQPA460URB,    ok
                   lv_depnom1, --AQPA460DEP,    ok
                   lv_locnom1, --AQPA460PRV,    ok
                   lv_fst071dsc1, --AQPA460DST,    ok
                   lv_cpai, --AQPA460CPAI,   ok
                   ln_nroitem, --AQPA460ITEM,   ok
                   lv_PNETU, --AQPA460PNETU,  ok
                   /*ok*/
                   ln_cant, --AQPA460CANTF,  ok
                   ln_mtoconce, --AQPA460TOTAL,  ok
                   lc_oneroso, --AQPA460DETE,   ok
                   lv_CTPR, --AQPA460CTPR,   ok
                   ln_mtoconce, --AQPA460VVUN,   ok to number
                   ln_VVUIG, --AQPA460VVUIG,  ok
                   lv_desconce, --AQPA460DESC,   ok
                   lv_infpredio, --AQPA460MFUN,   ok
                   ln_PRVIT, --AQPA460PRVIT,  ok
                   lv_MEDEM, --AQPA460MEDEM,  ok
                   lv_CSUNA, --AQPA460CSUNA,  ok
                   lv_CPGS1, --AQPA460CPGS1,  ok
                   ln_ITITM, --AQPA460ITITM,  ok
                   ln_IMPTB, --AQPA460IMPTB,  ok
                   ln_IMPEX, --AQPA460IMPEX,  ok
                   lv_afecigv, --AQPA460AFIGV,  ok
                   lv_SISC, --AQPA460SISC,   ok
                   lv_idtrbsunat, --AQPA460CODTB,  ok
                   lv_nomtrbsunat, --AQPA460DSTRB,  ok
                   lv_codun, --AQPA460CODUN,  ok
                   ln_MBIM, --AQPA460MBIM,   ok
                   ln_TAIMP, --AQPA460TAIMP,  ok
                   ln_CDLEY, --AQPA460CDLEY,  ok
                   lv_TELEY, --AQPA460TELEY,  ok
                   lv_TEXT1, --AQPA460TEXT1,  ok
                   lv_TEXT2, --AQPA460TEXT2,  ok
                   lv_TRECV, --AQPA460TRECV,  ok
                   lv_TEMPL, --AQPA460TEMPL,  ok
                   lv_SUBJE, --AQPA460SUBJE,  ok
                   lv_VPCVA, --AQPA460VPCVA,  ok
                   lv_NEXP, --AQPA460NEXP,   ok
                   lv_CIND, --,        --AQPA460CIND,   ok
                   nvl(lv_partida, ' '), --G74.3  --AQPA460NPART,  ok
                   nvl(lv_NCONT, ' '), -- G74.4 NUMERO CONTRATO                AQPA460NCONT,  ok 
                   ld_fecoto, --G74.5  FECHA OTORGAMIENTO CREDITO   AQPA460FOTRC,  ok
                   nvl(lv_cdisn, ' '), --G74.6  Ubigeo                        AQPA460CDISN,  ok
                   nvl(lv_direccionH, ' '), --G74.7                           AQPA460DIREH,  ok
                   nvl(lv_urbaH, ' '), --G74.8                                 AQPA460URBH,   ok
                   nvl(lv_provH, ' '), --G74.9                                AQPA460PRVH,   ok
                   nvl(lv_distH, ' '), --G74.10                                AQPA460DSTH,   ok
                   nvl(lv_dptoH, ' '), --AQPA460DEPTH,  ok
                   ln_MTOTAL, --AQPA460MTOTAL  ok
                   ln_BAIMP, --AQPA460BAIMP,  ok
                   ln_MTIMP, --AQPA460MTIMP,  ok
                   ln_PCIMA, --AQPA460PCIMA,  ok
                   ln_BSIMP, --AQPA460BSIMP,  ok
                   ln_VAIMP, --AQPA460VAIMP,  ok
                   ln_MTINF, --AQPA460MTINF,  ok
                   ln_MTGRT, --AQPA460MTGRT,  ok
                   ln_BSIMPS, --AQPA460BSIMPS  ok
                   ln_MTOTI, --AQPA460MTOTI   ok
                   P.AQPA463PGCOD, --mod@abr 20180824
                   P.AQPA463HCMOD, --mod@abr 20180824
                   P.AQPA463HSUCOR, --mod@abr 20180824 
                   P.AQPA463HTRAN, --mod@abr 20180824
                   P.AQPA463HNREL, --mod@abr 20180824 
                   P.AQPA463TXOREN --mod@abr 20180824
                   );
              
                commit;
              Exception
                when others then
                
                  lc_coderr := sqlcode;
                  lc_msgerr := sqlerrm;
                
                  insert into aqpa460E
                    (aqpa460eserie,
                     aqpa460ecorr,
                     aqpa460epgcod,
                     aqpa460emod,
                     aqpa460esucorend,
                     aqpa460etran,
                     aqpa460erel,
                     aqpa460econ,
                     aqpa460etip,
                     Aqpa460eacoe,
                     Aqpa460eamsge)
                  
                  values
                    (p.aqpa463serie,
                     p.aqpa463corre,
                     p.aqpa463pgcod,
                     p.aqpa463hcmod,
                     p.aqpa463hsucor,
                     p.aqpa463htran,
                     p.aqpa463hnrel,
                     p.aqpa463hfcon,
                     
                     'S',
                     lc_coderr,
                     lc_msgerr);
                  commit;
              END;
            
              ln_MTOTAL := 0;
              ln_BAIMP  := 0;
              ln_MTIMP  := 0;
              ln_PCIMA  := 0;
              ln_BSIMP  := 0;
              ln_VAIMP  := 0;
              ln_MTINF  := 0;
              ln_MTGRT  := 0;
              ln_BSIMPS := 0;
              ln_MTOTI  := 0;
            
            end if;
          end if;
        
        end if;
      
      ------------------------------------------------------------------------------------------------------------- 
      end loop;
    
      /*    ----insert cabecera de factura aqpa465 
      --     AGREGAR CONCEPTO A PROCEDIMIENTO
          begin
      
            pq_cr_factura_electronica.sp_cr_cabecera_trx(pd_pgfape => pd_pgfape,
                                                              pc_serie => pc_serie,
                                                              pn_correlativo => pn_correlativo,
                                                              pn_concepto => pn_concepto);
          end;
      */
    
    end;
  
  exception
    when others then
      null;
      --mod@abr 20180622 ---LOG DE ERRORES
    /* insert into aqpa460E(aqpa460serie,
              aqpa460corr,
              aqpa460pgcod,
              aqpa460mod,
              aqpa460sucorend,
              aqpa460tran,
              aqpa460rel,
              aqpa460con,
              aqpa460tip)
    values(pc_AQPA465SERIE ,
           pc_AQPA465CORR  ,
           pc_AQPA465PGCOD ,
           pc_AQPA465MOD   ,
           pc_AQPA465SUCOREND,
           pc_AQPA465TRAN    ,
           pc_AQPA465REL    , 
           pc_AQPA465CON,
           'I'      );
    
    commit;   */
    --mod@abr 20180622
  
  end sp_cr_Detalle_Factura_COH;

  -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 
  Procedure sp_cr_proceso_inserta_CO(pd_Fecpro in date) is
    -- *****************************************************************
    -- Nombre                     : sp_cr_proceso_inserta
    -- Sistema                    : BANTOTAL
    -- Módulo                     : Créditos - Activas
    -- Versión                    : 1.0
    -- Fecha de Creación          : 
    -- Autor de Creación          : DCASTRO
    -- Uso                        : 
    -- Estado                     : Activo
    -- Acceso                     : Público
    -- Fecha de Modificación      : 
    -- Autor de la Modificación   : 
    -- Descripción de Modificación: 
    -- *****************************************************************
  
    cursor movimientos(pd_fecpro in date) is
      select f.sr171tremp,
             f.st171cpcod,
             f.sr171trmod,
             f.sr171trnro,
             f.sr171trord,
             g.st171cpdsc,
             h.jaqz675asuc  hsucor,
             h.jaqz675anre  hnrel,
             pd_fecpro      hfcon,
             h.jaqz675acta  hcta,
             h.jaqz675asucu hsucur,
             h.jaqz675aimp1 hcimp1
        from FSR171 F, FST171 G, JAQZ675A h
       where h.jaqz675acod = F.SR171TREMP
         AND h.jaqz675amod = F.SR171TRMOD
         AND h.jaqz675atrn = F.SR171TRNRO
         AND h.jaqz675acor = F.SR171TRORD
            --AND h.jaqz675acsu = F.SR171TRSBO
         AND f.ST171CPCOD = G.ST171CPCOD
       order by h.jaqz675acod,
                f.sr171trmod,
                f.sr171trnro,
                h.jaqz675anre,
                f.st171cpcod,
                f.sr171trord;
  
    cursor cabecera is
      select * from fst171 f where f.st171cpcod in (1, 3, 4, 5);
  
    cursor fse170(lc_fecha date) is
      select distinct lc_fecha fecha,
                      JAQZ676DOEMP,
                      JAQZ676DOID,
                      JAQZ676CPCOD,
                      JAQZ676VNRO,
                      JAQZ676VCHR,
                      JAQZ676VFCH,
                      JAQZ676VIMP,
                      JAQZ676VTAS
        from JAQZ676
       where (JAQZ676DOEMP, JAQZ676DOID, JAQZ676CPCOD, JAQZ676VNRO) not in
             (select JAQZ676DOEMP, JAQZ676DOID, JAQZ676CPCOD, JAQZ676VNRO
                from JAQZ676 j
               where j.jaqz676vnro = 0
                 and j.jaqz676vchr = 'Nro de Cuenta');
  
    lc_fechaproceso varchar2(8);
    ln_txoren       number;
    ln_numero       number;
    ln_contador     number;
    ln_cuenta       number;
    ln_sucursal     number;
    lc_hora         char(8);
    ln_relacion     number;
    --lc_flag     char(1);
    ln_modulo number;
    ln_tran   number;
    ln_sucur  number;
    lc_err    varchar2(300);
    lc_nomusr varchar2(50);
  
  begin
  
    lc_fechaproceso := to_char(pd_Fecpro, 'yyyymmdd');
  
    ln_numero   := 500;
    ln_contador := 1;
  
    begin
      select TRIM(TP1DESC)
        INTO lc_nomusr
        from fst198
       where tp1cod = 1
         and tp1cod1 = 10847
         and tp1corr1 = 999; ---2019.07.22 guia de proceso para hostname
    exception
      when others then
        null;
    end;
  
    execute immediate ('truncate table fse170h');
    execute immediate ('truncate table JAQZ676'); --FSE170_FAC
    execute immediate ('truncate table JAQZ675'); --FSX016_FAC
  
    execute immediate ('truncate table JAQZ675A'); --FSH016
    execute immediate ('alter table JAQZ675A parallel 10'); --FSH016
  
    execute immediate ('truncate table JAQZ685'); --mod@abr 20190304
  
    insert into JAQZ685 --parallel (degree 10) nologging AS 
      SELECT /*+parallel(H,10)*/
       H.PGCOD,
       H.HCMOD,
       H.HSUCOR,
       H.HTRAN,
       H.HNREL,
       H.HFCON,
       H.HCORD,
       H.HCSUBO,
       H.HCTA,
       H.HSUCUR,
       H.HCIMP1,
       H.HRUBRO,
       HCAFGT
        FROM FSH016 H
       WHERE H.PGCOD = 1
         AND H.HFCON = pd_Fecpro;
    commit;
  
    INSERT /*+append*/
    INTO JAQZ675A
      (JAQZ675ACOD,
       JAQZ675AMOD,
       JAQZ675ASUC,
       JAQZ675ATRN,
       JAQZ675ANRE,
       JAQZ675AFCO,
       JAQZ675ACOR,
       JAQZ675ACSU,
       JAQZ675ACTA,
       JAQZ675ASUCU,
       JAQZ675AIMP1)
      select H.JAQZ685PGC,
             H.JAQZ685MOD,
             H.JAQZ685SUC,
             H.JAQZ685TRA,
             H.JAQZ685REL,
             H.JAQZ685HFC,
             H.JAQZ685HCO,
             H.JAQZ685HCS,
             H.JAQZ685CTA,
             H.JAQZ685SUX,
             H.JAQZ685IMP
        from JAQZ685 H
       where H.JAQZ685CAF = 'C'
         and (H.JAQZ685MOD, H.JAQZ685TRA) IN
             (SELECT A.TP1NRO1, A.TP1NRO2
                FROM FST198 A
               WHERE A.TP1COD = 1
                 AND A.TP1COD1 = 11120
                 AND A.TP1CORR1 = 4
                 AND A.TP1NRO1 IS NOT NULL)
         AND H.JAQZ685RUB NOT IN (4212290000007, 4222290000007);
    commit;
  
    for i in movimientos(pd_fecpro) loop
    
      if i.hnrel <> ln_relacion or i.sr171trmod <> ln_modulo or
         i.sr171trnro <> ln_tran or i.hsucor <> ln_sucur then
        ln_contador := 1;
        ln_numero   := ln_numero + 1;
      end if;
    
      ln_txoren   := i.ST171CPCOD + 100;
      ln_cuenta   := i.hcta;
      ln_sucursal := i.hsucur;
    
      if ln_contador = 1 then
        for y in cabecera loop
          if y.ST171CPCOD = 1 then
            --sucursal
            insert into JAQZ675
              (JAQZ675cod,
               JAQZ675mod,
               JAQZ675suc,
               JAQZ675trn,
               JAQZ675nre,
               JAQZ675fco,
               JAQZ675cor,
               JAQZ675csu,
               JAQZ675tco,
               JAQZ675toe,
               JAQZ675tor,
               JAQZ675tsu,
               JAQZ675tru,
               JAQZ675tmd,
               JAQZ675tpa,
               JAQZ675tct,
               JAQZ675top,
               JAQZ675tsb,
               JAQZ675tto,
               JAQZ675tmo)
            values
              (i.sr171tremp,
               i.sr171trmod,
               i.hsucor,
               i.sr171trnro,
               i.hnrel,
               i.hfcon,
               10,
               1,
               200,
               101,
               ln_sucursal,
               0,
               ln_numero,
               0,
               0,
               0,
               0,
               0,
               0,
               0);
          
            insert into JAQZ676
              (JAQZ676doemp,
               JAQZ676doid,
               JAQZ676cpcod,
               JAQZ676vnro,
               JAQZ676vchr,
               JAQZ676vfch,
               JAQZ676vimp,
               JAQZ676vtas)
            values
              (i.sr171tremp,
               ln_numero,
               y.ST171CPCOD,
               ln_sucursal,
               trim(y.st171cpdsc),
               null,
               0,
               0);
          
          elsif y.ST171CPCOD = 3 then
            begin
              select a.hhora
                into lc_hora
                from fsH015 a
               where a.pgcod = i.sr171tremp
                 and a.hcmod = i.sr171trmod
                 and a.hsucor = i.hsucor
                 and a.htran = i.sr171trnro
                 and a.hnrel = i.hnrel
                 and a.hfcon = i.hfcon;
            exception
              when others then
                lc_hora := null;
            end;
          
            insert into JAQZ675
              (JAQZ675cod,
               JAQZ675mod,
               JAQZ675suc,
               JAQZ675trn,
               JAQZ675nre,
               JAQZ675fco,
               JAQZ675cor,
               JAQZ675csu,
               JAQZ675tco,
               JAQZ675toe,
               JAQZ675tor,
               JAQZ675tsu,
               JAQZ675tru,
               JAQZ675tmd,
               JAQZ675tpa,
               JAQZ675tct,
               JAQZ675top,
               JAQZ675tsb,
               JAQZ675tto,
               JAQZ675tmo)
            values
              (i.sr171tremp,
               i.sr171trmod,
               i.hsucor,
               i.sr171trnro,
               i.hnrel,
               i.hfcon,
               10,
               1,
               200,
               103,
               lc_hora,
               0,
               ln_numero,
               0,
               0,
               0,
               0,
               0,
               0,
               0);
          
            insert into JAQZ676
              (JAQZ676doemp,
               JAQZ676doid,
               JAQZ676cpcod,
               JAQZ676vnro,
               JAQZ676vchr,
               JAQZ676vfch,
               JAQZ676vimp,
               JAQZ676vtas)
            values
              (i.sr171tremp,
               ln_numero,
               y.ST171CPCOD,
               0,
               lc_hora,
               null,
               0,
               0);
          
          elsif y.ST171CPCOD = 4 then
            --fecha
            insert into JAQZ675
              (JAQZ675cod,
               JAQZ675mod,
               JAQZ675suc,
               JAQZ675trn,
               JAQZ675nre,
               JAQZ675fco,
               JAQZ675cor,
               JAQZ675csu,
               JAQZ675tco,
               JAQZ675toe,
               JAQZ675tor,
               JAQZ675tsu,
               JAQZ675tru,
               JAQZ675tmd,
               JAQZ675tpa,
               JAQZ675tct,
               JAQZ675top,
               JAQZ675tsb,
               JAQZ675tto,
               JAQZ675tmo)
            values
              (i.sr171tremp,
               i.sr171trmod,
               i.hsucor,
               i.sr171trnro,
               i.hnrel,
               i.hfcon,
               10,
               1,
               200,
               104,
               i.hfcon,
               0,
               ln_numero,
               0,
               0,
               0,
               0,
               0,
               0,
               0);
          
            insert into JAQZ676
              (JAQZ676doemp,
               JAQZ676doid,
               JAQZ676cpcod,
               JAQZ676vnro,
               JAQZ676vchr,
               JAQZ676vfch,
               JAQZ676vimp,
               JAQZ676vtas)
            values
              (i.sr171tremp,
               ln_numero,
               y.ST171CPCOD,
               0,
               trim(y.st171cpdsc),
               i.hfcon,
               0,
               0);
          
          elsif y.ST171CPCOD = 5 then
            --cuenta
          
            insert into JAQZ675
              (JAQZ675cod,
               JAQZ675mod,
               JAQZ675suc,
               JAQZ675trn,
               JAQZ675nre,
               JAQZ675fco,
               JAQZ675cor,
               JAQZ675csu,
               JAQZ675tco,
               JAQZ675toe,
               JAQZ675tor,
               JAQZ675tsu,
               JAQZ675tru,
               JAQZ675tmd,
               JAQZ675tpa,
               JAQZ675tct,
               JAQZ675top,
               JAQZ675tsb,
               JAQZ675tto,
               JAQZ675tmo)
            values
              (i.sr171tremp,
               i.sr171trmod,
               i.hsucor,
               i.sr171trnro,
               i.hnrel,
               i.hfcon,
               10,
               1,
               200,
               105,
               ln_cuenta,
               0,
               ln_numero,
               0,
               0,
               0,
               0,
               0,
               0,
               0);
          
            insert into JAQZ676
              (JAQZ676doemp,
               JAQZ676doid,
               JAQZ676cpcod,
               JAQZ676vnro,
               JAQZ676vchr,
               JAQZ676vfch,
               JAQZ676vimp,
               JAQZ676vtas)
            values
              (i.sr171tremp,
               ln_numero,
               y.ST171CPCOD,
               ln_cuenta,
               trim(y.st171cpdsc),
               null,
               0,
               0);
          end if;
          commit;
        end loop;
        ln_contador := ln_contador + 1;
      end if;
    
      insert into JAQZ675
        (JAQZ675cod,
         JAQZ675mod,
         JAQZ675suc,
         JAQZ675trn,
         JAQZ675nre,
         JAQZ675fco,
         JAQZ675cor,
         JAQZ675csu,
         JAQZ675tco,
         JAQZ675toe,
         JAQZ675tor,
         JAQZ675tsu,
         JAQZ675tru,
         JAQZ675tmd,
         JAQZ675tpa,
         JAQZ675tct,
         JAQZ675top,
         JAQZ675tsb,
         JAQZ675tto,
         JAQZ675tmo)
      values
        (i.sr171tremp,
         i.sr171trmod,
         i.hsucor,
         i.sr171trnro,
         i.hnrel,
         i.hfcon,
         10,
         1,
         200,
         ln_txoren,
         i.hcimp1,
         0,
         ln_numero,
         0,
         0,
         0,
         0,
         0,
         0,
         0);
    
      insert into JAQZ676
        (JAQZ676doemp,
         JAQZ676doid,
         JAQZ676cpcod,
         JAQZ676vnro,
         JAQZ676vchr,
         JAQZ676vfch,
         JAQZ676vimp,
         JAQZ676vtas)
      values
        (i.sr171tremp,
         ln_numero,
         i.ST171CPCOD,
         0,
         trim(i.st171cpdsc),
         null,
         trunc(i.hcimp1),
         0);
    
      ln_relacion := i.hnrel;
      ln_modulo   := i.sr171trmod;
      ln_tran     := i.sr171trnro;
      ln_sucur    := i.hsucor;
      commit;
    end loop;
    commit;
  
    --pq_cr_factura_electronica.Sp_cr_proceso_bach_2(pd_fecpro);
  
    execute immediate ('alter table JAQZ675A parallel 1'); --FSH016  2019.02.19 DCASTRO se modifico parallel 10 a 1
  
    --estadisticas
    BEGIN
      DBMS_STATS.GATHER_TABLE_STATS(OWNNAME          => lc_nomusr, --'BANTPROD',
                                    TABNAME          => 'JAQZ675',
                                    DEGREE           => 8,
                                    GRANULARITY      => 'ALL',
                                    ESTIMATE_PERCENT => 100,
                                    CASCADE          => TRUE);
    END;
  
    --1.2--------------
    BEGIN
      DBMS_STATS.GATHER_TABLE_STATS(OWNNAME          => lc_nomusr, --'BANTPROD',
                                    TABNAME          => 'JAQZ676',
                                    DEGREE           => 8,
                                    GRANULARITY      => 'ALL',
                                    ESTIMATE_PERCENT => 100,
                                    CASCADE          => TRUE);
    END;
  
    --modificacion de punto
    begin
      update JAQZ675 a
         set a.JAQZ675TOR = trim(case
                                   when substr(JAQZ675TOR, 1, 1) = ',' then
                                    replace(JAQZ675TOR, ',', '0.')
                                   else
                                    replace(JAQZ675TOR, ',', '.')
                                 end)
       where a.JAQZ675COD = 1
         and a.JAQZ675FCO = pd_fecpro --fecha diaria
         and a.JAQZ675TCO = 200
         and a.JAQZ675TOE > 105;
    
    exception
      when others then
        null;
    end;
    commit;
  
    -- jrodriguej  24.05.2021
    for j in fse170(pd_Fecpro) loop
    
      begin
      
        insert into Fse170h
          (sd170hfecha,
           sd170hdoemp,
           sd170hdoid,
           st171hcpcod,
           se170hvnro,
           se170hvchr,
           se170hvfch,
           se170hvimp,
           se170hvtas)
        values
          (j.fecha,
           j.JAQZ676DOEMP,
           j.JAQZ676DOID,
           j.JAQZ676CPCOD,
           j.JAQZ676VNRO,
           j.JAQZ676VCHR,
           j.JAQZ676VFCH,
           j.JAQZ676VIMP,
           j.JAQZ676VTAS);
        commit;
      
      exception
        when others then
        
          null;
        
      end;
    
    end loop;
  
    update jaqz675 a set a.jaqz675cpc = jaqz675toe - 100;
    commit;
  
    ----8.1 aplicar estadisticas
    BEGIN
      DBMS_STATS.GATHER_TABLE_STATS(OWNNAME          => lc_nomusr, --'BANTPROD', --'DESA021118',--'BANTPROD',
                                    TABNAME          => 'Fse170h',
                                    DEGREE           => 8,
                                    GRANULARITY      => 'ALL',
                                    ESTIMATE_PERCENT => 100,
                                    CASCADE          => TRUE);
    END;
  
  end sp_cr_proceso_inserta_CO;

  ---------------------------------------------------------
  procedure sp_cr_Total_Comision(pc_serie       in char,
                                 pn_correlativo in number,
                                 pd_hfcon       in date) is
  
    lv_desmda      varchar2(20);
    lc_mda         varchar2(20);
    lc_monto       varchar2(50);
    ln_monto       number(18, 2);
    ln_cant        number;
    ln_pgcod       number;
    ln_mod         number;
    ln_suc         number;
    ln_tran        number;
    ln_rel         number;
    ld_fec         date;
    ln_ot_comision number;
    lc_moneda      varchar2(20); --20221029
    lc_tipcam      number(10, 6);
  
  BEGIN
  
    ln_monto := 0;
    ln_cant  := 0;
  
    BEGIN
      select sum(a.AQPA460VVUN), count(*)
        into ln_monto, ln_cant
        from AQPA460 a
       where a.aqpa460seri = pc_serie
         and a.aqpa460num = pn_correlativo;
    exception
      when others then
        ln_monto := 0;
    END;
  
    ---2022.05.22 dcastro determinar monto total incluir OT por transferencia
    BEGIN
      select a.aqpa460pgc,
             a.aqpa460mod,
             a.aqpa460suc,
             a.aqpa460trx,
             a.aqpa460rel,
             a.aqpa460femi
        into ln_pgcod, ln_mod, ln_suc, ln_tran, ln_rel, ld_fec
        from AQPA460 a
       where a.aqpa460seri = pc_serie
         and a.aqpa460num = pn_correlativo;
    exception
      when others then
        ln_pgcod := null;
        ln_mod   := null;
        ln_suc   := null;
        ln_tran  := null;
        ln_rel   := null;
        ld_fec   := null;
    END;
  
    begin
      select f.HCIMP1
        into ln_ot_comision
        from fsh016 f
       where f.PGCOD = ln_pgcod
         and f.HCMOD = ln_mod
         and f.HSUCOR = ln_suc
         and f.HTRAN = ln_tran
         and f.HNREL = ln_rel
         and f.hfcon = ld_fec
         and f.HRUBRO in --('2928070000122', '2918070000122');
             (select g.rubro
                from fsd014 g
               where g.rubro like '29_807000%'
                 and upper(g.pcnomr) like 'OT%COMISION%TRANS%');
    exception
      when others then
        ln_ot_comision := 0;
    end;
  
    ln_monto := ln_monto + ln_ot_comision;
    ----   
    ---20221029 se movio consulta antes de if ln_cant > 1
    BEGIN
      select distinct a.aqpa460mone
        into lc_mda
        from AQPA460 a
       where a.aqpa460seri = pc_serie
         and a.aqpa460num = pn_correlativo;
    exception
      when others then
        lc_mda := null;
    END;
  
    if lc_mda = 'PEN' then
      lv_desmda := 'SOLES';
    else
      lv_desmda := 'DOLARES';
    end if;
    --
    if ln_cant > 1 or ln_ot_comision > 0 --- 20220522 dcastro se agrego condicion para actualizar monto 
     then
    
      lc_monto := trim(pq_cr_factura_electronica.dintex(ln_monto)) || ' ' ||
                  lv_desmda;
    
      --actualiza
      begin
        update AQPA460 a
           set a.AQPA460MTINF = ln_monto,
               a.AQPA460IMPT  = ln_monto,
               a.AQPA460SVITM = ln_monto,
               a.AQPA460SPVI  = ln_monto,
               /*a.AQPA460TOTAL = ln_monto,
               a.AQPA460VVUN  = ln_monto,
               a.AQPA460VVUIG = ln_monto,
               a.AQPA460PRVIT = ln_monto,
               a.AQPA460MBIM = ln_monto, se comento campos de totales 2022.06.13 dcastro*/
               a.AQPA460TELEY = lc_monto
         where a.aqpa460seri = pc_serie
           and a.aqpa460num = pn_correlativo;
      
        commit;
      exception
        when others then
          null;
      end;
    
      if ln_cant = 1 then
        -- 20221029 se actualiza campos si solo existe 1 registro y importe <> total
        begin
          update AQPA460 a
             set a.AQPA460TOTAL = ln_monto,
                 a.AQPA460VVUN  = ln_monto,
                 a.AQPA460VVUIG = ln_monto,
                 a.AQPA460PRVIT = ln_monto,
                 a.AQPA460MBIM  = ln_monto
           where a.aqpa460seri = pc_serie
             and a.aqpa460num = pn_correlativo
             and a.AQPA460TOTAL <> a.AQPA460IMPT;
        
          commit;
        exception
          when others then
            null;
        end;
      
      end if; -- 20221029 se actualiza campos si solo existe 1 registro y importe <> total
    
    end if;
  
    /* 20221029*/
    --obtener moneda del rubro de COMISION 
    if ln_cant = 1 then
      begin
        select decode(substr(f.HRUBRO, 3, 1), 1, 'SOLES', 'DOLARES'),
               f.hctcbi
          into lc_moneda, lc_tipcam
          from fsh016 f
         where f.PGCOD = ln_pgcod
           and f.HCMOD = ln_mod
           and f.HSUCOR = ln_suc
           and f.HTRAN = ln_tran
           and f.HNREL = ln_rel
           and f.hfcon = ld_fec
              --and f.HRUBRO like '52%';  -- 2023.06.24
           --and (f.HRUBRO like '52%_2' or f.HRUBRO like '56%_2'); -- 2023.06.24
           and (f.hrubro like '52_229%'  or f.HRUBRO like '56_2%' or f.HRUBRO like '56_9%'); -- 2023.10.25 actualizar rubros
      
      exception
        when others then
          lc_moneda := null;
      end;
      if lc_moneda <> lv_desmda then
        --actualizar campo moneda en AQPA460
        --actualizar descripcion en factura
        --actualiza
      
        /* update AQPA460 a
           set 
            a.AQPA460TELEY = case when instr(a.AQPA460TELEY, 'DOLARES',  1) <> 0 then  REPLACE( a.AQPA460TELEY, 'DOLARES' , 'SOLES') 
                when instr(a.AQPA460TELEY, 'SOLES',  1) <> 0 then  a.AQPA460TELEY 
                else a.AQPA460TELEY || ' SOLES' end 
         where a.aqpa460seri = pc_serie 
         and a.aqpa460num = pn_correlativo;
        */
        if lc_moneda = 'SOLES' then
          --convertir a dolares                      
          ln_monto := trunc(ln_monto / lc_tipcam, 2);
        else
          ln_monto := trunc(ln_monto * lc_tipcam, 2);
        end if;
        lc_monto := trim(pq_cr_factura_electronica.dintex(ln_monto)) || ' ' ||
                    lv_desmda;
      
        begin
          update AQPA460 a
             set /*a.AQPA460TELEY = case when instr(a.AQPA460TELEY, 'DOLARES',  1) <> 0 then  REPLACE( a.AQPA460TELEY, 'DOLARES' , 'SOLES') 
                 when instr(a.AQPA460TELEY, 'SOLES',  1) <> 0 then  a.AQPA460TELEY 
                 else a.AQPA460TELEY || ' SOLES' end 
                 */ a.AQPA460MTINF = ln_monto,
                 a.AQPA460IMPT  = ln_monto,
                 a.AQPA460SVITM = ln_monto,
                 a.AQPA460SPVI  = ln_monto,
                 a.AQPA460TOTAL = ln_monto,
                 a.AQPA460VVUN  = ln_monto,
                 a.AQPA460VVUIG = ln_monto,
                 a.AQPA460PRVIT = ln_monto,
                 a.AQPA460MBIM  = ln_monto,
                 a.AQPA460TELEY = lc_monto,
                 a.aqpa460text4 = 'TIPOCAMBIO'
           where a.aqpa460seri = pc_serie
             and a.aqpa460num = pn_correlativo
             and a.aqpa460text4 is null;
        
          commit;
        exception
          when others then
            null;
        end;
      
      end if;
    end if;
    ---
  end sp_cr_Total_Comision;

  ---------------------------------------------------------
  procedure sp_cr_regulariza(pd_fecha in date) is
  
    cursor facturas(ld_fecfac in date) is
    
      select *
        from aqpa465 a, aqpa460 b
       where b.aqpa460seri = a.aqpa465serie
         and b.aqpa460num = a.aqpa465corr
         and (a.aqpa465est = 'E' and
             a.aqpa465serie in ('FS01', 'BS01', 'BO01') and
             ((lower(a.aqpa465msgs) like '%presentaci%' or
             a.aqpa465msgs like
             '%Error: El correo electronico del receptor no cumple con el formato de un correo%' or
             a.aqpa465msgs like '%El CodigoEstablecimientoSUNAT%') or
             a.aqpa465est is null))
         and a.aqpa465con >= ld_fecfac;
  
    cursor facturas_nc(ld_fecfac in date) is
    
      select *
        from aqpa466 a, aqpa460 b
       where b.aqpa460seri = a.aqpa466serie
         and b.aqpa460num = a.aqpa466corr
         and (a.aqpa466est = 'E' and a.aqpa466serie in ('FG01', 'BC01') and
             ((lower(a.aqpa466msgs) like '%presentaci%' or
             a.aqpa466msgs like
             '%Error: El correo electronico del receptor no cumple con el formato de un correo%' or
             a.aqpa466msgs like '%El CodigoEstablecimientoSUNAT%') or
             a.aqpa466est is null))
         and a.aqpa466con >= ld_fecfac;
  
    --lD_FECHAI DATE := TO_DATE('01/01/2022','DD/MM/YYYY');
    ld_fecha  date;
    ld_fecmin date;
    ld_fecnc  date;
    lc_cesun  varchar2(4);
    lc_flag   char(1);
    lc_error  varchar2(3000);
    lc_codigo varchar2(3000);
  
  BEGIN
  
    --obtiene fecha inicio facturas
    begin
      select min(a.aqpa465con)
        into ld_fecmin
        from aqpa465 a, aqpa460 b
       where b.aqpa460seri = a.aqpa465serie
         and b.aqpa460num = a.aqpa465corr
         and a.aqpa465serie in ('FS01', 'BS01', 'BO01')
         and a.aqpa465est = 'E'
         and ((a.aqpa465est = 'E' and
             a.aqpa465msgs like '%"La sumatoria del tota%') or
             a.aqpa465est = 'P' or trim(a.aqpa465est) is null)
         and a.aqpa465con >= '01/01/2022';
    exception
      when others then
        ld_fecmin := null;
    end;
  
    --obtiene fecha inicio notas credito
    begin
      select min(a.aqpa466con)
        into ld_fecnc
        from aqpa466 a, aqpa460 b
       where b.aqpa460seri = a.aqpa466serie
         and b.aqpa460num = a.aqpa466corr
         and a.aqpa466serie in ('FG01', 'BC01')
         and ((a.aqpa466est = 'E' and
             a.aqpa466msgs like '%"La sumatoria del tota%') or
             (a.aqpa466est = 'E' and
             a.aqpa466msgs like '%Nota de credito no esta registrada%') or
             a.aqpa466est = 'P' or trim(a.aqpa466est) is null)
         and a.aqpa466con >= '01/01/2022';
    exception
      when others then
        ld_fecnc := null;
    end;
  
    --envio facturas     
    if ld_fecmin is not null then
    
      for i in facturas(ld_fecmin) loop
      
        BEGIN
          update AQPA465 a
             set a.aqpa465msgs = null, a.aqpa465est = null
           where a.aqpa465serie = i.aqpa460seri
             and a.aqpa465corr = i.aqpa460num;
        exception
          when others then
            null;
        END;
      
        if trunc(sysdate) - i.aqpa460femi >= 2 then
          ld_fecha := trunc(sysdate) - 2;
        else
          ld_fecha := i.aqpa460femi;
        end if;
      
        if i.aqpa460cesun is null then
          lc_cesun := '0010';
        else
          lc_cesun := i.aqpa460cesun;
        end if;
      
        --actualiza
        begin
          update AQPA460 a
             set a.aqpa460corrr = 'Reportefactele@cajaarequipa.pe',
                 a.aqpa460femi  = ld_fecha,
                 a.aqpa460cesun = lc_cesun
           where a.aqpa460seri = i.aqpa460seri
             and a.aqpa460num = i.aqpa460num;
        
          commit;
        
          begin
          
            pq_ar_facturacion_e.pr_ar_main(pn_serie       => i.aqpa460seri,
                                           pn_nro         => i.aqpa460num,
                                           pv_flag_error  => lc_flag,
                                           pv_error       => lc_error,
                                           pv_codigo_hash => lc_codigo);
          end;
        
        exception
          when others then
            null;
        end;
      
      end loop;
    end if;
  
    --envio notas credito   
    if ld_fecnc is not null then
    
      for i in facturas_nc(ld_fecnc) loop
      
        BEGIN
          update AQPA466 a
             set a.aqpa466msgs = null, a.aqpa466est = null
           where a.aqpa466serie = i.aqpa460seri
             and a.aqpa466corr = i.aqpa460num;
        exception
          when others then
            null;
        END;
      
        if trunc(sysdate) - i.aqpa460femi >= 2 then
          ld_fecha := trunc(sysdate) - 2;
        else
          ld_fecha := i.aqpa460femi;
        end if;
      
        if i.aqpa460cesun is null then
          lc_cesun := '0010';
        else
          lc_cesun := i.aqpa460cesun;
        end if;
      
        --actualiza
        begin
          update AQPA460 a
             set a.aqpa460corrr = 'Reportefactele@cajaarequipa.pe',
                 a.aqpa460femi  = ld_fecha,
                 a.aqpa460cesun = lc_cesun
           where a.aqpa460seri = i.aqpa460seri
             and a.aqpa460num = i.aqpa460num;
        
          commit;
        
          begin
          
            pq_ar_facturacion_e.pr_ar_main(pn_serie       => i.aqpa460seri,
                                           pn_nro         => i.aqpa460num,
                                           pv_flag_error  => lc_flag,
                                           pv_error       => lc_error,
                                           pv_codigo_hash => lc_codigo);
          end;
        
        exception
          when others then
            null;
        end;
      
      end loop;
    end if;
  
    begin
      pq_ar_facturacion_e.pr_ar_get_masivo_xml_pdf;
    end;
  
  END sp_cr_regulariza;
  ---------------------------
  -- 
  procedure sp_cr_Nota_Cred_COM4(pd_pgfape in date) is
  
    pn_hcmod        number;
    pn_hsucor       number;
    pn_htran        number;
    pn_hnrel        number;
    pd_hfcon        date;
    pn_NRO_RELACION number;
    pd_FECHA_TX     date;
    pn_hcmod2       number;
    pn_hcmod3       number;
    pn_hsucor3      number;
    pn_htran3       number;
    pn_hnrel3       number;
    pn_hfcon3       date;
    lc_serie        char(4);
    lc_correlativo  char(8);
  
    pn_pgcod number;
    --Flag char(1):='N';
  
    lc_flg466  char(1) := 'N'; --controla que no exista en la aqpa466
    lc_flag466 char(1) := 'N';
  
    ln_rubro  number;
    lc_tipper char(1);
  
    lv_tipodocu     char(1);
    lc_comision     char(1);
    ln_guiaCP       number;
    lv_codtipo      char(2);
    lc_coderr       varchar2(1000);
    lc_msgerr       varchar2(1000);
    ln_cont         number;
    lc_serieI       char(4);
    lc_correlativoI char(8);
    lv_codrpt       number;
    lv_tipocre      varchar2(2);
    ln_flag         number;
  
    lc_tipo_doc char(1);
    lv_tipo_doc char(2);
    lv_doc_ori  char(2);
  
    --ln_rubro number;
    --pd_rubro        number;
    lc_flr    char(1);
    lc_ftran  number;
    lc_fcont  char(1);
    lc_tipfin char(1);
  
    lc_trxe char(1);
    lc_esta char(1);
  
    cursor fsx015 is
    
      select /* +all_rows */
      distinct a.pgcod,
               a.hcmod,
               a.hsucor,
               a.htran,
               a.hnrel,
               a.hfcon,
               'E' Indicador
        from fsx015 a
       inner join fsh015 c
          on a.pgcod = c.pgcod
         and a.hcmod = c.hcmod
         and a.hsucor = c.hsucor
         and a.htran = c.htran
         and a.hnrel = c.hnrel
         and a.hfcon = c.hfcon
       inner join FSR170 b
          on a.hcmod = b.sr170trmod + 500
         and a.htran = b.sr170trnro
       where a.pgcod = 1
            --and a.hcmod > 499 --2023.04.01 dcastro se comento modulo para considerar todos los extornos
         and (a.hcmod, a.htran) in
             (select distinct x.aqpa460mod + 500, x.aqpa460trx
                from aqpa460 x
               where x.aqpa460seri in ('FS01', 'BS01', 'BO01') ---2023.07.18 dcastro se agrego serie BO01
                 and x.aqpa460femi >= pd_pgfape)
            --       and a.hsucor = pc_sucurs se comento 2022.04.21 dcastro
            -- -- --
            -- -- --
         and a.hfcon = pd_pgfape
         and a.txcod = 0
      
      /*
       select distinct a.aqpa460pgc pgcod    ,
                            a.aqpa460mod   hcmod,
                            a.aqpa460suc   hsucor,
                            a.aqpa460trx   htran,
                            a.aqpa460rel   hnrel,
                            a.aqpa460femi  hfcon
              from aqpa460 a
             where a.aqpa460seri in ('FS01', 'BS01')
               and a.aqpa460femi =pd_pgfape
      
      */
      ---todas las transacciones extornadas
      --   and  a.hcmod= 19 and a.hsucor= 11  and a.htran=801 and a.hnrel in(1)         
      --   and  a.hcmod= 530 and a.hsucor= 18  and a.htran=972 and a.hnrel in(1)      
      --and  a.hcmod= 530 and a.hsucor= 18  and a.htran=978 and a.hnrel in(1)      
      --and  a.hcmod= 530 and a.hsucor= 18  and a.htran=350 and a.hnrel in(4)   
      --  and  a.hcmod= 530 and a.hsucor= 18  and a.htran=355 and a.hnrel in(9)   
      -- order by a.pgcod, a.hcmod, a.hsucor, a.htran, a.hnrel, a.hfcon;   
      
      /*  union all ---VERIFICAR SI SE DEBE INCLUIR
          --2018.10.22   
         /* select --/* +all_rows 
          distinct a.pgcod,
                          a.hcmod,
                          a.hsucor,
                          a.htran,
                          a.hnrel,
                          a.hfcon,
                          'C' Indicador
            from fsx016 a
           inner join fst198 c
              on c.tp1cod = a.pgcod
             and a.hcmod = c.tp1nro1
          ---   and a.hsucor = pc_sucurs  2022/04/22 dcastro
             and a.htran = c.tp1nro2
             and a.hfcon = pd_pgfape
           where a.pgcod = 1
             and c.tp1cod1 = 11120
             and c.tp1corr1 = 2
             and c.tp1corr2 = 4
          -- and  a.hcmod=19 and a.hsucor= 11  and a.htran=801 --and a.hnrel in (9)
          --and  a.hcmod=10 and a.hsucor= 18  and a.htran=222 and a.hnrel in (9)
          --  and  a.hcmod=492 and a.hsucor= 18  and a.htran=30 --and a.hnrel in (9)
          --and  a.hcmod= 550 and a.hsucor= 11  and a.htran=503 and a.hnrel in(1)
          --order by a.pgcod, a.hcmod, a.hsucor, a.htran, a.hnrel, a.hfcon
      */
      ;
  
    cursor base(pn_pgcod        in number,
                pn_hcmod3       in number,
                pn_hsucor3      in number,
                pn_htran3       in number,
                pn_hnrel3       in number,
                pn_hfcon3       in date,
                lc_serieI       in char,
                lc_correlativoI in number) is
    
      select aqpa463txtrub,
             aqpa463pgcod,
             aqpa463hcmod,
             aqpa463hsucor,
             aqpa463htran,
             aqpa463hnrel,
             aqpa463hfcon,
             aqpa463hcpcod,
             aqpa463hvnro,
             trim(aqpa463hvchr) aqpa463hvchr,
             aqpa463hvnro aqpa463emp,
             aqpa463mod,
             aqpa463suc,
             aqpa463mda,
             aqpa463pap,
             aqpa463cta,
             aqpa463ope,
             aqpa463sbo,
             aqpa463top,
             aqpa463hip,
             trim(aqpa463txtord) aqpa463txtord,
             aqpa463txoren
        from aqpa463 a
       where a.aqpa463pgcod = pn_pgcod
         and a.aqpa463hcmod = pn_hcmod3
         and a.aqpa463hsucor = pn_hsucor3
         and a.aqpa463htran = pn_htran3
         and a.aqpa463hnrel = pn_hnrel3
         and a.aqpa463hfcon = pn_hfcon3
         and a.aqpa463serie = lc_serieI
         and a.aqpa463corre = lc_correlativoI;
  
  begin
  
    --25012019 dcastro
    begin
      select c.tp1nro1
        into ln_flag
        from fst198 c
       where c.tp1cod = 1
         and c.tp1cod1 = 11120
         and c.tp1corr1 = 7
         and c.tp1corr2 = 1;
    end;
    --25012019
  
    for p in fsx015 loop
      --Verifica que no exista en cabecera AQPA466
      Begin
        select 'S'
          into lc_flg466
          from aqpa466 a
         where a.aqpa466pgcod = p.pgcod
           and a.aqpa466mod = p.hcmod
           and a.aqpa466sucor = p.hsucor
           and a.aqpa466tran = p.htran
           and a.aqpa466rel = p.hnrel
           and a.aqpa466con = p.hfcon
           and rownum = 1;
      exception
        when others then
          lc_flg466 := 'N';
      end;
      --Clave del documento a la cual se aplica: factura y boleta
      pn_pgcod  := p.pgcod;
      pn_hcmod  := p.hcmod;
      pn_hsucor := p.hsucor;
      pn_htran  := p.htran;
      pn_hnrel  := p.hnrel;
      pd_hfcon  := p.hfcon;
    
      if lc_flg466 = 'N' then
      
        if p.indicador = 'E' then
          --Por extorno 
        
          begin
            select f.txtext as NRO_RELACION
              into pn_NRO_RELACION
              from fsx015 f
             where f.hfcon = pd_pgfape --to_date('20092017', 'ddmmyyyy')----cambiar fecha de proceso
               and f.hcmod = pn_hcmod --530
               and f.htran = pn_htran --100
               and f.hnrel = pn_hnrel --2
               and f.hsucor = pn_hsucor --mod@abr 20180707
               and f.txcod = 0
               and f.txreng = 1;
          exception
            --mod@abr 20180707
            when too_many_rows then
              begin
                select f.txtext as NRO_RELACION
                  into pn_NRO_RELACION
                  from fsx015 f
                 where f.hfcon = pd_pgfape --to_date('20092017', 'ddmmyyyy')----cambiar fecha de proceso
                   and f.hcmod = pn_hcmod --530
                   and f.htran = pn_htran --100
                   and f.hnrel = pn_hnrel --2
                   and f.hsucor = pn_hsucor
                   and f.txcod = 0
                   and f.txreng = 1
                   and rownum = 1 --mod@abr 20180707
                ;
              exception
                when others then
                  pn_NRO_RELACION := null;
              end;
            when others then
              pn_NRO_RELACION := null;
            
          end;
        
          if pn_NRO_RELACION is not null then
          
            begin
              select to_date(f.txtext, 'DD/MM/RR') as FECHA_TX
                into pd_FECHA_TX
                from fsx015 f
               where f.hfcon = pd_pgfape --to_date('20092017', 'ddmmyyyy')
                 and f.hcmod = pn_hcmod -- 530
                 and f.htran = pn_htran --100
                 and f.hnrel = pn_hnrel --2
                 and f.hsucor = pn_hsucor --mod@abr 20180707
                 and f.txcod = 0
                 and f.txreng = 2;
            exception
              when others then
                pd_FECHA_TX := null;
            end;
          
            pn_hcmod2 := pn_hcmod - 500;
          
            -- 4. obtener transaccion original
            -- 4.1 Verificar si la transacción tiene una excepcion
            begin
              select 'S'
                into lc_trxe
                from fst198 t
               where t.tp1cod = 1
                 and t.tp1cod1 = 11120
                 and t.tp1corr1 = 10
                 and t.tp1corr2 = 1
                 and t.tp1corr3 <> 0
                 and t.tp1nro1 = pn_hcmod2 --- mod
                 and t.tp1nro2 = pn_htran -- trax
                 and t.tp1imp3 = 1; --<<=== Se valida en el IMP3
            exception
              when others then
                lc_trxe := 'N';
            end;
          
            if lc_trxe = 'N' then
            
              begin
                --obtener transaccion original
                select a.pgcod,
                       a.hcmod,
                       a.hsucor,
                       a.htran,
                       a.hnrel,
                       a.hfcon
                  into pn_pgcod,
                       pn_hcmod3,
                       pn_hsucor3,
                       pn_htran3,
                       pn_hnrel3,
                       pn_hfcon3 --clave de transaccion
                  from fsx016 a
                 where a.hcmod = pn_hcmod2 --30
                   and a.htran = pn_htran --100
                   and a.hfcon = pd_FECHA_TX --to_date('20092017', 'ddmmyyyy')
                   and a.hnrel = pn_NRO_RELACION --164
                   and a.hsucor = pn_hsucor --mod@abr 20180707
                   and rownum = 1;
              exception
                when others then
                  pn_pgcod   := null;
                  pn_hcmod3  := null;
                  pn_hsucor3 := null;
                  pn_htran3  := null;
                  pn_hnrel3  := null;
                  pn_hfcon3  := null;
                
              end;
            
            else
            
              pn_pgcod   := p.pgcod;
              pn_hcmod3  := pn_hcmod2;
              pn_hsucor3 := pn_hsucor;
              pn_htran3  := pn_htran;
              pn_hnrel3  := pn_NRO_RELACION;
              pn_hfcon3  := pd_FECHA_TX;
            
            end if;
          
          end if;
        
        elsif p.indicador = 'C' then
          --Por comision
        
          begin
            pq_op_transacciones.sp_op_retorna_origen(ppgcod   => pn_pgcod,
                                                     pitsuc   => pn_hsucor,
                                                     pitmod   => pn_hcmod,
                                                     pittran  => pn_htran,
                                                     pitnrel  => pn_hnrel,
                                                     pitfcon  => pd_hfcon,
                                                     itsuc_o  => pn_hsucor3,
                                                     itmod_o  => pn_hcmod3,
                                                     ittran_o => pn_htran3,
                                                     itnrel_o => pn_hnrel3,
                                                     itfcon_o => pn_hfcon3,
                                                     codrpt   => lv_codrpt);
          end;
        
        end if;
      
        ---  VERIFICAR CAMBIO PAR AINSERTAR NOTA DE CREDITO !!! OJO  2022/04/22
      
        ---buscar transaccion en aqpa460 / aqpa463/ aqpa465
        ---obtener DOCUMENTO DE REFERENCIA
        /*    begin
            select distinct a.aqpa463serie, a.aqpa463corre
              into lc_serieI, lc_correlativoI
              from aqpa463 a
             where a.aqpa463pgcod = pn_pgcod
               and a.aqpa463hcmod = pn_hcmod3
               and a.aqpa463hsucor = pn_hsucor3
               and a.aqpa463htran = pn_htran3
               and a.aqpa463hnrel = pn_hnrel3
               and a.aqpa463hfcon = pn_hfcon3;
          exception
            when too_many_rows then
              ---obtener ultimo documento enviado
              begin
                select max(a.aqpa463serie), max(a.aqpa463corre)
                  into lc_serieI, lc_correlativoI
                  from aqpa463 a
                 where a.aqpa463pgcod = pn_pgcod
                   and a.aqpa463hcmod = pn_hcmod3
                   and a.aqpa463hsucor= pn_hsucor3
                   and a.aqpa463htran = pn_htran3
                   and a.aqpa463hnrel = pn_hnrel3
                   and a.aqpa463hfcon = pn_hfcon3;
              
              exception
                when others then
                  lc_serieI       := null;
                  lc_correlativoI := null;
              end;
            when no_data_found then
              --si no existe trx origen
              lc_serieI := null;
          end;
        */
      
        begin
          select distinct a.aqpa460seri, a.aqpa460num
            into lc_serieI, lc_correlativoI
            from aqpa460 a
           where a.aqpa460pgc = pn_pgcod
             and a.aqpa460mod = pn_hcmod3
             and a.aqpa460suc = pn_hsucor3
             and a.aqpa460trx = pn_htran3
             and a.aqpa460rel = pn_hnrel3
             and a.aqpa460femi = pn_hfcon3;
        exception
          when others then
            lc_serieI       := null;
            lc_correlativoI := null;
        end;
      
        lv_tipodocu := substr(lc_serieI, 1, 1);
        lv_tipocre  := substr(lc_serieI, 2, 1);
      
        if lv_tipodocu is not null then
        
          --determinar tipo del documento origen
          --dbms_output.put_line('================');
          --dbms_output.put_line('pn_hcmod3 ' || pn_hcmod3);
          --dbms_output.put_line('pn_hsucor3 ' || pn_hsucor3);
          --dbms_output.put_line('pn_htran3 ' || pn_htran3);
          --dbms_output.put_line('pn_hnrel3 ' || pn_hnrel3);
          --dbms_output.put_line('pn_hfcon3 ' || pn_hfcon3);                                        
        
          begin
            select distinct t.aqpa460tcomf
              into lv_doc_ori
              from aqpa460 t
             where t.aqpa460pgc = pn_pgcod
               and t.aqpa460mod = pn_hcmod3
               and t.aqpa460suc = pn_hsucor3
               and t.aqpa460trx = pn_htran3
               and t.aqpa460rel = pn_hnrel3
               and t.aqpa460femi = pn_hfcon3
               and t.aqpa460tcomf in ('01', '03', '13');
          exception
            when others then
              --2022.04.26 dcastro
              lv_doc_ori := null;
            
          end;
        
          if lv_doc_ori in ('01', '03') then
          
            --determinar tipo de cliente
            if lv_tipodocu = 'F' then
              lc_tipper := 'J';
              ln_guiaCP := 1;
            else
              lc_tipper := 'N';
              ln_guiaCP := 3;
            end if;
          
            begin
              select
              --'0' || to_char(a.tp1nro1)
               lpad(trim(a.tp1nro1), 2, '0')
                into lv_codtipo
                from fst198 a
               where a.tp1cod = 1
                 and a.tp1cod1 = 11120
                 and a.tp1corr1 = 1
                 and a.tp1corr2 = 7
                 and a.tp1corr3 = ln_guiaCP; --2018.10.10 se modifico codigo de guia para tipo comprobante
            exception
              when others then
                null;
            end;
          
          else
            lv_codtipo := '13';
          end if;
        
          -- Determinar rubro
          -- 5. Obtener rubro
          begin
            -- Como el proceso siempre será ejecutado al menos un día después, 
            -- se busca en históricos
          
            select to_number(substr(m.hrubro, 5, 2))
              into ln_rubro
              from fsh016 m, fsr171 aa
             where aa.st171cpcod = 15
               and aa.sr171tremp = 1 --1
               and aa.sr171trmod = m.hcmod --30
               and aa.sr171trnro = m.htran
               and m.PGCOD = pn_pgcod
               and m.hsucor = pn_hsucor3
               and m.hcmod = pn_hcmod3
               and m.htran = pn_htran3
               and m.hnrel = pn_hnrel3
               and m.hfcon = pn_hfcon3
               and m.hcord = aa.sr171trord
               and rownum = 1;
          exception
            when others then
              --ln_rubro := null;
              begin
              
                select distinct x.aqpa463tcre
                  into ln_rubro
                  from aqpa463 x
                 where x.aqpa463pgcod = pn_pgcod
                   and x.aqpa463hcmod = pn_hcmod3
                   and x.aqpa463hsucor = pn_hsucor3
                   and x.aqpa463htran = pn_htran3
                   and x.aqpa463hnrel = pn_hnrel3
                   and x.aqpa463hfcon = pn_hfcon3;
              
              exception
                when others then
                  ln_rubro := null;
                
              end;
          end;
        
          /*if ln_flag = 0 then  --25012019 dcastro se agrego validacion de flag si es =1 incluye comision   
            exit;
          end if;  --25012019 dcastro 
          */
        
          --end if;
        
          --determinar si es comision
          begin
            select 'S'
              into lc_comision
              from fst198 h
             where h.tp1cod = 1
               and h.tp1cod1 = 11120
               and h.tp1corr1 = 3
               and h.tp1corr2 = 1
               and h.tp1nro1 = pn_hcmod3
               and h.tp1nro2 = pn_htran3
               and rownum = 1;
          exception
            when others then
              lc_comision := 'N';
          end;
        
          if lc_comision = 'S' then
            ln_rubro := 1;
          end if;
        
          -- b. Determinar si el rubro es considerado
          begin
            select 'S'
              into lc_flr
              from fst198 t
             where t.tp1cod = 1
               and t.tp1cod1 = 11120
               and t.tp1corr1 = 1
               and t.tp1corr2 = 23
               and t.tp1nro1 <> 0
               and t.tp1nro1 = ln_rubro;
          exception
            when others then
              lc_flr := 'N';
          end;
        
          --if (lv_tipocre in ('H','F') and ln_flag = 0) or ln_flag = 1 then
          if (lc_flr = 'S' and ln_flag = 0) or ln_flag = 1 or
             (lc_flr = 'N' and lc_comision = 'S') ---2022.04.22 dcastro
           then
          
            --Seleccionar tipo de documento    !!3
            -- Guía obtener transacciones GRAVADAS
            begin
              select 'S'
                into lc_tipo_doc
                from fst198 h
               where h.tp1cod = 1
                 and h.tp1cod1 = 11120
                 and h.tp1corr1 = 3
                 and h.tp1corr2 = 1
                 and h.tp1corr3 > 0
                 and h.tp1nro1 = pn_hcmod3
                 and h.tp1nro2 = pn_htran3;
            exception
              when others then
                lc_tipo_doc := 'N';
            end;
          
            ---Si es gravado --> 07  sino ---> 87
            lv_tipo_doc := '87';
          
            if lc_tipo_doc = 'S' then
              lv_tipo_doc := '07';
              lc_tipfin   := 'N';
            else
              ------
            
              begin
              
                -- c. Verificar si el rubro esta activo
                -- (4): hipotecario
                -- (3): consumo
                begin
                  select 'S'
                    into lc_fcont
                    from fst198 t
                   where t.tp1cod = 1
                     and t.tp1cod1 = 11120
                     and t.tp1corr1 = 1
                     and t.tp1corr2 = 23
                     and t.tp1nro1 <> 0
                     and t.tp1nro1 = ln_rubro
                     and t.tp1imp1 = 1;
                exception
                  when others then
                    lc_fcont := 'N';
                end;
              
                if lc_fcont = 'S' then
                
                  --Verificar en AQPB056
                  begin
                    select 'S'
                      into lc_tipfin
                      from aqpb056 a
                     where a.aqpb056pgc = pn_pgcod
                       and a.aqpb056mod = pn_hcmod
                       and a.aqpb056suc = pn_hsucor
                       and a.aqpb056trx = pn_htran
                       and a.aqpb056rel = pn_hnrel
                       and a.aqpb056fco = pd_hfcon
                       and a.aqpb056pge = pn_pgcod
                       and a.aqpb056moe = pn_hcmod3
                       and a.aqpb056sue = pn_hsucor3
                       and a.aqpb056tre = pn_htran3
                       and a.aqpb056ree = pn_hnrel3
                       and a.aqpb056fce = pn_hfcon3
                       and a.aqpb056tco = '87';
                  
                  exception
                    when others then
                      begin
                        select 'S'
                          into lc_tipfin
                          from aqpb056h a
                         where a.aqpb056hpgc = pn_pgcod
                           and a.aqpb056hmod = pn_hcmod
                           and a.aqpb056hsuc = pn_hsucor
                           and a.aqpb056htrx = pn_htran
                           and a.aqpb056hrel = pn_hnrel
                           and a.aqpb056hfcon = pd_hfcon
                           and a.aqpb056hpgce = pn_pgcod
                           and a.aqpb056hmode = pn_hcmod3
                           and a.aqpb056hsuce = pn_hsucor3
                           and a.aqpb056htrxe = pn_htran3
                           and a.aqpb056hrele = pn_hnrel3
                           and a.aqpb056hfcone = pn_hfcon3
                           and a.aqpb056htcomf = '87';
                      exception
                        when others then
                          lc_tipfin := 'N';
                      end;
                    
                  end;
                
                  --Verificar si la transacción sigue activa
                  select count(*)
                    into lc_ftran
                    from fst198 t
                   where t.tp1cod = 1
                     and t.tp1cod1 = 11120
                     and t.tp1corr1 = 10
                     and t.tp1corr2 = 1
                     and t.tp1corr3 <> 0
                     and t.tp1imp1 = 1
                     and t.tp1nro1 = pn_hcmod3
                     and t.tp1nro2 = pn_htran3;
                
                  if (lc_tipfin = 'S' and lc_ftran > 0) then
                  
                    begin
                      --select to_char(a.aqpb056seri), a.aqpb056num
                      select to_char(a.aqpb056ser), a.aqpb056num
                        into lc_serie, lc_correlativo
                        from aqpb056 a
                       where
                      
                       a.aqpb056pgc = pn_pgcod
                       and a.aqpb056mod = pn_hcmod
                       and a.aqpb056suc = pn_hsucor
                       and a.aqpb056trx = pn_htran
                       and a.aqpb056rel = pn_hnrel
                       and a.aqpb056fco = pd_hfcon
                      
                       and a.aqpb056pge = pn_pgcod
                       and a.aqpb056moe = pn_hcmod3
                       and a.aqpb056sue = pn_hsucor3
                       and a.aqpb056tre = pn_htran3
                       and a.aqpb056ree = pn_hnrel3
                       and a.aqpb056fce = pn_hfcon3
                      
                       and a.aqpb056tco = '87';
                    
                    exception
                      when others then
                      
                        select to_char(a.aqpb056hseri), a.aqpb056hnum
                          into lc_serie, lc_correlativo
                          from aqpb056h a
                         where
                        
                         a.aqpb056hpgc = pn_pgcod
                         and a.aqpb056hmod = pn_hcmod
                         and a.aqpb056hsuc = pn_hsucor
                         and a.aqpb056htrx = pn_htran
                         and a.aqpb056hrel = pn_hnrel
                         and a.aqpb056hfcon = pd_hfcon
                        
                         and a.aqpb056hpgce = pn_pgcod
                         and a.aqpb056hmode = pn_hcmod3
                         and a.aqpb056hsuce = pn_hsucor3
                         and a.aqpb056htrxe = pn_htran3
                         and a.aqpb056hrele = pn_hnrel3
                         and a.aqpb056hfcone = pn_hfcon3
                        
                         and a.aqpb056htcomf = '87';
                      
                    end;
                  
                  end if;
                
                end if;
              
              end;
              ------
            
            end if;
          
            if (lv_tipo_doc = '87' and lc_tipfin = 'S') or
               (lv_tipo_doc = '07' and lc_tipfin = 'N') then
              --if (lv_tipo_doc = '87') then
              --insertamos en AQPA460            
              begin
              
                --if to_number(lc_correlativo) > 43 then
                --  lc_msgerr := '';
                --end if;
              
                begin
                  pq_cr_facturacion.sp_cr_factura(pn_rubro       => ln_rubro,
                                                  pc_tipcli      => lc_tipper,
                                                  pc_tipo        => 'NC',
                                                  pc_serie       => lc_serie,
                                                  pc_correlativo => lc_correlativo);
                end;
              
                insert into AQPA460
                  (aqpa460tdoc,
                   aqpa460rucc,
                   aqpa460rsoc,
                   aqpa460cdis,
                   aqpa460ncom,
                   aqpa460calle,
                   aqpa460urba,
                   aqpa460depa,
                   aqpa460prov,
                   aqpa460dist,
                   aqpa460telf,
                   aqpa460web,
                   aqpa460cpais,
                   aqpa460cesun,
                   aqpa460seri,
                   aqpa460num,
                   aqpa460femi,
                   aqpa460tcomf,
                   aqpa460mone,
                   aqpa460corrr,
                   aqpa460mglo,
                   aqpa460coma,
                   aqpa460tpla,
                   aqpa460tope,
                   aqpa460tplco,
                   aqpa460clog,
                   aqpa460tdocr,
                   aqpa460nruc,
                   aqpa460rasoc,
                   aqpa460impt,
                   aqpa460hemi,
                   aqpa460simc,
                   aqpa460svitm,
                   aqpa460spvi,
                   aqpa460txml,
                   aqpa460sdref,
                   aqpa460ndref,
                   aqpa460cmem,
                   aqpa460sust,
                   aqpa460serie,
                   aqpa460nro,
                   aqpa460tcomp,
                   aqpa460fdref,
                   aqpa460cdist,
                   aqpa460call,
                   aqpa460urb,
                   aqpa460dep,
                   aqpa460prv,
                   aqpa460dst,
                   aqpa460cpai,
                   aqpa460item,
                   aqpa460pnetu,
                   aqpa460cantf,
                   aqpa460total,
                   aqpa460dete,
                   aqpa460ctpr,
                   aqpa460vvun,
                   aqpa460vvuig,
                   aqpa460desc,
                   aqpa460mfun,
                   aqpa460prvit,
                   aqpa460medem,
                   aqpa460csuna,
                   aqpa460cpgs1,
                   aqpa460ititm,
                   aqpa460imptb,
                   aqpa460impex,
                   aqpa460afigv,
                   aqpa460sisc,
                   aqpa460codtb,
                   aqpa460dstrb,
                   aqpa460codun,
                   aqpa460mbim,
                   aqpa460taimp,
                   aqpa460cdley,
                   aqpa460teley,
                   aqpa460text1,
                   aqpa460text2,
                   aqpa460trecv,
                   aqpa460templ,
                   aqpa460subje,
                   aqpa460vpcva,
                   aqpa460nexp,
                   aqpa460cind,
                   aqpa460npart,
                   aqpa460ncont,
                   aqpa460fotrc,
                   aqpa460cdisn,
                   aqpa460direh,
                   aqpa460urbh,
                   aqpa460prvh,
                   aqpa460dsth,
                   aqpa460depth,
                   aqpa460mtotal,
                   aqpa460baimp,
                   aqpa460mtimp,
                   aqpa460pcima,
                   aqpa460bsimp,
                   aqpa460vaimp,
                   aqpa460mtinf,
                   aqpa460mtgrt,
                   aqpa460bsimps,
                   aqpa460mtoti,
                   aqpa460pgc,
                   aqpa460mod,
                   aqpa460suc,
                   aqpa460trx,
                   aqpa460rel,
                   aqpa460ore,
                   aqpa460pgce,
                   aqpa460mode,
                   aqpa460suce,
                   aqpa460trxe,
                   aqpa460rele,
                   aqpa460fcone,
                   aqpa460glos,
                   aqpa460tipag,
                   aqpa460text3,
                   aqpa460text4,
                   aqpa460conce,
                   AQPA460DOCU --2023.07.18 dcastro 
                   )
                  select aqpa460tdoc, --aqpa460tdoc,
                         aqpa460rucc, --aqpa460rucc,
                         aqpa460rsoc, --aqpa460rsoc,
                         aqpa460cdis, --aqpa460cdis,
                         aqpa460ncom, --aqpa460ncom,
                         aqpa460calle, --aqpa460calle,
                         aqpa460urba, --aqpa460urba,
                         aqpa460depa, --aqpa460depa,
                         aqpa460prov, --aqpa460prov,
                         aqpa460dist, --aqpa460dist,
                         aqpa460telf, --aqpa460telf,
                         aqpa460web, --aqpa460web,
                         aqpa460cpais, --aqpa460cpais,
                         aqpa460cesun, --aqpa460cesun,
                         lc_serie, --aqpa460seri,
                         lc_correlativo, --aqpa460num,
                         --aqpa460femi, --aqpa460femi,
                         pd_hfcon, --aqpa460femi,
                         --'07',
                         lv_tipo_doc, --aqpa460tcomf,
                         aqpa460mone, --aqpa460mone,
                         aqpa460corrr, --aqpa460corrr,
                         aqpa460mglo, --aqpa460mglo,
                         aqpa460coma, --aqpa460coma,
                         aqpa460tpla, --aqpa460tpla,
                         aqpa460tope, --aqpa460tope,
                         aqpa460tplco, --aqpa460tplco,
                         aqpa460clog, --aqpa460clog,
                         aqpa460tdocr, --aqpa460tdocr,
                         aqpa460nruc, --aqpa460nruc,
                         trim(aqpa460rasoc), --aqpa460rasoc,
                         aqpa460impt, --aqpa460impt,
                         aqpa460hemi, --aqpa460hemi,
                         aqpa460simc, --aqpa460simc,
                         aqpa460svitm, --aqpa460svitm,
                         aqpa460spvi, --aqpa460spvi,
                         aqpa460txml, --aqpa460txml,
                         aqpa460seri, --aqpa460sdref,
                         aqpa460num, --aqpa460ndref,
                         lv_doc_ori, --'01', --aqpa460cmem,
                         'Extorno de la operacion', --aqpa460sust,
                         aqpa460seri, --aqpa460serie,
                         aqpa460num, --aqpa460nro,
                         lv_codtipo, --aqpa460tcomp,
                         --pd_hfcon,    --aqpa460fdref,
                         aqpa460femi, --aqpa460fdref,
                         aqpa460cdist, --aqpa460cdist,
                         aqpa460call, --aqpa460call,
                         aqpa460urb, --aqpa460urb,
                         aqpa460dep, --aqpa460dep,
                         aqpa460prv, --aqpa460prv,
                         aqpa460dst, --aqpa460dst,
                         aqpa460cpai, --aqpa460cpai,
                         aqpa460item, --aqpa460item,
                         aqpa460pnetu, --aqpa460pnetu,
                         aqpa460cantf, --aqpa460cantf,
                         aqpa460total, --aqpa460total,
                         aqpa460dete, --aqpa460dete,
                         aqpa460ctpr, --aqpa460ctpr,
                         aqpa460vvun, --aqpa460vvun,
                         aqpa460vvuig, --aqpa460vvuig,
                         trim(aqpa460desc), --aqpa460desc,
                         substr(trim(aqpa460mfun), 1, 499), --aqpa460mfun, 2023
                         aqpa460prvit, --aqpa460prvit,
                         aqpa460medem, --aqpa460medem,
                         aqpa460csuna, --aqpa460csuna,
                         aqpa460cpgs1, --aqpa460cpgs1,
                         aqpa460ititm, --aqpa460ititm,
                         aqpa460imptb, --aqpa460imptb,
                         aqpa460impex, --aqpa460impex,
                         aqpa460afigv, --aqpa460afigv,
                         aqpa460sisc, --aqpa460sisc,
                         aqpa460codtb, --aqpa460codtb,
                         aqpa460dstrb, --aqpa460dstrb,
                         aqpa460codun, --aqpa460codun,
                         aqpa460mbim, --aqpa460mbim,
                         aqpa460taimp, --aqpa460taimp,
                         aqpa460cdley, --aqpa460cdley,
                         aqpa460teley, --aqpa460teley,
                         aqpa460text1, --aqpa460text1,
                         aqpa460text2, --aqpa460text2,
                         aqpa460trecv, --aqpa460trecv,
                         aqpa460templ, --aqpa460templ,
                         aqpa460subje, --aqpa460subje,
                         aqpa460vpcva, --aqpa460vpcva,
                         aqpa460nexp, --aqpa460nexp,
                         aqpa460cind, --aqpa460cind,
                         aqpa460npart, --aqpa460npart,
                         aqpa460ncont, --aqpa460ncont,
                         aqpa460fotrc, --aqpa460fotrc,
                         aqpa460cdisn, --aqpa460cdisn,
                         aqpa460direh, --aqpa460direh,
                         aqpa460urbh, --aqpa460urbh,
                         aqpa460prvh, --aqpa460prvh,
                         aqpa460dsth, --aqpa460dsth,
                         aqpa460depth, --aqpa460depth,
                         aqpa460mtotal, --aqpa460mtotal,
                         aqpa460baimp, --aqpa460baimp,
                         aqpa460mtimp, --aqpa460mtimp,
                         aqpa460pcima, --aqpa460pcima,
                         aqpa460bsimp, --aqpa460bsimp,
                         aqpa460vaimp, --aqpa460vaimp,
                         aqpa460mtinf, --aqpa460mtinf,
                         aqpa460mtgrt, --aqpa460mtgrt,
                         aqpa460bsimps, --aqpa460bsimps,
                         aqpa460mtoti, --aqpa460mtoti,
                         aqpa460pgc, --aqpa460pgc,
                         aqpa460mod, --aqpa460mod,
                         aqpa460suc, --aqpa460suc,
                         aqpa460trx, --aqpa460trx,
                         aqpa460rel, --aqpa460rel,
                         aqpa460ore, --aqpa460ore,
                         pn_pgcod, --aqpa460pgce,
                         pn_hcmod, --aqpa460mode,
                         pn_hsucor, --aqpa460suce,
                         pn_htran, --aqpa460trxe,
                         pn_hnrel, --aqpa460rele,
                         pd_hfcon, --2023.09.24 se restauro pd_hfcon ---pn_hfcon3 --pd_hfcon,--aqpa460fcone, 2023.07.18 DCASTRO SE CAMBIO CAMPO FECHA DE EXTORNO
                         --aqpa460femi, --aqpa460fcone,
                         aqpa460glos, --aqpa460glos,
                         aqpa460tipag, --aqpa460tipag,
                         aqpa460text3, --aqpa460text3,
                         aqpa460text4, --aqpa460text4,
                         aqpa460conce, --aqpa460conce
                         AQPA460DOCU --2023.07.18 dcastro 
                  
                    from aqpa460 a
                   where a.aqpa460pgc = pn_pgcod
                     and a.aqpa460mod = pn_hcmod3
                     and a.aqpa460suc = pn_hsucor3
                     and a.aqpa460trx = pn_htran3
                     and a.aqpa460rel = pn_hnrel3
                     and a.aqpa460femi = pn_hfcon3
                     and a.aqpa460seri = lc_serieI
                     and a.aqpa460num = lc_correlativoI;
              
                commit;
              exception
                when others then
                  lc_coderr := sqlcode;
                  lc_msgerr := sqlerrm;
                
              end;
            
              --insertamos en AQPA464
              ln_cont := 1;
              for i in base(pn_pgcod,
                            pn_hcmod3,
                            pn_hsucor3,
                            pn_htran3,
                            pn_hnrel3,
                            pn_hfcon3,
                            lc_serieI,
                            lc_correlativoI) loop
              
                begin
                  insert into aqpa464
                    (aqpa464txtrub,
                     aqpa464pgcod,
                     aqpa464hcmod,
                     aqpa464hsucor,
                     aqpa464htran,
                     aqpa464hnrel,
                     aqpa464hfcon,
                     aqpa464doid,
                     aqpa464cpcod,
                     aqpa464vnro,
                     aqpa464vchr,
                     aqpa464vfch,
                     aqpa464vimp /*, aqpa464vtas*/,
                     aqpa464serie,
                     aqpa464nro,
                     aqpa464emp,
                     aqpa464mod,
                     aqpa464suc,
                     aqpa464mda,
                     aqpa464pap,
                     aqpa464cta,
                     aqpa464ope,
                     aqpa464sbo,
                     aqpa464top,
                     aqpa464hip,
                     aqpa464txtord,
                     aqpa464txoren,
                     aqpa464pgcode,
                     aqpa464hcmode,
                     aqpa464hsucore,
                     aqpa464htrane,
                     aqpa464hnrele,
                     aqpa464hfcone)
                  
                  values
                    (i.aqpa463txtrub,
                     i.aqpa463pgcod,
                     i.aqpa463hcmod,
                     i.aqpa463hsucor,
                     i.aqpa463htran,
                     i.aqpa463hnrel,
                     i.aqpa463hfcon,
                     ln_cont,
                     i.aqpa463hcpcod,
                     i.aqpa463hvnro,
                     i.aqpa463hvchr,
                     pd_hfcon,
                     ln_cont,
                     lc_serie,
                     lc_correlativo,
                     i.aqpa463emp,
                     i.aqpa463mod,
                     i.aqpa463suc,
                     i.aqpa463mda,
                     i.aqpa463pap,
                     i.aqpa463cta,
                     i.aqpa463ope,
                     i.aqpa463sbo,
                     i.aqpa463top,
                     i.aqpa463hip,
                     i.aqpa463txtord,
                     i.aqpa463txoren,
                     pn_pgcod,
                     pn_hcmod,
                     pn_hsucor,
                     pn_htran,
                     pn_hnrel,
                     pd_hfcon);
                
                  commit;
                exception
                  when others then
                    lc_coderr := sqlcode;
                    lc_msgerr := sqlerrm;
                  
                end;
                ln_cont := ln_cont + 1;
              
                ----insertando cabecera
                --si no existe registro insertar
                begin
                  select 'S'
                    into lc_flag466
                    from aqpa466 b
                   where b.aqpa466serie = lc_serie
                     and b.aqpa466corr = lc_correlativo
                     and b.aqpa466pgcod = i.aqpa463pgcod
                     and b.aqpa466mod = i.aqpa463hcmod
                     and b.aqpa466sucor = i.aqpa463hsucor
                     and b.aqpa466tran = i.aqpa463htran
                     and b.aqpa466rel = i.aqpa463hnrel
                     and b.aqpa466con = i.aqpa463hfcon;
                exception
                  when others then
                    lc_flag466 := 'N';
                end;
              
                if nvl(lc_flag466, 'N') = 'N' then
                
                  insert into aqpa466
                    (aqpa466serie,
                     aqpa466corr,
                     aqpa466pgcod,
                     aqpa466mod,
                     aqpa466sucor,
                     aqpa466tran,
                     aqpa466rel,
                     aqpa466con,
                     aqpa466hash)
                  values
                    (lc_serie,
                     lc_correlativo,
                     i.aqpa463pgcod,
                     i.aqpa463hcmod,
                     i.aqpa463hsucor,
                     i.aqpa463htran,
                     i.aqpa463hnrel,
                     i.aqpa463hfcon,
                     null);
                
                  commit;
                end if;
                -- fin cabecera
              ---
              
              end loop;
            
              --insertamos en AQPA466, NO
              lc_esta := null;
              if lv_tipo_doc = '87' then
                lc_esta := 'Z';
              end if;
            
            end if;
          end if; --25012019
        
        end if; ---fin de tipodocu 
      
      end if;
    
    end loop;
  
  end sp_cr_Nota_Cred_COM4;

  -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --      
  procedure sp_cr_NotaCred_REGU(pd_fecini in date,
                                pd_fecfin in date,
                                pd_fecenv in date,
                                pc_numdoc in character) is
  
    pn_hcmod        number;
    pn_hsucor       number;
    pn_htran        number;
    pn_hnrel        number;
    pd_hfcon        date;
    pn_NRO_RELACION number;
    pd_FECHA_TX     date;
    pn_hcmod2       number;
    pn_hcmod3       number;
    pn_hsucor3      number;
    pn_htran3       number;
    pn_hnrel3       number;
    pn_hfcon3       date;
    lc_serie        char(4);
    lc_correlativo  char(8);
  
    pn_pgcod number;
    --Flag char(1):='N';
  
    lc_flg466  char(1) := 'N'; --controla que no exista en la aqpa466
    lc_flag466 char(1) := 'N';
  
    ln_rubro  number;
    lc_tipper char(1);
  
    lv_tipodocu     char(1);
    lc_comision     char(1);
    ln_guiaCP       number;
    lv_codtipo      char(2);
    lc_coderr       varchar2(1000);
    lc_msgerr       varchar2(1000);
    ln_cont         number;
    lc_serieI       char(4);
    lc_correlativoI char(8);
    lv_codrpt       number;
    lv_tipocre      varchar2(2);
    ln_flag         number;
  
    lc_tipo_doc char(1);
    lv_tipo_doc char(2);
    lv_doc_ori  char(2);
  
    --ln_rubro number;
    --pd_rubro        number;
    lc_flr    char(1);
    lc_ftran  number;
    lc_fcont  char(1);
    lc_tipfin char(1);
  
    lc_trxe char(1);
    lc_esta char(1);
  
    cursor fsx015 is
    
      select /* +all_rows */
      distinct a.aqpa460pgc pgcod,
               a.aqpa460mod hcmod,
               a.aqpa460suc hsucor,
               a.aqpa460trx htran,
               a.aqpa460rel hnrel,
               a.aqpa460femi hfcon,
               a.aqpa460seri,
               a.aqpa460num,
               'E' Indicador
        from aqpa460 a
       where a.aqpa460femi >= pd_fecini
         and a.aqpa460femi <= pd_fecfin
            
         and (a.aqpa460mod, a.aqpa460trx) in
             (select k.tp1nro1, k.tp1nro2
                from fst198 k
               where k.tp1cod = 1
                 and k.tp1cod1 = 11120
                 and k.tp1corr1 = 40
                 and k.tp1corr2 > 0)
         and a.aqpa460nruc like trim(pc_numdoc) || '%';
  
    cursor base(pn_pgcod        in number,
                pn_hcmod3       in number,
                pn_hsucor3      in number,
                pn_htran3       in number,
                pn_hnrel3       in number,
                pn_hfcon3       in date,
                lc_serieI       in char,
                lc_correlativoI in number) is
    
      select aqpa463txtrub,
             aqpa463pgcod,
             aqpa463hcmod,
             aqpa463hsucor,
             aqpa463htran,
             aqpa463hnrel,
             aqpa463hfcon,
             aqpa463hcpcod,
             aqpa463hvnro,
             trim(aqpa463hvchr) aqpa463hvchr,
             aqpa463hvnro aqpa463emp,
             aqpa463mod,
             aqpa463suc,
             aqpa463mda,
             aqpa463pap,
             aqpa463cta,
             aqpa463ope,
             aqpa463sbo,
             aqpa463top,
             aqpa463hip,
             trim(aqpa463txtord) aqpa463txtord,
             aqpa463txoren
        from aqpa463 a
       where a.aqpa463pgcod = pn_pgcod
         and a.aqpa463hcmod = pn_hcmod3
         and a.aqpa463hsucor = pn_hsucor3
         and a.aqpa463htran = pn_htran3
         and a.aqpa463hnrel = pn_hnrel3
         and a.aqpa463hfcon = pn_hfcon3
         and a.aqpa463serie = lc_serieI
         and a.aqpa463corre = lc_correlativoI;
  
  begin
  
    --25012019 dcastro
    begin
      select c.tp1nro1
        into ln_flag
        from fst198 c
       where c.tp1cod = 1
         and c.tp1cod1 = 11120
         and c.tp1corr1 = 7
         and c.tp1corr2 = 1;
    exception
      when others then
        null;
    end;
    --25012019
  
    for p in fsx015 loop
      --Verifica que no exista en cabecera AQPA466
      /*Begin
        select 'S'
          into lc_flg466
          from aqpa466 a
         where a.aqpa466pgcod = p.pgcod
           and a.aqpa466mod = p.hcmod
           and a.aqpa466sucor = p.hsucor
           and a.aqpa466tran = p.htran
           and a.aqpa466rel = p.hnrel
           and a.aqpa466con = p.hfcon
           and rownum = 1;
      exception
        when others then
          lc_flg466 := 'N';
      end;*/
      lc_flg466 := 'N'; ---2022.07.22 dcastro
    
      --Clave del documento a la cual se aplica: factura y boleta
      pn_pgcod  := p.pgcod;
      pn_hcmod  := p.hcmod;
      pn_hsucor := p.hsucor;
      pn_htran  := p.htran;
      pn_hnrel  := p.hnrel;
      pd_hfcon  := p.hfcon;
    
      if lc_flg466 = 'N' then
      
        --if p.indicador = 'E' then
        --Por extorno 
        pn_NRO_RELACION := pn_hnrel;
      
        if pn_NRO_RELACION is not null then
          pd_FECHA_TX := pd_hfcon;
        
          pn_hcmod2 := pn_hcmod;
        
          lc_trxe := 'N';
        
          pn_pgcod   := p.pgcod;
          pn_hcmod3  := pn_hcmod2;
          pn_hsucor3 := pn_hsucor;
          pn_htran3  := pn_htran;
          pn_hnrel3  := pn_NRO_RELACION;
          pn_hfcon3  := pd_FECHA_TX;
        
        end if;
      
        lc_serieI       := p.aqpa460seri;
        lc_correlativoI := p.aqpa460num;
      
        lv_tipodocu := substr(lc_serieI, 1, 1);
        lv_tipocre  := substr(lc_serieI, 2, 1);
      
        if lv_tipodocu is not null then
        
          begin
            select distinct t.aqpa460tcomf
              into lv_doc_ori
              from aqpa460 t
             where t.aqpa460pgc = pn_pgcod
               and t.aqpa460mod = pn_hcmod3
               and t.aqpa460suc = pn_hsucor3
               and t.aqpa460trx = pn_htran3
               and t.aqpa460rel = pn_hnrel3
               and t.aqpa460femi = pn_hfcon3
               and t.aqpa460tcomf in ('01', '03', '13');
          exception
            when others then
              --2022.04.26 dcastro
              lv_doc_ori := null;
            
          end;
        
          if lv_doc_ori in ('01', '03') then
          
            --determinar tipo de cliente
            if lv_tipodocu = 'F' then
              lc_tipper := 'J';
              ln_guiaCP := 1;
            else
              lc_tipper := 'N';
              ln_guiaCP := 3;
            end if;
          
            begin
              select
              --'0' || to_char(a.tp1nro1)
               lpad(trim(a.tp1nro1), 2, '0')
                into lv_codtipo
                from fst198 a
               where a.tp1cod = 1
                 and a.tp1cod1 = 11120
                 and a.tp1corr1 = 1
                 and a.tp1corr2 = 7
                 and a.tp1corr3 = ln_guiaCP; --2018.10.10 se modifico codigo de guia para tipo comprobante
            exception
              when others then
                null;
            end;
          
          else
            lv_codtipo := '13';
          end if;
        
          --determinar si es comision - por defecto
          lc_comision := 'S';
          if lc_comision = 'S' then
            ln_rubro := 1;
          end if;
        
          -- b. Determinar si el rubro es considerado
          begin
            select 'S'
              into lc_flr
              from fst198 t
             where t.tp1cod = 1
               and t.tp1cod1 = 11120
               and t.tp1corr1 = 1
               and t.tp1corr2 = 23
               and t.tp1nro1 <> 0
               and t.tp1nro1 = ln_rubro;
          exception
            when others then
              lc_flr := 'N';
          end;
        
          --if (lv_tipocre in ('H','F') and ln_flag = 0) or ln_flag = 1 then
          if (lc_flr = 'S' and ln_flag = 0) or ln_flag = 1 or
             (lc_flr = 'N' and lc_comision = 'S') ---2022.04.22 dcastro
           then
          
            --Seleccionar tipo de documento    !!3
            -- Guía obtener transacciones GRAVADAS
            begin
              select 'S'
                into lc_tipo_doc
                from fst198 h
               where h.tp1cod = 1
                 and h.tp1cod1 = 11120
                 and h.tp1corr1 = 3
                 and h.tp1corr2 = 1
                 and h.tp1corr3 > 0
                 and h.tp1nro1 = pn_hcmod3
                 and h.tp1nro2 = pn_htran3;
            exception
              when others then
                lc_tipo_doc := 'N';
            end;
          
            ---Si es gravado --> 07  sino ---> 87
            lv_tipo_doc := '87';
          
            if lc_tipo_doc = 'S' then
              lv_tipo_doc := '07';
              lc_tipfin   := 'N';
            else
              ------
            
              begin
              
                -- c. Verificar si el rubro esta activo
                -- (4): hipotecario
                -- (3): consumo
                lc_fcont := 'S';
              
                if lc_fcont = 'S' then
                
                  --Verificar en AQPB056
                  begin
                    select 'S'
                      into lc_tipfin
                      from aqpb056 a
                     where a.aqpb056pgc = pn_pgcod
                       and a.aqpb056mod = pn_hcmod
                       and a.aqpb056suc = pn_hsucor
                       and a.aqpb056trx = pn_htran
                       and a.aqpb056rel = pn_hnrel
                       and a.aqpb056fco = pd_hfcon
                       and a.aqpb056pge = pn_pgcod
                       and a.aqpb056moe = pn_hcmod3
                       and a.aqpb056sue = pn_hsucor3
                       and a.aqpb056tre = pn_htran3
                       and a.aqpb056ree = pn_hnrel3
                       and a.aqpb056fce = pn_hfcon3
                       and a.aqpb056tco = '87';
                  
                  exception
                    when others then
                      begin
                        select 'S'
                          into lc_tipfin
                          from aqpb056h a
                         where a.aqpb056hpgc = pn_pgcod
                           and a.aqpb056hmod = pn_hcmod
                           and a.aqpb056hsuc = pn_hsucor
                           and a.aqpb056htrx = pn_htran
                           and a.aqpb056hrel = pn_hnrel
                           and a.aqpb056hfcon = pd_hfcon
                           and a.aqpb056hpgce = pn_pgcod
                           and a.aqpb056hmode = pn_hcmod3
                           and a.aqpb056hsuce = pn_hsucor3
                           and a.aqpb056htrxe = pn_htran3
                           and a.aqpb056hrele = pn_hnrel3
                           and a.aqpb056hfcone = pn_hfcon3
                           and a.aqpb056htcomf = '87';
                      exception
                        when others then
                          lc_tipfin := 'N';
                      end;
                    
                  end;
                
                  --Verificar si la transacción sigue activa
                  begin
                    select count(*)
                      into lc_ftran
                      from fst198 t
                     where t.tp1cod = 1
                       and t.tp1cod1 = 11120
                       and t.tp1corr1 = 10
                       and t.tp1corr2 = 1
                       and t.tp1corr3 <> 0
                       and t.tp1imp1 = 1
                       and t.tp1nro1 = pn_hcmod3
                       and t.tp1nro2 = pn_htran3;
                  exception
                    when others then
                      null;
                  end;
                
                  if (lc_tipfin = 'S' and lc_ftran > 0) then
                  
                    begin
                      --select to_char(a.aqpb056seri), a.aqpb056num
                      select to_char(a.aqpb056ser), a.aqpb056num
                        into lc_serie, lc_correlativo
                        from aqpb056 a
                       where
                      
                       a.aqpb056pgc = pn_pgcod
                       and a.aqpb056mod = pn_hcmod
                       and a.aqpb056suc = pn_hsucor
                       and a.aqpb056trx = pn_htran
                       and a.aqpb056rel = pn_hnrel
                       and a.aqpb056fco = pd_hfcon
                      
                       and a.aqpb056pge = pn_pgcod
                       and a.aqpb056moe = pn_hcmod3
                       and a.aqpb056sue = pn_hsucor3
                       and a.aqpb056tre = pn_htran3
                       and a.aqpb056ree = pn_hnrel3
                       and a.aqpb056fce = pn_hfcon3
                      
                       and a.aqpb056tco = '87';
                    
                    exception
                      when others then
                      
                        select to_char(a.aqpb056hseri), a.aqpb056hnum
                          into lc_serie, lc_correlativo
                          from aqpb056h a
                         where
                        
                         a.aqpb056hpgc = pn_pgcod
                         and a.aqpb056hmod = pn_hcmod
                         and a.aqpb056hsuc = pn_hsucor
                         and a.aqpb056htrx = pn_htran
                         and a.aqpb056hrel = pn_hnrel
                         and a.aqpb056hfcon = pd_hfcon
                        
                         and a.aqpb056hpgce = pn_pgcod
                         and a.aqpb056hmode = pn_hcmod3
                         and a.aqpb056hsuce = pn_hsucor3
                         and a.aqpb056htrxe = pn_htran3
                         and a.aqpb056hrele = pn_hnrel3
                         and a.aqpb056hfcone = pn_hfcon3
                        
                         and a.aqpb056htcomf = '87';
                      
                    end;
                  
                  end if;
                
                end if;
              
              end;
              ------
            
            end if;
          
            if (lv_tipo_doc = '87' and lc_tipfin = 'S') or
               (lv_tipo_doc = '07' and lc_tipfin = 'N') then
              --if (lv_tipo_doc = '87') then
              --insertamos en AQPA460            
              begin
              
                --if to_number(lc_correlativo) > 43 then
                --  lc_msgerr := '';
                --end if;
              
                begin
                  pq_cr_facturacion.sp_cr_factura(pn_rubro       => ln_rubro,
                                                  pc_tipcli      => lc_tipper,
                                                  pc_tipo        => 'NC',
                                                  pc_serie       => lc_serie,
                                                  pc_correlativo => lc_correlativo);
                end;
              
                insert into AQPA460
                  (aqpa460tdoc,
                   aqpa460rucc,
                   aqpa460rsoc,
                   aqpa460cdis,
                   aqpa460ncom,
                   aqpa460calle,
                   aqpa460urba,
                   aqpa460depa,
                   aqpa460prov,
                   aqpa460dist,
                   aqpa460telf,
                   aqpa460web,
                   aqpa460cpais,
                   aqpa460cesun,
                   aqpa460seri,
                   aqpa460num,
                   aqpa460femi,
                   aqpa460tcomf,
                   aqpa460mone,
                   aqpa460corrr,
                   aqpa460mglo,
                   aqpa460coma,
                   aqpa460tpla,
                   aqpa460tope,
                   aqpa460tplco,
                   aqpa460clog,
                   aqpa460tdocr,
                   aqpa460nruc,
                   aqpa460rasoc,
                   aqpa460impt,
                   aqpa460hemi,
                   aqpa460simc,
                   aqpa460svitm,
                   aqpa460spvi,
                   aqpa460txml,
                   aqpa460sdref,
                   aqpa460ndref,
                   aqpa460cmem,
                   aqpa460sust,
                   aqpa460serie,
                   aqpa460nro,
                   aqpa460tcomp,
                   aqpa460fdref,
                   aqpa460cdist,
                   aqpa460call,
                   aqpa460urb,
                   aqpa460dep,
                   aqpa460prv,
                   aqpa460dst,
                   aqpa460cpai,
                   aqpa460item,
                   aqpa460pnetu,
                   aqpa460cantf,
                   aqpa460total,
                   aqpa460dete,
                   aqpa460ctpr,
                   aqpa460vvun,
                   aqpa460vvuig,
                   aqpa460desc,
                   aqpa460mfun,
                   aqpa460prvit,
                   aqpa460medem,
                   aqpa460csuna,
                   aqpa460cpgs1,
                   aqpa460ititm,
                   aqpa460imptb,
                   aqpa460impex,
                   aqpa460afigv,
                   aqpa460sisc,
                   aqpa460codtb,
                   aqpa460dstrb,
                   aqpa460codun,
                   aqpa460mbim,
                   aqpa460taimp,
                   aqpa460cdley,
                   aqpa460teley,
                   aqpa460text1,
                   aqpa460text2,
                   aqpa460trecv,
                   aqpa460templ,
                   aqpa460subje,
                   aqpa460vpcva,
                   aqpa460nexp,
                   aqpa460cind,
                   aqpa460npart,
                   aqpa460ncont,
                   aqpa460fotrc,
                   aqpa460cdisn,
                   aqpa460direh,
                   aqpa460urbh,
                   aqpa460prvh,
                   aqpa460dsth,
                   aqpa460depth,
                   aqpa460mtotal,
                   aqpa460baimp,
                   aqpa460mtimp,
                   aqpa460pcima,
                   aqpa460bsimp,
                   aqpa460vaimp,
                   aqpa460mtinf,
                   aqpa460mtgrt,
                   aqpa460bsimps,
                   aqpa460mtoti,
                   aqpa460pgc,
                   aqpa460mod,
                   aqpa460suc,
                   aqpa460trx,
                   aqpa460rel,
                   aqpa460ore,
                   aqpa460pgce,
                   aqpa460mode,
                   aqpa460suce,
                   aqpa460trxe,
                   aqpa460rele,
                   aqpa460fcone,
                   aqpa460glos,
                   aqpa460tipag,
                   aqpa460text3,
                   aqpa460text4,
                   aqpa460conce,
                   AQPA460DOCU --2023.07.18 dcastro 
                   )
                  select aqpa460tdoc, --aqpa460tdoc,
                         aqpa460rucc, --aqpa460rucc,
                         aqpa460rsoc, --aqpa460rsoc,
                         aqpa460cdis, --aqpa460cdis,
                         aqpa460ncom, --aqpa460ncom,
                         aqpa460calle, --aqpa460calle,
                         aqpa460urba, --aqpa460urba,
                         aqpa460depa, --aqpa460depa,
                         aqpa460prov, --aqpa460prov,
                         aqpa460dist, --aqpa460dist,
                         aqpa460telf, --aqpa460telf,
                         aqpa460web, --aqpa460web,
                         aqpa460cpais, --aqpa460cpais,
                         aqpa460cesun, --aqpa460cesun,
                         lc_serie, --aqpa460seri,
                         lc_correlativo, --aqpa460num,
                         --aqpa460femi, --aqpa460femi,
                         pd_fecenv, --------------<<< pd_hfcon, --aqpa460femi,
                         --'07',
                         lv_tipo_doc, --aqpa460tcomf,
                         aqpa460mone, --aqpa460mone,
                         aqpa460corrr, --aqpa460corrr,
                         aqpa460mglo, --aqpa460mglo,
                         aqpa460coma, --aqpa460coma,
                         aqpa460tpla, --aqpa460tpla,
                         aqpa460tope, --aqpa460tope,
                         aqpa460tplco, --aqpa460tplco,
                         aqpa460clog, --aqpa460clog,
                         aqpa460tdocr, --aqpa460tdocr,
                         aqpa460nruc, --aqpa460nruc,
                         aqpa460rasoc, --aqpa460rasoc,
                         aqpa460impt, --aqpa460impt,
                         aqpa460hemi, --aqpa460hemi,
                         aqpa460simc, --aqpa460simc,
                         aqpa460svitm, --aqpa460svitm,
                         aqpa460spvi, --aqpa460spvi,
                         aqpa460txml, --aqpa460txml,
                         aqpa460seri, --aqpa460sdref,
                         aqpa460num, --aqpa460ndref,
                         lv_doc_ori, --'01', --aqpa460cmem,
                         'Extorno de la operacion', --aqpa460sust,
                         aqpa460seri, --aqpa460serie,
                         aqpa460num, --aqpa460nro,
                         lv_codtipo, --aqpa460tcomp,
                         --pd_hfcon,    --aqpa460fdref,
                         aqpa460femi, --aqpa460fdref,
                         aqpa460cdist, --aqpa460cdist,
                         aqpa460call, --aqpa460call,
                         aqpa460urb, --aqpa460urb,
                         aqpa460dep, --aqpa460dep,
                         aqpa460prv, --aqpa460prv,
                         aqpa460dst, --aqpa460dst,
                         aqpa460cpai, --aqpa460cpai,
                         aqpa460item, --aqpa460item,
                         aqpa460pnetu, --aqpa460pnetu,
                         aqpa460cantf, --aqpa460cantf,
                         aqpa460total, --aqpa460total,
                         aqpa460dete, --aqpa460dete,
                         aqpa460ctpr, --aqpa460ctpr,
                         aqpa460vvun, --aqpa460vvun,
                         aqpa460vvuig, --aqpa460vvuig,
                         trim(aqpa460desc), --aqpa460desc,
                         substr(trim(aqpa460mfun), 1, 499), --aqpa460mfun, 2023 
                         aqpa460prvit, --aqpa460prvit,
                         aqpa460medem, --aqpa460medem,
                         aqpa460csuna, --aqpa460csuna,
                         aqpa460cpgs1, --aqpa460cpgs1,
                         aqpa460ititm, --aqpa460ititm,
                         aqpa460imptb, --aqpa460imptb,
                         aqpa460impex, --aqpa460impex,
                         aqpa460afigv, --aqpa460afigv,
                         aqpa460sisc, --aqpa460sisc,
                         aqpa460codtb, --aqpa460codtb,
                         aqpa460dstrb, --aqpa460dstrb,
                         aqpa460codun, --aqpa460codun,
                         aqpa460mbim, --aqpa460mbim,
                         aqpa460taimp, --aqpa460taimp,
                         aqpa460cdley, --aqpa460cdley,
                         aqpa460teley, --aqpa460teley,
                         aqpa460text1, --aqpa460text1,
                         aqpa460text2, --aqpa460text2,
                         aqpa460trecv, --aqpa460trecv,
                         aqpa460templ, --aqpa460templ,
                         aqpa460subje, --aqpa460subje,
                         aqpa460vpcva, --aqpa460vpcva,
                         aqpa460nexp, --aqpa460nexp,
                         aqpa460cind, --aqpa460cind,
                         aqpa460npart, --aqpa460npart,
                         aqpa460ncont, --aqpa460ncont,
                         aqpa460fotrc, --aqpa460fotrc,
                         aqpa460cdisn, --aqpa460cdisn,
                         aqpa460direh, --aqpa460direh,
                         aqpa460urbh, --aqpa460urbh,
                         aqpa460prvh, --aqpa460prvh,
                         aqpa460dsth, --aqpa460dsth,
                         aqpa460depth, --aqpa460depth,
                         aqpa460mtotal, --aqpa460mtotal,
                         aqpa460baimp, --aqpa460baimp,
                         aqpa460mtimp, --aqpa460mtimp,
                         aqpa460pcima, --aqpa460pcima,
                         aqpa460bsimp, --aqpa460bsimp,
                         aqpa460vaimp, --aqpa460vaimp,
                         aqpa460mtinf, --aqpa460mtinf,
                         aqpa460mtgrt, --aqpa460mtgrt,
                         aqpa460bsimps, --aqpa460bsimps,
                         aqpa460mtoti, --aqpa460mtoti,
                         aqpa460pgc, --aqpa460pgc,
                         aqpa460mod, --aqpa460mod,
                         aqpa460suc, --aqpa460suc,
                         aqpa460trx, --aqpa460trx,
                         aqpa460rel, --aqpa460rel,
                         aqpa460ore, --aqpa460ore,
                         pn_pgcod, --aqpa460pgce,
                         pn_hcmod, --aqpa460mode,
                         pn_hsucor, --aqpa460suce,
                         pn_htran, --aqpa460trxe,
                         pn_hnrel, --aqpa460rele,
                         --pd_hfcon,--aqpa460fcone,
                         aqpa460femi, --aqpa460fcone,
                         aqpa460glos, --aqpa460glos,
                         aqpa460tipag, --aqpa460tipag,
                         aqpa460text3, --aqpa460text3,
                         aqpa460text4, --aqpa460text4,
                         aqpa460conce, --aqpa460conce
                         AQPA460DOCU --2023.07.18 dcastro 
                    from aqpa460 a
                   where a.aqpa460pgc = pn_pgcod
                     and a.aqpa460mod = pn_hcmod3
                     and a.aqpa460suc = pn_hsucor3
                     and a.aqpa460trx = pn_htran3
                     and a.aqpa460rel = pn_hnrel3
                     and a.aqpa460femi = pn_hfcon3
                     and a.aqpa460seri = lc_serieI
                     and a.aqpa460num = lc_correlativoI;
              
                commit;
              exception
                when others then
                  lc_coderr := sqlcode;
                  lc_msgerr := sqlerrm;
                
              end;
            
              --insertamos en AQPA464
              ln_cont := 1;
              for i in base(pn_pgcod,
                            pn_hcmod3,
                            pn_hsucor3,
                            pn_htran3,
                            pn_hnrel3,
                            pn_hfcon3,
                            lc_serieI,
                            lc_correlativoI) loop
              
                begin
                  insert into aqpa464
                    (aqpa464txtrub,
                     aqpa464pgcod,
                     aqpa464hcmod,
                     aqpa464hsucor,
                     aqpa464htran,
                     aqpa464hnrel,
                     aqpa464hfcon,
                     aqpa464doid,
                     aqpa464cpcod,
                     aqpa464vnro,
                     aqpa464vchr,
                     aqpa464vfch,
                     aqpa464vimp /*, aqpa464vtas*/,
                     aqpa464serie,
                     aqpa464nro,
                     aqpa464emp,
                     aqpa464mod,
                     aqpa464suc,
                     aqpa464mda,
                     aqpa464pap,
                     aqpa464cta,
                     aqpa464ope,
                     aqpa464sbo,
                     aqpa464top,
                     aqpa464hip,
                     aqpa464txtord,
                     aqpa464txoren,
                     aqpa464pgcode,
                     aqpa464hcmode,
                     aqpa464hsucore,
                     aqpa464htrane,
                     aqpa464hnrele,
                     aqpa464hfcone)
                  
                  values
                    (i.aqpa463txtrub,
                     i.aqpa463pgcod,
                     i.aqpa463hcmod,
                     i.aqpa463hsucor,
                     i.aqpa463htran,
                     i.aqpa463hnrel,
                     i.aqpa463hfcon,
                     ln_cont,
                     i.aqpa463hcpcod,
                     i.aqpa463hvnro,
                     i.aqpa463hvchr,
                     pd_hfcon,
                     ln_cont,
                     lc_serie,
                     lc_correlativo,
                     i.aqpa463emp,
                     i.aqpa463mod,
                     i.aqpa463suc,
                     i.aqpa463mda,
                     i.aqpa463pap,
                     i.aqpa463cta,
                     i.aqpa463ope,
                     i.aqpa463sbo,
                     i.aqpa463top,
                     i.aqpa463hip,
                     i.aqpa463txtord,
                     i.aqpa463txoren,
                     pn_pgcod,
                     pn_hcmod,
                     pn_hsucor,
                     pn_htran,
                     pn_hnrel,
                     pd_hfcon);
                
                  commit;
                exception
                  when others then
                    lc_coderr := sqlcode;
                    lc_msgerr := sqlerrm;
                  
                end;
                ln_cont := ln_cont + 1;
              
                ----insertando cabecera
                --si no existe registro insertar
                begin
                  select 'S'
                    into lc_flag466
                    from aqpa466 b
                   where b.aqpa466serie = lc_serie
                     and b.aqpa466corr = lc_correlativo
                     and b.aqpa466pgcod = i.aqpa463pgcod
                     and b.aqpa466mod = i.aqpa463hcmod
                     and b.aqpa466sucor = i.aqpa463hsucor
                     and b.aqpa466tran = i.aqpa463htran
                     and b.aqpa466rel = i.aqpa463hnrel
                     and b.aqpa466con = i.aqpa463hfcon;
                exception
                  when others then
                    lc_flag466 := 'N';
                end;
              
                if nvl(lc_flag466, 'N') = 'N' then
                
                  insert into aqpa466
                    (aqpa466serie,
                     aqpa466corr,
                     aqpa466pgcod,
                     aqpa466mod,
                     aqpa466sucor,
                     aqpa466tran,
                     aqpa466rel,
                     aqpa466con,
                     aqpa466hash)
                  values
                    (lc_serie,
                     lc_correlativo,
                     i.aqpa463pgcod,
                     i.aqpa463hcmod,
                     i.aqpa463hsucor,
                     i.aqpa463htran,
                     i.aqpa463hnrel,
                     i.aqpa463hfcon,
                     null);
                
                  commit;
                end if;
                -- fin cabecera
              ---
              
              end loop;
            
              --insertamos en AQPA466, NO
              lc_esta := null;
              if lv_tipo_doc = '87' then
                lc_esta := 'Z';
              end if;
            
            end if;
          end if; --25012019
        
        end if; ---fin de tipodocu 
      
      end if;
    
    end loop;
  
  end sp_cr_NotaCred_REGU;
  ---------------
  procedure sp_cr_Comision_IND is
    -- determina si la actualizacion es por Error en Factura/NC o Rechazo Factura/NC
  
    lc_serie   char(4);
    lc_corre   char(8);
    ln_relant  number(4) := 0;
    lc_hipo    char(2);
    ln_emp     number(3);
    ln_mod     number(3);
    ln_suc     number(3);
    ln_mda     number(4);
    ln_pap     number(4);
    ln_cta     number(9);
    ln_ope     number(9);
    ln_sbo     number(3);
    ln_top     number(3);
    lc_flg     char(1) := 'N'; --controla que sea hipotecario
    pn_ordinal number(2);
    lc_flg465  char(1) := 'N'; --controla que no exista registro AQPA465
  
    ln_modulo number(3) := 0;
    ln_tran   number(3) := 0;
    ln_sucur  number(3) := 0;
  
    pn_pais   number(3);
    pn_petdoc number(2);
    pn_pendoc char(12);
    ln_rubro  number;
    lc_tipper char(1);
  
    lc_coderr varchar2(1000);
    lc_msgerr varchar2(1000);
  
    lc_error char(1);
  
    cursor movimientos is
    
      select k.tp1cod PGCOD,
             k.tp1nro1 HCMOD,
             k.tp1nro2 HSUCOR,
             k.tp1nro3 HTRAN,
             k.tp1imp3 ORDINAL,
             k.tp1imp1 HNREL,
             to_Date(trim(tp1desc), 'DD/MM/YYYY') HFCON
        from fst198 k
       where k.tp1cod = 1
         and k.tp1cod1 = 11120
         and k.tp1corr1 = 98
         and k.tp1corr2 = 1
         and k.tp1nro1 > 0
         and k.tp1imp2 = 1;
  
    cursor transacciones(pn_pgcod  in number,
                         pn_hcmod  in number,
                         pn_hsucor in number,
                         pn_htran  in number,
                         pn_hnrel  in number,
                         pd_hfcon  in date) is
    
      select a.PGCOD pgcod,
             a.HCMOD hcmod,
             a.HSUCOR hsucor,
             a.HTRAN htran,
             a.HNREL hnrel,
             a.HFCON hfcon,
             a.HCORD hcord,
             a.HCTA,
             trim(to_char(a.hcimp1, '99999999999999999.99')) txtren
        from fsh016 a
       where a.pgcod = pn_pgcod
         and a.hcmod = pn_hcmod
         and a.hsucor = pn_hsucor
         and a.htran = pn_htran
         and a.hnrel = pn_hnrel
         and a.hfcon = pd_hfcon
            --and a.hrubro like '52%'; -- 2023.06.24
--         and (a.hrubro like '52%_2' or a.hrubro like '56%_2'); -- 2023.06.24
        -- and (a.hrubro like '52%_3' or a.hrubro like '52%_2' or a.hrubro like '56%_2' or a.hrubro like '56_9%'); -- 2023.09.20 ahorraton
         and (a.hrubro like '52_229%'  or a.HRUBRO like '56_2%' or a.HRUBRO like '56_9%'); -- 2023.10.25 actualizar rubros
  
    ln_ordinal number;
    ln_con1    number;
    ln_con2    number;
    ln_con3    number;
  
    lc_tipotrx varchar2(10);
  
    ln_nrocta number;
    lc_descta varchar2(50);
  
    lc_excluirdoc varchar2(1);
    ld_fecpro     date;
    pn_hfcon      date;
  
  begin
  
    lc_tipotrx := 'MOV'; --por defecto se inicializa en MOV -- 2018.10.16    
    for x in movimientos loop
      pn_hfcon := x.hfcon;
      for p in transacciones(x.pgcod,
                             x.hcmod,
                             x.hsucor,
                             x.htran,
                             x.hnrel,
                             x.hfcon) loop
        --Verifica que no exista en cabecera AQPA465 
        /* Begin
          select 'S'
            into lc_flg465
            from aqpa465 a
           where a.aqpa465pgcod = p.pgcod
             and a.aqpa465mod = p.hcmod
             and a.aqpa465sucor = p.hsucor
             and a.aqpa465tran = p.htran
             and a.aqpa465rel = p.hnrel
             and a.aqpa465con = p.hfcon
             and rownum = 1;
        exception
          when others then
            lc_flg465 := 'N';
        end;*/
        lc_flg465 := 'N';
      
        --obtener la cuenta de acuerdo a concepto
        ln_cta := p.hcta;
      
        if lc_flg465 = 'N' then
          --
          lc_tipotrx := 'MOV';
        
          begin
            pq_cr_factura_electronica.sp_cr_pk_credito(pc_aqpa465pgcod    => p.pgcod,
                                                       pc_aqpa465mod      => p.hcmod,
                                                       pc_aqpa465sucorend => p.hsucor,
                                                       pc_aqpa465tran     => p.htran,
                                                       pc_aqpa465rel      => p.hnrel,
                                                       pc_aqpa465ord      => p.hcord, --pn_ordinal,
                                                       pd_aqpa465con      => p.hfcon,
                                                       pn_cod             => ln_emp,
                                                       pn_mod             => ln_mod,
                                                       pn_suc             => ln_suc,
                                                       pn_mda             => ln_mda,
                                                       pn_pap             => ln_pap,
                                                       pn_cta             => ln_cta,
                                                       pn_ope             => ln_ope,
                                                       pn_sbo             => ln_sbo,
                                                       pn_top             => ln_top,
                                                       pc_flag            => lc_flg,
                                                       pn_rubro           => ln_rubro);
          end;
        
          begin
            pq_cr_factura_electronica.sp_pa_cuenta(p_n_pgcod  => p.pgcod,
                                                   p_n_itsuc  => p.hsucor,
                                                   p_n_itmod  => p.hcmod,
                                                   p_n_ittran => p.htran,
                                                   p_n_itnrel => p.hnrel,
                                                   p_n_itord  => p.hcord, --ln_ordinal, --p.ordinal,
                                                   p_d_itfcon => p.hfcon,
                                                   p_n_cuenta => ln_cta,
                                                   p_n_moneda => ln_mda);
          
          end;
        
          if ln_cta = 0 then
            ln_ordinal := x.ordinal;
            begin
              select hcta
                into ln_cta
                from fsh016 f
               where f.pgcod = p.pgcod
                 and f.hsucor = p.hsucor
                 and f.hcmod = p.hcmod
                 and f.htran = p.htran
                 and f.hnrel = p.hnrel
                 and f.hfcon = p.hfcon
                 and f.hcord = ln_ordinal;
            exception
              when others then
                ln_cta := 0;
            end;
          
          end if;
        
          ln_rubro := 15;
        
          if ln_cta = 0 then
            --
            ln_cta := p.hcta;
          end if;
        
          lc_flg := 'S'; -- 2021/10/20 se agrego
        
          if lc_flg = 'S' then
          
            if ln_relant <> p.hnrel or p.hcmod <> ln_modulo or
               p.htran <> ln_tran or p.hsucor <> ln_sucur then
            
              if ln_cta = 999999999 or ln_cta = 0 --se agregó condición 24/12/2018
               then
                pn_pais   := null;
                pn_petdoc := null;
                pn_pendoc := null; --20211023
              
              else
              
                begin
                  ---se obtiene NDI/ TIPO de doc                  
                  select a.pepais, a.petdoc, a.pendoc
                    into pn_pais, pn_petdoc, pn_pendoc
                    from fsr008 a
                   where a.ctnro = ln_cta ---
                     and a.cttfir = 'T';
                exception
                  when others then
                    pn_pais   := null;
                    pn_petdoc := null;
                    pn_pendoc := null;
                end;
              
                begin
                  pq_cr_facturacion.sp_cr_tipo_cliente(pn_pais   => pn_pais,
                                                       pn_tipdoc => pn_petdoc,
                                                       pc_numdoc => pn_pendoc,
                                                       pc_tipper => lc_tipper);
                end;
              end if; --fin valida cuenta cliente
            
              if ln_cta <> 0 then
                --- se agregó 2021/10/20 dcastro
              
                begin
                  pq_cr_facturacion.sp_cr_factura(pn_rubro       => ln_rubro,
                                                  pc_tipcli      => lc_tipper,
                                                  pc_tipo        => lc_tipotrx,
                                                  pc_serie       => lc_serie,
                                                  pc_correlativo => lc_corre);
                
                exception
                  when others then
                    null; ---
                end;
                ---fin 20211111 dcastro
              
              end if; --- se agregó 2021/10/20 dcastro
            
            end if;
          
          end if; ----relacion
        
          ln_relant := p.hnrel;
          ln_modulo := p.hcmod;
          ln_tran   := p.htran;
          ln_sucur  := p.hsucor;
        
          if lc_tipotrx = 'MOV' then
            --inicio insercion
          
            begin
              lc_error := 'N';
              insert into aqpa463
                (aqpa463txtrub,
                 aqpa463pgcod,
                 aqpa463hcmod,
                 aqpa463hsucor,
                 aqpa463htran,
                 aqpa463hnrel,
                 aqpa463hfcon,
                 aqpa463hcord,
                 aqpa463txoren,
                 aqpa463txtord,
                 aqpa463hcpcod,
                 aqpa463hvnro,
                 aqpa463hvchr,
                 aqpa463serie,
                 aqpa463corre,
                 aqpa463emp,
                 aqpa463mod,
                 aqpa463suc,
                 aqpa463mda,
                 aqpa463pap,
                 aqpa463cta,
                 aqpa463ope,
                 aqpa463sbo,
                 aqpa463top,
                 aqpa463hip
                 
                 )
              values
                (null, --p.txtrub,
                 p.pgcod,
                 p.hcmod,
                 p.hsucor,
                 p.htran,
                 p.hnrel,
                 p.hfcon,
                 p.hcord,
                 p.hcord, ---1,--p.txtren,--p.txoren,
                 p.txtren, --p.txtord,
                 p.hcord,
                 null, --p.se170hvnro,
                 'Cobro en efectivo', --p.se170hvchr,
                 lc_serie,
                 lc_corre,
                 ln_emp,
                 ln_mod,
                 ln_suc,
                 ln_mda,
                 ln_pap,
                 ln_cta,
                 ln_ope,
                 ln_sbo,
                 ln_top,
                 lc_hipo);
              commit;
            exception
              when others then
                lc_coderr := sqlcode;
                lc_msgerr := trim(sqlerrm);
                lc_error  := 'S';
              
                insert into aqpa460E
                  (aqpa460eserie,
                   aqpa460ecorr,
                   aqpa460epgcod,
                   aqpa460emod,
                   aqpa460esucorend,
                   aqpa460etran,
                   aqpa460erel,
                   aqpa460econ,
                   aqpa460etip,
                   Aqpa460eacoe,
                   Aqpa460eamsge)
                values
                  (lc_serie,
                   lc_corre,
                   p.pgcod,
                   p.hcmod,
                   p.hsucor,
                   p.htran,
                   p.hnrel,
                   p.hfcon,
                   'S',
                   lc_coderr,
                   lc_msgerr);
                commit;
              
            end;
          
          end if;
        
        end if;
      
        -- end if;
        ln_ordinal := p.hcord;
      
      end loop;
    
      if lc_tipotrx = 'MOV' then
        if ln_cta <> 999999999 or ln_cta <> 0 then
          --- se agregó 2021/10/20 dcastro
        
          begin
            pq_cr_factura_electronica.sp_cr_Detalle_Fact_CO1(pn_hfcon,
                                                             lc_serie,
                                                             lc_corre,
                                                             ln_ordinal); --pn_concepto
          end;
        
          begin
            update aqpa460 a
               set a.aqpa460femi = trunc(sysdate),
                   a.aqpa460desc = 'Comision-Servicios 1'
             where a.aqpa460seri = lc_serie
               and a.aqpa460num = lc_corre;
          end;
        
          begin
            pq_cr_factura_electronica.sp_cr_total_comision1(pc_serie       => lc_serie,
                                                            pn_correlativo => lc_corre,
                                                            pd_hfcon       => pn_hfcon); --- 20221029 se agrego fecha
          exception
            when others then
              null;
          end;
        
          begin
            pq_cr_factura_electronica.sp_cr_cabecera_trx(pd_pgfape      => pn_hfcon,
                                                         pc_serie       => lc_serie,
                                                         pn_correlativo => lc_corre,
                                                         pn_concepto    => ln_ordinal /*pn_concepto*/);
          exception
            when others then
              null;
          end;
        end if;
      end if;
    
    END LOOP;
  
  END sp_cr_Comision_IND;
  ---------------------------------------
  procedure sp_cr_NotaCred_IND is
  
    pn_hcmod        number;
    pn_hsucor       number;
    pn_htran        number;
    pn_hnrel        number;
    pd_hfcon        date;
    pn_NRO_RELACION number;
    pd_FECHA_TX     date;
    pn_hcmod2       number;
    pn_hcmod3       number;
    pn_hsucor3      number;
    pn_htran3       number;
    pn_hnrel3       number;
    pn_hfcon3       date;
    lc_serie        char(4);
    lc_correlativo  char(8);
  
    pn_pgcod number;
    --Flag char(1):='N';
  
    lc_flg466  char(1) := 'N'; --controla que no exista en la aqpa466
    lc_flag466 char(1) := 'N';
  
    ln_rubro  number;
    lc_tipper char(1);
  
    lv_tipodocu     char(1);
    lc_comision     char(1);
    ln_guiaCP       number;
    lv_codtipo      char(2);
    lc_coderr       varchar2(1000);
    lc_msgerr       varchar2(1000);
    ln_cont         number;
    lc_serieI       char(4);
    lc_correlativoI char(8);
    lv_codrpt       number;
    lv_tipocre      varchar2(2);
    ln_flag         number;
  
    lc_tipo_doc char(1);
    lv_tipo_doc char(2);
    lv_doc_ori  char(2);
  
    --ln_rubro number;
    --pd_rubro        number;
    lc_flr    char(1);
    lc_ftran  number;
    lc_fcont  char(1);
    lc_tipfin char(1);
  
    lc_trxe char(1);
    lc_esta char(1);
  
    cursor fsx015 is
    
    /* select /* +all_rows --distinct a.aqpa460pgc pgcod,
                      a.aqpa460mod        hcmod,
                      a.aqpa460suc        hsucor,
                      a.aqpa460trx        htran,
                      a.aqpa460rel        hnrel,
                      a.aqpa460femi       hfcon,
                      a.aqpa460seri, 
                      a.aqpa460num,
                      'E' Indicador
                from aqpa460 a
                 where  a.aqpa460femi >= pd_fecini
                    and a.aqpa460femi <= pd_fecfin
                    and a.aqpa460seri in ('FS01', 'BS01')
                    and    ( a.aqpa460mod, a.aqpa460trx )
                        in  
                         (select k.tp1nro1, k.tp1nro2
                                    from fst198 k
                                   where 
                                    k.tp1cod = 1
                                   and k.tp1cod1 = 11120
                                   and k.tp1corr1 = 40
                                   and k.tp1corr2 > 0)
                     and a.aqpa460nruc like trim(pc_numdoc)||'%' 
                  order by a.aqpa460seri, a.aqpa460num   ;
        */
      select k.tp1cod PGCOD,
             k.tp1nro1 HCMOD,
             k.tp1nro2 HSUCOR,
             k.tp1nro3 HTRAN,
             k.tp1imp3 ORDINAL,
             k.tp1imp1 HNREL,
             to_Date(trim(k.tp1desc), 'DD/MM/YYYY') HFCON,
             'E' Indicador
        from fst198 k
       where k.tp1cod = 1
         and k.tp1cod1 = 11120
         and k.tp1corr1 = 97
         and k.tp1corr2 = 1
         and k.tp1nro1 > 0
         and k.tp1imp2 = 1;
  
    cursor base(pn_pgcod        in number,
                pn_hcmod3       in number,
                pn_hsucor3      in number,
                pn_htran3       in number,
                pn_hnrel3       in number,
                pn_hfcon3       in date,
                lc_serieI       in char,
                lc_correlativoI in number) is
    
      select aqpa463txtrub,
             aqpa463pgcod,
             aqpa463hcmod,
             aqpa463hsucor,
             aqpa463htran,
             aqpa463hnrel,
             aqpa463hfcon,
             aqpa463hcpcod,
             aqpa463hvnro,
             trim(aqpa463hvchr) aqpa463hvchr,
             aqpa463hvnro aqpa463emp,
             aqpa463mod,
             aqpa463suc,
             aqpa463mda,
             aqpa463pap,
             aqpa463cta,
             aqpa463ope,
             aqpa463sbo,
             aqpa463top,
             aqpa463hip,
             trim(aqpa463txtord) aqpa463txtord,
             aqpa463txoren
        from aqpa463 a
       where a.aqpa463pgcod = pn_pgcod
         and a.aqpa463hcmod = pn_hcmod3
         and a.aqpa463hsucor = pn_hsucor3
         and a.aqpa463htran = pn_htran3
         and a.aqpa463hnrel = pn_hnrel3
         and a.aqpa463hfcon = pn_hfcon3
         and a.aqpa463serie = lc_serieI
         and a.aqpa463corre = lc_correlativoI;
  
  begin
  
    --25012019 dcastro
    begin
      select c.tp1nro1
        into ln_flag
        from fst198 c
       where c.tp1cod = 1
         and c.tp1cod1 = 11120
         and c.tp1corr1 = 7
         and c.tp1corr2 = 1;
    exception
      when others then
        null;
    end;
    --25012019
  
    for p in fsx015 loop
      --Verifica que no exista en cabecera AQPA466
      /*Begin
        select 'S'
          into lc_flg466
          from aqpa466 a
         where a.aqpa466pgcod = p.pgcod
           and a.aqpa466mod = p.hcmod
           and a.aqpa466sucor = p.hsucor
           and a.aqpa466tran = p.htran
           and a.aqpa466rel = p.hnrel
           and a.aqpa466con = p.hfcon
           and rownum = 1;
      exception
        when others then
          lc_flg466 := 'N';
      end;*/
      --Clave del documento a la cual se aplica: factura y boleta
    
      lc_flg466 := 'N';
    
      pn_pgcod  := p.pgcod;
      pn_hcmod  := p.hcmod;
      pn_hsucor := p.hsucor;
      pn_htran  := p.htran;
      pn_hnrel  := p.hnrel;
      pd_hfcon  := p.hfcon;
    
      if lc_flg466 = 'N' then
      
        if p.indicador = 'E' then
          --Por extorno 
        
          begin
            select f.txtext as NRO_RELACION
              into pn_NRO_RELACION
              from fsx015 f
             where f.hfcon = pd_hfcon --pd_pgfape --to_date('20092017', 'ddmmyyyy')----cambiar fecha de proceso
               and f.hcmod = pn_hcmod --530
               and f.htran = pn_htran --100
               and f.hnrel = pn_hnrel --2
               and f.hsucor = pn_hsucor --mod@abr 20180707
               and f.txcod = 0
               and f.txreng = 1;
          exception
            --mod@abr 20180707
            when too_many_rows then
              begin
                select f.txtext as NRO_RELACION
                  into pn_NRO_RELACION
                  from fsx015 f
                 where f.hfcon = pd_hfcon --to_date('20092017', 'ddmmyyyy')----cambiar fecha de proceso
                   and f.hcmod = pn_hcmod --530
                   and f.htran = pn_htran --100
                   and f.hnrel = pn_hnrel --2
                   and f.hsucor = pn_hsucor
                   and f.txcod = 0
                   and f.txreng = 1
                   and rownum = 1 --mod@abr 20180707
                ;
              exception
                when others then
                  pn_NRO_RELACION := null;
              end;
            when others then
              pn_NRO_RELACION := null;
            
          end;
        
          if pn_NRO_RELACION is not null then
          
            begin
              select to_date(f.txtext, 'DD/MM/RR') as FECHA_TX
                into pd_FECHA_TX
                from fsx015 f
               where f.hfcon = pd_hfcon --to_date('20092017', 'ddmmyyyy')
                 and f.hcmod = pn_hcmod -- 530
                 and f.htran = pn_htran --100
                 and f.hnrel = pn_hnrel --2
                 and f.hsucor = pn_hsucor --mod@abr 20180707
                 and f.txcod = 0
                 and f.txreng = 2;
            exception
              when others then
                pd_FECHA_TX := null;
            end;
          
            pn_hcmod2 := pn_hcmod - 500;
          
            -- 4. obtener transaccion original
            -- 4.1 Verificar si la transacción tiene una excepcion
            begin
              select 'S'
                into lc_trxe
                from fst198 t
               where t.tp1cod = 1
                 and t.tp1cod1 = 11120
                 and t.tp1corr1 = 10
                 and t.tp1corr2 = 1
                 and t.tp1corr3 <> 0
                 and t.tp1nro1 = pn_hcmod2 --- mod
                 and t.tp1nro2 = pn_htran -- trax
                 and t.tp1imp3 = 1; --<<=== Se valida en el IMP3
            exception
              when others then
                lc_trxe := 'N';
            end;
          
            if lc_trxe = 'N' then
            
              begin
                --obtener transaccion original
                select a.pgcod,
                       a.hcmod,
                       a.hsucor,
                       a.htran,
                       a.hnrel,
                       a.hfcon
                  into pn_pgcod,
                       pn_hcmod3,
                       pn_hsucor3,
                       pn_htran3,
                       pn_hnrel3,
                       pn_hfcon3 --clave de transaccion
                  from fsx016 a
                 where a.hcmod = pn_hcmod2 --30
                   and a.htran = pn_htran --100
                   and a.hfcon = pd_FECHA_TX --to_date('20092017', 'ddmmyyyy')
                   and a.hnrel = pn_NRO_RELACION --164
                   and a.hsucor = pn_hsucor --mod@abr 20180707
                   and rownum = 1;
              exception
                when others then
                  pn_pgcod   := null;
                  pn_hcmod3  := null;
                  pn_hsucor3 := null;
                  pn_htran3  := null;
                  pn_hnrel3  := null;
                  pn_hfcon3  := null;
                
              end;
            
            else
            
              pn_pgcod   := p.pgcod;
              pn_hcmod3  := pn_hcmod2;
              pn_hsucor3 := pn_hsucor;
              pn_htran3  := pn_htran;
              pn_hnrel3  := pn_NRO_RELACION;
              pn_hfcon3  := pd_FECHA_TX;
            
            end if;
          
          end if;
        
        elsif p.indicador = 'C' then
          --Por comision
        
          begin
            pq_op_transacciones.sp_op_retorna_origen(ppgcod   => pn_pgcod,
                                                     pitsuc   => pn_hsucor,
                                                     pitmod   => pn_hcmod,
                                                     pittran  => pn_htran,
                                                     pitnrel  => pn_hnrel,
                                                     pitfcon  => pd_hfcon,
                                                     itsuc_o  => pn_hsucor3,
                                                     itmod_o  => pn_hcmod3,
                                                     ittran_o => pn_htran3,
                                                     itnrel_o => pn_hnrel3,
                                                     itfcon_o => pn_hfcon3,
                                                     codrpt   => lv_codrpt);
          end;
        
        end if;
      
        begin
          select distinct a.aqpa460seri, a.aqpa460num
            into lc_serieI, lc_correlativoI
            from aqpa460 a
           where a.aqpa460pgc = pn_pgcod
             and a.aqpa460mod = pn_hcmod3
             and a.aqpa460suc = pn_hsucor3
             and a.aqpa460trx = pn_htran3
             and a.aqpa460rel = pn_hnrel3
             and a.aqpa460femi = pn_hfcon3;
        exception
          when others then
            lc_serieI       := null;
            lc_correlativoI := null;
        end;
      
        lv_tipodocu := substr(lc_serieI, 1, 1);
        lv_tipocre  := substr(lc_serieI, 2, 1);
      
        if lv_tipodocu is not null then
        
          --determinar tipo del documento origen
          --dbms_output.put_line('================');
          --dbms_output.put_line('pn_hcmod3 ' || pn_hcmod3);
          --dbms_output.put_line('pn_hsucor3 ' || pn_hsucor3);
          --dbms_output.put_line('pn_htran3 ' || pn_htran3);
          --dbms_output.put_line('pn_hnrel3 ' || pn_hnrel3);
          --dbms_output.put_line('pn_hfcon3 ' || pn_hfcon3);                                        
        
          begin
            select distinct t.aqpa460tcomf
              into lv_doc_ori
              from aqpa460 t
             where t.aqpa460pgc = pn_pgcod
               and t.aqpa460mod = pn_hcmod3
               and t.aqpa460suc = pn_hsucor3
               and t.aqpa460trx = pn_htran3
               and t.aqpa460rel = pn_hnrel3
               and t.aqpa460femi = pn_hfcon3
               and t.aqpa460tcomf in ('01', '03', '13');
          exception
            when others then
              --2022.04.26 dcastro
              lv_doc_ori := null;
            
          end;
        
          if lv_doc_ori in ('01', '03') then
          
            --determinar tipo de cliente
            if lv_tipodocu = 'F' then
              lc_tipper := 'J';
              ln_guiaCP := 1;
            else
              lc_tipper := 'N';
              ln_guiaCP := 3;
            end if;
          
            begin
              select
              --'0' || to_char(a.tp1nro1)
               lpad(trim(a.tp1nro1), 2, '0')
                into lv_codtipo
                from fst198 a
               where a.tp1cod = 1
                 and a.tp1cod1 = 11120
                 and a.tp1corr1 = 1
                 and a.tp1corr2 = 7
                 and a.tp1corr3 = ln_guiaCP; --2018.10.10 se modifico codigo de guia para tipo comprobante
            exception
              when others then
                null;
            end;
          
          else
            lv_codtipo := '13';
          end if;
        
          -- Determinar rubro
          -- 5. Obtener rubro
          begin
            -- Como el proceso siempre será ejecutado al menos un día después, 
            -- se busca en históricos
          
            select to_number(substr(m.hrubro, 5, 2))
              into ln_rubro
              from fsh016 m, fsr171 aa
             where aa.st171cpcod = 15
               and aa.sr171tremp = 1 --1
               and aa.sr171trmod = m.hcmod --30
               and aa.sr171trnro = m.htran
               and m.PGCOD = pn_pgcod
               and m.hsucor = pn_hsucor3
               and m.hcmod = pn_hcmod3
               and m.htran = pn_htran3
               and m.hnrel = pn_hnrel3
               and m.hfcon = pn_hfcon3
               and m.hcord = aa.sr171trord
               and rownum = 1;
          exception
            when others then
              --ln_rubro := null;
              begin
              
                select distinct x.aqpa463tcre
                  into ln_rubro
                  from aqpa463 x
                 where x.aqpa463pgcod = pn_pgcod
                   and x.aqpa463hcmod = pn_hcmod3
                   and x.aqpa463hsucor = pn_hsucor3
                   and x.aqpa463htran = pn_htran3
                   and x.aqpa463hnrel = pn_hnrel3
                   and x.aqpa463hfcon = pn_hfcon3;
              
              exception
                when others then
                  ln_rubro := null;
                
              end;
          end;
        
          --determinar si es comision
          begin
            select 'S'
              into lc_comision
              from fst198 h
             where h.tp1cod = 1
               and h.tp1cod1 = 11120
               and h.tp1corr1 = 3
               and h.tp1corr2 = 1
               and h.tp1nro1 = pn_hcmod3
               and h.tp1nro2 = pn_htran3
               and rownum = 1;
          exception
            when others then
              lc_comision := 'N';
          end;
        
          if lc_comision = 'S' then
            ln_rubro := 1;
          end if;
        
          -- b. Determinar si el rubro es considerado
          begin
            select 'S'
              into lc_flr
              from fst198 t
             where t.tp1cod = 1
               and t.tp1cod1 = 11120
               and t.tp1corr1 = 1
               and t.tp1corr2 = 23
               and t.tp1nro1 <> 0
               and t.tp1nro1 = ln_rubro;
          exception
            when others then
              lc_flr := 'N';
          end;
        
          --if (lv_tipocre in ('H','F') and ln_flag = 0) or ln_flag = 1 then
          if (lc_flr = 'S' and ln_flag = 0) or ln_flag = 1 or
             (lc_flr = 'N' and lc_comision = 'S') ---2022.04.22 dcastro
           then
          
            --Seleccionar tipo de documento    !!3
            -- Guía obtener transacciones GRAVADAS
            begin
              select 'S'
                into lc_tipo_doc
                from fst198 h
               where h.tp1cod = 1
                 and h.tp1cod1 = 11120
                 and h.tp1corr1 = 3
                 and h.tp1corr2 = 1
                 and h.tp1corr3 > 0
                 and h.tp1nro1 = pn_hcmod3
                 and h.tp1nro2 = pn_htran3;
            exception
              when others then
                lc_tipo_doc := 'N';
            end;
          
            ---Si es gravado --> 07  sino ---> 87
            lv_tipo_doc := '87';
          
            if lc_tipo_doc = 'S' then
              lv_tipo_doc := '07';
              lc_tipfin   := 'N';
            else
              ------
            
              begin
              
                -- c. Verificar si el rubro esta activo
                -- (4): hipotecario
                -- (3): consumo
                begin
                  select 'S'
                    into lc_fcont
                    from fst198 t
                   where t.tp1cod = 1
                     and t.tp1cod1 = 11120
                     and t.tp1corr1 = 1
                     and t.tp1corr2 = 23
                     and t.tp1nro1 <> 0
                     and t.tp1nro1 = ln_rubro
                     and t.tp1imp1 = 1;
                exception
                  when others then
                    lc_fcont := 'N';
                end;
              
                if lc_fcont = 'S' then
                
                  --Verificar en AQPB056
                  begin
                    select 'S'
                      into lc_tipfin
                      from aqpb056 a
                     where a.aqpb056pgc = pn_pgcod
                       and a.aqpb056mod = pn_hcmod
                       and a.aqpb056suc = pn_hsucor
                       and a.aqpb056trx = pn_htran
                       and a.aqpb056rel = pn_hnrel
                       and a.aqpb056fco = pd_hfcon
                       and a.aqpb056pge = pn_pgcod
                       and a.aqpb056moe = pn_hcmod3
                       and a.aqpb056sue = pn_hsucor3
                       and a.aqpb056tre = pn_htran3
                       and a.aqpb056ree = pn_hnrel3
                       and a.aqpb056fce = pn_hfcon3
                       and a.aqpb056tco = '87';
                  
                  exception
                    when others then
                      begin
                        select 'S'
                          into lc_tipfin
                          from aqpb056h a
                         where a.aqpb056hpgc = pn_pgcod
                           and a.aqpb056hmod = pn_hcmod
                           and a.aqpb056hsuc = pn_hsucor
                           and a.aqpb056htrx = pn_htran
                           and a.aqpb056hrel = pn_hnrel
                           and a.aqpb056hfcon = pd_hfcon
                           and a.aqpb056hpgce = pn_pgcod
                           and a.aqpb056hmode = pn_hcmod3
                           and a.aqpb056hsuce = pn_hsucor3
                           and a.aqpb056htrxe = pn_htran3
                           and a.aqpb056hrele = pn_hnrel3
                           and a.aqpb056hfcone = pn_hfcon3
                           and a.aqpb056htcomf = '87';
                      exception
                        when others then
                          lc_tipfin := 'N';
                      end;
                    
                  end;
                
                  --Verificar si la transacción sigue activa
                  begin
                    select count(*)
                      into lc_ftran
                      from fst198 t
                     where t.tp1cod = 1
                       and t.tp1cod1 = 11120
                       and t.tp1corr1 = 10
                       and t.tp1corr2 = 1
                       and t.tp1corr3 <> 0
                       and t.tp1imp1 = 1
                       and t.tp1nro1 = pn_hcmod3
                       and t.tp1nro2 = pn_htran3;
                  exception
                    when others then
                      null;
                  end;
                
                  if (lc_tipfin = 'S' and lc_ftran > 0) then
                  
                    begin
                      --select to_char(a.aqpb056seri), a.aqpb056num
                      select to_char(a.aqpb056ser), a.aqpb056num
                        into lc_serie, lc_correlativo
                        from aqpb056 a
                       where
                      
                       a.aqpb056pgc = pn_pgcod
                       and a.aqpb056mod = pn_hcmod
                       and a.aqpb056suc = pn_hsucor
                       and a.aqpb056trx = pn_htran
                       and a.aqpb056rel = pn_hnrel
                       and a.aqpb056fco = pd_hfcon
                      
                       and a.aqpb056pge = pn_pgcod
                       and a.aqpb056moe = pn_hcmod3
                       and a.aqpb056sue = pn_hsucor3
                       and a.aqpb056tre = pn_htran3
                       and a.aqpb056ree = pn_hnrel3
                       and a.aqpb056fce = pn_hfcon3
                      
                       and a.aqpb056tco = '87';
                    
                    exception
                      when others then
                      
                        select to_char(a.aqpb056hseri), a.aqpb056hnum
                          into lc_serie, lc_correlativo
                          from aqpb056h a
                         where
                        
                         a.aqpb056hpgc = pn_pgcod
                         and a.aqpb056hmod = pn_hcmod
                         and a.aqpb056hsuc = pn_hsucor
                         and a.aqpb056htrx = pn_htran
                         and a.aqpb056hrel = pn_hnrel
                         and a.aqpb056hfcon = pd_hfcon
                        
                         and a.aqpb056hpgce = pn_pgcod
                         and a.aqpb056hmode = pn_hcmod3
                         and a.aqpb056hsuce = pn_hsucor3
                         and a.aqpb056htrxe = pn_htran3
                         and a.aqpb056hrele = pn_hnrel3
                         and a.aqpb056hfcone = pn_hfcon3
                        
                         and a.aqpb056htcomf = '87';
                      
                    end;
                  
                  end if;
                
                end if;
              
              end;
              ------
            
            end if;
          
            if (lv_tipo_doc = '87' and lc_tipfin = 'S') or
               (lv_tipo_doc = '07' and lc_tipfin = 'N') then
            
              begin
              
                begin
                  pq_cr_facturacion.sp_cr_factura(pn_rubro       => ln_rubro,
                                                  pc_tipcli      => lc_tipper,
                                                  pc_tipo        => 'NC',
                                                  pc_serie       => lc_serie,
                                                  pc_correlativo => lc_correlativo);
                end;
              
                insert into AQPA460
                  (aqpa460tdoc,
                   aqpa460rucc,
                   aqpa460rsoc,
                   aqpa460cdis,
                   aqpa460ncom,
                   aqpa460calle,
                   aqpa460urba,
                   aqpa460depa,
                   aqpa460prov,
                   aqpa460dist,
                   aqpa460telf,
                   aqpa460web,
                   aqpa460cpais,
                   aqpa460cesun,
                   aqpa460seri,
                   aqpa460num,
                   aqpa460femi,
                   aqpa460tcomf,
                   aqpa460mone,
                   aqpa460corrr,
                   aqpa460mglo,
                   aqpa460coma,
                   aqpa460tpla,
                   aqpa460tope,
                   aqpa460tplco,
                   aqpa460clog,
                   aqpa460tdocr,
                   aqpa460nruc,
                   aqpa460rasoc,
                   aqpa460impt,
                   aqpa460hemi,
                   aqpa460simc,
                   aqpa460svitm,
                   aqpa460spvi,
                   aqpa460txml,
                   aqpa460sdref,
                   aqpa460ndref,
                   aqpa460cmem,
                   aqpa460sust,
                   aqpa460serie,
                   aqpa460nro,
                   aqpa460tcomp,
                   aqpa460fdref,
                   aqpa460cdist,
                   aqpa460call,
                   aqpa460urb,
                   aqpa460dep,
                   aqpa460prv,
                   aqpa460dst,
                   aqpa460cpai,
                   aqpa460item,
                   aqpa460pnetu,
                   aqpa460cantf,
                   aqpa460total,
                   aqpa460dete,
                   aqpa460ctpr,
                   aqpa460vvun,
                   aqpa460vvuig,
                   aqpa460desc,
                   aqpa460mfun,
                   aqpa460prvit,
                   aqpa460medem,
                   aqpa460csuna,
                   aqpa460cpgs1,
                   aqpa460ititm,
                   aqpa460imptb,
                   aqpa460impex,
                   aqpa460afigv,
                   aqpa460sisc,
                   aqpa460codtb,
                   aqpa460dstrb,
                   aqpa460codun,
                   aqpa460mbim,
                   aqpa460taimp,
                   aqpa460cdley,
                   aqpa460teley,
                   aqpa460text1,
                   aqpa460text2,
                   aqpa460trecv,
                   aqpa460templ,
                   aqpa460subje,
                   aqpa460vpcva,
                   aqpa460nexp,
                   aqpa460cind,
                   aqpa460npart,
                   aqpa460ncont,
                   aqpa460fotrc,
                   aqpa460cdisn,
                   aqpa460direh,
                   aqpa460urbh,
                   aqpa460prvh,
                   aqpa460dsth,
                   aqpa460depth,
                   aqpa460mtotal,
                   aqpa460baimp,
                   aqpa460mtimp,
                   aqpa460pcima,
                   aqpa460bsimp,
                   aqpa460vaimp,
                   aqpa460mtinf,
                   aqpa460mtgrt,
                   aqpa460bsimps,
                   aqpa460mtoti,
                   aqpa460pgc,
                   aqpa460mod,
                   aqpa460suc,
                   aqpa460trx,
                   aqpa460rel,
                   aqpa460ore,
                   aqpa460pgce,
                   aqpa460mode,
                   aqpa460suce,
                   aqpa460trxe,
                   aqpa460rele,
                   aqpa460fcone,
                   aqpa460glos,
                   aqpa460tipag,
                   aqpa460text3,
                   aqpa460text4,
                   aqpa460conce,
                   AQPA460DOCU --2023.07.18 dcastro 
                   )
                  select aqpa460tdoc, --aqpa460tdoc,
                         aqpa460rucc, --aqpa460rucc,
                         aqpa460rsoc, --aqpa460rsoc,
                         aqpa460cdis, --aqpa460cdis,
                         aqpa460ncom, --aqpa460ncom,
                         aqpa460calle, --aqpa460calle,
                         aqpa460urba, --aqpa460urba,
                         aqpa460depa, --aqpa460depa,
                         aqpa460prov, --aqpa460prov,
                         aqpa460dist, --aqpa460dist,
                         aqpa460telf, --aqpa460telf,
                         aqpa460web, --aqpa460web,
                         aqpa460cpais, --aqpa460cpais,
                         aqpa460cesun, --aqpa460cesun,
                         lc_serie, --aqpa460seri,
                         lc_correlativo, --aqpa460num,
                         --aqpa460femi, --aqpa460femi,
                         pd_hfcon, --aqpa460femi,
                         --'07',
                         lv_tipo_doc, --aqpa460tcomf,
                         aqpa460mone, --aqpa460mone,
                         aqpa460corrr, --aqpa460corrr,
                         aqpa460mglo, --aqpa460mglo,
                         aqpa460coma, --aqpa460coma,
                         aqpa460tpla, --aqpa460tpla,
                         aqpa460tope, --aqpa460tope,
                         aqpa460tplco, --aqpa460tplco,
                         aqpa460clog, --aqpa460clog,
                         aqpa460tdocr, --aqpa460tdocr,
                         aqpa460nruc, --aqpa460nruc,
                         aqpa460rasoc, --aqpa460rasoc,
                         aqpa460impt, --aqpa460impt,
                         aqpa460hemi, --aqpa460hemi,
                         aqpa460simc, --aqpa460simc,
                         aqpa460svitm, --aqpa460svitm,
                         aqpa460spvi, --aqpa460spvi,
                         aqpa460txml, --aqpa460txml,
                         aqpa460seri, --aqpa460sdref,
                         aqpa460num, --aqpa460ndref,
                         lv_doc_ori, --'01', --aqpa460cmem,
                         'Extorno de la operacion', --aqpa460sust,
                         aqpa460seri, --aqpa460serie,
                         aqpa460num, --aqpa460nro,
                         lv_codtipo, --aqpa460tcomp,
                         --pd_hfcon,    --aqpa460fdref,
                         aqpa460femi, --aqpa460fdref,
                         aqpa460cdist, --aqpa460cdist,
                         aqpa460call, --aqpa460call,
                         aqpa460urb, --aqpa460urb,
                         aqpa460dep, --aqpa460dep,
                         aqpa460prv, --aqpa460prv,
                         aqpa460dst, --aqpa460dst,
                         aqpa460cpai, --aqpa460cpai,
                         aqpa460item, --aqpa460item,
                         aqpa460pnetu, --aqpa460pnetu,
                         aqpa460cantf, --aqpa460cantf,
                         aqpa460total, --aqpa460total,
                         aqpa460dete, --aqpa460dete,
                         aqpa460ctpr, --aqpa460ctpr,
                         aqpa460vvun, --aqpa460vvun,
                         aqpa460vvuig, --aqpa460vvuig,
                         aqpa460desc, --aqpa460desc,
                         aqpa460mfun, --aqpa460mfun,
                         aqpa460prvit, --aqpa460prvit,
                         aqpa460medem, --aqpa460medem,
                         aqpa460csuna, --aqpa460csuna,
                         aqpa460cpgs1, --aqpa460cpgs1,
                         aqpa460ititm, --aqpa460ititm,
                         aqpa460imptb, --aqpa460imptb,
                         aqpa460impex, --aqpa460impex,
                         aqpa460afigv, --aqpa460afigv,
                         aqpa460sisc, --aqpa460sisc,
                         aqpa460codtb, --aqpa460codtb,
                         aqpa460dstrb, --aqpa460dstrb,
                         aqpa460codun, --aqpa460codun,
                         aqpa460mbim, --aqpa460mbim,
                         aqpa460taimp, --aqpa460taimp,
                         aqpa460cdley, --aqpa460cdley,
                         aqpa460teley, --aqpa460teley,
                         aqpa460text1, --aqpa460text1,
                         aqpa460text2, --aqpa460text2,
                         aqpa460trecv, --aqpa460trecv,
                         aqpa460templ, --aqpa460templ,
                         aqpa460subje, --aqpa460subje,
                         aqpa460vpcva, --aqpa460vpcva,
                         aqpa460nexp, --aqpa460nexp,
                         aqpa460cind, --aqpa460cind,
                         aqpa460npart, --aqpa460npart,
                         aqpa460ncont, --aqpa460ncont,
                         aqpa460fotrc, --aqpa460fotrc,
                         aqpa460cdisn, --aqpa460cdisn,
                         aqpa460direh, --aqpa460direh,
                         aqpa460urbh, --aqpa460urbh,
                         aqpa460prvh, --aqpa460prvh,
                         aqpa460dsth, --aqpa460dsth,
                         aqpa460depth, --aqpa460depth,
                         aqpa460mtotal, --aqpa460mtotal,
                         aqpa460baimp, --aqpa460baimp,
                         aqpa460mtimp, --aqpa460mtimp,
                         aqpa460pcima, --aqpa460pcima,
                         aqpa460bsimp, --aqpa460bsimp,
                         aqpa460vaimp, --aqpa460vaimp,
                         aqpa460mtinf, --aqpa460mtinf,
                         aqpa460mtgrt, --aqpa460mtgrt,
                         aqpa460bsimps, --aqpa460bsimps,
                         aqpa460mtoti, --aqpa460mtoti,
                         aqpa460pgc, --aqpa460pgc,
                         aqpa460mod, --aqpa460mod,
                         aqpa460suc, --aqpa460suc,
                         aqpa460trx, --aqpa460trx,
                         aqpa460rel, --aqpa460rel,
                         aqpa460ore, --aqpa460ore,
                         pn_pgcod, --aqpa460pgce,
                         pn_hcmod, --aqpa460mode,
                         pn_hsucor, --aqpa460suce,
                         pn_htran, --aqpa460trxe,
                         pn_hnrel, --aqpa460rele,
                         --pd_hfcon,--aqpa460fcone,
                         aqpa460femi, --aqpa460fcone,
                         aqpa460glos, --aqpa460glos,
                         aqpa460tipag, --aqpa460tipag,
                         aqpa460text3, --aqpa460text3,
                         aqpa460text4, --aqpa460text4,
                         aqpa460conce, --aqpa460conce
                         AQPA460DOCU --2023.07.18 dcastro 
                    from aqpa460 a
                   where a.aqpa460pgc = pn_pgcod
                     and a.aqpa460mod = pn_hcmod3
                     and a.aqpa460suc = pn_hsucor3
                     and a.aqpa460trx = pn_htran3
                     and a.aqpa460rel = pn_hnrel3
                     and a.aqpa460femi = pn_hfcon3
                     and a.aqpa460seri = lc_serieI
                     and a.aqpa460num = lc_correlativoI;
              
                commit;
              exception
                when others then
                  lc_coderr := sqlcode;
                  lc_msgerr := sqlerrm;
                
              end;
            
              --insertamos en AQPA464
              ln_cont := 1;
              for i in base(pn_pgcod,
                            pn_hcmod3,
                            pn_hsucor3,
                            pn_htran3,
                            pn_hnrel3,
                            pn_hfcon3,
                            lc_serieI,
                            lc_correlativoI) loop
              
                begin
                  insert into aqpa464
                    (aqpa464txtrub,
                     aqpa464pgcod,
                     aqpa464hcmod,
                     aqpa464hsucor,
                     aqpa464htran,
                     aqpa464hnrel,
                     aqpa464hfcon,
                     aqpa464doid,
                     aqpa464cpcod,
                     aqpa464vnro,
                     aqpa464vchr,
                     aqpa464vfch,
                     aqpa464vimp /*, aqpa464vtas*/,
                     aqpa464serie,
                     aqpa464nro,
                     aqpa464emp,
                     aqpa464mod,
                     aqpa464suc,
                     aqpa464mda,
                     aqpa464pap,
                     aqpa464cta,
                     aqpa464ope,
                     aqpa464sbo,
                     aqpa464top,
                     aqpa464hip,
                     aqpa464txtord,
                     aqpa464txoren,
                     aqpa464pgcode,
                     aqpa464hcmode,
                     aqpa464hsucore,
                     aqpa464htrane,
                     aqpa464hnrele,
                     aqpa464hfcone)
                  
                  values
                    (i.aqpa463txtrub,
                     i.aqpa463pgcod,
                     i.aqpa463hcmod,
                     i.aqpa463hsucor,
                     i.aqpa463htran,
                     i.aqpa463hnrel,
                     i.aqpa463hfcon,
                     ln_cont,
                     i.aqpa463hcpcod,
                     i.aqpa463hvnro,
                     i.aqpa463hvchr,
                     pd_hfcon,
                     ln_cont,
                     lc_serie,
                     lc_correlativo,
                     i.aqpa463emp,
                     i.aqpa463mod,
                     i.aqpa463suc,
                     i.aqpa463mda,
                     i.aqpa463pap,
                     i.aqpa463cta,
                     i.aqpa463ope,
                     i.aqpa463sbo,
                     i.aqpa463top,
                     i.aqpa463hip,
                     i.aqpa463txtord,
                     i.aqpa463txoren,
                     pn_pgcod,
                     pn_hcmod,
                     pn_hsucor,
                     pn_htran,
                     pn_hnrel,
                     pd_hfcon);
                
                  commit;
                exception
                  when others then
                    lc_coderr := sqlcode;
                    lc_msgerr := sqlerrm;
                  
                end;
                ln_cont := ln_cont + 1;
              
                ----insertando cabecera
                --si no existe registro insertar
                begin
                  select 'S'
                    into lc_flag466
                    from aqpa466 b
                   where b.aqpa466serie = lc_serie
                     and b.aqpa466corr = lc_correlativo
                     and b.aqpa466pgcod = i.aqpa463pgcod
                     and b.aqpa466mod = i.aqpa463hcmod
                     and b.aqpa466sucor = i.aqpa463hsucor
                     and b.aqpa466tran = i.aqpa463htran
                     and b.aqpa466rel = i.aqpa463hnrel
                     and b.aqpa466con = i.aqpa463hfcon;
                exception
                  when others then
                    lc_flag466 := 'N';
                end;
              
                if nvl(lc_flag466, 'N') = 'N' then
                
                  insert into aqpa466
                    (aqpa466serie,
                     aqpa466corr,
                     aqpa466pgcod,
                     aqpa466mod,
                     aqpa466sucor,
                     aqpa466tran,
                     aqpa466rel,
                     aqpa466con,
                     aqpa466hash)
                  values
                    (lc_serie,
                     lc_correlativo,
                     i.aqpa463pgcod,
                     i.aqpa463hcmod,
                     i.aqpa463hsucor,
                     i.aqpa463htran,
                     i.aqpa463hnrel,
                     i.aqpa463hfcon,
                     null);
                
                  commit;
                end if;
                -- fin cabecera
              ---
              
              end loop;
            
              --insertamos en AQPA466, NO
              lc_esta := null;
              if lv_tipo_doc = '87' then
                lc_esta := 'Z';
              end if;
            
            end if;
          end if; --25012019
        
        end if; ---fin de tipodocu 
      
      end if;
    
    end loop;
  
  end sp_cr_NotaCred_IND;

  procedure sp_cr_Detalle_Fact_CO1(pd_pgfape      in date,
                                   pc_serie       in char,
                                   pn_correlativo in number,
                                   pn_concepto    in number) is
  
    pc_fecha    varchar2(80);
    lv_codtdocC varchar2(1); --05/04/2023 dcastro 
  
    cursor aqpa463 is
    
      select *
        from aqpa463 b
       where b.aqpa463hfcon = pd_pgfape --mod@abr 20180707
         and b.aqpa463serie = pc_serie --comentar despues
         and b.aqpa463corre = pn_correlativo
       order by b.aqpa463hnrel asc, b.aqpa463txoren asc;
  
    lc_coderr char(100);
    lc_msgerr char(1000);
  
    ln_cta           number(9);
    lc_hor           char(8);
    ld_fec           date;
    lc_flg           char(1) := 'N';
    pn_pais          number;
    pn_monto_total_1 number(12, 2) := 0;
    result           character(100);
    pd_pgfape2       date;
    ln_mda           number(4);
    ln_nroitem       number(12) := 0;
    ln_cant          number(12, 10);
    lc_codpla        char(3);
    ln_docemp        number(2);
    pv_tdoc          char(25);
    lc_sistemi       char(6);
  
    lv_destiptrb varchar2(6);
    ln_MONTO     number;
  
    lc_contrato varchar2(50);
    lv_tipemp   varchar2(1);
    lv_ruc      varchar2(11);
    lv_rzn      varchar2(1500);
    lv_ubg      varchar2(6);
    lv_NCOM     varchar2(1500);
    lv_CALLE    varchar2(200);
    --lv_URBA        varchar2(25);
    lv_DEPA  varchar2(100);
    lv_PROV  varchar2(30);
    lv_DIST  varchar2(30);
    lv_TELF  varchar2(20);
    lv_WEB   varchar2(100);
    lv_CPAIS varchar2(2);
    --lv_CESUN       varchar2(4);
    lv_codtipo      varchar2(2);
    lv_tipomda      varchar2(3);
    lv_correo       varchar2(100);
    lv_glosa        varchar2(30);
    lv_COMA         varchar2(20);
    lv_TPLA         varchar2(3);
    lv_tipoope      varchar2(4);
    lv_TPLCO        varchar2(3);
    lv_CLOG         varchar2(3);
    lv_codtdoc      varchar2(1);
    lc_pendoc       char(12);
    lv_pendoc       varchar2(15);
    lv_penom        varchar2(1500);
    lv_hora         varchar2(8);
    ln_SIMC         number(12, 2) := 0;
    ln_SVITM        number(12, 2) := 0;
    ln_SPVI         number(12, 2) := 0;
    lv_TXML         varchar2(3);
    lv_ubgCli       varchar2(6);
    lv_sngc13dir    varchar2(500);
    lv_urb          varchar2(100);
    lv_fst071dsc1   varchar2(500);
    lv_locnom1      varchar2(500);
    lv_depnom1      varchar2(500);
    lv_cpai         varchar2(2);
    lv_PNETU        varchar2(3); ------------
    lc_oneroso      varchar2(1);
    ln_mtoconce     number; --(12,10):= 0;
    ln_mtoconce_ant number; --(12,10):= 0;
    ln_VVUIG        number; --(12):= 0;
    lv_desconce     varchar2(500);
    lv_infpredio    varchar2(500);
    ln_PRVIT        number(15, 2) := 0;
    lv_MEDEM        varchar2(50);
    lv_CSUNA        varchar2(8);
    lv_CPGS1        varchar2(14);
    ln_ITITM        number(12, 2) := 0; ---2018.10.19 
    ln_IMPTB        number(12, 2) := 0;
    ln_IMPEX        number(12, 2) := 0;
    lv_afecigv      varchar2(2);
    lv_SISC         varchar2(2);
    lv_idtrbsunat   varchar2(4);
    lv_nomtrbsunat  varchar2(6);
    lv_codun        varchar2(3);
    ln_MBIM         number(12, 2) := 0;
    ln_TAIMP        number(12, 2) := 0; --2018.10.19
    ln_CDLEY        number(4) := 0;
    lv_TELEY        varchar2(200);
    lv_TEXT1        varchar2(1000);
    lv_TEXT2        varchar2(1000);
    lv_TRECV        varchar2(1000);
    lv_TEMPL        varchar2(3);
    lv_SUBJE        varchar2(100);
    lv_VPCVA        varchar2(15);
    lv_NEXP         varchar2(10);
    lv_CIND         varchar2(1);
    lv_partida      varchar2(50);
    lv_NCONT        varchar2(50);
    lv_fecoto       varchar2(10);
    ld_fecoto       date;
    lv_cdisn        varchar2(6);
    lv_direccionH   varchar2(100);
    lv_urbaH        varchar2(50);
    lv_dptoH        varchar2(50);
    lv_provH        varchar2(50);
    lv_distH        varchar2(500);
    ln_MTOTAL       number(12, 2) := 0;
    ln_BAIMP        number(12, 2) := 0;
    ln_MTIMP        number(12, 2) := 0;
    ln_PCIMA        number(12, 2) := 0;
    ln_BSIMP        number(12, 2) := 0;
    ln_VAIMP        number(12, 2) := 0;
    ln_MTINF        number(12, 2) := 0;
    ln_MTGRT        number(12, 2) := 0;
    ln_BSIMPS       number(12, 2) := 0;
    ln_MTOTI        number(12, 2) := 0;
    ln_petdoc       number(2);
    lv_CTPR         varchar(2);
    lv_rzn1         varchar2(30);
    lv_rzn2         varchar2(30);
    lc_codsunat     varchar2(4);
  
    lc_nomcaja char(70);
    lc_nom1    char(30);
    lc_nom2    char(30);
  
    ln_item number(12);
  
    ln_mtoDifer number(17, 2);
    ln_mtoRedon number(17, 2);
  
    ld_fecSis date; --mod@abr 20180709
  
    lc_existe char(1) := 'N'; --mod@abr 20180824
  
    lv_sngc13dirFin varchar2(500); --mod@abr 20180905
  
    ln_guiaCP number; --2018.10.10
    lv_desmda varchar2(30); --2018.10.18
    lc_indGratuita char(1); -- 2023.10.10 dcastro indicador transferencia gratuita
    lc_NotaDebito  char(1); -- 2023.10.10 dcastro indicador nota debito
    lv_doc_ori char(2); -- 2023.10.10 dcastro indicador nota debito
    /*
    pc_AQPA465SERIE  aqpa460.aqpa460seri%type;
    pc_AQPA465CORR  aqpa460.aqpa460num%type;
    pc_AQPA465PGCOD aqpa460.
    pc_AQPA465MOD   ,
    pc_AQPA465SUCOREND
    pc_AQPA465TRAN    
    pc_AQPA465REL    ,
    pc_AQPA465CON,
    */
  begin
    begin
    
      for p in aqpa463 loop
      
        --mod@abr 20180824
        lc_existe := 'N';
        Begin
          select 'S'
            into lc_existe
            from aqpa460 a
           where a.aqpa460seri = p.aqpa463serie
             and a.aqpa460num = p.aqpa463corre
             and a.aqpa460ore = P.AQPA463TXOREN
             and rownum = 1;
        exception
          when others then
            lc_existe := 'N';
        end;
        --mod@abr 20180824
        if lc_existe = 'N' then
          Pq_Cr_Factura_Electronica.sp_cr_cobroEfectivo1(p.aqpa463pgcod,
                                                         p.aqpa463hcmod,
                                                         p.aqpa463hsucor,
                                                         p.aqpa463htran,
                                                         p.aqpa463hnrel,
                                                         p.aqpa463hfcon,
                                                         p.aqpa463serie,
                                                         p.aqpa463corre,
                                                         pn_monto_total_1);
        
          --validar concepto 
          begin
            select 'S'
              into lc_flg
              from fst198 a
             where a.tp1cod = 1
               and a.tp1cod1 = 11120
               and a.tp1corr1 = 1
               and a.tp1corr2 = 3
               and a.tp1corr3 >= 1
               and a.tp1nro1 = p.aqpa463txoren - 100;
          exception
            when others then
              lc_flg := 'N';
          end;
        
          --obtener cuenta moneda hora fecha
          ln_cta := p.aqpa463cta;
          ln_mda := p.aqpa463mda;
        
          begin
            select a.ithora, a.itfcon
              into lc_hor, ld_fec
              from fsd015 a
             where a.pgcod = p.aqpa463pgcod
               and a.itmod = p.aqpa463hcmod
               and a.itsuc = p.aqpa463hsucor
               and a.ittran = p.aqpa463htran
               and a.itnrel = p.aqpa463hnrel;
          exception
            when others then
              null;
          end;
        
          /*2018.10.12
                 
          begin
          
             result := pq_cr_factura_electronica.dintex(pn_monto_total_1);
          end;
          */
        
          ----------Obtener codigo de sunat
          begin
            select lpad(a.tp1nro2, 4, '0')
              into lc_codsunat
              from fst198 a
             where a.tp1cod = 1
               and a.tp1cod1 = 11120
               and a.tp1corr1 = 1
               and a.tp1corr2 = 500
               and a.tp1nro1 = p.aqpa463hsucor;
          exception
            when others then
              null;
          end;
        
          begin
            -- Call the procedure
            pq_cr_factura_electronica.sp_fecha_sys(pc_fecha); --dni
          end;
        
          if lc_flg = 'N' then
            --inserte conceptos de deuda como fila
          
            pq_cr_factura_electronica.sp_cr_Dif_Red(pc_AQPA465PGCOD    => p.aqpa463pgcod,
                                                    pc_AQPA465MOD      => p.aqpa463hcmod,
                                                    pc_AQPA465SUCOREND => p.aqpa463hsucor,
                                                    pc_AQPA465TRAN     => p.aqpa463htran,
                                                    pc_AQPA465REL      => p.aqpa463hnrel,
                                                    pd_AQPA465CON      => p.aqpa463hfcon,
                                                    pn_dif             => ln_mtoDifer,
                                                    pn_red             => ln_mtoRedon);
          
            ln_mtoconce_ant := to_number(trim(p.aqpa463txtord),
                                         '99999999999999999.99'); --20180622
          
            if p.aqpa463txoren - 100 = 18 then
              ln_mtoconce := to_number(ln_mtoconce_ant) -
                             nvl(ln_mtoDifer, 0) - nvl(ln_mtoRedon, 0);
            else
              ln_mtoconce := to_number(ln_mtoconce_ant); ---verficar 222 
            end if;
          
            if ln_mtoconce <> 0 then
            
              --datos persona
              begin
              
                pq_cr_factura_electronica.sp_num_documento(ln_cta,
                                                           lc_pendoc,
                                                           lv_penom,
                                                           pv_tdoc,
                                                           pn_pais,
                                                           ln_petdoc,
                                                           pd_pgfape2);
              end;
            
              --datos direccion cliente
              begin
                -- Call the procedure
                pq_cr_factura_electronica.sp_dir_cliente(lc_pendoc,
                                                         ln_petdoc,
                                                         pn_pais,
                                                         lv_sngc13dir,
                                                         lv_fst071dsc1,
                                                         lv_locnom1,
                                                         lv_depnom1,
                                                         lv_ubgCli); ---dni  pn_pendoc
              end;
            
              --Codigo del Tipo de Comprobante
            
              --2018.10.10
              if substr(p.aqpa463serie, 1, 1) = 'F' then
                ln_guiaCP := 1;
              elsif substr(p.aqpa463serie, 1, 1) = 'B' then
                ln_guiaCP := 3;
              else
                ln_guiaCP := null;
              end if;
              --2018.10.10    
            
              begin
                select '0' || to_char(a.tp1nro1)
                  into lv_codtipo
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 7
                   and a.tp1corr3 = ln_guiaCP; --2018.10.10 se modifico codigo de guia para tipo comprobante
              exception
                when others then
                  null;
              end;
            
              --Codigo tipo moneda
              begin
                select trim(a.tp1desc)
                  into lv_tipomda
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 8
                   and a.tp1corr3 >= 1
                   and a.tp1nro1 = ln_mda;
              exception
                when others then
                  null;
              end;
            
              /*              --Codigo tipo documento cliente
                           begin
                             select to_char(a.tp1nro1)
                               into lv_codtdoc
                               from fst198 a
                              where a.tp1cod = 1
                                and a.tp1cod1 = 11120
                                and a.tp1corr1 = 1
                                and a.tp1corr2 = 4
                                and a.tp1nro2 = ln_petdoc;
                           exception
                             when others then
                               null;
                           end;
              */
              --Codigo tipo documento cliente
              begin
                select to_char(a.tp1nro1), substr(trim(TP1DESC), -1, 1)
                  into lv_codtdoc, lv_codtdocC
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 4
                   and a.tp1nro2 = ln_petdoc;
              exception
                when others then
                  null;
              end;
            
              --05/04/2023 dcastro se agrego nuevo tipo documento PTP
              if lv_codtdoc = 3 then
                lv_codtdoc := lv_codtdocC;
              end if;
              --05/04/2023 dcastro se agrego nuevo tipo documento PTP
            
              --Correo del cliente
              lv_correo := null;
              begin
                select substr(a.pextxt, 1, INSTR(a.pextxt, '\', 1) - 1)
                  into lv_correo
                  from fsx001 a
                 where a.pepais = pn_pais
                   and a.petdoc = ln_petdoc
                   and a.pendoc = lc_pendoc
                   and a.txcod = 0
                   and rownum = 1 --- 2021/11/11 dcastro se agrego condicion
                 order by a.pexren desc;
              exception
                when others then
                  null;
              end;
            
              --nro item
              ln_item := 0;
              begin
                select max(a.aqpa460item)
                  into ln_item
                  from aqpa460 a
                 where a.aqpa460seri = p.aqpa463serie
                   and a.aqpa460num = p.aqpa463corre;
              exception
                when too_many_rows then
                  begin
                    select max(a.aqpa460item)
                      into ln_item
                      from aqpa460 a
                     where a.aqpa460seri = p.aqpa463serie
                       and a.aqpa460num = p.aqpa463corre
                       and rownum = 1;
                  exception
                    when others then
                      null;
                  end;
                when no_data_found then
                  ln_item := 0;
                when others then
                  null;
              end;
              ln_nroitem := nvl(ln_item, 0) + 1;
            
              --monto conceptos
              --  ln_mtoconce := to_number(replace(trim(p.aqpa463txtord),'.',','));
            
              --       ln_mtoconce_ant:= round(trim(p.aqpa463txtord),2);
            
              --descripcion conceptos
              lv_desconce := trim(p.aqpa463hvchr);
         
               ---2023.09.20 dcastro campaña ahorraton
              lc_indGratuita := 'N'; 
              begin
                  select 'S' --si existe es transferencia gratuita
                  into lc_indGratuita
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120-- for update
                   and a.tp1corr1 = 41
                   and a.tp1corr2 > 0
                   and a.tp1nro1 = p.aqpa463hcmod
                   and a.tp1nro2 = p.aqpa463htran;
              exception when others then
                    lc_indGratuita := 'N'; 
              end;
              if lc_indGratuita = 'S' then ---p.aqpa463hcmod = 98 and p.aqpa463htran in (236, 779) then ---236
                begin
                    pq_cr_factura_electronica.sp_datos_campania(pd_fecha => p.aqpa463hfcon,
                                                                             pn_cuenta =>  p.aqpa463cta,
                                                                             pc_serie =>   p.aqpa463serie,
                                                                             pn_numero =>  p.aqpa463corre,
                                                                             pn_emp =>  p.aqpa463pgcod,
                                                                             pn_suc =>  p.aqpa463hsucor,
                                                                             pn_mod =>  p.aqpa463hcmod, 
                                                                             pn_tra =>  p.aqpa463htran,
                                                                             pn_rel =>  p.aqpa463hnrel,                                                                                                                                                          
                                                                             pc_datos => lv_desconce);
                end;
              end if;
              
               ---nota debito
              lc_NotaDebito := 'N'; 
              begin
                  select 'S' --si existe es transferencia gratuita
                  into lc_NotaDebito
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120-- for update
                   and a.tp1corr1 = 42
                   and a.tp1corr2 = 1
                   and a.tp1nro1 = p.aqpa463hcmod
                   and a.tp1nro2 = p.aqpa463htran;
              exception when others then
                    lc_NotaDebito := 'N'; 
              end;
              ---2023.09.20
   
            
              --Codigo de plantilla
              lc_codpla := 'EST';
            
              --- Sistema de Emicion 
              lc_sistemi := 'BANTOT';
            
              --Codigo tipo doc empresa
              begin
                select a.tp1nro1
                  into ln_docemp
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 4;
              exception
                when others then
                  null;
              end;
            
              begin
                select to_char(a.tp1nro1)
                  into lv_tipemp
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 4
                   and a.tp1corr3 >= 1
                   and a.tp1nro2 = ln_docemp;
              
              exception
                when others then
                  null;
              end;
              --ruc caja
              begin
                select trim(a.tp1desc)
                  into lv_ruc
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 1;
              exception
                when others then
                  null;
              end;
            
              --NOMBRE COMERCIAL caja
              begin
                select a.tp1desc
                  into lv_NCOM
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 5;
              exception
                when others then
                  null;
              end;
            
              --Ubigeo caja
              begin
                select trim(a.tp1desc)
                  into lv_ubg
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 6;
              exception
                when others then
                  null;
              end;
              ---------------------------------------campos parte 2
              ----------hora de transacion 
              begin
                select trim(a.aqpa463txtord)
                  into lv_hora
                  from aqpa463 a
                 where a.aqpa463pgcod = p.aqpa463pgcod
                   and a.aqpa463hcmod = p.aqpa463hcmod
                   and a.aqpa463hsucor = p.aqpa463hsucor
                   and a.aqpa463htran = p.aqpa463htran
                   and a.aqpa463hnrel = p.aqpa463hnrel
                   and a.aqpa463hfcon = p.aqpa463hfcon
                   and a.aqpa463serie = p.aqpa463serie
                   and a.aqpa463corre = p.aqpa463corre
                   and a.aqpa463txtord like '%:%';
              exception
                when others then
                  null;
              end;
            
              --mod@abr 20180907
              begin
                select pgfape into ld_fecSis from fst017 where pgcod = 1;
              exception
                when others then
                  null;
              end;
              if lv_hora is null then
              
                if ld_fecSis = p.aqpa463hfcon then
                
                  begin
                    select a.ithora
                      into lv_hora
                      from fsd015 a
                     where a.pgcod = p.aqpa463pgcod
                       and a.itsuc = p.aqpa463hsucor
                       and a.itmod = p.aqpa463hcmod
                       and a.ittran = p.aqpa463htran
                       and a.itnrel = p.aqpa463hnrel;
                  exception
                    when others then
                      null;
                  end;
                
                else
                  begin
                    select a.hhora
                      into lv_hora
                      from fsh015 a
                     where a.pgcod = p.aqpa463pgcod
                       and a.hsucor = p.aqpa463hsucor
                       and a.hcmod = p.aqpa463hcmod
                       and a.htran = p.aqpa463htran
                       and a.hnrel = p.aqpa463hnrel
                       and a.hfcon = p.aqpa463hfcon;
                  exception
                    when others then
                      null;
                  end;
                end if;
              
              end if;
              --mod@br 20180907
            
              --------tipo de operacion 
              begin
                select trim(a.tp1desc)
                  into lv_tipoope
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 11
                   and a.tp1corr3 = 1;
              exception
                when others then
                  null;
                
              end;
              -------Codigo de tipo de importe de afectacion
              Begin
                select to_char(a.tp1nro1)
                  into lc_oneroso
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 12
                   and a.tp1corr3 = 3;
              exception
                when others then
                  null;
              End;
            
              -----Afectaci?n del IGV  
              begin
                select to_char(a.tp1nro1)
                  into lv_afecigv
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 13
                   and a.tp1corr3 = 1;
              exception
                when others then
                  null;
                
              end;
            
              ---------Identificaci?n del tributo seg?n cat?logo SUNAT
              begin
                select to_char(a.tp1nro1), trim(a.tp1desc)
                  into lv_idtrbsunat, lv_nomtrbsunat
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 14
                   and a.tp1corr3 = 1;
              exception
                when others then
                  null;
              end; ---ojo
              ----------C?digo del Tipo de Tributo
              begin
                select trim(a.tp1desc)
                  into lv_destiptrb
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 14
                   and a.tp1corr3 = 2;
              exception
                when others then
                  null;
              end;
            
              ---Monto del descuento o recargo
              ln_MONTO := 0;
            
              -----------------Descripcion del pais 
              begin
                Select trim(a.tp1desc)
                  Into lv_CPAIS
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 15
                   and a.tp1corr3 = 1;
              exception
                when others then
                  null;
              end;
            
              ----------informacion del predio
              begin
                pq_cr_factura_electronica.sp_cr_detalle_predio(pc_aqpa463mod => p.aqpa463mod,
                                                               pc_aqpa463suc => p.aqpa463suc,
                                                               pc_aqpa463mda => p.aqpa463mda,
                                                               pc_aqpa463pap => p.aqpa463pap,
                                                               pc_aqpa463cta => p.aqpa463cta,
                                                               pc_aqpa463ope => p.aqpa463ope,
                                                               pc_aqpa463sbo => p.aqpa463sbo,
                                                               pc_aqpa463top => p.aqpa463top,
                                                               pc_partida    => lv_partida,
                                                               pc_contrato   => lc_contrato,
                                                               pc_direccion  => lv_direccionH,
                                                               pc_urba       => lv_urbaH,
                                                               pc_dpto       => lv_dptoH,
                                                               pc_prov       => lv_provH,
                                                               pc_dist       => lv_distH,
                                                               pc_ubigeo     => lv_cdisn);
              end;
            
              if lv_cdisn is null then
                --20180626
                lv_cdisn      := lv_ubgCli;
                lv_urbaH      := substr(lv_urb, 1, 25);
                lv_dptoH      := substr(lv_depnom1, 1, 30);
                lv_provH      := substr(lv_locnom1, 1, 30);
                lv_distH      := substr(lv_fst071dsc1, 1, 30);
                lv_direccionH := substr(lv_sngc13dir, 1, 100);
              end if;
            
              lc_contrato := lpad(to_char(p.aqpa463cta), 9, 0) ||
                             lpad(to_char(p.aqpa463mda), 3, 0) ||
                             lpad(to_char(p.aqpa463ope), 9, 0); --lv_text2; --numero credito
              lv_NCONT    := lc_contrato;
            
              ld_fecoto := pq_cr_factura_electronica.fn_fecha_desembolso(pc_aqpa463cta => p.aqpa463cta,
                                                                         pc_aqpa463ope => p.aqpa463ope);
            
              ld_fecoto := nvl(ld_fecoto, p.aqpa463hfcon);
              lv_fecoto := nvl(ld_fecoto, p.aqpa463hfcon);
            
              --agregar a info predio G74.1, G74.2
              lv_infpredio := '0' || '0' || lv_partida || '|' ||
                              lc_contrato || '|' || lv_fecoto || '|' ||
                              lv_direccionH || '|' || lv_urbaH || '|' ||
                              lv_provH || '|' || lv_distH || '|' ||
                              lv_dptoH;
              lv_pendoc    := lc_pendoc;
            
              --Pais del cliente
            
              begin
                select trim(a.tp1desc)
                  into lv_cpai
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 20
                   and a.tp1NRO1 = pn_pais;
              exception
                when others then
                  null;
              end;
            
              --Producto del credito
              begin
                select to_char(p.aqpa463mod) || '-' || trim(a.tonom)
                  into lv_TEXT1
                  from fst004 a
                 where a.modulo = p.aqpa463mod
                   and a.totope = p.aqpa463top;
              
              exception
                when others then
                  null;
              end;
            
              --direccion
              begin
                select to_char(a.tp1desc)
                  into lv_CALLE
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 2;
              
              exception
                when others then
                  null;
              end;
            
              --telefono
              begin
                select trim(to_char(a.tp1desc))
                  into lv_TELF
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 3;
              exception
                when others then
                  null;
              end;
            
              ---web de caja arequipa
              Begin
                select trim(a.tp1desc)
                  into lv_web
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 12;
              exception
                when others then
                  null;
              End;
            
              --departamento
              begin
                select to_char(a.tp1desc)
                  into lv_DEPA
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 7;
              
              exception
                when others then
                  null;
              end;
            
              --provincia
              begin
                select to_char(a.tp1desc)
                  into lv_PROV
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 8;
              
              exception
                when others then
                  null;
              end;
            
              --distrito
              begin
                select to_char(a.tp1desc)
                  into lv_DIST
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 9;
              
              exception
                when others then
                  null;
              end;
            
              --razon social
            
              begin
                select to_char(a.tp1desc)
                  into lv_rzn1
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 10;
              
              exception
                when others then
                  null;
              end;
            
              begin
                select to_char(a.tp1desc)
                  into lv_rzn2
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 11;
              
              exception
                when others then
                  null;
              end;
              lv_rzn := trim(lv_rzn1) || ' ' || trim(lv_rzn2);
            
              pn_monto_total_1 := ln_mtoconce; --2018.10.10 en comisiones se agrego monto a todos los campos
            
              ---2023.09.20 ahorraton importe debe ser 0
              lc_indGratuita := 'N'; 
              begin
                  select 'S' --si existe es transferencia gratuita
                  into lc_indGratuita
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120-- for update
                   and a.tp1corr1 = 41
                   and a.tp1corr2 > 0
                   and a.tp1nro1 = p.aqpa463hcmod
                   and a.tp1nro2 = p.aqpa463htran;
              exception when others then
                    lc_indGratuita := 'N'; 
              end;
              if lc_indGratuita = 'S' then ---p.aqpa463hcmod = 98 and p.aqpa463htran in (236, 779) then ---236
                pn_monto_total_1 := 0; --se comento total
                ln_mtoconce      := 0;
              end if;
              
               if lc_NotaDebito = 'S' then ---p.aqpa463hcmod = 98 and p.aqpa463htran in (236, 779) then ---236

                lv_idtrbsunat    := 9998; -- AQPA460CODTB   ---------Nota Debito
                lv_doc_ori       := '03'; --aqpa460cmem,
                lv_codtipo       := '08'; --AQPA460TCOMF
               else
                lv_doc_ori       := null; --aqpa460cmem,
               end if; 
              --
            
              begin
              
                result := pq_cr_factura_electronica.dintex(pn_monto_total_1);
              end;
            
              lv_glosa := null;
              lv_TPLA  := 'EST';
              lv_TPLCO := 'EST';
              ln_SIMC  := null;
              ln_SVITM := pn_monto_total_1;
              ln_SPVI  := pn_monto_total_1;
              lv_TXML  := '2.1';
              lv_urb   := null;
              lv_PNETU := 'NIU';
              ln_cant  := 1;
              lv_CTPR  := '01';
              ln_VVUIG := ln_mtoconce;
              ln_PRVIT := ln_mtoconce;
              lv_MEDEM := 'UND';
              lv_CSUNA := '84121901';
              ln_ITITM := null;
              ln_IMPTB := null;
              ln_IMPEX := null;
              --lv_afecigv  := '9996';
              lv_SISC   := null;
              lv_codun  := 'FRE';
              ln_MBIM   := ln_mtoconce; --null; 20180623
              ln_TAIMP  := null;
              ln_CDLEY  := 1000;
              lv_TELEY  := trim(result) || ' ' || lv_desmda; --2018.10.17  result;
              lv_TEXT2  := lpad(to_char(p.aqpa463cta), 9, 0) ||
                           lpad(to_char(p.aqpa463mda), 3, 0) ||
                           lpad(to_char(p.aqpa463ope), 9, 0);
              lv_TRECV  := lv_correo;
              lv_TEMPL  := 'EST';
              lv_SUBJE  := '0' || trim(lv_codtipo) || '-' || P.AQPA463SERIE || '-' ||
                           trim(to_char(P.AQPA463CORRE));
              lv_VPCVA  := null;
              lv_NEXP   := '0';
              lv_CIND   := '0';
              ln_MTOTAL := null;
              ln_BAIMP  := null;
              ln_MTIMP  := null;
              ln_PCIMA  := null;
              ln_BSIMP  := null;
              ln_VAIMP  := null;
              ln_MTINF  := pn_monto_total_1;
              ln_MTGRT  := null;
              ln_BSIMPS := null;
              ln_MTOTI  := null;
              lv_CPGS1  := null;
              lv_COMA   := to_char(p.aqpa463hfcon, 'yymmdd') ||
                           lpad(to_char(p.aqpa463hsucor), 3, 0) ||
                           lpad(to_char(p.aqpa463hcmod), 3, 0) ||
                           lpad(to_char(p.aqpa463htran), 3, 0) ||
                           lpad(to_char(p.aqpa463hnrel), 4, 0);
            
              ----------------------datos caja
              ---razon social de caja arequipa
              Begin
              
                select a.tp1desc
                  into lc_nom1
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 10;
              exception
                when others then
                  null;
              End;
            
              ---razon social de caja arequipa
              Begin
                select a.tp1desc
                  into lc_nom2
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 11;
              exception
                when others then
                  null;
              End;
            
              lc_nomcaja := trim(lc_nom1) || trim(lc_nom2);
            
              --mod@abr 20180903 modificacion de ubigeo TEMPORAL
              lv_sngc13dirFin := trim(lv_sngc13dir) || ' - ' ||
                                 trim(lv_fst071dsc1) || ' - ' ||
                                 trim(lv_locnom1) || ' - ' ||
                                 trim(lv_depnom1);
              lv_depnom1      := null;
              lv_locnom1      := null;
              lv_fst071dsc1   := null;
            
              --mod@abr 20180903 modificacion de ubigeo TEMPORAL
            
              --mod@abr 20180905
              if lv_correo is null then
                lv_correo := 'Reportefactele@cajaarequipa.pe';
              end if;
            
              if lv_TRECV is null then
                lv_TRECV := 'Reportefactele@cajaarequipa.pe';
              end if;
              --mod@abr 20180905
            
              --2018.10.17 ---2018.12.26
              if ln_cta = 999999999 or trim(ln_cta) = 99 or ln_cta = 0 then
                --inicio valida cuenta cliente  2018.10.17
                lv_codtdoc := 1;
                lv_pendoc  := '00000000';
                lv_penom   := 'Clientes Varios';
              End if;
            
              --              if P.AQPA463HCMOD = 30 and P.AQPA463HTRAN in (977, 978) then  22/07/2021
              if P.AQPA463HCMOD = 30 and
                 P.AQPA463HTRAN in (977, 978, 405, 984, 986) then
                ---30/405  22/07/2021
                ---si es igv bantotal                      --se agrego 984,986  20221029
                lv_afecigv := 17; --se agrego concepto 978 26122018
              end if;
            
              --2018.10.17
            
              --2018.12.26
              lv_penom := replace(lv_penom, '&', '');
              --2018.12.26
            
            
            /*AQPA460IMPT, AQPA460SPVI, AQPA460VVUIG, AQPA460PRVIT*/
            
            
              ------insert detalle de factura
              BEGIN
                insert into AQPA460
                  (AQPA460TDOC, --Codigo del Tipo de Documento de Identidad oENEmpresa
                   AQPA460RUCC, --N?mero de documento de identidad del emisor oENEmpresa
                   AQPA460RSOC, --Apellidos y nombres o denominaci?n o raz?n social oENEmpresa
                   AQPA460CDIS, --Codigo de UBIGEO oENEmpresa
                   AQPA460NCOM, --Nombre Comercial oENEmpresa
                   AQPA460CALLE, --Direcci?n completa y detallada oENEmpresa
                   AQPA460URBA, --Urbanizacion o Zona  oENEmpresa
                   AQPA460DEPA, --Departamento, expresado textualmente  oENEmpresa
                   AQPA460PROV, --Provincia, expresarlo textualmente   oENEmpresa
                   AQPA460DIST, --Distrito, expresarlo textualmente oENEmpres
                   AQPA460TELF, --Telefono de la Empresa Emisora oENEmpres
                   AQPA460WEB, --Pagina Web del Emisor oENEmpres           
                   AQPA460CPAIS, --Codigo del Pais del Emisor oENEmpres
                   AQPA460CESUN, --C?digo del establecimiento de Sunat  oENEmpres
                   AQPA460SERI, --Serie del comprobante.  Datos del Comprobante
                   AQPA460NUM, --Numero Correlativo del comprobante. Datos del Comprobante
                   AQPA460FEMI, --Fecha de Emision del Comprobante Datos del Comprobante
                   AQPA460TCOMF, --Codigo del Tipo de Comprobante Datos del Comprobante
                   AQPA460MONE, --Codigo del Tipo de Moneda Datos del Comprobante
                   AQPA460CORRR, --El correo electr?nico del Receptor  Datos del Comprobante
                   AQPA460MGLO, --Multiples Informaci?n adicional u observacion del comprobante.  Datos del Comprobante
                   AQPA460COMA, --Numero Interno del Comprobante Datos del Comprobante
                   AQPA460TPLA, --Tiplo de Plantilla  Datos del Comprobante
                   AQPA460TOPE, --C?digo de Tipo de operaciones Datos del Comprobante
                   AQPA460TPLCO, --C?digo de plantilla de correo  Datos del Comprobante
                   AQPA460CLOG, --C?digo del tipo de Logo Datos del Comprobante
                   AQPA460TDOCR, --Codigo del tipo de documento de identificaci?n del Receptor Datos del Comprobante
                   AQPA460NRUC, --N?mero de documento de identificaci?n Datos del Comprobante
                   AQPA460RASOC, --Apellidos y nombres o denominaci?n o raz?n social Datos del Comprobante
                   AQPA460IMPT, --Importe total  a pagar Datos del Comprobante
                   AQPA460HEMI, --Hora de Emisi?n  Datos del Comprobante
                   AQPA460SIMC, --Suma de todos los impuestos del comprobante.  Datos del Comprobante
                   AQPA460SVITM, --Suma del valor de venta total de todos los items   Datos del Comprobante
                   AQPA460SPVI, --Suma de los precios de venta total de todos los items  Datos del Comprobante
                   AQPA460TXML, -- Indica el tipo de XML que se generar? Datos del Comprobante
                   --  no va para factura   --AQPA460SDREF, --Serie documento al que se aplica la nota. ENComprobanteMotivoDocumento
                   --  no va para factura   --AQPA460NDREF, --Numero  documento al que se aplica la nota.  ENComprobanteMotivoDocumento
                   AQPA460CMEM, --  no va para factura    --AQPA460CMEM,  --C?digo por el cual se emite la nota.  ENComprobanteMotivoDocumento
                   ---  no va para factura  --AQPA460SUST,  --Sustento ENComprobanteMotivoDocumentoSustento
                   --  no va para factura     AQPA460SERIE, --Serie del comprobante referenciado. Referencia a un comprobante
                   --  no va para factura     AQPA460NRO,   --N?mero del comprobante referenciado Referencia a un comprobante
                   ---  no va para factura   --AQPA460TCOMP, --C?digo del tipo de comprobante.  Referencia a un comprobante
                   ---  no va para factura  --AQPA460FDREF, --Fecha de emisi?n del comprobante referenciado. Referencia a un comprobante  
                   AQPA460CDIST, --C?digo de UBIGEO Datos adicionales del Receptor
                   AQPA460CALL, --Direcci?n completa y detallada Datos adicionales del Receptor
                   AQPA460URB, --Urbanizacion o Zona   Datos adicionales del Receptor
                   AQPA460DEP, --Departamento Datos adicionales del Receptor
                   AQPA460PRV, --Provincia   Datos adicionales del Receptor
                   AQPA460DST, --Distrito Datos adicionales del Receptor
                   AQPA460CPAI, --C?digo del Pa?s  Datos adicionales del Receptor
                   AQPA460ITEM, --N?mero de orden del Item ENComprobanteDetalle 
                   AQPA460PNETU, --Unidad de medida de los bienes vendidos por item (UN/ECE rec 20) ENComprobanteDetalle 
                   AQPA460CANTF, --Cantidad de unidades vendidas pot item (Q)  ENComprobanteDetalle 
                   AQPA460TOTAL, --Importe monetario que es el total de la l?nea de detalle, incluyendo variaciones de precio (subvenciones, cargos o descuentos) pero sin impuestos.  ENComprobanteDetalle 
                   AQPA460DETE, --Codigo de identificaci?n de Onerosidad del Item ENComprobanteDetalle 
                   AQPA460CTPR, --Codigo de tipo de importe de afectacion ENComprobanteDetalle 
                   /*ok */
                   AQPA460VVUN, --Valores de venta unitarios por item (VU) no incluye impuestos  ENComprobanteDetalle 
                   /*campos probl*/
                   AQPA460VVUIG, --Precio de Venta Unitario (Incluye impuestos)  ENComprobanteDetalle 
                   AQPA460DESC, -- Descripcion del producto ENComprobanteDetalle 
                   AQPA460MFUN, --Multi Descripcion,  puede tener varias desccripciones ENComprobanteDetalle 
                   AQPA460PRVIT, --Es el precio de venta ENComprobanteDetalle 
                   AQPA460MEDEM, --Unidad medida del emisor ENComprobanteDetalle 
                   AQPA460CSUNA, --C?digo producto establecido por Sunat   ENComprobanteDetalle 
                   AQPA460CPGS1, --C?digo de producto GS1  ENComprobanteDetalle 
                   AQPA460ITITM, --Impuesto total del item ENComprobanteDetalle 
                   AQPA460IMPTB, --Importe total de un tributo para este item Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460IMPEX, ---Importe expl?cito a tributar ( = Tasa Porcentaje * Base Imponible)   Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460AFIGV, --Afectaci?n del IGV  Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460SISC, --Sistema de ISC  (01=Especifico; 02= al valor; 03=PV al p?blico)  Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   /*ojo*/
                   AQPA460CODTB, --Identificaci?n del tributo seg?n cat?logo SUNAT Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460DSTRB, --Nombre del Tributo (IGV, IVAP, ISC)  Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460CODUN, --C?digo del Tipo de Tributo (UN/ECE 5153) Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460MBIM, --Monto base del impuesto Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460TAIMP, --Tasa aplicada del impuesto  Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460CDLEY, --Codigo de la Leyenda Utilizado para Leyendas
                   AQPA460TELEY, --Texto de la leyenda  Utilizado para Leyendas
                   AQPA460TEXT1, --Texto libre 1 : Producto  Informaci?n adicional para la visualizacion de representaciones impresas, antes definido por el integrador.
                   AQPA460TEXT2, --Texto libre 2 : N?mero de Cr?dito Informaci?n adicional para la visualizacion de representaciones impresas, antes definido por el integrador.
                   AQPA460TRECV, --Correo del receptor Utilizado para enviar correos adicionales con copia al Correo del Receptor, ingresado en ENComprobante.Correo
                   AQPA460TEMPL, --C?digo de Tipo de Plantilla  Utilizado para enviar correos adicionales con copia al Correo del Receptor, ingresado en ENComprobante.Correo
                   AQPA460SUBJE, --Asunto del correo Utilizado para enviar correos adicionales con copia al Correo del Receptor, ingresado en ENComprobante.Correo
                   AQPA460VPCVA, --Placa del vehiculo Informaci?n adicional del item
                   AQPA460NEXP, --N?mero de Expediente Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460CIND, --C?digo de indicador  Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460NPART, --N?mero de Partida Registral  Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460NCONT, --N?mero de contrato  Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460FOTRC, --Fecha de Otorgo de cr?dito   Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460CDISN, --C?digo de Ubigeo   Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460DIREH, --Direcci?n   Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460URBH, --Urbanizaci?n Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460PRVH, --Provincia   Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460DSTH, --Distrito   Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460DEPTH, --Departamento Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460MTOTAL, --Monto total Gravado (Sin impuesto)  Informaci?n de gravada                           
                   AQPA460BAIMP, --Base del impuesto  IGV del Gravado
                   AQPA460MTIMP, --Monto total solo del impuesto   IGV del Gravado
                   AQPA460PCIMA, --Porcentaje del impuesto aplicado  IGV del Gravado
                   AQPA460BSIMP, --Base del impuesto Otros impuestos del Gravado
                   AQPA460VAIMP, --Monto total solo del impuesto  Otros impuestos del Gravado
                   AQPA460MTINF, --Monto total Inafecto  Informaci?n de inafecto
                   AQPA460MTGRT, --Monto total Gratuito  Informaci?n de gratuito
                   AQPA460BSIMPS, --Base del impuesto Impuestos del Gratuito
                   AQPA460MTOTI, --Monto total de impuestos Impuestos del Gratuito
                   AQPA460PGC, --mod@abr 20180824
                   AQPA460MOD, --mod@abr 20180824  
                   AQPA460SUC, --mod@abr 20180824 
                   AQPA460TRX, --mod@abr 20180824
                   AQPA460REL, --mod@abr 20180824
                   AQPA460ORE, --mod@abr 20180824
                   AQPA460DOCU --2023.07.18 dcastro 
                   )
                
                Values
                  (lv_tipemp, --AQPA460TDOC,  ok
                   lv_ruc, --AQPA460RUCC,  ok
                   lv_rzn, --AQPA460RSOC,  ok
                   lv_ubg, --AQPA460CDIS,  ok
                   lv_NCOM, --AQPA460NCOM,  ok
                   lv_CALLE, --AQPA460CALLE  ok
                   lv_urb, --AQPA460URBA,  ok
                   lv_DEPA, --AQPA460DEPA,  ok
                   lv_PROV, --AQPA460PROV,  ok
                   lv_DIST, --AQPA460DIST,  ok
                   lv_TELF, --AQPA460TELF,  ok
                   lv_WEB, --AQPA460WEB,   ok
                   lv_CPAIS, --AQPA460CPAIS  ok
                   lc_codsunat, --lv_CESUN,        --AQPA460CESUN
                   p.aqpa463serie, --AQPA460SERI,  ok
                   p.aqpa463corre, --AQPA460NUM,   ok
                   p.aqpa463hfcon, --AQPA460FEMI,  ok
                   lv_codtipo, --AQPA460TCOMF  ok
                   lv_tipomda, --AQPA460MONE,  ok
                   lv_correo, --AQPA460CORRR  ok
                   lv_glosa, --AQPA460MGLO,  ok
                   lv_COMA, --AQPA460COMA,  ok
                   lv_TPLA, --AQPA460TPLA,  ok
                   lv_tipoope, --AQPA460TOPE,  ok
                   lv_TPLCO, --AQPA460TPLCO  ok
                   lv_CLOG, --AQPA460CLOG,
                   lv_codtdoc, --AQPA460TDOCR  ok
                   lv_pendoc, --AQPA460NRUC,  ok
                   lv_penom, --AQPA460RASOC  ok
                   pn_monto_total_1, --AQPA460IMPT,  ok
                   lv_hora, --AQPA460HEMI,  ok
                   ln_SIMC, --AQPA460SIMC,  ok
                   ln_SVITM, --AQPA460SVITM  ok
                   ln_SPVI, --AQPA460SPVI,  ok
                   lv_TXML, --AQPA460TXML,  ok
                   --AQPA460SDREF, --Serie documento al que se aplica la nota. ENComprobanteMotivoDocumento
                   --AQPA460NDREF, --Numero  documento al que se aplica la nota.  ENComprobanteMotivoDocumento
                   --AQPA460CMEM,  --C?digo por el cual se emite la nota.  ENComprobanteMotivoDocumento
                   lv_doc_ori, --     no va para factura--      lc_sustento,  --Sustento ENComprobanteMotivoDocumentoSustento
                   --AQPA460SERIE, --Serie del comprobante referenciado. Referencia a un comprobante
                   --AQPA460NRO,   --N?mero del comprobante referenciado Referencia a un comprobante
                   --AQPA460TCOMP, --C?digo del tipo de comprobante.  Referencia a un comprobante
                   --AQPA460FDREF, --Fecha de emisi?n del comprobante referenciado. Referencia a un comprobante  
                   lv_ubgCli, --AQPA460CDIST,  ok
                   lv_sngc13dir, --AQPA460CALL,   ok
                   lv_urb, --AQPA460URB,    ok
                   lv_depnom1, --AQPA460DEP,    ok
                   lv_locnom1, --AQPA460PRV,    ok
                   lv_fst071dsc1, --AQPA460DST,    ok
                   lv_cpai, --AQPA460CPAI,   ok
                   ln_nroitem, --AQPA460ITEM,   ok
                   lv_PNETU, --AQPA460PNETU,  ok
                   /*ok*/
                   ln_cant, --AQPA460CANTF,  ok
                   ln_mtoconce, --AQPA460TOTAL,  ok
                   lc_oneroso, --AQPA460DETE,   ok
                   lv_CTPR, --AQPA460CTPR,   ok
                   ln_mtoconce, --AQPA460VVUN,   ok to number
                   ln_VVUIG, --AQPA460VVUIG,  ok
                   lv_desconce, --AQPA460DESC,   ok
                   lv_infpredio, --AQPA460MFUN,   ok
                   ln_PRVIT, --AQPA460PRVIT,  ok
                   lv_MEDEM, --AQPA460MEDEM,  ok
                   lv_CSUNA, --AQPA460CSUNA,  ok
                   lv_CPGS1, --AQPA460CPGS1,  ok
                   ln_ITITM, --AQPA460ITITM,  ok
                   ln_IMPTB, --AQPA460IMPTB,  ok
                   ln_IMPEX, --AQPA460IMPEX,  ok
                   lv_afecigv, --AQPA460AFIGV,  ok
                   lv_SISC, --AQPA460SISC,   ok
                   lv_idtrbsunat, --AQPA460CODTB,  ok
                   lv_nomtrbsunat, --AQPA460DSTRB,  ok
                   lv_codun, --AQPA460CODUN,  ok
                   ln_MBIM, --AQPA460MBIM,   ok
                   ln_TAIMP, --AQPA460TAIMP,  ok
                   ln_CDLEY, --AQPA460CDLEY,  ok
                   lv_TELEY, --AQPA460TELEY,  ok
                   lv_TEXT1, --AQPA460TEXT1,  ok
                   lv_TEXT2, --AQPA460TEXT2,  ok
                   lv_TRECV, --AQPA460TRECV,  ok
                   lv_TEMPL, --AQPA460TEMPL,  ok
                   lv_SUBJE, --AQPA460SUBJE,  ok
                   lv_VPCVA, --AQPA460VPCVA,  ok
                   lv_NEXP, --AQPA460NEXP,   ok
                   lv_CIND, --,        --AQPA460CIND,   ok
                   nvl(lv_partida, ' '), --G74.3  --AQPA460NPART,  ok
                   nvl(lv_NCONT, ' '), -- G74.4 NUMERO CONTRATO                AQPA460NCONT,  ok 
                   ld_fecoto, --G74.5  FECHA OTORGAMIENTO CREDITO   AQPA460FOTRC,  ok
                   nvl(lv_cdisn, ' '), --G74.6  Ubigeo                        AQPA460CDISN,  ok
                   nvl(lv_direccionH, ' '), --G74.7                           AQPA460DIREH,  ok
                   nvl(lv_urbaH, ' '), --G74.8                                 AQPA460URBH,   ok
                   nvl(lv_provH, ' '), --G74.9                                AQPA460PRVH,   ok
                   nvl(lv_distH, ' '), --G74.10                                AQPA460DSTH,   ok
                   nvl(lv_dptoH, ' '), --AQPA460DEPTH,  ok
                   ln_MTOTAL, --AQPA460MTOTAL  ok
                   ln_BAIMP, --AQPA460BAIMP,  ok
                   ln_MTIMP, --AQPA460MTIMP,  ok
                   ln_PCIMA, --AQPA460PCIMA,  ok
                   ln_BSIMP, --AQPA460BSIMP,  ok
                   ln_VAIMP, --AQPA460VAIMP,  ok
                   ln_MTINF, --AQPA460MTINF,  ok
                   ln_MTGRT, --AQPA460MTGRT,  ok
                   ln_BSIMPS, --AQPA460BSIMPS  ok
                   ln_MTOTI, --AQPA460MTOTI   ok
                   P.AQPA463PGCOD, --mod@abr 20180824
                   P.AQPA463HCMOD, --mod@abr 20180824
                   P.AQPA463HSUCOR, --mod@abr 20180824 
                   P.AQPA463HTRAN, --mod@abr 20180824
                   P.AQPA463HNREL, --mod@abr 20180824 
                   P.AQPA463TXOREN, --mod@abr 20180824
                   trim(lv_pendoc) --AQPA460DOCU,  2023.07.18 se agrego documento sin espacios
                   );
              
                commit;
              Exception
                when others then
                
                  lc_coderr := sqlcode;
                  lc_msgerr := sqlerrm;
                
                  insert into aqpa460E
                    (aqpa460eserie,
                     aqpa460ecorr,
                     aqpa460epgcod,
                     aqpa460emod,
                     aqpa460esucorend,
                     aqpa460etran,
                     aqpa460erel,
                     aqpa460econ,
                     aqpa460etip,
                     Aqpa460eacoe,
                     Aqpa460eamsge)
                  
                  values
                    (p.aqpa463serie,
                     p.aqpa463corre,
                     p.aqpa463pgcod,
                     p.aqpa463hcmod,
                     p.aqpa463hsucor,
                     p.aqpa463htran,
                     p.aqpa463hnrel,
                     p.aqpa463hfcon,
                     
                     'S',
                     lc_coderr,
                     lc_msgerr);
                  commit;
              END;
            
              ln_MTOTAL := 0;
              ln_BAIMP  := 0;
              ln_MTIMP  := 0;
              ln_PCIMA  := 0;
              ln_BSIMP  := 0;
              ln_VAIMP  := 0;
              ln_MTINF  := 0;
              ln_MTGRT  := 0;
              ln_BSIMPS := 0;
              ln_MTOTI  := 0;
            
            end if;
          end if;
        
        end if;
      
      ------------------------------------------------------------------------------------------------------------- 
      end loop;
    
      /*    ----insert cabecera de factura aqpa465 
      --     AGREGAR CONCEPTO A PROCEDIMIENTO
          begin
      
            pq_cr_factura_electronica.sp_cr_cabecera_trx(pd_pgfape => pd_pgfape,
                                                              pc_serie => pc_serie,
                                                              pn_correlativo => pn_correlativo,
                                                              pn_concepto => pn_concepto);
          end;
      */
    
    end;
  
  exception
    when others then
      null;
      --mod@abr 20180622 ---LOG DE ERRORES
    /* insert into aqpa460E(aqpa460serie,
              aqpa460corr,
              aqpa460pgcod,
              aqpa460mod,
              aqpa460sucorend,
              aqpa460tran,
              aqpa460rel,
              aqpa460con,
              aqpa460tip)
    values(pc_AQPA465SERIE ,
           pc_AQPA465CORR  ,
           pc_AQPA465PGCOD ,
           pc_AQPA465MOD   ,
           pc_AQPA465SUCOREND,
           pc_AQPA465TRAN    ,
           pc_AQPA465REL    , 
           pc_AQPA465CON,
           'I'      );
    
    commit;   */
    --mod@abr 20180622
  
  end sp_cr_Detalle_Fact_CO1;

  Procedure sp_cr_cobroEfectivo1(pn_pgcod  in number,
                                 pn_hcmod  in number,
                                 pn_hsucor in number,
                                 pn_htran  in number,
                                 pn_hnrel  in number,
                                 pn_hfcon  in date,
                                 pc_serie  in char,
                                 pn_corr   in number,
                                 pn_mto    out number) is
    cursor tipo is
      select trim(a.st171cpdsc) st171cpdsc
        from fst171 a
      -- where a.st171cpcod between 28 and 33;  
       where (a.st171cpcod between 28 and 33)
          or a.st171cpcod = 46;
  
    ln_mtoAux number(17, 2) := 0;
    ln_mtoAcu number(17, 2) := 0;
  begin
    for i in tipo loop
      ln_mtoAux := 0;
      begin
        select sum(to_number(trim(a.aqpa463txtord), '99999999999999999.99')) --to_number(trim(a.aqpa463txtord))
          into ln_mtoAux
          from aqpa463 a
         where a.aqpa463pgcod = pn_pgcod
           and a.aqpa463hcmod = pn_hcmod
           and a.aqpa463hsucor = pn_hsucor
           and a.aqpa463htran = pn_htran
           and a.aqpa463hnrel = pn_hnrel
           and a.aqpa463hfcon = pn_hfcon
           and a.aqpa463serie = pc_serie
           and a.aqpa463corre = pn_corr
           and trim(a.aqpa463hvchr) = i.st171cpdsc
         group by a.aqpa463pgcod,
                  a.aqpa463hcmod,
                  a.aqpa463hsucor,
                  a.aqpa463htran,
                  a.aqpa463hnrel,
                  a.aqpa463hfcon,
                  a.aqpa463serie,
                  a.aqpa463corre,
                  trim(a.aqpa463hvchr);
      exception
        when others then
          ln_mtoAux := 0;
      end;
    
      ln_mtoAcu := ln_mtoAcu + nvl(ln_mtoAux, 0);
    end loop;
  
    pn_mto := nvl(ln_mtoAcu, 0);
  end sp_cr_cobroEfectivo1;

  procedure sp_cr_NotaCred_MAS is
    --2022.09.22 optimizar NC
  
    pn_hcmod        number;
    pn_hsucor       number;
    pn_htran        number;
    pn_hnrel        number;
    pd_hfcon        date;
    pn_NRO_RELACION number;
    pd_FECHA_TX     date;
    pn_hcmod2       number;
    pn_hcmod3       number;
    pn_hsucor3      number;
    pn_htran3       number;
    pn_hnrel3       number;
    pn_hfcon3       date;
    lc_serie        char(4);
    lc_correlativo  char(8);
  
    pn_pgcod number;
    --Flag char(1):='N';
  
    lc_flg466  char(1) := 'N'; --controla que no exista en la aqpa466
    lc_flag466 char(1) := 'N';
  
    ln_rubro  number;
    lc_tipper char(1);
  
    lv_tipodocu     char(1);
    lc_comision     char(1);
    ln_guiaCP       number;
    lv_codtipo      char(2);
    lc_coderr       varchar2(1000);
    lc_msgerr       varchar2(1000);
    ln_cont         number;
    lc_serieI       char(4);
    lc_correlativoI char(8);
    lv_codrpt       number;
    lv_tipocre      varchar2(2);
    ln_flag         number;
  
    lc_tipo_doc char(1);
    lv_tipo_doc char(2);
    lv_doc_ori  char(2);
  
    --ln_rubro number;
    --pd_rubro        number;
    lc_flr    char(1);
    lc_ftran  number;
    lc_fcont  char(1);
    lc_tipfin char(1);
  
    lc_trxe char(1);
    lc_esta char(1);
  
    cursor fsx015 is
    
    /* select /* +all_rows --distinct a.aqpa460pgc pgcod,
                      a.aqpa460mod        hcmod,
                      a.aqpa460suc        hsucor,
                      a.aqpa460trx        htran,
                      a.aqpa460rel        hnrel,
                      a.aqpa460femi       hfcon,
                      a.aqpa460seri, 
                      a.aqpa460num,
                      'E' Indicador
                from aqpa460 a
                 where  a.aqpa460femi >= pd_fecini
                    and a.aqpa460femi <= pd_fecfin
                    and a.aqpa460seri in ('FS01', 'BS01')
                    and    ( a.aqpa460mod, a.aqpa460trx )
                        in  
                         (select k.tp1nro1, k.tp1nro2
                                    from fst198 k
                                   where 
                                    k.tp1cod = 1
                                   and k.tp1cod1 = 11120
                                   and k.tp1corr1 = 40
                                   and k.tp1corr2 > 0)
                     and a.aqpa460nruc like trim(pc_numdoc)||'%' 
                  order by a.aqpa460seri, a.aqpa460num   ;
        */
      select k.tp1cod PGCOD,
             k.tp1nro1 HCMOD,
             k.tp1nro2 HSUCOR,
             k.tp1nro3 HTRAN,
             k.tp1imp3 ORDINAL,
             k.tp1imp1 HNREL,
             to_Date(trim(k.tp1desc), 'DD/MM/YYYY') HFCON,
             'E' Indicador
        from fst198 k
       where k.tp1cod = 1
         and k.tp1cod1 = 11120
         and k.tp1corr1 = 97
         and k.tp1corr2 = 1
         and k.tp1nro1 > 0
         and k.tp1imp2 = 1;
  
    cursor base(pn_pgcod        in number,
                pn_hcmod3       in number,
                pn_hsucor3      in number,
                pn_htran3       in number,
                pn_hnrel3       in number,
                pn_hfcon3       in date,
                lc_serieI       in char,
                lc_correlativoI in number) is
    
      select aqpa463txtrub,
             aqpa463pgcod,
             aqpa463hcmod,
             aqpa463hsucor,
             aqpa463htran,
             aqpa463hnrel,
             aqpa463hfcon,
             aqpa463hcpcod,
             aqpa463hvnro,
             trim(aqpa463hvchr) aqpa463hvchr,
             aqpa463hvnro aqpa463emp,
             aqpa463mod,
             aqpa463suc,
             aqpa463mda,
             aqpa463pap,
             aqpa463cta,
             aqpa463ope,
             aqpa463sbo,
             aqpa463top,
             aqpa463hip,
             trim(aqpa463txtord) aqpa463txtord,
             aqpa463txoren
        from aqpa463 a
       where a.aqpa463pgcod = pn_pgcod
         and a.aqpa463hcmod = pn_hcmod3
         and a.aqpa463hsucor = pn_hsucor3
         and a.aqpa463htran = pn_htran3
         and a.aqpa463hnrel = pn_hnrel3
         and a.aqpa463hfcon = pn_hfcon3
         and a.aqpa463serie = lc_serieI
         and a.aqpa463corre = lc_correlativoI;
  
  begin
  
    --25012019 dcastro
    begin
      select c.tp1nro1
        into ln_flag
        from fst198 c
       where c.tp1cod = 1
         and c.tp1cod1 = 11120
         and c.tp1corr1 = 7
         and c.tp1corr2 = 1;
    exception
      when others then
        null;
    end;
    --25012019
  
    for p in fsx015 loop
      --Verifica que no exista en cabecera AQPA466
      /*Begin
        select 'S'
          into lc_flg466
          from aqpa466 a
         where a.aqpa466pgcod = p.pgcod
           and a.aqpa466mod = p.hcmod
           and a.aqpa466sucor = p.hsucor
           and a.aqpa466tran = p.htran
           and a.aqpa466rel = p.hnrel
           and a.aqpa466con = p.hfcon
           and rownum = 1;
      exception
        when others then
          lc_flg466 := 'N';
      end;*/
      --Clave del documento a la cual se aplica: factura y boleta
    
      lc_flg466 := 'N';
    
      pn_pgcod  := p.pgcod;
      pn_hcmod  := p.hcmod;
      pn_hsucor := p.hsucor;
      pn_htran  := p.htran;
      pn_hnrel  := p.hnrel;
      pd_hfcon  := p.hfcon;
    
      if lc_flg466 = 'N' then
      
        if p.indicador = 'E' then
          --Por extorno 
        
          begin
            select f.txtext as NRO_RELACION
              into pn_NRO_RELACION
              from fsx015 f
             where f.hfcon = pd_hfcon --pd_pgfape --to_date('20092017', 'ddmmyyyy')----cambiar fecha de proceso
               and f.hcmod = pn_hcmod --530
               and f.htran = pn_htran --100
               and f.hnrel = pn_hnrel --2
               and f.hsucor = pn_hsucor --mod@abr 20180707
               and f.txcod = 0
               and f.txreng = 1;
          exception
            --mod@abr 20180707
            when too_many_rows then
              begin
                select f.txtext as NRO_RELACION
                  into pn_NRO_RELACION
                  from fsx015 f
                 where f.hfcon = pd_hfcon --to_date('20092017', 'ddmmyyyy')----cambiar fecha de proceso
                   and f.hcmod = pn_hcmod --530
                   and f.htran = pn_htran --100
                   and f.hnrel = pn_hnrel --2
                   and f.hsucor = pn_hsucor
                   and f.txcod = 0
                   and f.txreng = 1
                   and rownum = 1 --mod@abr 20180707
                ;
              exception
                when others then
                  pn_NRO_RELACION := null;
              end;
            when others then
              pn_NRO_RELACION := null;
            
          end;
        
          if pn_NRO_RELACION is not null then
          
            begin
              select to_date(f.txtext, 'DD/MM/RR') as FECHA_TX
                into pd_FECHA_TX
                from fsx015 f
               where f.hfcon = pd_hfcon --to_date('20092017', 'ddmmyyyy')
                 and f.hcmod = pn_hcmod -- 530
                 and f.htran = pn_htran --100
                 and f.hnrel = pn_hnrel --2
                 and f.hsucor = pn_hsucor --mod@abr 20180707
                 and f.txcod = 0
                 and f.txreng = 2;
            exception
              when others then
                pd_FECHA_TX := null;
            end;
          
            pn_hcmod2 := pn_hcmod - 500;
          
            -- 4. obtener transaccion original
            -- 4.1 Verificar si la transacción tiene una excepcion
            begin
              select 'S'
                into lc_trxe
                from fst198 t
               where t.tp1cod = 1
                 and t.tp1cod1 = 11120
                 and t.tp1corr1 = 10
                 and t.tp1corr2 = 1
                 and t.tp1corr3 <> 0
                 and t.tp1nro1 = pn_hcmod2 --- mod
                 and t.tp1nro2 = pn_htran -- trax
                 and t.tp1imp3 = 1; --<<=== Se valida en el IMP3
            exception
              when others then
                lc_trxe := 'N';
            end;
          
            if lc_trxe = 'N' then
            
              begin
                --obtener transaccion original
                select a.pgcod,
                       a.hcmod,
                       a.hsucor,
                       a.htran,
                       a.hnrel,
                       a.hfcon
                  into pn_pgcod,
                       pn_hcmod3,
                       pn_hsucor3,
                       pn_htran3,
                       pn_hnrel3,
                       pn_hfcon3 --clave de transaccion
                  from fsx016 a
                 where a.hcmod = pn_hcmod2 --30
                   and a.htran = pn_htran --100
                   and a.hfcon = pd_FECHA_TX --to_date('20092017', 'ddmmyyyy')
                   and a.hnrel = pn_NRO_RELACION --164
                   and a.hsucor = pn_hsucor --mod@abr 20180707
                   and rownum = 1;
              exception
                when others then
                  pn_pgcod   := null;
                  pn_hcmod3  := null;
                  pn_hsucor3 := null;
                  pn_htran3  := null;
                  pn_hnrel3  := null;
                  pn_hfcon3  := null;
                
              end;
            
            else
            
              pn_pgcod   := p.pgcod;
              pn_hcmod3  := pn_hcmod2;
              pn_hsucor3 := pn_hsucor;
              pn_htran3  := pn_htran;
              pn_hnrel3  := pn_NRO_RELACION;
              pn_hfcon3  := pd_FECHA_TX;
            
            end if;
          
          end if;
        
        elsif p.indicador = 'C' then
          --Por comision
        
          begin
            pq_op_transacciones.sp_op_retorna_origen(ppgcod   => pn_pgcod,
                                                     pitsuc   => pn_hsucor,
                                                     pitmod   => pn_hcmod,
                                                     pittran  => pn_htran,
                                                     pitnrel  => pn_hnrel,
                                                     pitfcon  => pd_hfcon,
                                                     itsuc_o  => pn_hsucor3,
                                                     itmod_o  => pn_hcmod3,
                                                     ittran_o => pn_htran3,
                                                     itnrel_o => pn_hnrel3,
                                                     itfcon_o => pn_hfcon3,
                                                     codrpt   => lv_codrpt);
          end;
        
        end if;
      
        begin
          select distinct a.aqpa460seri, a.aqpa460num
            into lc_serieI, lc_correlativoI
            from aqpa460 a
           where a.aqpa460pgc = pn_pgcod
             and a.aqpa460mod = pn_hcmod3
             and a.aqpa460suc = pn_hsucor3
             and a.aqpa460trx = pn_htran3
             and a.aqpa460rel = pn_hnrel3
             and a.aqpa460femi = pn_hfcon3;
        exception
          when others then
            lc_serieI       := null;
            lc_correlativoI := null;
        end;
      
        lv_tipodocu := substr(lc_serieI, 1, 1);
        lv_tipocre  := substr(lc_serieI, 2, 1);
      
        if lv_tipodocu is not null then
        
          --determinar tipo del documento origen
          --dbms_output.put_line('================');
          --dbms_output.put_line('pn_hcmod3 ' || pn_hcmod3);
          --dbms_output.put_line('pn_hsucor3 ' || pn_hsucor3);
          --dbms_output.put_line('pn_htran3 ' || pn_htran3);
          --dbms_output.put_line('pn_hnrel3 ' || pn_hnrel3);
          --dbms_output.put_line('pn_hfcon3 ' || pn_hfcon3);                                        
        
          begin
            select distinct t.aqpa460tcomf
              into lv_doc_ori
              from aqpa460 t
             where t.aqpa460pgc = pn_pgcod
               and t.aqpa460mod = pn_hcmod3
               and t.aqpa460suc = pn_hsucor3
               and t.aqpa460trx = pn_htran3
               and t.aqpa460rel = pn_hnrel3
               and t.aqpa460femi = pn_hfcon3
               and t.aqpa460tcomf in ('01', '03', '13');
          exception
            when others then
              --2022.04.26 dcastro
              lv_doc_ori := null;
            
          end;
        
          if lv_doc_ori in ('01', '03') then
          
            --determinar tipo de cliente
            if lv_tipodocu = 'F' then
              lc_tipper := 'J';
              ln_guiaCP := 1;
            else
              lc_tipper := 'N';
              ln_guiaCP := 3;
            end if;
          
            begin
              select
              --'0' || to_char(a.tp1nro1)
               lpad(trim(a.tp1nro1), 2, '0')
                into lv_codtipo
                from fst198 a
               where a.tp1cod = 1
                 and a.tp1cod1 = 11120
                 and a.tp1corr1 = 1
                 and a.tp1corr2 = 7
                 and a.tp1corr3 = ln_guiaCP; --2018.10.10 se modifico codigo de guia para tipo comprobante
            exception
              when others then
                null;
            end;
          
          else
            lv_codtipo := '13';
          end if;
        
          -- Determinar rubro
          -- 5. Obtener rubro
          begin
            -- Como el proceso siempre será ejecutado al menos un día después, 
            -- se busca en históricos
          
            select to_number(substr(m.hrubro, 5, 2))
              into ln_rubro
              from fsh016 m, fsr171 aa
             where aa.st171cpcod = 15
               and aa.sr171tremp = 1 --1
               and aa.sr171trmod = m.hcmod --30
               and aa.sr171trnro = m.htran
               and m.PGCOD = pn_pgcod
               and m.hsucor = pn_hsucor3
               and m.hcmod = pn_hcmod3
               and m.htran = pn_htran3
               and m.hnrel = pn_hnrel3
               and m.hfcon = pn_hfcon3
               and m.hcord = aa.sr171trord
               and rownum = 1;
          exception
            when others then
              --ln_rubro := null;
              begin
              
                select distinct x.aqpa463tcre
                  into ln_rubro
                  from aqpa463 x
                 where x.aqpa463pgcod = pn_pgcod
                   and x.aqpa463hcmod = pn_hcmod3
                   and x.aqpa463hsucor = pn_hsucor3
                   and x.aqpa463htran = pn_htran3
                   and x.aqpa463hnrel = pn_hnrel3
                   and x.aqpa463hfcon = pn_hfcon3;
              
              exception
                when others then
                  ln_rubro := null;
                
              end;
          end;
        
          --determinar si es comision
          begin
            select 'S'
              into lc_comision
              from fst198 h
             where h.tp1cod = 1
               and h.tp1cod1 = 11120
               and h.tp1corr1 = 3
               and h.tp1corr2 = 1
               and h.tp1nro1 = pn_hcmod3
               and h.tp1nro2 = pn_htran3
               and rownum = 1;
          exception
            when others then
              lc_comision := 'N';
          end;
        
          if lc_comision = 'S' then
            ln_rubro := 1;
          end if;
        
          -- b. Determinar si el rubro es considerado
          begin
            select 'S'
              into lc_flr
              from fst198 t
             where t.tp1cod = 1
               and t.tp1cod1 = 11120
               and t.tp1corr1 = 1
               and t.tp1corr2 = 23
               and t.tp1nro1 <> 0
               and t.tp1nro1 = ln_rubro;
          exception
            when others then
              lc_flr := 'N';
          end;
        
          --if (lv_tipocre in ('H','F') and ln_flag = 0) or ln_flag = 1 then
          if (lc_flr = 'S' and ln_flag = 0) or ln_flag = 1 or
             (lc_flr = 'N' and lc_comision = 'S') ---2022.04.22 dcastro
           then
          
            --Seleccionar tipo de documento    !!3
            -- Guía obtener transacciones GRAVADAS
            begin
              select 'S'
                into lc_tipo_doc
                from fst198 h
               where h.tp1cod = 1
                 and h.tp1cod1 = 11120
                 and h.tp1corr1 = 3
                 and h.tp1corr2 = 1
                 and h.tp1corr3 > 0
                 and h.tp1nro1 = pn_hcmod3
                 and h.tp1nro2 = pn_htran3;
            exception
              when others then
                lc_tipo_doc := 'N';
            end;
          
            ---Si es gravado --> 07  sino ---> 87
            lv_tipo_doc := '87';
          
            if lc_tipo_doc = 'S' then
              lv_tipo_doc := '07';
              lc_tipfin   := 'N';
            else
              ------
            
              begin
              
                -- c. Verificar si el rubro esta activo
                -- (4): hipotecario
                -- (3): consumo
                begin
                  select 'S'
                    into lc_fcont
                    from fst198 t
                   where t.tp1cod = 1
                     and t.tp1cod1 = 11120
                     and t.tp1corr1 = 1
                     and t.tp1corr2 = 23
                     and t.tp1nro1 <> 0
                     and t.tp1nro1 = ln_rubro
                     and t.tp1imp1 = 1;
                exception
                  when others then
                    lc_fcont := 'N';
                end;
              
                if lc_fcont = 'S' then
                
                  --Verificar en AQPB056
                  begin
                    select 'S'
                      into lc_tipfin
                      from aqpb056 a
                     where a.aqpb056pgc = pn_pgcod
                       and a.aqpb056mod = pn_hcmod
                       and a.aqpb056suc = pn_hsucor
                       and a.aqpb056trx = pn_htran
                       and a.aqpb056rel = pn_hnrel
                       and a.aqpb056fco = pd_hfcon
                       and a.aqpb056pge = pn_pgcod
                       and a.aqpb056moe = pn_hcmod3
                       and a.aqpb056sue = pn_hsucor3
                       and a.aqpb056tre = pn_htran3
                       and a.aqpb056ree = pn_hnrel3
                       and a.aqpb056fce = pn_hfcon3
                       and a.aqpb056tco = '87';
                  
                  exception
                    when others then
                      begin
                        select 'S'
                          into lc_tipfin
                          from aqpb056h a
                         where a.aqpb056hpgc = pn_pgcod
                           and a.aqpb056hmod = pn_hcmod
                           and a.aqpb056hsuc = pn_hsucor
                           and a.aqpb056htrx = pn_htran
                           and a.aqpb056hrel = pn_hnrel
                           and a.aqpb056hfcon = pd_hfcon
                           and a.aqpb056hpgce = pn_pgcod
                           and a.aqpb056hmode = pn_hcmod3
                           and a.aqpb056hsuce = pn_hsucor3
                           and a.aqpb056htrxe = pn_htran3
                           and a.aqpb056hrele = pn_hnrel3
                           and a.aqpb056hfcone = pn_hfcon3
                           and a.aqpb056htcomf = '87';
                      exception
                        when others then
                          lc_tipfin := 'N';
                      end;
                    
                  end;
                
                  --Verificar si la transacción sigue activa
                  begin
                    select count(*)
                      into lc_ftran
                      from fst198 t
                     where t.tp1cod = 1
                       and t.tp1cod1 = 11120
                       and t.tp1corr1 = 10
                       and t.tp1corr2 = 1
                       and t.tp1corr3 <> 0
                       and t.tp1imp1 = 1
                       and t.tp1nro1 = pn_hcmod3
                       and t.tp1nro2 = pn_htran3;
                  exception
                    when others then
                      null;
                  end;
                  if (lc_tipfin = 'S' and lc_ftran > 0) then
                  
                    begin
                      --select to_char(a.aqpb056seri), a.aqpb056num
                      select to_char(a.aqpb056ser), a.aqpb056num
                        into lc_serie, lc_correlativo
                        from aqpb056 a
                       where
                      
                       a.aqpb056pgc = pn_pgcod
                       and a.aqpb056mod = pn_hcmod
                       and a.aqpb056suc = pn_hsucor
                       and a.aqpb056trx = pn_htran
                       and a.aqpb056rel = pn_hnrel
                       and a.aqpb056fco = pd_hfcon
                      
                       and a.aqpb056pge = pn_pgcod
                       and a.aqpb056moe = pn_hcmod3
                       and a.aqpb056sue = pn_hsucor3
                       and a.aqpb056tre = pn_htran3
                       and a.aqpb056ree = pn_hnrel3
                       and a.aqpb056fce = pn_hfcon3
                      
                       and a.aqpb056tco = '87';
                    
                    exception
                      when others then
                      
                        select to_char(a.aqpb056hseri), a.aqpb056hnum
                          into lc_serie, lc_correlativo
                          from aqpb056h a
                         where
                        
                         a.aqpb056hpgc = pn_pgcod
                         and a.aqpb056hmod = pn_hcmod
                         and a.aqpb056hsuc = pn_hsucor
                         and a.aqpb056htrx = pn_htran
                         and a.aqpb056hrel = pn_hnrel
                         and a.aqpb056hfcon = pd_hfcon
                        
                         and a.aqpb056hpgce = pn_pgcod
                         and a.aqpb056hmode = pn_hcmod3
                         and a.aqpb056hsuce = pn_hsucor3
                         and a.aqpb056htrxe = pn_htran3
                         and a.aqpb056hrele = pn_hnrel3
                         and a.aqpb056hfcone = pn_hfcon3
                        
                         and a.aqpb056htcomf = '87';
                      
                    end;
                  
                  end if;
                
                end if;
              
              end;
              ------
            
            end if;
          
            if (lv_tipo_doc = '87' and lc_tipfin = 'S') or
               (lv_tipo_doc = '07' and lc_tipfin = 'N') then
            
              begin
              
                begin
                  pq_cr_facturacion.sp_cr_factura(pn_rubro       => ln_rubro,
                                                  pc_tipcli      => lc_tipper,
                                                  pc_tipo        => 'NC',
                                                  pc_serie       => lc_serie,
                                                  pc_correlativo => lc_correlativo);
                end;
              
                insert into AQPA460
                  (aqpa460tdoc,
                   aqpa460rucc,
                   aqpa460rsoc,
                   aqpa460cdis,
                   aqpa460ncom,
                   aqpa460calle,
                   aqpa460urba,
                   aqpa460depa,
                   aqpa460prov,
                   aqpa460dist,
                   aqpa460telf,
                   aqpa460web,
                   aqpa460cpais,
                   aqpa460cesun,
                   aqpa460seri,
                   aqpa460num,
                   aqpa460femi,
                   aqpa460tcomf,
                   aqpa460mone,
                   aqpa460corrr,
                   aqpa460mglo,
                   aqpa460coma,
                   aqpa460tpla,
                   aqpa460tope,
                   aqpa460tplco,
                   aqpa460clog,
                   aqpa460tdocr,
                   aqpa460nruc,
                   aqpa460rasoc,
                   aqpa460impt,
                   aqpa460hemi,
                   aqpa460simc,
                   aqpa460svitm,
                   aqpa460spvi,
                   aqpa460txml,
                   aqpa460sdref,
                   aqpa460ndref,
                   aqpa460cmem,
                   aqpa460sust,
                   aqpa460serie,
                   aqpa460nro,
                   aqpa460tcomp,
                   aqpa460fdref,
                   aqpa460cdist,
                   aqpa460call,
                   aqpa460urb,
                   aqpa460dep,
                   aqpa460prv,
                   aqpa460dst,
                   aqpa460cpai,
                   aqpa460item,
                   aqpa460pnetu,
                   aqpa460cantf,
                   aqpa460total,
                   aqpa460dete,
                   aqpa460ctpr,
                   aqpa460vvun,
                   aqpa460vvuig,
                   aqpa460desc,
                   aqpa460mfun,
                   aqpa460prvit,
                   aqpa460medem,
                   aqpa460csuna,
                   aqpa460cpgs1,
                   aqpa460ititm,
                   aqpa460imptb,
                   aqpa460impex,
                   aqpa460afigv,
                   aqpa460sisc,
                   aqpa460codtb,
                   aqpa460dstrb,
                   aqpa460codun,
                   aqpa460mbim,
                   aqpa460taimp,
                   aqpa460cdley,
                   aqpa460teley,
                   aqpa460text1,
                   aqpa460text2,
                   aqpa460trecv,
                   aqpa460templ,
                   aqpa460subje,
                   aqpa460vpcva,
                   aqpa460nexp,
                   aqpa460cind,
                   aqpa460npart,
                   aqpa460ncont,
                   aqpa460fotrc,
                   aqpa460cdisn,
                   aqpa460direh,
                   aqpa460urbh,
                   aqpa460prvh,
                   aqpa460dsth,
                   aqpa460depth,
                   aqpa460mtotal,
                   aqpa460baimp,
                   aqpa460mtimp,
                   aqpa460pcima,
                   aqpa460bsimp,
                   aqpa460vaimp,
                   aqpa460mtinf,
                   aqpa460mtgrt,
                   aqpa460bsimps,
                   aqpa460mtoti,
                   aqpa460pgc,
                   aqpa460mod,
                   aqpa460suc,
                   aqpa460trx,
                   aqpa460rel,
                   aqpa460ore,
                   aqpa460pgce,
                   aqpa460mode,
                   aqpa460suce,
                   aqpa460trxe,
                   aqpa460rele,
                   aqpa460fcone,
                   aqpa460glos,
                   aqpa460tipag,
                   aqpa460text3,
                   aqpa460text4,
                   aqpa460conce,
                   AQPA460DOCU --2023.07.18 dcastro 
                   )
                  select aqpa460tdoc, --aqpa460tdoc,
                         aqpa460rucc, --aqpa460rucc,
                         aqpa460rsoc, --aqpa460rsoc,
                         aqpa460cdis, --aqpa460cdis,
                         aqpa460ncom, --aqpa460ncom,
                         aqpa460calle, --aqpa460calle,
                         aqpa460urba, --aqpa460urba,
                         aqpa460depa, --aqpa460depa,
                         aqpa460prov, --aqpa460prov,
                         aqpa460dist, --aqpa460dist,
                         aqpa460telf, --aqpa460telf,
                         aqpa460web, --aqpa460web,
                         aqpa460cpais, --aqpa460cpais,
                         aqpa460cesun, --aqpa460cesun,
                         lc_serie, --aqpa460seri,
                         lc_correlativo, --aqpa460num,
                         --aqpa460femi, --aqpa460femi,
                         pd_hfcon, --aqpa460femi,
                         --'07',
                         lv_tipo_doc, --aqpa460tcomf,
                         aqpa460mone, --aqpa460mone,
                         aqpa460corrr, --aqpa460corrr,
                         aqpa460mglo, --aqpa460mglo,
                         aqpa460coma, --aqpa460coma,
                         aqpa460tpla, --aqpa460tpla,
                         aqpa460tope, --aqpa460tope,
                         aqpa460tplco, --aqpa460tplco,
                         aqpa460clog, --aqpa460clog,
                         aqpa460tdocr, --aqpa460tdocr,
                         aqpa460nruc, --aqpa460nruc,
                         aqpa460rasoc, --aqpa460rasoc,
                         aqpa460impt, --aqpa460impt,
                         aqpa460hemi, --aqpa460hemi,
                         aqpa460simc, --aqpa460simc,
                         aqpa460svitm, --aqpa460svitm,
                         aqpa460spvi, --aqpa460spvi,
                         aqpa460txml, --aqpa460txml,
                         aqpa460seri, --aqpa460sdref,
                         aqpa460num, --aqpa460ndref,
                         lv_doc_ori, --'01', --aqpa460cmem,
                         'Extorno de la operacion', --aqpa460sust,
                         aqpa460seri, --aqpa460serie,
                         aqpa460num, --aqpa460nro,
                         lv_codtipo, --aqpa460tcomp,
                         --pd_hfcon,    --aqpa460fdref,
                         aqpa460femi, --aqpa460fdref,
                         aqpa460cdist, --aqpa460cdist,
                         aqpa460call, --aqpa460call,
                         aqpa460urb, --aqpa460urb,
                         aqpa460dep, --aqpa460dep,
                         aqpa460prv, --aqpa460prv,
                         aqpa460dst, --aqpa460dst,
                         aqpa460cpai, --aqpa460cpai,
                         aqpa460item, --aqpa460item,
                         aqpa460pnetu, --aqpa460pnetu,
                         aqpa460cantf, --aqpa460cantf,
                         aqpa460total, --aqpa460total,
                         aqpa460dete, --aqpa460dete,
                         aqpa460ctpr, --aqpa460ctpr,
                         aqpa460vvun, --aqpa460vvun,
                         aqpa460vvuig, --aqpa460vvuig,
                         aqpa460desc, --aqpa460desc,
                         aqpa460mfun, --aqpa460mfun,
                         aqpa460prvit, --aqpa460prvit,
                         aqpa460medem, --aqpa460medem,
                         aqpa460csuna, --aqpa460csuna,
                         aqpa460cpgs1, --aqpa460cpgs1,
                         aqpa460ititm, --aqpa460ititm,
                         aqpa460imptb, --aqpa460imptb,
                         aqpa460impex, --aqpa460impex,
                         aqpa460afigv, --aqpa460afigv,
                         aqpa460sisc, --aqpa460sisc,
                         aqpa460codtb, --aqpa460codtb,
                         aqpa460dstrb, --aqpa460dstrb,
                         aqpa460codun, --aqpa460codun,
                         aqpa460mbim, --aqpa460mbim,
                         aqpa460taimp, --aqpa460taimp,
                         aqpa460cdley, --aqpa460cdley,
                         aqpa460teley, --aqpa460teley,
                         aqpa460text1, --aqpa460text1,
                         aqpa460text2, --aqpa460text2,
                         aqpa460trecv, --aqpa460trecv,
                         aqpa460templ, --aqpa460templ,
                         aqpa460subje, --aqpa460subje,
                         aqpa460vpcva, --aqpa460vpcva,
                         aqpa460nexp, --aqpa460nexp,
                         aqpa460cind, --aqpa460cind,
                         aqpa460npart, --aqpa460npart,
                         aqpa460ncont, --aqpa460ncont,
                         aqpa460fotrc, --aqpa460fotrc,
                         aqpa460cdisn, --aqpa460cdisn,
                         aqpa460direh, --aqpa460direh,
                         aqpa460urbh, --aqpa460urbh,
                         aqpa460prvh, --aqpa460prvh,
                         aqpa460dsth, --aqpa460dsth,
                         aqpa460depth, --aqpa460depth,
                         aqpa460mtotal, --aqpa460mtotal,
                         aqpa460baimp, --aqpa460baimp,
                         aqpa460mtimp, --aqpa460mtimp,
                         aqpa460pcima, --aqpa460pcima,
                         aqpa460bsimp, --aqpa460bsimp,
                         aqpa460vaimp, --aqpa460vaimp,
                         aqpa460mtinf, --aqpa460mtinf,
                         aqpa460mtgrt, --aqpa460mtgrt,
                         aqpa460bsimps, --aqpa460bsimps,
                         aqpa460mtoti, --aqpa460mtoti,
                         aqpa460pgc, --aqpa460pgc,
                         aqpa460mod, --aqpa460mod,
                         aqpa460suc, --aqpa460suc,
                         aqpa460trx, --aqpa460trx,
                         aqpa460rel, --aqpa460rel,
                         aqpa460ore, --aqpa460ore,
                         pn_pgcod, --aqpa460pgce,
                         pn_hcmod, --aqpa460mode,
                         pn_hsucor, --aqpa460suce,
                         pn_htran, --aqpa460trxe,
                         pn_hnrel, --aqpa460rele,
                         --pd_hfcon,--aqpa460fcone,
                         aqpa460femi, --aqpa460fcone,
                         aqpa460glos, --aqpa460glos,
                         aqpa460tipag, --aqpa460tipag,
                         aqpa460text3, --aqpa460text3,
                         aqpa460text4, --aqpa460text4,
                         aqpa460conce, --aqpa460conce
                         AQPA460DOCU --2023.07.18 dcastro 
                    from aqpa460 a
                   where a.aqpa460pgc = pn_pgcod
                     and a.aqpa460mod = pn_hcmod3
                     and a.aqpa460suc = pn_hsucor3
                     and a.aqpa460trx = pn_htran3
                     and a.aqpa460rel = pn_hnrel3
                     and a.aqpa460femi = pn_hfcon3
                     and a.aqpa460seri = lc_serieI
                     and a.aqpa460num = lc_correlativoI;
              
                commit;
              exception
                when others then
                  lc_coderr := sqlcode;
                  lc_msgerr := sqlerrm;
                
              end;
            
              --insertamos en AQPA464
              ln_cont := 1;
              for i in base(pn_pgcod,
                            pn_hcmod3,
                            pn_hsucor3,
                            pn_htran3,
                            pn_hnrel3,
                            pn_hfcon3,
                            lc_serieI,
                            lc_correlativoI) loop
              
                begin
                  insert into aqpa464
                    (aqpa464txtrub,
                     aqpa464pgcod,
                     aqpa464hcmod,
                     aqpa464hsucor,
                     aqpa464htran,
                     aqpa464hnrel,
                     aqpa464hfcon,
                     aqpa464doid,
                     aqpa464cpcod,
                     aqpa464vnro,
                     aqpa464vchr,
                     aqpa464vfch,
                     aqpa464vimp /*, aqpa464vtas*/,
                     aqpa464serie,
                     aqpa464nro,
                     aqpa464emp,
                     aqpa464mod,
                     aqpa464suc,
                     aqpa464mda,
                     aqpa464pap,
                     aqpa464cta,
                     aqpa464ope,
                     aqpa464sbo,
                     aqpa464top,
                     aqpa464hip,
                     aqpa464txtord,
                     aqpa464txoren,
                     aqpa464pgcode,
                     aqpa464hcmode,
                     aqpa464hsucore,
                     aqpa464htrane,
                     aqpa464hnrele,
                     aqpa464hfcone)
                  
                  values
                    (i.aqpa463txtrub,
                     i.aqpa463pgcod,
                     i.aqpa463hcmod,
                     i.aqpa463hsucor,
                     i.aqpa463htran,
                     i.aqpa463hnrel,
                     i.aqpa463hfcon,
                     ln_cont,
                     i.aqpa463hcpcod,
                     i.aqpa463hvnro,
                     i.aqpa463hvchr,
                     pd_hfcon,
                     ln_cont,
                     lc_serie,
                     lc_correlativo,
                     i.aqpa463emp,
                     i.aqpa463mod,
                     i.aqpa463suc,
                     i.aqpa463mda,
                     i.aqpa463pap,
                     i.aqpa463cta,
                     i.aqpa463ope,
                     i.aqpa463sbo,
                     i.aqpa463top,
                     i.aqpa463hip,
                     i.aqpa463txtord,
                     i.aqpa463txoren,
                     pn_pgcod,
                     pn_hcmod,
                     pn_hsucor,
                     pn_htran,
                     pn_hnrel,
                     pd_hfcon);
                
                  commit;
                exception
                  when others then
                    lc_coderr := sqlcode;
                    lc_msgerr := sqlerrm;
                  
                end;
                ln_cont := ln_cont + 1;
              
                ----insertando cabecera
                --si no existe registro insertar
                begin
                  select 'S'
                    into lc_flag466
                    from aqpa466 b
                   where b.aqpa466serie = lc_serie
                     and b.aqpa466corr = lc_correlativo
                     and b.aqpa466pgcod = i.aqpa463pgcod
                     and b.aqpa466mod = i.aqpa463hcmod
                     and b.aqpa466sucor = i.aqpa463hsucor
                     and b.aqpa466tran = i.aqpa463htran
                     and b.aqpa466rel = i.aqpa463hnrel
                     and b.aqpa466con = i.aqpa463hfcon;
                exception
                  when others then
                    lc_flag466 := 'N';
                end;
              
                if nvl(lc_flag466, 'N') = 'N' then
                
                  insert into aqpa466
                    (aqpa466serie,
                     aqpa466corr,
                     aqpa466pgcod,
                     aqpa466mod,
                     aqpa466sucor,
                     aqpa466tran,
                     aqpa466rel,
                     aqpa466con,
                     aqpa466hash)
                  values
                    (lc_serie,
                     lc_correlativo,
                     i.aqpa463pgcod,
                     i.aqpa463hcmod,
                     i.aqpa463hsucor,
                     i.aqpa463htran,
                     i.aqpa463hnrel,
                     i.aqpa463hfcon,
                     null);
                
                  commit;
                end if;
                -- fin cabecera
              ---
              
              end loop;
            
              --insertamos en AQPA466, NO
              lc_esta := null;
              if lv_tipo_doc = '87' then
                lc_esta := 'Z';
              end if;
            
            end if;
          end if; --25012019
        
        end if; ---fin de tipodocu 
      
      end if;
    
    end loop;
  
  end sp_cr_NotaCred_MAS;

  -----------------------------------------------------------
  procedure valida_recaudacion(pc_ruc   in char,
                               pn_hcmod in number,
                               pn_htran in number,
                               pc_ind   out char) is
    -----20220920 DCASTRO  valida si RUC pertenece a entidad de recaudacion, valida la transaccion si pertenece a recaudacion no debe ser generada.
    lc_existe    char(1);
    lc_existeTrx char(1);
  
  begin
  
    begin
      select 'S' --verifica si pertenece a empresas que informa area recaudacion
        into lc_existe
        from aqpc262 a
       where a.aqpc262ruc = trim(pc_ruc)
         and a.aqpc262est = 'S'; --20221029 se descomento validacion por estado
    exception
      when too_many_rows then
        lc_existe := 'S';
      when others then
        lc_existe := 'N';
    end;
  
    if lc_existe = 'S' then
    
      begin
        select 'S'
          into lc_existeTrx
          from fst198 k
         where k.tp1cod = 1
           and k.tp1cod1 = 11120
           and k.tp1corr1 = 41
           and k.tp1corr2 = 1
           and k.tp1nro1 > 0
           and k.TP1IMP1 = 1 --1 habilitado / 0 deshabilitado
           and k.tp1nro1 = pn_hcmod --modulo
           and k.tp1nro2 = pn_htran; --transaccion
      exception
        when others then
          lc_existeTrx := 'N';
      end;
    
      if nvl(lc_existeTrx, 'N') = 'S' then
        -- existe en las transacciones de recaudacion no debe generarse comprobantes
        pc_ind := 'S';
      else
        pc_ind := 'N';
      end if;
    else
      pc_ind := 'N';
    end if;
  
  end valida_recaudacion;

  ---------------------------------------------------------
  procedure sp_cr_Total_Comision1(pc_serie       in char,
                                  pn_correlativo in number,
                                  pd_hfcon       in date) is
  
    lv_desmda      varchar2(20);
    lc_mda         varchar2(20);
    lc_monto       varchar2(50);
    ln_monto       number(18, 2);
    ln_cant        number;
    ln_pgcod       number;
    ln_mod         number;
    ln_suc         number;
    ln_tran        number;
    ln_rel         number;
    ld_fec         date;
    ln_ot_comision number;
    lc_moneda      varchar2(20); --20221029
    lc_tipcam      number(10, 6);
  
  BEGIN
  
    ln_monto := 0;
    ln_cant  := 0;
  
    BEGIN
      select sum(a.AQPA460VVUN), count(*)
        into ln_monto, ln_cant
        from AQPA460 a
       where a.aqpa460seri = pc_serie
         and a.aqpa460num = pn_correlativo;
    exception
      when others then
        ln_monto := 0;
    END;
  
    ---2022.05.22 dcastro determinar monto total incluir OT por transferencia
    BEGIN
      select a.aqpa460pgc,
             a.aqpa460mod,
             a.aqpa460suc,
             a.aqpa460trx,
             a.aqpa460rel,
             a.aqpa460femi
        into ln_pgcod, ln_mod, ln_suc, ln_tran, ln_rel, ld_fec
        from AQPA460 a
       where a.aqpa460seri = pc_serie
         and a.aqpa460num = pn_correlativo
         and rownum = 1;
    exception
      when others then
        ln_pgcod := null;
        ln_mod   := null;
        ln_suc   := null;
        ln_tran  := null;
        ln_rel   := null;
        ld_fec   := null;
    END;
  
    begin
      select f.HCIMP1
        into ln_ot_comision
        from fsh016 f
       where f.PGCOD = ln_pgcod
         and f.HCMOD = ln_mod
         and f.HSUCOR = ln_suc
         and f.HTRAN = ln_tran
         and f.HNREL = ln_rel
         and f.hfcon = pd_hfcon --ld_fec
         and f.HRUBRO in --('2928070000122', '2918070000122');
             (select g.rubro
                from fsd014 g
               where g.rubro like '29_807000%'
                 and upper(g.pcnomr) like 'OT%COMISION%TRANS%');
    exception
      when others then
        ln_ot_comision := 0;
    end;
  
    ln_monto := ln_monto + ln_ot_comision;
    ----   
    ---20221029 se movio consulta antes de if ln_cant > 1
    BEGIN
      select distinct a.aqpa460mone
        into lc_mda
        from AQPA460 a
       where a.aqpa460seri = pc_serie
         and a.aqpa460num = pn_correlativo;
    exception
      when others then
        lc_mda := null;
    END;
  
    if lc_mda = 'PEN' then
      lv_desmda := 'SOLES';
    else
      lv_desmda := 'DOLARES';
    end if;
    --
    if ln_cant > 1 or ln_ot_comision > 0 --- 20220522 dcastro se agrego condicion para actualizar monto 
     then
    
      lc_monto := trim(pq_cr_factura_electronica.dintex(ln_monto)) || ' ' ||
                  lv_desmda;
    
      --actualiza
      begin
        update AQPA460 a
           set a.AQPA460MTINF = ln_monto,
               a.AQPA460IMPT  = ln_monto,
               a.AQPA460SVITM = ln_monto,
               a.AQPA460SPVI  = ln_monto,
               /*a.AQPA460TOTAL = ln_monto,
               a.AQPA460VVUN  = ln_monto,
               a.AQPA460VVUIG = ln_monto,
               a.AQPA460PRVIT = ln_monto,
               a.AQPA460MBIM = ln_monto, se comento campos de totales 2022.06.13 dcastro*/
               a.AQPA460TELEY = lc_monto
         where a.aqpa460seri = pc_serie
           and a.aqpa460num = pn_correlativo;
      
        commit;
      exception
        when others then
          null;
      end;
    
      if ln_cant = 1 then
        -- 20221029 se actualiza campos si solo existe 1 registro y importe <> total
        begin
          update AQPA460 a
             set a.AQPA460TOTAL = ln_monto,
                 a.AQPA460VVUN  = ln_monto,
                 a.AQPA460VVUIG = ln_monto,
                 a.AQPA460PRVIT = ln_monto,
                 a.AQPA460MBIM  = ln_monto
           where a.aqpa460seri = pc_serie
             and a.aqpa460num = pn_correlativo
             and a.AQPA460TOTAL <> a.AQPA460IMPT;
        
          commit;
        exception
          when others then
            null;
        end;
      
      end if; -- 20221029 se actualiza campos si solo existe 1 registro y importe <> total
    
    end if;
  
    /* 20221029*/
    --obtener moneda del rubro de COMISION 
    if ln_cant = 1 then
      begin
        select decode(substr(f.HRUBRO, 3, 1), 1, 'SOLES', 'DOLARES'),
               f.hctcbi
          into lc_moneda, lc_tipcam
          from fsh016 f
         where f.PGCOD = ln_pgcod
           and f.HCMOD = ln_mod
           and f.HSUCOR = ln_suc
           and f.HTRAN = ln_tran
           and f.HNREL = ln_rel
           and f.hfcon = pd_hfcon --ld_fec
              --and f.HRUBRO like '52%';-- 2023.06.24
          -- and (f.HRUBRO like '52%_2' or f.HRUBRO like '56%_2' ); -- 2023.06.24
          -- and (f.hrubro like '52%_3' or f.HRUBRO like '52%_2' or f.HRUBRO like '56%_2' or f.HRUBRO like '56_9%'); -- 2023.09.20 ahorraton
                     and (f.hrubro like '52_229%'  or f.HRUBRO like '56_2%' or f.HRUBRO like '56_9%'); -- 2023.10.25 actualizar rubros
      
      exception
        when others then
          lc_moneda := null;
      end;
      if lc_moneda <> lv_desmda then
        --actualizar campo moneda en AQPA460
        --actualizar descripcion en factura
        --actualiza
      
        if lc_moneda = 'SOLES' then
          --convertir a dolares                      
          ln_monto := trunc(ln_monto / lc_tipcam, 2);
        else
          ln_monto := trunc(ln_monto * lc_tipcam, 2);
        end if;
        lc_monto := trim(pq_cr_factura_electronica.dintex(ln_monto)) || ' ' ||
                    lv_desmda;
      
        begin
          update AQPA460 a
             set /*a.AQPA460TELEY = case when instr(a.AQPA460TELEY, 'DOLARES',  1) <> 0 then  REPLACE( a.AQPA460TELEY, 'DOLARES' , 'SOLES') 
                 when instr(a.AQPA460TELEY, 'SOLES',  1) <> 0 then  a.AQPA460TELEY 
                 else a.AQPA460TELEY || ' SOLES' end 
                 */ a.AQPA460MTINF = ln_monto,
                 a.AQPA460IMPT  = ln_monto,
                 a.AQPA460SVITM = ln_monto,
                 a.AQPA460SPVI  = ln_monto,
                 a.AQPA460TOTAL = ln_monto,
                 a.AQPA460VVUN  = ln_monto,
                 a.AQPA460VVUIG = ln_monto,
                 a.AQPA460PRVIT = ln_monto,
                 a.AQPA460MBIM  = ln_monto,
                 a.AQPA460TELEY = lc_monto,
                 a.aqpa460text4 = 'TipoCambio'
           where a.aqpa460seri = pc_serie
             and a.aqpa460num = pn_correlativo
             and a.aqpa460text4 is null;
        
          commit;
        exception
          when others then
            null;
        end;
      
      end if;
    end if;
    ---
  end sp_cr_Total_Comision1;

  ---------------------------------------
  procedure sp_cr_NotaCred_UNI(pc_Serie  in varchar2,
                               pn_numero in number,
                               pd_fecenv in date) is
    /*
    2022.11.18 dcastro creacion de procedimiento para generacion de nota de credito individual
    */
  
    pn_hcmod        number;
    pn_hsucor       number;
    pn_htran        number;
    pn_hnrel        number;
    pd_hfcon        date;
    pn_NRO_RELACION number;
    pd_FECHA_TX     date;
    pn_hcmod2       number;
    pn_hcmod3       number;
    pn_hsucor3      number;
    pn_htran3       number;
    pn_hnrel3       number;
    pn_hfcon3       date;
    lc_serie        char(4);
    lc_correlativo  char(8);
  
    pn_pgcod number;
    --Flag char(1):='N';
  
    lc_flg466  char(1) := 'N'; --controla que no exista en la aqpa466
    lc_flag466 char(1) := 'N';
  
    ln_rubro  number;
    lc_tipper char(1);
  
    lv_tipodocu     char(1);
    lc_comision     char(1);
    ln_guiaCP       number;
    lv_codtipo      char(2);
    lc_coderr       varchar2(1000);
    lc_msgerr       varchar2(1000);
    ln_cont         number;
    lc_serieI       char(4);
    lc_correlativoI char(8);
    lv_codrpt       number;
    lv_tipocre      varchar2(2);
    ln_flag         number;
  
    lc_tipo_doc char(1);
    lv_tipo_doc char(2);
    lv_doc_ori  char(2);
    lc_flr      char(1);
    lc_ftran    number;
    lc_fcont    char(1);
    lc_tipfin   char(1);
  
    lc_trxe char(1);
    lc_esta char(1);
  
    cursor fsx015 is
    
      select /* +all_rows */
      distinct a.aqpa460pgc pgcod,
               a.aqpa460mod hcmod,
               a.aqpa460suc hsucor,
               a.aqpa460trx htran,
               a.aqpa460rel hnrel,
               a.aqpa460femi hfcon,
               a.aqpa460seri,
               a.aqpa460num,
               'E' Indicador
        from aqpa460 a
       where AQPA460SERI = pc_serie
         and AQPA460NUM = pn_numero;
  
    cursor base(pn_pgcod        in number,
                pn_hcmod3       in number,
                pn_hsucor3      in number,
                pn_htran3       in number,
                pn_hnrel3       in number,
                pn_hfcon3       in date,
                lc_serieI       in char,
                lc_correlativoI in number) is
    
      select aqpa463txtrub,
             aqpa463pgcod,
             aqpa463hcmod,
             aqpa463hsucor,
             aqpa463htran,
             aqpa463hnrel,
             aqpa463hfcon,
             aqpa463hcpcod,
             aqpa463hvnro,
             trim(aqpa463hvchr) aqpa463hvchr,
             aqpa463hvnro aqpa463emp,
             aqpa463mod,
             aqpa463suc,
             aqpa463mda,
             aqpa463pap,
             aqpa463cta,
             aqpa463ope,
             aqpa463sbo,
             aqpa463top,
             aqpa463hip,
             trim(aqpa463txtord) aqpa463txtord,
             aqpa463txoren
        from aqpa463 a
       where a.aqpa463pgcod = pn_pgcod
         and a.aqpa463hcmod = pn_hcmod3
         and a.aqpa463hsucor = pn_hsucor3
         and a.aqpa463htran = pn_htran3
         and a.aqpa463hnrel = pn_hnrel3
         and a.aqpa463hfcon = pn_hfcon3
         and a.aqpa463serie = lc_serieI
         and a.aqpa463corre = lc_correlativoI;
  
  begin
  
    --25012019 dcastro
    begin
      select c.tp1nro1
        into ln_flag
        from fst198 c
       where c.tp1cod = 1
         and c.tp1cod1 = 11120
         and c.tp1corr1 = 7
         and c.tp1corr2 = 1;
    exception
      when others then
        null;
    end;
    --25012019
  
    for p in fsx015 loop
    
      lc_flg466 := 'N'; ---se comento para realizar la carga
    
      --Clave del documento a la cual se aplica: factura y boleta
      pn_pgcod  := p.pgcod;
      pn_hcmod  := p.hcmod;
      pn_hsucor := p.hsucor;
      pn_htran  := p.htran;
      pn_hnrel  := p.hnrel;
      pd_hfcon  := p.hfcon;
    
      if lc_flg466 = 'N' then
      
        --Por extorno 
        pn_NRO_RELACION := pn_hnrel;
      
        if pn_NRO_RELACION is not null then
          pd_FECHA_TX := pd_hfcon;
        
          pn_hcmod2 := pn_hcmod;
        
          lc_trxe := 'N';
        
          pn_pgcod   := p.pgcod;
          pn_hcmod3  := pn_hcmod2;
          pn_hsucor3 := pn_hsucor;
          pn_htran3  := pn_htran;
          pn_hnrel3  := pn_NRO_RELACION;
          pn_hfcon3  := pd_FECHA_TX;
        
        end if;
      
        lc_serieI       := p.aqpa460seri;
        lc_correlativoI := p.aqpa460num;
      
        lv_tipodocu := substr(lc_serieI, 1, 1);
        lv_tipocre  := substr(lc_serieI, 2, 1);
      
        if lv_tipodocu is not null then
        
          begin
            select distinct t.aqpa460tcomf
              into lv_doc_ori
              from aqpa460 t
             where t.aqpa460pgc = pn_pgcod
               and t.aqpa460mod = pn_hcmod3
               and t.aqpa460suc = pn_hsucor3
               and t.aqpa460trx = pn_htran3
               and t.aqpa460rel = pn_hnrel3
               and t.aqpa460femi = pn_hfcon3
               and t.aqpa460tcomf in ('01', '03', '13');
          exception
            when others then
              --2022.04.26 dcastro
              lv_doc_ori := null;
            
          end;
        
          if lv_doc_ori in ('01', '03') then
          
            --determinar tipo de cliente
            if lv_tipodocu = 'F' then
              lc_tipper := 'J';
              ln_guiaCP := 1;
            else
              lc_tipper := 'N';
              ln_guiaCP := 3;
            end if;
          
            begin
              select
              --'0' || to_char(a.tp1nro1)
               lpad(trim(a.tp1nro1), 2, '0')
                into lv_codtipo
                from fst198 a
               where a.tp1cod = 1
                 and a.tp1cod1 = 11120
                 and a.tp1corr1 = 1
                 and a.tp1corr2 = 7
                 and a.tp1corr3 = ln_guiaCP; --2018.10.10 se modifico codigo de guia para tipo comprobante
            exception
              when others then
                null;
            end;
          
          else
            lv_codtipo := '13';
          end if;
        
          --determinar si es comision - por defecto
          lc_comision := 'S';
          if lc_comision = 'S' then
            ln_rubro := 1;
          end if;
        
          -- b. Determinar si el rubro es considerado
          begin
            select 'S'
              into lc_flr
              from fst198 t
             where t.tp1cod = 1
               and t.tp1cod1 = 11120
               and t.tp1corr1 = 1
               and t.tp1corr2 = 23
               and t.tp1nro1 <> 0
               and t.tp1nro1 = ln_rubro;
          exception
            when others then
              lc_flr := 'N';
          end;
        
          --if (lv_tipocre in ('H','F') and ln_flag = 0) or ln_flag = 1 then
          if (lc_flr = 'S' and ln_flag = 0) or ln_flag = 1 or
             (lc_flr = 'N' and lc_comision = 'S') ---2022.04.22 dcastro
           then
          
            --Seleccionar tipo de documento    !!3
            -- Guía obtener transacciones GRAVADAS
            begin
              select 'S'
                into lc_tipo_doc
                from fst198 h
               where h.tp1cod = 1
                 and h.tp1cod1 = 11120
                 and h.tp1corr1 = 3
                 and h.tp1corr2 = 1
                 and h.tp1corr3 > 0
                 and h.tp1nro1 = pn_hcmod3
                 and h.tp1nro2 = pn_htran3;
            exception
              when others then
                lc_tipo_doc := 'N';
            end;
          
            ---Si es gravado --> 07  sino ---> 87
            lv_tipo_doc := '87';
          
            if lc_tipo_doc = 'S' then
              lv_tipo_doc := '07';
              lc_tipfin   := 'N';
            else
              ------
            
              begin
              
                lc_fcont := 'S';
                if lc_fcont = 'S' then
                
                  --Verificar en AQPB056
                  begin
                    select 'S'
                      into lc_tipfin
                      from aqpb056 a
                     where a.aqpb056pgc = pn_pgcod
                       and a.aqpb056mod = pn_hcmod
                       and a.aqpb056suc = pn_hsucor
                       and a.aqpb056trx = pn_htran
                       and a.aqpb056rel = pn_hnrel
                       and a.aqpb056fco = pd_hfcon
                       and a.aqpb056pge = pn_pgcod
                       and a.aqpb056moe = pn_hcmod3
                       and a.aqpb056sue = pn_hsucor3
                       and a.aqpb056tre = pn_htran3
                       and a.aqpb056ree = pn_hnrel3
                       and a.aqpb056fce = pn_hfcon3
                       and a.aqpb056tco = '87';
                  exception
                    when others then
                      begin
                        select 'S'
                          into lc_tipfin
                          from aqpb056h a
                         where a.aqpb056hpgc = pn_pgcod
                           and a.aqpb056hmod = pn_hcmod
                           and a.aqpb056hsuc = pn_hsucor
                           and a.aqpb056htrx = pn_htran
                           and a.aqpb056hrel = pn_hnrel
                           and a.aqpb056hfcon = pd_hfcon
                           and a.aqpb056hpgce = pn_pgcod
                           and a.aqpb056hmode = pn_hcmod3
                           and a.aqpb056hsuce = pn_hsucor3
                           and a.aqpb056htrxe = pn_htran3
                           and a.aqpb056hrele = pn_hnrel3
                           and a.aqpb056hfcone = pn_hfcon3
                           and a.aqpb056htcomf = '87';
                      exception
                        when others then
                          lc_tipfin := 'N';
                      end;
                    
                  end;
                
                  --Verificar si la transacción sigue activa
                  begin
                    select count(*)
                      into lc_ftran
                      from fst198 t
                     where t.tp1cod = 1
                       and t.tp1cod1 = 11120
                       and t.tp1corr1 = 10
                       and t.tp1corr2 = 1
                       and t.tp1corr3 <> 0
                       and t.tp1imp1 = 1
                       and t.tp1nro1 = pn_hcmod3
                       and t.tp1nro2 = pn_htran3;
                  exception
                    when others then
                      null;
                  end;
                  if (lc_tipfin = 'S' and lc_ftran > 0) then
                  
                    begin
                      select to_char(a.aqpb056ser), a.aqpb056num
                        into lc_serie, lc_correlativo
                        from aqpb056 a
                       where a.aqpb056pgc = pn_pgcod
                         and a.aqpb056mod = pn_hcmod
                         and a.aqpb056suc = pn_hsucor
                         and a.aqpb056trx = pn_htran
                         and a.aqpb056rel = pn_hnrel
                         and a.aqpb056fco = pd_hfcon
                         and a.aqpb056pge = pn_pgcod
                         and a.aqpb056moe = pn_hcmod3
                         and a.aqpb056sue = pn_hsucor3
                         and a.aqpb056tre = pn_htran3
                         and a.aqpb056ree = pn_hnrel3
                         and a.aqpb056fce = pn_hfcon3
                         and a.aqpb056tco = '87';
                    
                    exception
                      when others then
                      
                        select to_char(a.aqpb056hseri), a.aqpb056hnum
                          into lc_serie, lc_correlativo
                          from aqpb056h a
                         where a.aqpb056hpgc = pn_pgcod
                           and a.aqpb056hmod = pn_hcmod
                           and a.aqpb056hsuc = pn_hsucor
                           and a.aqpb056htrx = pn_htran
                           and a.aqpb056hrel = pn_hnrel
                           and a.aqpb056hfcon = pd_hfcon
                           and a.aqpb056hpgce = pn_pgcod
                           and a.aqpb056hmode = pn_hcmod3
                           and a.aqpb056hsuce = pn_hsucor3
                           and a.aqpb056htrxe = pn_htran3
                           and a.aqpb056hrele = pn_hnrel3
                           and a.aqpb056hfcone = pn_hfcon3
                           and a.aqpb056htcomf = '87';
                      
                    end;
                  
                  end if;
                
                end if;
              
              end;
              ------
            
            end if;
          
            lv_tipo_doc := '07';
            /* if (lv_tipo_doc = '87' and lc_tipfin = 'S') or
              (lv_tipo_doc = '07' and lc_tipfin = 'N') then
            */ --insertamos en AQPA460            
            begin
            
              begin
                pq_cr_facturacion.sp_cr_factura(pn_rubro       => ln_rubro,
                                                pc_tipcli      => lc_tipper,
                                                pc_tipo        => 'NC',
                                                pc_serie       => lc_serie,
                                                pc_correlativo => lc_correlativo);
              
              exception
                when others then
                  null;
              end;
            
              insert into AQPA460
                (aqpa460tdoc,
                 aqpa460rucc,
                 aqpa460rsoc,
                 aqpa460cdis,
                 aqpa460ncom,
                 aqpa460calle,
                 aqpa460urba,
                 aqpa460depa,
                 aqpa460prov,
                 aqpa460dist,
                 aqpa460telf,
                 aqpa460web,
                 aqpa460cpais,
                 aqpa460cesun,
                 aqpa460seri,
                 aqpa460num,
                 aqpa460femi,
                 aqpa460tcomf,
                 aqpa460mone,
                 aqpa460corrr,
                 aqpa460mglo,
                 aqpa460coma,
                 aqpa460tpla,
                 aqpa460tope,
                 aqpa460tplco,
                 aqpa460clog,
                 aqpa460tdocr,
                 aqpa460nruc,
                 aqpa460rasoc,
                 aqpa460impt,
                 aqpa460hemi,
                 aqpa460simc,
                 aqpa460svitm,
                 aqpa460spvi,
                 aqpa460txml,
                 aqpa460sdref,
                 aqpa460ndref,
                 aqpa460cmem,
                 aqpa460sust,
                 aqpa460serie,
                 aqpa460nro,
                 aqpa460tcomp,
                 aqpa460fdref,
                 aqpa460cdist,
                 aqpa460call,
                 aqpa460urb,
                 aqpa460dep,
                 aqpa460prv,
                 aqpa460dst,
                 aqpa460cpai,
                 aqpa460item,
                 aqpa460pnetu,
                 aqpa460cantf,
                 aqpa460total,
                 aqpa460dete,
                 aqpa460ctpr,
                 aqpa460vvun,
                 aqpa460vvuig,
                 aqpa460desc,
                 aqpa460mfun,
                 aqpa460prvit,
                 aqpa460medem,
                 aqpa460csuna,
                 aqpa460cpgs1,
                 aqpa460ititm,
                 aqpa460imptb,
                 aqpa460impex,
                 aqpa460afigv,
                 aqpa460sisc,
                 aqpa460codtb,
                 aqpa460dstrb,
                 aqpa460codun,
                 aqpa460mbim,
                 aqpa460taimp,
                 aqpa460cdley,
                 aqpa460teley,
                 aqpa460text1,
                 aqpa460text2,
                 aqpa460trecv,
                 aqpa460templ,
                 aqpa460subje,
                 aqpa460vpcva,
                 aqpa460nexp,
                 aqpa460cind,
                 aqpa460npart,
                 aqpa460ncont,
                 aqpa460fotrc,
                 aqpa460cdisn,
                 aqpa460direh,
                 aqpa460urbh,
                 aqpa460prvh,
                 aqpa460dsth,
                 aqpa460depth,
                 aqpa460mtotal,
                 aqpa460baimp,
                 aqpa460mtimp,
                 aqpa460pcima,
                 aqpa460bsimp,
                 aqpa460vaimp,
                 aqpa460mtinf,
                 aqpa460mtgrt,
                 aqpa460bsimps,
                 aqpa460mtoti,
                 aqpa460pgc,
                 aqpa460mod,
                 aqpa460suc,
                 aqpa460trx,
                 aqpa460rel,
                 aqpa460ore,
                 aqpa460pgce,
                 aqpa460mode,
                 aqpa460suce,
                 aqpa460trxe,
                 aqpa460rele,
                 aqpa460fcone,
                 aqpa460glos,
                 aqpa460tipag,
                 aqpa460text3,
                 aqpa460text4,
                 aqpa460conce,
                 AQPA460DOCU --2023.07.18 dcastro 
                 )
                select aqpa460tdoc, --aqpa460tdoc,
                       aqpa460rucc, --aqpa460rucc,
                       aqpa460rsoc, --aqpa460rsoc,
                       aqpa460cdis, --aqpa460cdis,
                       aqpa460ncom, --aqpa460ncom,
                       aqpa460calle, --aqpa460calle,
                       aqpa460urba, --aqpa460urba,
                       aqpa460depa, --aqpa460depa,
                       aqpa460prov, --aqpa460prov,
                       aqpa460dist, --aqpa460dist,
                       aqpa460telf, --aqpa460telf,
                       aqpa460web, --aqpa460web,
                       aqpa460cpais, --aqpa460cpais,
                       aqpa460cesun, --aqpa460cesun,
                       lc_serie, --aqpa460seri,
                       lc_correlativo, --aqpa460num,
                       --aqpa460femi, --aqpa460femi,
                       pd_fecenv, --------------<<< pd_hfcon, --aqpa460femi,
                       --'07',
                       lv_tipo_doc, --aqpa460tcomf,
                       aqpa460mone, --aqpa460mone,
                       aqpa460corrr, --aqpa460corrr,
                       aqpa460mglo, --aqpa460mglo,
                       aqpa460coma, --aqpa460coma,
                       aqpa460tpla, --aqpa460tpla,
                       aqpa460tope, --aqpa460tope,
                       aqpa460tplco, --aqpa460tplco,
                       aqpa460clog, --aqpa460clog,
                       aqpa460tdocr, --aqpa460tdocr,
                       aqpa460nruc, --aqpa460nruc,
                       aqpa460rasoc, --aqpa460rasoc,
                       aqpa460impt, --aqpa460impt,
                       aqpa460hemi, --aqpa460hemi,
                       aqpa460simc, --aqpa460simc,
                       aqpa460svitm, --aqpa460svitm,
                       aqpa460spvi, --aqpa460spvi,
                       aqpa460txml, --aqpa460txml,
                       aqpa460seri, --aqpa460sdref,
                       aqpa460num, --aqpa460ndref,
                       lv_doc_ori, --'01', --aqpa460cmem,
                       'Extorno de la operacion', --aqpa460sust,
                       aqpa460seri, --aqpa460serie,
                       aqpa460num, --aqpa460nro,
                       lv_codtipo, --aqpa460tcomp,
                       --pd_hfcon,    --aqpa460fdref,
                       aqpa460femi, --aqpa460fdref,
                       aqpa460cdist, --aqpa460cdist,
                       aqpa460call, --aqpa460call,
                       aqpa460urb, --aqpa460urb,
                       aqpa460dep, --aqpa460dep,
                       aqpa460prv, --aqpa460prv,
                       aqpa460dst, --aqpa460dst,
                       aqpa460cpai, --aqpa460cpai,
                       aqpa460item, --aqpa460item,
                       aqpa460pnetu, --aqpa460pnetu,
                       aqpa460cantf, --aqpa460cantf,
                       aqpa460total, --aqpa460total,
                       aqpa460dete, --aqpa460dete,
                       aqpa460ctpr, --aqpa460ctpr,
                       aqpa460vvun, --aqpa460vvun,
                       aqpa460vvuig, --aqpa460vvuig,
                       trim(aqpa460desc), --aqpa460desc,
                       substr(trim(aqpa460mfun), 1, 499), --aqpa460mfun,
                       aqpa460prvit, --aqpa460prvit,
                       aqpa460medem, --aqpa460medem,
                       aqpa460csuna, --aqpa460csuna,
                       aqpa460cpgs1, --aqpa460cpgs1,
                       aqpa460ititm, --aqpa460ititm,
                       aqpa460imptb, --aqpa460imptb,
                       aqpa460impex, --aqpa460impex,
                       aqpa460afigv, --aqpa460afigv,
                       aqpa460sisc, --aqpa460sisc,
                       aqpa460codtb, --aqpa460codtb,
                       aqpa460dstrb, --aqpa460dstrb,
                       aqpa460codun, --aqpa460codun,
                       aqpa460mbim, --aqpa460mbim,
                       aqpa460taimp, --aqpa460taimp,
                       aqpa460cdley, --aqpa460cdley,
                       aqpa460teley, --aqpa460teley,
                       aqpa460text1, --aqpa460text1,
                       aqpa460text2, --aqpa460text2,
                       aqpa460trecv, --aqpa460trecv,
                       aqpa460templ, --aqpa460templ,
                       aqpa460subje, --aqpa460subje,
                       aqpa460vpcva, --aqpa460vpcva,
                       aqpa460nexp, --aqpa460nexp,
                       aqpa460cind, --aqpa460cind,
                       aqpa460npart, --aqpa460npart,
                       aqpa460ncont, --aqpa460ncont,
                       aqpa460fotrc, --aqpa460fotrc,
                       aqpa460cdisn, --aqpa460cdisn,
                       aqpa460direh, --aqpa460direh,
                       aqpa460urbh, --aqpa460urbh,
                       aqpa460prvh, --aqpa460prvh,
                       aqpa460dsth, --aqpa460dsth,
                       aqpa460depth, --aqpa460depth,
                       aqpa460mtotal, --aqpa460mtotal,
                       aqpa460baimp, --aqpa460baimp,
                       aqpa460mtimp, --aqpa460mtimp,
                       aqpa460pcima, --aqpa460pcima,
                       aqpa460bsimp, --aqpa460bsimp,
                       aqpa460vaimp, --aqpa460vaimp,
                       aqpa460mtinf, --aqpa460mtinf,
                       aqpa460mtgrt, --aqpa460mtgrt,
                       aqpa460bsimps, --aqpa460bsimps,
                       aqpa460mtoti, --aqpa460mtoti,
                       aqpa460pgc, --aqpa460pgc,
                       aqpa460mod, --aqpa460mod,
                       aqpa460suc, --aqpa460suc,
                       aqpa460trx, --aqpa460trx,
                       aqpa460rel, --aqpa460rel,
                       aqpa460ore, --aqpa460ore,
                       pn_pgcod, --aqpa460pgce,
                       pn_hcmod, --aqpa460mode,
                       pn_hsucor, --aqpa460suce,
                       pn_htran, --aqpa460trxe,
                       pn_hnrel, --aqpa460rele,
                       --pd_hfcon,--aqpa460fcone,
                       aqpa460femi, --aqpa460fcone,
                       aqpa460glos, --aqpa460glos,
                       aqpa460tipag, --aqpa460tipag,
                       aqpa460text3, --aqpa460text3,
                       aqpa460text4, --aqpa460text4,
                       aqpa460conce, --aqpa460conce
                       AQPA460DOCU --2023.07.18 dcastro 
                  from aqpa460 a
                 where a.aqpa460pgc = pn_pgcod
                   and a.aqpa460mod = pn_hcmod3
                   and a.aqpa460suc = pn_hsucor3
                   and a.aqpa460trx = pn_htran3
                   and a.aqpa460rel = pn_hnrel3
                   and a.aqpa460femi = pn_hfcon3
                   and a.aqpa460seri = lc_serieI
                   and a.aqpa460num = lc_correlativoI;
            
              commit;
            exception
              when others then
                lc_coderr := sqlcode;
                lc_msgerr := sqlerrm;
              
            end;
          
            --insertamos en AQPA464
            ln_cont := 1;
            for i in base(pn_pgcod,
                          pn_hcmod3,
                          pn_hsucor3,
                          pn_htran3,
                          pn_hnrel3,
                          pn_hfcon3,
                          lc_serieI,
                          lc_correlativoI) loop
            
              begin
                insert into aqpa464
                  (aqpa464txtrub,
                   aqpa464pgcod,
                   aqpa464hcmod,
                   aqpa464hsucor,
                   aqpa464htran,
                   aqpa464hnrel,
                   aqpa464hfcon,
                   aqpa464doid,
                   aqpa464cpcod,
                   aqpa464vnro,
                   aqpa464vchr,
                   aqpa464vfch,
                   aqpa464vimp /*, aqpa464vtas*/,
                   aqpa464serie,
                   aqpa464nro,
                   aqpa464emp,
                   aqpa464mod,
                   aqpa464suc,
                   aqpa464mda,
                   aqpa464pap,
                   aqpa464cta,
                   aqpa464ope,
                   aqpa464sbo,
                   aqpa464top,
                   aqpa464hip,
                   aqpa464txtord,
                   aqpa464txoren,
                   aqpa464pgcode,
                   aqpa464hcmode,
                   aqpa464hsucore,
                   aqpa464htrane,
                   aqpa464hnrele,
                   aqpa464hfcone)
                
                values
                  (i.aqpa463txtrub,
                   i.aqpa463pgcod,
                   i.aqpa463hcmod,
                   i.aqpa463hsucor,
                   i.aqpa463htran,
                   i.aqpa463hnrel,
                   i.aqpa463hfcon,
                   ln_cont,
                   i.aqpa463hcpcod,
                   i.aqpa463hvnro,
                   i.aqpa463hvchr,
                   pd_hfcon,
                   ln_cont,
                   lc_serie,
                   lc_correlativo,
                   i.aqpa463emp,
                   i.aqpa463mod,
                   i.aqpa463suc,
                   i.aqpa463mda,
                   i.aqpa463pap,
                   i.aqpa463cta,
                   i.aqpa463ope,
                   i.aqpa463sbo,
                   i.aqpa463top,
                   i.aqpa463hip,
                   i.aqpa463txtord,
                   i.aqpa463txoren,
                   pn_pgcod,
                   pn_hcmod,
                   pn_hsucor,
                   pn_htran,
                   pn_hnrel,
                   pd_hfcon);
              
                commit;
              exception
                when others then
                  lc_coderr := sqlcode;
                  lc_msgerr := sqlerrm;
                
              end;
              ln_cont := ln_cont + 1;
            
              ----insertando cabecera
              --si no existe registro insertar
              begin
                select 'S'
                  into lc_flag466
                  from aqpa466 b
                 where b.aqpa466serie = lc_serie
                   and b.aqpa466corr = lc_correlativo
                   and b.aqpa466pgcod = i.aqpa463pgcod
                   and b.aqpa466mod = i.aqpa463hcmod
                   and b.aqpa466sucor = i.aqpa463hsucor
                   and b.aqpa466tran = i.aqpa463htran
                   and b.aqpa466rel = i.aqpa463hnrel
                   and b.aqpa466con = i.aqpa463hfcon;
              exception
                when others then
                  lc_flag466 := 'N';
              end;
            
              if nvl(lc_flag466, 'N') = 'N' then
              
                insert into aqpa466
                  (aqpa466serie,
                   aqpa466corr,
                   aqpa466pgcod,
                   aqpa466mod,
                   aqpa466sucor,
                   aqpa466tran,
                   aqpa466rel,
                   aqpa466con,
                   aqpa466hash)
                values
                  (lc_serie,
                   lc_correlativo,
                   i.aqpa463pgcod,
                   i.aqpa463hcmod,
                   i.aqpa463hsucor,
                   i.aqpa463htran,
                   i.aqpa463hnrel,
                   i.aqpa463hfcon,
                   null);
              
                commit;
              end if;
              -- fin cabecera
            ---
            end loop;
          
            /* end if;*/
          end if; --25012019
        
        end if; ---fin de tipodocu 
      
      end if;
    
    end loop;
  
  end sp_cr_NotaCred_UNI;
  -------------------------------------

  ---------------
  procedure sp_cr_Comision_REGU(p_pgcod  in number,
                                p_hcmod  in number,
                                p_hsucor in number,
                                p_htran  in number,
                                p_hnrel  in number,
                                p_hfcon  in date,
                                p_pcorr  out number) is
    --      
  
    lc_serie   char(4);
    lc_corre   char(8);
    ln_relant  number(4) := 0;
    lc_hipo    char(2);
    ln_emp     number(3);
    ln_mod     number(3);
    ln_suc     number(3);
    ln_mda     number(4);
    ln_pap     number(4);
    ln_cta     number(9);
    ln_ope     number(9);
    ln_sbo     number(3);
    ln_top     number(3);
    lc_flg     char(1) := 'N'; --controla que sea hipotecario
    pn_ordinal number(2);
    lc_flg465  char(1) := 'N'; --controla que no exista registro AQPA465
  
    ln_modulo number(3) := 0;
    ln_tran   number(3) := 0;
    ln_sucur  number(3) := 0;
  
    pn_pais   number(3);
    pn_petdoc number(2);
    pn_pendoc char(12);
    ln_rubro  number;
    lc_tipper char(1);
  
    lc_coderr varchar2(1000);
    lc_msgerr varchar2(1000);
  
    lc_error char(1);
  
    ln_mod1  number;
    ln_trx1  number;
    
    lc_indGratuita char(1); -- 2023.10.10 dcastro indicador transferencia gratuita    
    lc_NotaDebito  char(1); --2023.10.10 dcastro indicador nota debito   
        
    cursor movimientos is
      select a.PGCOD  pgcod,
             a.HCMOD  hcmod,
             a.HSUCOR hsucor,
             a.HTRAN  htran,
             a.HNREL  hnrel,
             a.HFCON  hfcon,
             a.hcord  ordinal
        from fsh016 a
       where a.pgcod = p_pgcod
         and a.hcmod = p_hcmod
         and a.hsucor = p_hsucor
         and a.htran = p_htran
         and a.hnrel = p_hnrel
         and a.hfcon = p_hfcon
         and a.hcta <> 0
         and rownum = 1;
  
    cursor transacciones(pn_pgcod  in number,
                         pn_hcmod  in number,
                         pn_hsucor in number,
                         pn_htran  in number,
                         pn_hnrel  in number,
                         pd_hfcon  in date) is
    
      select a.PGCOD pgcod,
             a.HCMOD hcmod,
             a.HSUCOR hsucor,
             a.HTRAN htran,
             a.HNREL hnrel,
             a.HFCON hfcon,
             a.HCORD hcord,
             a.HCTA,
             trim(to_char(a.hcimp1, '99999999999999999.99')) txtren
        from fsh016 a
       where a.pgcod = pn_pgcod
         and a.hcmod = pn_hcmod
         and a.hsucor = pn_hsucor
         and a.htran = pn_htran
         and a.hnrel = pn_hnrel
         and a.hfcon = pd_hfcon
            --and a.hrubro like '52%'; 2023.06.24
         --and (a.hrubro like '52%_2' or a.hrubro like '56%_2'); -- 2023.06.24
         --and (a.hrubro like '52%_3' or a.hrubro like '52%_2' or a.hrubro like '56%_2' or a.hrubro like '56_9%'); --2020.09.20 ahorraton
         and (a.hrubro like '52_229%'  or a.HRUBRO like '56_2%' or a.HRUBRO like '56_9%'); -- 2023.10.25 actualizar rubros
         
         
    ln_ordinal number;
    ln_con1    number;
    ln_con2    number;
    ln_con3    number;
  
    lc_tipotrx varchar2(10);
  
    ln_nrocta number;
    lc_descta varchar2(50);
  
    lc_excluirdoc varchar2(1);
    ld_fecpro     date;
    pn_hfcon      date;
  
  begin
  
    lc_tipotrx := 'MOV'; --por defecto se inicializa en MOV -- 2018.10.16    
    for x in movimientos loop
      pn_hfcon := x.hfcon;
      for p in transacciones(x.pgcod,
                             x.hcmod,
                             x.hsucor,
                             x.htran,
                             x.hnrel,
                             x.hfcon) loop
        lc_flg465 := 'N';
      
        --obtener la cuenta de acuerdo a concepto
        ln_cta := p.hcta;
      
        if lc_flg465 = 'N' then
          --
          lc_tipotrx := 'MOV';
        
          begin
            pq_cr_factura_electronica.sp_cr_pk_credito(pc_aqpa465pgcod    => p.pgcod,
                                                       pc_aqpa465mod      => p.hcmod,
                                                       pc_aqpa465sucorend => p.hsucor,
                                                       pc_aqpa465tran     => p.htran,
                                                       pc_aqpa465rel      => p.hnrel,
                                                       pc_aqpa465ord      => p.hcord, --pn_ordinal,
                                                       pd_aqpa465con      => p.hfcon,
                                                       pn_cod             => ln_emp,
                                                       pn_mod             => ln_mod,
                                                       pn_suc             => ln_suc,
                                                       pn_mda             => ln_mda,
                                                       pn_pap             => ln_pap,
                                                       pn_cta             => ln_cta,
                                                       pn_ope             => ln_ope,
                                                       pn_sbo             => ln_sbo,
                                                       pn_top             => ln_top,
                                                       pc_flag            => lc_flg,
                                                       pn_rubro           => ln_rubro);
          
          exception
            when others then
              null;
          end;
        
          begin
            pq_cr_factura_electronica.sp_pa_cuenta(p_n_pgcod  => p.pgcod,
                                                   p_n_itsuc  => p.hsucor,
                                                   p_n_itmod  => p.hcmod,
                                                   p_n_ittran => p.htran,
                                                   p_n_itnrel => p.hnrel,
                                                   p_n_itord  => p.hcord, --ln_ordinal, --p.ordinal,
                                                   p_d_itfcon => p.hfcon,
                                                   p_n_cuenta => ln_cta,
                                                   p_n_moneda => ln_mda);
          
          end;
        
          if ln_cta = 0 then
            ln_ordinal := x.ordinal;
            begin
              select hcta
                into ln_cta
                from fsh016 f
               where f.pgcod = p.pgcod
                 and f.hsucor = p.hsucor
                 and f.hcmod = p.hcmod
                 and f.htran = p.htran
                 and f.hnrel = p.hnrel
                 and f.hfcon = p.hfcon
                 and f.hcord = ln_ordinal;
            exception
              when others then
                ln_cta := 0;
            end;
          
          end if;
        
          ln_rubro := 15;
        
          if ln_cta = 0 then
            --
            ln_cta := p.hcta;
          end if;
        
          lc_flg := 'S'; -- 2021/10/20 se agrego
        
          if lc_flg = 'S' then
          
            if ln_relant <> p.hnrel or p.hcmod <> ln_modulo or
               p.htran <> ln_tran or p.hsucor <> ln_sucur then
            
              if ln_cta = 999999999 or ln_cta = 0 --se agregó condición 24/12/2018
               then
                pn_pais   := null;
                pn_petdoc := null;
                pn_pendoc := null; --20211023
              
              else
              
                begin
                  ---se obtiene NDI/ TIPO de doc                  
                  select a.pepais, a.petdoc, a.pendoc
                    into pn_pais, pn_petdoc, pn_pendoc
                    from fsr008 a
                   where a.ctnro = ln_cta ---
                     and a.cttfir = 'T';
                exception
                  when others then
                    pn_pais   := null;
                    pn_petdoc := null;
                    pn_pendoc := null;
                end;
              
                begin
                  pq_cr_facturacion.sp_cr_tipo_cliente(pn_pais   => pn_pais,
                                                       pn_tipdoc => pn_petdoc,
                                                       pc_numdoc => pn_pendoc,
                                                       pc_tipper => lc_tipper);
                end;
              end if; --fin valida cuenta cliente
            
              if ln_cta <> 0 then
                --- se agregó 2021/10/20 dcastro
              
                begin
                  pq_cr_facturacion.sp_cr_factura(pn_rubro       => ln_rubro,
                                                  pc_tipcli      => lc_tipper,
                                                  pc_tipo        => lc_tipotrx,
                                                  pc_serie       => lc_serie,
                                                  pc_correlativo => lc_corre);
                
                exception
                  when others then
                    null; ---
                end;
                ---fin 20211111 dcastro
              
              end if; --- se agregó 2021/10/20 dcastro
            
            end if;
          
          end if; ----relacion
        
          ln_relant := p.hnrel;
          ln_modulo := p.hcmod;
          ln_tran   := p.htran;
          ln_sucur  := p.hsucor;
        
          if lc_tipotrx = 'MOV' then
            --inicio insercion
          
            begin
              lc_error := 'N';
              insert into aqpa463
                (aqpa463txtrub,
                 aqpa463pgcod,
                 aqpa463hcmod,
                 aqpa463hsucor,
                 aqpa463htran,
                 aqpa463hnrel,
                 aqpa463hfcon,
                 aqpa463hcord,
                 aqpa463txoren,
                 aqpa463txtord,
                 aqpa463hcpcod,
                 aqpa463hvnro,
                 aqpa463hvchr,
                 aqpa463serie,
                 aqpa463corre,
                 aqpa463emp,
                 aqpa463mod,
                 aqpa463suc,
                 aqpa463mda,
                 aqpa463pap,
                 aqpa463cta,
                 aqpa463ope,
                 aqpa463sbo,
                 aqpa463top,
                 aqpa463hip
                 
                 )
              values
                (null, --p.txtrub,
                 p.pgcod,
                 p.hcmod,
                 p.hsucor,
                 p.htran,
                 p.hnrel,
                 p.hfcon,
                 p.hcord,
                 p.hcord, ---1,--p.txtren,--p.txoren,
                 p.txtren, --p.txtord,
                 p.hcord,
                 null, --p.se170hvnro,
                 'Cobro en efectivo', --p.se170hvchr,
                 lc_serie,
                 lc_corre,
                 ln_emp,
                 ln_mod,
                 ln_suc,
                 ln_mda,
                 ln_pap,
                 ln_cta,
                 ln_ope,
                 ln_sbo,
                 ln_top,
                 lc_hipo);
              commit;
            exception
              when others then
                lc_coderr := sqlcode;
                lc_msgerr := trim(sqlerrm);
                lc_error  := 'S';
              
                insert into aqpa460E
                  (aqpa460eserie,
                   aqpa460ecorr,
                   aqpa460epgcod,
                   aqpa460emod,
                   aqpa460esucorend,
                   aqpa460etran,
                   aqpa460erel,
                   aqpa460econ,
                   aqpa460etip,
                   Aqpa460eacoe,
                   Aqpa460eamsge)
                values
                  (lc_serie,
                   lc_corre,
                   p.pgcod,
                   p.hcmod,
                   p.hsucor,
                   p.htran,
                   p.hnrel,
                   p.hfcon,
                   'S',
                   lc_coderr,
                   lc_msgerr);
                commit;
              
            end;
          
          end if;
        
        end if;
      
        -- end if;
        ln_ordinal := p.hcord;
        ---2023.09.20
        ln_mod1  := p.hcmod;
        ln_trx1  := p.htran;
        ---2023.09.20        
      end loop;
    
      if lc_tipotrx = 'MOV' then
        if ln_cta <> 999999999 or ln_cta <> 0 then
          --- se agregó 2021/10/20 dcastro
        
          begin
            pq_cr_factura_electronica.sp_cr_Detalle_Fact_CO1(pn_hfcon,
                                                             lc_serie,
                                                             lc_corre,
                                                             ln_ordinal); --pn_concepto
          
          exception
            when others then
              null;
          end;
        
          ---2023.09.20 ahorraton
          lc_indGratuita := 'N'; 
           begin
                select 'S' --si existe es transferencia gratuita
                into lc_indGratuita
                from fst198 a
               where a.tp1cod = 1
                 and a.tp1cod1 = 11120-- for update
                 and a.tp1corr1 = 41
                 and a.tp1corr2 > 0
                 and a.tp1nro1 = ln_mod1
                 and a.tp1nro2 = ln_trx1;
            exception when others then
                  lc_indGratuita := 'N'; 
            end;
            if lc_indGratuita = 'S' then ---if ln_mod1 = 98 and ln_trx1 in ( 779) then  --236
                 null;
            else ---2023.09.20 ahorraton
            
                ---lc_concepto :=     COLOCAR CONCEPTO ----por transaccion
                begin
                  update aqpa460 a
                     set --a.aqpa460femi = trunc(sysdate), MANTIENE FECHA ORIGINAL 2023.11.01
                         a.aqpa460desc = 'Comision-Servicios '
                   where a.aqpa460seri = lc_serie
                     and a.aqpa460num = lc_corre;
                end;
            end if;  ---2023.09.20 ahorraton
                    
          begin
            pq_cr_factura_electronica.sp_cr_total_comision1(pc_serie       => lc_serie,
                                                            pn_correlativo => lc_corre,
                                                            pd_hfcon       => pn_hfcon); --- 20221029 se agrego fecha
          exception
            when others then
              null;
          end;
        
          begin
            pq_cr_factura_electronica.sp_cr_cabecera_trx(pd_pgfape      => pn_hfcon,
                                                         pc_serie       => lc_serie,
                                                         pn_correlativo => lc_corre,
                                                         pn_concepto    => ln_ordinal /*pn_concepto*/);
          exception
            when others then
              null;
          end;
        
          p_pcorr := lc_corre;
        
        end if;
      end if;
    
    END LOOP;
  
  END sp_cr_Comision_REGU;
  ---------------------------------------
  procedure sp_tra_genera_IGV(pc_AQPA465PGCOD in number,
                              pc_AQPA465MOD   in number,
                              pc_AQPA465SUCOR in number,
                              pc_AQPA465TRAN  in number,
                              pc_AQPA465REL   in number,
                              pc_AQPA465CON   in date) is
  
    pn_pgcod  number;
    lc_serie  char(4);
    lc_corre  char(8);
    ln_relant number(4) := 0;
    lc_hipo   char(2);
    ln_emp    number(3);
    ln_mod    number(3);
    ln_suc    number(3);
    ln_mda    number(4);
    ln_pap    number(4);
    ln_cta    number(9);
    ln_ope    number(9);
    ln_sbo    number(3);
    ln_top    number(3);
    lc_flg    char(1) := 'N';
  
    lc_flg465 char(1) := 'N';
  
    ln_modulo number(3) := 0;
    ln_tran   number(3) := 0;
    ln_sucur  number(3) := 0;
  
    ln_rubro number;
  
    pn_pais   number(3);
    pn_petdoc number(2);
    pn_pendoc char(12);
    lc_tipper char(1);
  
    lc_coderr char(100);
    lc_msgerr char(1000);
  
    lc_indigv char(1); --
    pd_fecpro DATE := pc_AQPA465CON;
  
    cursor transacciones is
    
    /*   select 
              a.jaqz675cod  pgcod,
                     a.jaqz675mod  hcmod,
                     a.jaqz675suc  hsucor,
                     a.jaqz675trn  htran,
                     a.jaqz675nre  hnrel,
                     a.jaqz675fco  hfcon,
                     a.jaqz675tru  txtrub,
                     a.jaqz675cor  hcord,
                     a.jaqz675toe  txoren,
                     a.jaqz675tor  txtord,
                     b.st171hcpcod st171hcpcod,
                     b.se170hvnro  se170hvnro,
                     b.se170hvchr  se170hvchr
                from jaqz675 a, fse170h b
               where a.jaqz675cod = b.sd170hdoemp
                 and a.jaqz675tru = b.sd170hdoid
                 and a.jaqz675cpc = b.st171hcpcod
                 and a.jaqz675fco = b.sd170hfecha
                 and a.jaqz675fco = pc_AQPA465CON
                 and a.jaqz675cod = pc_AQPA465PGCOD 
                 and a.jaqz675mod = pc_AQPA465MOD   
                 and a.jaqz675suc = pc_AQPA465SUCOR 
                 and a.jaqz675trn = pc_AQPA465TRAN  
                 and a.jaqz675nre = pc_AQPA465REL   
                 and (a.jaqz675mod, a.jaqz675trn) in
                     (select k.tp1nro1, k.tp1nro2
                        from fst198 k
                       where k.tp1cod = 1
                         and k.tp1cod1 = 11120
                         and k.tp1corr1 = 3
                         and k.tp1corr2 = 1
                         and tp1corr3 > 0)
                order by a.jaqz675cod,
                        a.jaqz675mod,
                        a.jaqz675suc,
                        a.jaqz675trn,
                        a.jaqz675nre,
                        a.jaqz675fco;*/
    
/*      select \*+all_rows *\
       h.sr171trord ordinal, a.*
        from (select f.txtrub,
                     f.pgcod,
                     f.hcmod,
                     f.hsucor,
                     f.htran,
                     f.hnrel,
                     f.hfcon,
                     f.hcord,
                     f.txoren,
                     f.txtord,
                     g.st171cpcod,
                     g.se170vnro,
                     g.se170vchr
                from fsx016 f, fse170 g
               where f.pgcod = 1
                 and g.sd170doemp = 1 --20180720 se agrego condicion por optimizacion DCASTRO
                 and f.pgcod = g.sd170doemp --20180720 se agrego condicion por optimizacion DCASTRO
                 and g.sd170doid = f.txtrub
                 and f.txoren = g.st171cpcod + 100
                 and f.hfcon = pc_AQPA465CON ---fecha del dia???? --sysdate
                 and f.txcod = 200) a
        left join fsr171 h
          on h.st171cpcod = a.st171cpcod
         and h.sr171trmod = a.hcmod
         and h.sr171trnro = a.htran
       where a.pgcod  = pc_AQPA465PGCOD
         and a.hcmod  = pc_AQPA465MOD
         and a.hsucor = pc_AQPA465SUCOR
         and a.htran  = pc_AQPA465TRAN
         and a.hnrel  = pc_AQPA465REL
         and a.hfcon  = pc_AQPA465CON
       order by a.pgcod, a.hcmod, a.hsucor, a.htran, a.hnrel, a.hfcon;*/
 
    select a.PGCOD  pgcod,
             a.HCMOD  hcmod,
             a.HSUCOR hsucor,
             a.HTRAN  htran,
             a.HNREL  hnrel,
             a.HFCON  hfcon,
             a.hcord  ordinal,
             a.hcord  hcord,
             trim(to_char(a.hcimp1, '99999999999999999.99')) txtren
        from fsh016 a
       where a.pgcod  = pc_AQPA465PGCOD
         and a.hcmod  = pc_AQPA465MOD
         and a.hsucor = pc_AQPA465SUCOR
         and a.htran  = pc_AQPA465TRAN
         and a.hnrel  = pc_AQPA465REL
         and a.hfcon  = pc_AQPA465CON
         and a.hcta <> 0
         and rownum = 1;
  
  
  begin
    begin
    
      for p in transacciones loop
      
        /*--Verifica que no exista en cabecera AQPA465 
        Begin
          select 'S'
            into lc_flg465
            from aqpa465 a
           where a.aqpa465pgcod = p.pgcod
             and a.aqpa465mod = p.hcmod
             and a.aqpa465sucor = p.hsucor
             and a.aqpa465tran = p.htran
             and a.aqpa465rel = p.hnrel
             and a.aqpa465con = p.hfcon
             and rownum = 1;
        exception
          when others then
            lc_flg465 := 'N';
        end;*/
        lc_flg465 := 'N';
        if lc_flg465 = 'N' then
        
          --determinacion si la operacion tiene IGV
          begin
            select 'S',
                   a.pgcod,
                   a.hmodul,
                   a.hsucur,
                   a.hmda,
                   a.hpap,
                   a.hcta,
                   a.hoper,
                   a.hsubop,
                   a.htoper,
                   to_number(substr(a.hrubro, 5, 2))
              into lc_flg,
                   ln_emp,
                   ln_mod,
                   ln_suc,
                   ln_mda,
                   ln_pap,
                   ln_cta,
                   ln_ope,
                   ln_sbo,
                   ln_top,
                   ln_rubro
              from fsh016 a
             where a.pgcod = p.pgcod
               and a.hcmod = p.hcmod
               and a.hsucor = p.hsucor
               and a.htran = p.htran
               and a.hnrel = p.hnrel
               and a.hfcon = p.hfcon
               and a.hrubro in (2517030200001, 2527030200001);
          exception
            when others then
              lc_flg := 'N';
              null;
            
          end;
        
         -----
          lc_indigv := 'N';
          begin
              select 'S'
                into lc_indigv
                from fst198 k
               where k.tp1cod = 1
                 and k.tp1cod1 = 11120
                 and k.tp1corr1 = 3
                 and k.tp1corr2 = 1
                 and tp1corr3 > 0  
                 and tp1imp3 = 2  
                 and TP1NRO1 = p.hcmod
                 and TP1NRO2 = p.htran; 
          exception when others then
            lc_indigv := 'N';
          end;
 

        
         if lc_flg = 'S' then        
            /*--   if p.hcmod = 30 and p.htran in (977, 978) then  
            if p.hcmod = 30 and p.htran in (977, 978, 405, 984, 986) then
              --- 22/07/2021 agrego bienes adjudicados
              ln_rubro := 5; -- se agrego 984,986
            end if;*/
          
          if lc_indigv = 'S' then -- si tiene indicador IGV
            ln_rubro := 5; -- se agrego 984,986
          end if;
        
          
          
            pn_pgcod := p.pgcod;
          
            if ln_relant <> p.hnrel or p.hcmod <> ln_modulo or
               p.htran <> ln_tran or p.hsucor <> ln_sucur then
              lc_serie := null;
              lc_corre := null;
            
              begin
                ---se obtiene NDI/ TIPO de doc                  
                select a.pepais, a.petdoc, a.pendoc
                  into pn_pais, pn_petdoc, pn_pendoc
                  from fsr008 a
                 where a.ctnro = ln_cta
                   and a.cttfir = 'T';
              exception
                when others then
                  null;
              end;
            
              begin
                pq_cr_facturacion.sp_cr_tipo_cliente(pn_pais   => pn_pais,
                                                     pn_tipdoc => pn_petdoc,
                                                     pc_numdoc => pn_pendoc,
                                                     pc_tipper => lc_tipper);
              exception
                when others then
                  null;
              end;
            
              begin
                pq_cr_facturacion.sp_cr_factura(pn_rubro       => ln_rubro,
                                                pc_tipcli      => lc_tipper,
                                                pc_tipo        => 'MOV', --transaccion
                                                pc_serie       => lc_serie,
                                                pc_correlativo => lc_corre);
              
              exception
                when others then
                
                  lc_coderr := sqlcode;
                  lc_msgerr := trim(sqlerrm);
                
                  insert into aqpa460E
                    (aqpa460eserie,
                     aqpa460ecorr,
                     aqpa460epgcod,
                     aqpa460emod,
                     aqpa460esucorend,
                     aqpa460etran,
                     aqpa460erel,
                     aqpa460econ,
                     aqpa460etip,
                     Aqpa460eacoe,
                     Aqpa460eamsge)
                  values
                    ('IGV',
                     null,
                     p.pgcod,
                     p.hcmod,
                     p.hsucor,
                     p.htran,
                     p.hnrel,
                     p.hfcon,
                     'S',
                     lc_coderr,
                     lc_msgerr);
                  commit;
                
              end;
            
            end if;
          
            ln_relant := p.hnrel;
            ln_modulo := p.hcmod;
            ln_tran   := p.htran;
            ln_sucur  := p.hsucor;
          
            if lc_serie is null then
            
              insert into aqpa460E
                (aqpa460eserie,
                 aqpa460ecorr,
                 aqpa460epgcod,
                 aqpa460emod,
                 aqpa460esucorend,
                 aqpa460etran,
                 aqpa460erel,
                 aqpa460econ,
                 aqpa460etip,
                 Aqpa460eacoe,
                 Aqpa460eamsge)
              values
                ('IGV1',
                 null,
                 p.pgcod,
                 p.hcmod,
                 p.hsucor,
                 p.htran,
                 p.hnrel,
                 p.hfcon,
                 'M',
                 lc_coderr,
                 lc_msgerr);
              commit;
            else
              begin
                insert into aqpa463
                  (aqpa463txtrub,
                   aqpa463pgcod,
                   aqpa463hcmod,
                   aqpa463hsucor,
                   aqpa463htran,
                   aqpa463hnrel,
                   aqpa463hfcon,
                   aqpa463hcord,
                   aqpa463txoren,
                   aqpa463txtord,
                   aqpa463hcpcod,
                   aqpa463hvnro,
                   aqpa463hvchr,
                   aqpa463serie,
                   aqpa463corre,
                   aqpa463emp,
                   aqpa463mod,
                   aqpa463suc,
                   aqpa463mda,
                   aqpa463pap,
                   aqpa463cta,
                   aqpa463ope,
                   aqpa463sbo,
                   aqpa463top,
                   aqpa463hip
                   
                   )
                values
               /*   (p.txtrub,
                   p.pgcod,
                   p.hcmod,
                   p.hsucor,
                   p.htran,
                   p.hnrel,
                   p.hfcon,
                   p.hcord,
                   p.txoren,
                   p.txtord,
                   p.hcord,
                   p.se170vnro, --p.se170hvnro,
                   p.se170vchr, --p.se170hvchr,
                   lc_serie,
                   lc_corre,
                   ln_emp,
                   ln_mod,
                   ln_suc,
                   ln_mda,
                   ln_pap,
                   ln_cta,
                   ln_ope,
                   ln_sbo,
                   ln_top,
                   lc_hipo);*/
                   
                   
                 (null, --p.txtrub,
                 p.pgcod,
                 p.hcmod,
                 p.hsucor,
                 p.htran,
                 p.hnrel,
                 p.hfcon,
                 p.hcord,
                 p.hcord, ---1,--p.txtren,--p.txoren,
                 p.txtren, --p.txtord,
                 p.hcord,
                 null, --p.se170hvnro,
                 'IGV', --p.se170hvchr,
                 lc_serie,
                 lc_corre,
                 ln_emp,
                 ln_mod,
                 ln_suc,
                 ln_mda,
                 ln_pap,
                 ln_cta,
                 ln_ope,
                 ln_sbo,
                 ln_top,
                 lc_hipo);
                   
                commit;
              exception
                when others then
                  lc_coderr := sqlerrm;
                  /*INSERT INTO LOG_ERROR_BANDEJA
                    (N_NRO, C_CODBDJ, C_DESERR, D_FECERR)
                  VALUES
                    (0,
                     'FEI',
                     1 \*n_numsuc*\
                     || lc_coderr,
                     TRUNC(SYSDATE));
                  COMMIT;*/
              end;
            end if;
          end if;
        
        end if;
        commit;
      end loop;
      Commit;

  /*    begin
        ---detalle factura
        pq_cr_factura_electronica.sp_cr_det_factura_igv1(pd_pgfape => pc_AQPA465CON,
                                                        aqpa463pgcod => pc_AQPA465PGCOD,
                                                        aqpa463hcmod => pc_AQPA465MOD,
                                                        aqpa463hsucor => pc_AQPA465SUCOR,
                                                        aqpa463htran => pc_AQPA465TRAN,
                                                        aqpa463hnrel => pc_AQPA465REL);
      exception
        when others then
          null;
      end;*/
      
      begin
          pq_cr_factura_electronica.sp_cr_detalle_fact_cigv(pc_serie => lc_serie,
                                                            pn_correlativo => lc_corre/*,
                                                            pn_concepto => :pn_concepto*/);
        end;

    
      --generando cabecera
       begin
      
        pq_cr_factura_electronica.sp_cr_cabecera_trx(pd_pgfape => pd_fecpro,
                                                          pc_serie => lc_serie,
                                                          pn_correlativo => lc_corre,
                                                          pn_concepto => 10);
      end;
      

    
    end;
  
  EXCEPTION
    when others then
         null;    
  end sp_tra_genera_IGV;

procedure sp_cr_Det_Factura_IGV1(pd_pgfape in date,
                                AQPA463PGCOD  in number,
                                AQPA463HCMOD  in number,
                                AQPA463HSUCOR in number,
                                AQPA463HTRAN  in number,
                                AQPA463HNREL  in number
  ) is
  
    pc_fecha varchar2(80);
  
    lv_codtdocC varchar2(1); --05/04/2023 dcastro 
  
    cursor aqpa463 is
    
      select *
        from aqpa463 b
       where b.aqpa463hfcon = pd_pgfape
          and b.AQPA463PGCOD = AQPA463PGCOD
          and b.AQPA463HCMOD = AQPA463HCMOD
          and b.AQPA463HSUCOR = AQPA463HSUCOR
          and b.AQPA463HTRAN =  AQPA463HTRAN
          and b.AQPA463HNREL =  AQPA463HNREL
          and (b.aqpa463hcmod, b.aqpa463htran) in
             (select k.tp1nro1, k.tp1nro2
                from fst198 k
               where k.tp1cod = 1
                 and k.tp1cod1 = 11120
                 and k.tp1corr1 = 3
                 and k.tp1corr2 = 1
                 and tp1corr3 > 0)
      
       order by b.aqpa463hnrel asc, b.aqpa463txoren asc;
  
    lc_coderr char(100);
    lc_msgerr char(1000);
  
    ln_cta           number(9);
    lc_hor           char(8);
    ld_fec           date;
    lc_flg           char(1) := 'N';
    pn_pais          number;
    pn_monto_total_1 number(12, 2) := 0;
    result           character(100);
    pd_pgfape2       date;
    ln_mda           number(4);
    ln_nroitem       number(12) := 0;
    ln_cant          number(12, 10);
    lc_codpla        char(3);
    ln_docemp        number(2);
    pv_tdoc          char(25);
    lc_sistemi       char(6);
  
    lc_contrato varchar2(50);
    lv_tipemp   varchar2(1);
    lv_ruc      varchar2(11);
    lv_rzn      varchar2(1500);
    lv_ubg      varchar2(6);
    lv_NCOM     varchar2(1500);
    lv_CALLE    varchar2(200);
  
    lv_DEPA  varchar2(100);
    lv_PROV  varchar2(30);
    lv_DIST  varchar2(30);
    lv_TELF  varchar2(20);
    lv_WEB   varchar2(100);
    lv_CPAIS varchar2(2);
  
    lv_codtipo    varchar2(2);
    lv_tipomda    varchar2(3);
    lv_correo     varchar2(100);
    lv_glosa      varchar2(30);
    lv_COMA       varchar2(20);
    lv_TPLA       varchar2(3);
    lv_tipoope    varchar2(4);
    lv_TPLCO      varchar2(3);
    lv_CLOG       varchar2(3);
    lv_codtdoc    varchar2(1);
    lc_pendoc     char(12);
    lv_pendoc     varchar2(15);
    lv_penom      varchar2(1500);
    lv_hora       varchar2(8);
    ln_SIMC       number(12, 2) := 0;
    ln_SVITM      number(12, 2) := 0;
    ln_SPVI       number(12, 2) := 0;
    lv_TXML       varchar2(3);
    lv_ubgCli     varchar2(6);
    lv_sngc13dir  varchar2(500);
    lv_urb        varchar2(100);
    lv_fst071dsc1 varchar2(500);
    lv_locnom1    varchar2(500);
    lv_depnom1    varchar2(500);
    lv_cpai       varchar2(2);
    lv_PNETU      varchar2(3);
    lc_oneroso    varchar2(1);
    ln_mtoconce   number;
  
    ln_VVUIG       number;
    lv_desconce    varchar2(500);
    lv_infpredio   varchar2(500);
    ln_PRVIT       number(15, 2) := 0;
    lv_MEDEM       varchar2(50);
    lv_CSUNA       varchar2(8);
    lv_CPGS1       varchar2(14);
    ln_ITITM       number(12, 2) := 0;
    ln_IMPTB       number(12, 2) := 0;
    ln_IMPEX       number(12, 2) := 0;
    lv_afecigv     varchar2(2);
    lv_SISC        varchar2(2);
    lv_idtrbsunat  varchar2(4);
    lv_nomtrbsunat varchar2(6);
    lv_codun       varchar2(3);
    ln_MBIM        number(12, 2) := 0;
    ln_TAIMP       number(8, 5) := 0;
    ln_CDLEY       number(4) := 0;
    lv_TELEY       varchar2(200);
    lv_TEXT1       varchar2(1000);
    lv_TEXT2       varchar2(1000);
    lv_TRECV       varchar2(1000);
    lv_TEMPL       varchar2(3);
    lv_SUBJE       varchar2(100);
    lv_VPCVA       varchar2(15);
    lv_NEXP        varchar2(10);
    lv_CIND        varchar2(1);
    lv_partida     varchar2(50);
    lv_NCONT       varchar2(50);
    ld_fecoto      date;
    lv_cdisn       varchar2(6);
    lv_direccionH  varchar2(100);
    lv_urbaH       varchar2(50);
    lv_dptoH       varchar2(50);
    lv_provH       varchar2(50);
    lv_distH       varchar2(500);
    ln_MTOTAL      number(12, 2) := 0;
    ln_BAIMP       number(12, 2) := 0;
    ln_MTIMP       number(12, 2) := 0;
    ln_PCIMA       number(9, 2) := 0;
    ln_BSIMP       number(12, 2) := 0;
    ln_VAIMP       number(12, 2) := 0;
    ln_MTINF       number(12, 2) := 0;
    ln_MTGRT       number(12, 2) := 0;
    ln_BSIMPS      number(12, 2) := 0;
    ln_MTOTI       number(12, 2) := 0;
    ln_petdoc      number(2);
    lv_CTPR        varchar(2);
    lv_rzn1        varchar2(30);
    lv_rzn2        varchar2(30);
    lc_codsunat    varchar2(4);
  
    lc_nomcaja char(70);
    lc_nom1    char(30);
    lc_nom2    char(30);
  
    ln_item number(12);
  
    ld_fecSis date;
  
    lc_existe char(1) := 'N';
  
    lv_sngc13dirFin varchar2(500);
  
    ln_guiaCP      number;
    ln_mtoImpuesto number;
    lv_desmda      varchar2(30);
  
    ln_mtoTotal  number(12, 2) := 0;
    lc_serie_Ant char(4);
    lc_corr_Ant  number(8);
  
    lc_exis460 char(1);
  
    lc_indGratuita char(1); -- 2023.10.10 dcastro indicador transferencia gratuita
    ln_mtoconce1  number(12, 2) := 0; --2023.10.10      
      
  ln_aqpa463pgcod number;
  ln_aqpa463hcmod number;
  ln_aqpa463hsucor number;
  ln_aqpa463htran number;
  ln_aqpa463hnrel number;
  ln_aqpa463hfcon date;
  
  begin
    begin
    
      for p in aqpa463 loop
      
        lc_existe := 'N';
        Begin
          select 'S'
            into lc_existe
            from aqpa460 a
           where a.aqpa460seri = p.aqpa463serie
             and a.aqpa460num = p.aqpa463corre
             and a.aqpa460ore = P.AQPA463TXOREN
             and rownum = 1;
        exception
          when others then
            lc_existe := 'N';
        end;
      
        if lc_existe = 'N' then
        
          --validar concepto 
          begin
            select 'S'
              into lc_flg
              from fst198 a
             where a.tp1cod = 1
               and a.tp1cod1 = 11120
               and a.tp1corr1 = 1
               and a.tp1corr2 = 3
               and a.tp1corr3 >= 1
               and a.tp1nro1 = p.aqpa463txoren - 100;
          exception
            when others then
              lc_flg := 'N';
          end;
        
          --obtener cuenta moneda hora fecha
          ln_cta := p.aqpa463cta;
          ln_mda := p.aqpa463mda;
        
          begin
            select a.ithora, a.itfcon
              into lc_hor, ld_fec
              from fsd015 a
             where a.pgcod = p.aqpa463pgcod
               and a.itmod = p.aqpa463hcmod
               and a.itsuc = p.aqpa463hsucor
               and a.ittran = p.aqpa463htran
               and a.itnrel = p.aqpa463hnrel;
          exception
            when others then
              null;
          end;
        
          ----------Obtener codigo de sunat
          begin
            select lpad(a.tp1nro2, 4, '0')
              into lc_codsunat
              from fst198 a
             where a.tp1cod = 1
               and a.tp1cod1 = 11120
               and a.tp1corr1 = 1
               and a.tp1corr2 = 500
               and a.tp1nro1 = p.aqpa463hsucor;
          exception
            when others then
              null;
          end;
        
          begin
            -- Call the procedure
            pq_cr_factura_electronica.sp_fecha_sys(pc_fecha);
          end;
        
          if lc_flg = 'N' then
            --inserte conceptos de deuda como fila
          
            ln_mtoconce := to_number(trim(p.aqpa463txtord),
                                     '99999999999999999.99');
          
            if ln_mtoconce <> 0 then
            
              --datos persona
              begin
              
                pq_cr_factura_electronica.sp_num_documento(ln_cta,
                                                           lc_pendoc,
                                                           lv_penom,
                                                           pv_tdoc,
                                                           pn_pais,
                                                           ln_petdoc,
                                                           pd_pgfape2);
              end;
            
              --datos direccion cliente
              begin
                -- Call the procedure
                pq_cr_factura_electronica.sp_dir_cliente(lc_pendoc,
                                                         ln_petdoc,
                                                         pn_pais,
                                                         lv_sngc13dir,
                                                         lv_fst071dsc1,
                                                         lv_locnom1,
                                                         lv_depnom1,
                                                         lv_ubgCli); ---dni  pn_pendoc
              end;
            
              --Codigo del Tipo de Comprobante
            
              if substr(p.aqpa463serie, 1, 1) = 'F' then
                ln_guiaCP := 1;
              elsif substr(p.aqpa463serie, 1, 1) = 'B' then
                ln_guiaCP := 3;
              else
                ln_guiaCP := null;
              end if;
            
              begin
                select '0' || to_char(a.tp1nro1)
                  into lv_codtipo
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 7
                   and a.tp1corr3 = ln_guiaCP;
              exception
                when others then
                  null;
              end;
            
              --Codigo tipo moneda
              begin
                select trim(a.tp1desc)
                  into lv_tipomda
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 8
                   and a.tp1corr3 >= 1
                   and a.tp1nro1 = ln_mda;
              exception
                when others then
                  null;
              end;
            
              --texto moneda  
              begin
                select trim(a.tp1desc)
                  into lv_desmda
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 2
                   and a.tp1corr2 = 5
                   and a.tp1corr3 >= 1
                   and a.tp1nro1 = ln_mda;
              exception
                when others then
                  null;
              end;
            
              /*              --Codigo tipo documento cliente
                            begin
                              select to_char(a.tp1nro1)
                                into lv_codtdoc
                                from fst198 a
                               where a.tp1cod = 1
                                 and a.tp1cod1 = 11120
                                 and a.tp1corr1 = 1
                                 and a.tp1corr2 = 4
                                 and a.tp1nro2 = ln_petdoc;
                            exception
                              when others then
                                null;
                            end;
              */
              --Codigo tipo documento cliente
              begin
                select to_char(a.tp1nro1), substr(trim(TP1DESC), -1, 1)
                  into lv_codtdoc, lv_codtdocC
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 4
                   and a.tp1nro2 = ln_petdoc;
              exception
                when others then
                  null;
              end;
            
              --05/04/2023 dcastro se agrego nuevo tipo documento PTP
              if lv_codtdoc = 3 then
                lv_codtdoc := lv_codtdocC;
              end if;
              --05/04/2023 dcastro se agrego nuevo tipo documento PTP
            
              --Correo del cliente
              lv_correo := null;
              begin
                select substr(a.pextxt, 1, INSTR(a.pextxt, '\', 1) - 1)
                  into lv_correo
                  from fsx001 a
                 where a.pepais = pn_pais
                   and a.petdoc = ln_petdoc
                   and a.pendoc = lc_pendoc
                   and a.txcod = 0
                   and rownum = 1 --- 2021/11/11 dcastro se agrego condicion
                 order by a.pexren desc;
              exception
                when others then
                  null;
              end;
            
              --nro item
              ln_item := 0;
              begin
                select max(a.aqpa460item)
                  into ln_item
                  from aqpa460 a
                 where a.aqpa460seri = p.aqpa463serie
                   and a.aqpa460num = p.aqpa463corre;
              exception
                when too_many_rows then
                  begin
                    select max(a.aqpa460item)
                      into ln_item
                      from aqpa460 a
                     where a.aqpa460seri = p.aqpa463serie
                       and a.aqpa460num = p.aqpa463corre
                       and rownum = 1;
                  exception
                    when others then
                      null;
                  end;
                when no_data_found then
                  ln_item := 0;
                when others then
                  null;
              end;
              ln_nroitem := nvl(ln_item, 0) + 1;
            
              --descripcion conceptos
              lv_desconce := trim(p.aqpa463hvchr);

              ---2023.09.20 dcastro campaña ahorraton
              lc_indGratuita := 'N'; 
               begin
                    select 'S' --si existe es transferencia gratuita
                    into lc_indGratuita
                    from fst198 a
                   where a.tp1cod = 1
                     and a.tp1cod1 = 11120-- for update
                     and a.tp1corr1 = 41
                     and a.tp1corr2 > 0
                     and a.tp1nro1 = p.aqpa463hcmod
                     and a.tp1nro2 = p.aqpa463htran;
                exception when others then
                      lc_indGratuita := 'N'; 
                end;
                if lc_indGratuita = 'S' then ---if p.aqpa463hcmod = 98 and p.aqpa463htran in (236, 779) then ---236
                  begin
                      pq_cr_factura_electronica.sp_datos_campania(pd_fecha => p.aqpa463hfcon,
                                                                               pn_cuenta =>  p.aqpa463cta,
                                                                               pc_serie =>   p.aqpa463serie,
                                                                               pn_numero =>  p.aqpa463corre, 
                                                                               pn_emp =>  p.aqpa463pgcod,
                                                                               pn_suc =>  p.aqpa463hsucor,
                                                                               pn_mod =>  p.aqpa463hcmod, 
                                                                               pn_tra =>  p.aqpa463htran,
                                                                               pn_rel =>  p.aqpa463hnrel,                                                                                                                                                         
                                                                               pc_datos => lv_desconce);
                  end;
                end if;

              ---2023.09.20
              
            
              --Codigo de plantilla
              lc_codpla := 'EST';
            
              --- Sistema de Emicion 
              lc_sistemi := 'BANTOT';
            
              --Codigo tipo doc empresa
              begin
                select a.tp1nro1
                  into ln_docemp
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 4;
              exception
                when others then
                  null;
              end;
            
              begin
                select to_char(a.tp1nro1)
                  into lv_tipemp
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 4
                   and a.tp1corr3 >= 1
                   and a.tp1nro2 = ln_docemp;
              
              exception
                when others then
                  null;
              end;
              --ruc caja
              begin
                select trim(a.tp1desc)
                  into lv_ruc
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 1;
              exception
                when others then
                  null;
              end;
            
              --NOMBRE COMERCIAL caja
              begin
                select a.tp1desc
                  into lv_NCOM
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 5;
              exception
                when others then
                  null;
              end;
            
              --Ubigeo caja
              begin
                select trim(a.tp1desc)
                  into lv_ubg
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 6;
              exception
                when others then
                  null;
              end;
              ---------------------------------------campos parte 2
              ----------hora de transacion 
              begin
                select trim(a.aqpa463txtord)
                  into lv_hora
                  from aqpa463 a
                 where a.aqpa463pgcod = p.aqpa463pgcod
                   and a.aqpa463hcmod = p.aqpa463hcmod
                   and a.aqpa463hsucor = p.aqpa463hsucor
                   and a.aqpa463htran = p.aqpa463htran
                   and a.aqpa463hnrel = p.aqpa463hnrel
                   and a.aqpa463hfcon = p.aqpa463hfcon
                   and a.aqpa463serie = p.aqpa463serie
                   and a.aqpa463corre = p.aqpa463corre
                   and a.aqpa463txtord like '%:%';
              exception
                when others then
                  null;
              end;
            
              begin
                select pgfape into ld_fecSis from fst017 where pgcod = 1;
              exception
                when others then
                  null;
              end;
              if lv_hora is null then
              
                if ld_fecSis = p.aqpa463hfcon then
                
                  begin
                    select a.ithora
                      into lv_hora
                      from fsd015 a
                     where a.pgcod = p.aqpa463pgcod
                       and a.itsuc = p.aqpa463hsucor
                       and a.itmod = p.aqpa463hcmod
                       and a.ittran = p.aqpa463htran
                       and a.itnrel = p.aqpa463hnrel;
                  exception
                    when others then
                      null;
                  end;
                
                else
                  begin
                    select a.hhora
                      into lv_hora
                      from fsh015 a
                     where a.pgcod = p.aqpa463pgcod
                       and a.hsucor = p.aqpa463hsucor
                       and a.hcmod = p.aqpa463hcmod
                       and a.htran = p.aqpa463htran
                       and a.hnrel = p.aqpa463hnrel
                       and a.hfcon = p.aqpa463hfcon;
                  exception
                    when others then
                      null;
                  end;
                end if;
              
              end if;
            
              -------Codigo de tipo de importe de afectacion
              Begin
                select to_char(a.tp1nro1)
                  into lc_oneroso
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 12
                   and a.tp1corr3 = 3;
              exception
                when others then
                  null;
              End;
            
              /* MONTO IGV */
              begin
                pq_cr_factura_electronica.sp_cr_cobroigv(pn_pgcod  => p.aqpa463pgcod,
                                                         pn_hcmod  => p.aqpa463hcmod,
                                                         pn_hsucor => p.aqpa463hsucor,
                                                         pn_htran  => p.aqpa463htran,
                                                         pn_hnrel  => p.aqpa463hnrel,
                                                         pn_hfcon  => p.aqpa463hfcon,
                                                         pc_serie  => p.aqpa463serie,
                                                         pn_corr   => p.aqpa463corre,
                                                         pn_mto    => ln_mtoImpuesto);
              
              end;
              /* MONTO IGV */
            
              ---2023.09.20 ahorraton importe debe ser 0
              lc_indGratuita := 'N'; 
               begin
                    select 'S' --si existe es transferencia gratuita
                    into lc_indGratuita
                    from fst198 a
                   where a.tp1cod = 1
                     and a.tp1cod1 = 11120-- for update
                     and a.tp1corr1 = 41
                     and a.tp1corr2 > 0
                     and a.tp1nro1 = p.aqpa463hcmod
                     and a.tp1nro2 = p.aqpa463htran;
                exception when others then
                      lc_indGratuita := 'N'; 
                end;

                ln_mtoconce1 := ln_mtoconce;  
                if lc_indGratuita = 'S' then ---if p.aqpa463hcmod = 98 and p.aqpa463htran in (236, 779) then ---236
                    pn_monto_total_1 := 0; --se comento total
                    ln_mtoconce      := 0;
                    ln_mtoImpuesto   := 0;
                    
                      begin
                        pq_cr_factura_electronica.sp_cr_calculatotal2(pd_feccon => p.aqpa463hfcon,
                                                                      pn_aqpa463pgcod => p.aqpa463pgcod,
                                                                      pn_aqpa463hcmod => p.aqpa463hcmod,
                                                                      pn_aqpa463hsucor => p.aqpa463hsucor,
                                                                      pn_aqpa463htran => p.aqpa463htran,
                                                                      pn_aqpa463hnrel => p.aqpa463hnrel,
                                                                      pn_monto => ln_mtoconce);
                      end;
                      ln_mtoconce1 := ln_mtoconce;
                  end if;
                  --2023.09.20
                          
              -----------------Descripcion del pais 
              begin
                Select trim(a.tp1desc)
                  Into lv_CPAIS
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 15
                   and a.tp1corr3 = 1;
              exception
                when others then
                  null;
              end;
            
              lv_partida    := null;
              lv_direccionH := null;
              lv_urbaH      := null;
              lv_dptoH      := null;
              lv_provH      := null;
              lv_distH      := null;
              lv_cdisn      := null;
            
              lc_contrato := lpad(to_char(p.aqpa463cta), 9, 0) ||
                             lpad(to_char(p.aqpa463mda), 3, 0) ||
                             lpad(to_char(p.aqpa463ope), 9, 0);
              lv_NCONT    := lc_contrato;
            
              lv_infpredio := null;
              lv_pendoc    := lc_pendoc;
            
              --Pais del cliente
            
              begin
                select trim(a.tp1desc)
                  into lv_cpai
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 20
                   and a.tp1NRO1 = pn_pais;
              exception
                when others then
                  null;
              end;
            
              --Producto del credito
              begin
                select to_char(p.aqpa463mod) || '-' || trim(a.tonom)
                  into lv_TEXT1
                  from fst004 a
                 where a.modulo = p.aqpa463mod
                   and a.totope = p.aqpa463top;
              
              exception
                when others then
                  null;
              end;
            
              --direccion
              begin
                select to_char(a.tp1desc)
                  into lv_CALLE
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 2;
              
              exception
                when others then
                  null;
              end;
            
              --telefono
              begin
                select trim(to_char(a.tp1desc))
                  into lv_TELF
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 3;
              exception
                when others then
                  null;
              end;
            
              Begin
                ---web de caja arequipa
                select trim(a.tp1desc)
                  into lv_web
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 12;
              exception
                when others then
                  null;
              End;
            
              --departamento
              begin
                select to_char(a.tp1desc)
                  into lv_DEPA
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 7;
              
              exception
                when others then
                  null;
              end;
            
              --provincia
              begin
                select to_char(a.tp1desc)
                  into lv_PROV
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 8;
              
              exception
                when others then
                  null;
              end;
            
              --distrito
              begin
                select to_char(a.tp1desc)
                  into lv_DIST
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 9;
              
              exception
                when others then
                  null;
              end;
            
              --razon social
            
              begin
                select to_char(a.tp1desc)
                  into lv_rzn1
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 10;
              
              exception
                when others then
                  null;
              end;
            
              begin
                select to_char(a.tp1desc)
                  into lv_rzn2
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 11;
              
              exception
                when others then
                  null;
              end;
              lv_rzn := trim(lv_rzn1) || ' ' || trim(lv_rzn2);
            
              lv_glosa := null;
              lv_TPLA  := 'EST';
              lv_TPLCO := 'EST';
              lv_TXML  := '2.1';
              lv_urb   := null;
              lv_PNETU := 'NIU';
              ln_cant  := 1;
              lv_CTPR  := '01';
            
              ln_PRVIT := 0; --ln_mtoconce;
              lv_MEDEM := 'UND';
              lv_CSUNA := '84121500';
              lv_SISC  := null;
              ln_MBIM  := ln_mtoconce;
              ln_CDLEY := 1000;
            
              lv_TEXT2   := lpad(to_char(p.aqpa463cta), 9, 0) ||
                            lpad(to_char(p.aqpa463mda), 3, 0) ||
                            lpad(to_char(p.aqpa463ope), 9, 0);
              lv_TRECV   := lv_correo;
              lv_TEMPL   := 'EST';
              lv_SUBJE   := '0' || trim(lv_codtipo) || '-' ||
                            P.AQPA463SERIE || '-' ||
                            trim(to_char(P.AQPA463CORRE));
              lv_VPCVA   := null;
              lv_NEXP    := '0';
              lv_CIND    := '0';
              ln_BSIMP   := null;
              ln_VAIMP   := null;
              ln_MTGRT   := null;
              ln_BSIMPS  := null;
              ln_MTOTI   := null;
              lv_CPGS1   := null;
              ln_MTINF   := null;
              lv_COMA    := to_char(p.aqpa463hfcon, 'yymmdd') ||
                            lpad(to_char(p.aqpa463hsucor), 3, 0) ||
                            lpad(to_char(p.aqpa463hcmod), 3, 0) ||
                            lpad(to_char(p.aqpa463htran), 3, 0) ||
                            lpad(to_char(p.aqpa463hnrel), 4, 0);
              ln_MTIMP   := ln_mtoImpuesto;
              ln_IMPEX   := ln_mtoImpuesto;
              ln_ITITM   := ln_mtoImpuesto;
              ln_IMPTB   := ln_mtoImpuesto;
              ln_PCIMA   := 18.0;
              ln_TAIMP   := 18;
              ln_MTOTAL  := ln_mtoconce;
              ln_BAIMP   := ln_mtoconce;
              ln_SVITM   := ln_mtoconce;
              lv_tipoope := '0101';
              ln_SIMC    := ln_mtoImpuesto; --AQPA460SIMC   total impuesto
              --lv_desconce    := 'IGV'; --AQPA460DESC 
              lv_afecigv     := 10; --AQPA460AFIGV
              lv_idtrbsunat  := 1000; -- AQPA460CODTB   ---------Identificaci?n del tributo seg?n cat?logo SUNAT
              lv_nomtrbsunat := 'IGV'; --AQPA460DSTRB  
              lv_codun       := 'VAT'; --AQPA460CODUN 
              ln_VVUIG       := 0;
            
            
             if lc_indGratuita = 'S' then ---p.aqpa463hcmod = 98 and p.aqpa463htran in (236, 779) then ---236
                --pn_monto_total_1 := 0; --se comento total
                --ln_mtoconce      := 0;
                --ln_mtoImpuesto   := 0;
                lv_idtrbsunat    := 9996; -- AQPA460CODTB   ---------Identificaci?n del tributo seg?n cat?logo SUNAT
                ln_CDLEY         := 1002;
              end if;
              --2023.09.20

              ----------------------datos caja
              Begin
                ---razon social de caja arequipa
                select a.tp1desc
                  into lc_nom1
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 10;
              exception
                when others then
                  null;
              End;
            
              Begin
                ---razon social de caja arequipa
                select a.tp1desc
                  into lc_nom2
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 11;
              exception
                when others then
                  null;
              End;
            
              lc_nomcaja := trim(lc_nom1) || trim(lc_nom2);
            
              lv_sngc13dirFin := trim(lv_sngc13dir) || ' - ' ||
                                 trim(lv_fst071dsc1) || ' - ' ||
                                 trim(lv_locnom1) || ' - ' ||
                                 trim(lv_depnom1);
              lv_depnom1      := null;
              lv_locnom1      := null;
              lv_fst071dsc1   := null;
            
              if lv_correo is null then
                lv_correo := 'Reportefactele@cajaarequipa.pe';
              end if;
            
              if lv_TRECV is null then
                lv_TRECV := 'Reportefactele@cajaarequipa.pe';
              end if;
            
              ------insert detalle de factura
              BEGIN
                insert into AQPA460
                  (AQPA460TDOC, --Codigo del Tipo de Documento de Identidad oENEmpresa
                   AQPA460RUCC, --N?mero de documento de identidad del emisor oENEmpresa
                   AQPA460RSOC, --Apellidos y nombres o denominaci?n o raz?n social oENEmpresa
                   AQPA460CDIS, --Codigo de UBIGEO oENEmpresa
                   AQPA460NCOM, --Nombre Comercial oENEmpresa
                   AQPA460CALLE, --Direcci?n completa y detallada oENEmpresa
                   AQPA460URBA, --Urbanizacion o Zona  oENEmpresa
                   AQPA460DEPA, --Departamento, expresado textualmente  oENEmpresa
                   AQPA460PROV, --Provincia, expresarlo textualmente   oENEmpresa
                   AQPA460DIST, --Distrito, expresarlo textualmente oENEmpres
                   AQPA460TELF, --Telefono de la Empresa Emisora oENEmpres
                   AQPA460WEB, --Pagina Web del Emisor oENEmpres           
                   AQPA460CPAIS, --Codigo del Pais del Emisor oENEmpres
                   AQPA460CESUN, --C?digo del establecimiento de Sunat  oENEmpres
                   AQPA460SERI, --Serie del comprobante.  Datos del Comprobante
                   AQPA460NUM, --Numero Correlativo del comprobante. Datos del Comprobante
                   AQPA460FEMI, --Fecha de Emision del Comprobante Datos del Comprobante
                   AQPA460TCOMF, --Codigo del Tipo de Comprobante Datos del Comprobante
                   AQPA460MONE, --Codigo del Tipo de Moneda Datos del Comprobante
                   AQPA460CORRR, --El correo electr?nico del Receptor  Datos del Comprobante
                   AQPA460MGLO, --Multiples Informaci?n adicional u observacion del comprobante.  Datos del Comprobante
                   AQPA460COMA, --Numero Interno del Comprobante Datos del Comprobante
                   AQPA460TPLA, --Tiplo de Plantilla  Datos del Comprobante
                   AQPA460TOPE, --C?digo de Tipo de operaciones Datos del Comprobante
                   AQPA460TPLCO, --C?digo de plantilla de correo  Datos del Comprobante
                   AQPA460CLOG, --C?digo del tipo de Logo Datos del Comprobante
                   AQPA460TDOCR, --Codigo del tipo de documento de identificaci?n del Receptor Datos del Comprobante
                   AQPA460NRUC, --N?mero de documento de identificaci?n Datos del Comprobante
                   AQPA460RASOC, --Apellidos y nombres o denominaci?n o raz?n social Datos del Comprobante
                   AQPA460IMPT, --Importe total  a pagar Datos del Comprobante
                   AQPA460HEMI, --Hora de Emisi?n  Datos del Comprobante
                   AQPA460SIMC, --Suma de todos los impuestos del comprobante.  Datos del Comprobante
                   AQPA460SVITM, --Suma del valor de venta total de todos los items   Datos del Comprobante
                   AQPA460SPVI, --Suma de los precios de venta total de todos los items  Datos del Comprobante
                   AQPA460TXML, -- Indica el tipo de XML que se generar? Datos del Comprobante
                   AQPA460CDIST, --C?digo de UBIGEO Datos adicionales del Receptor
                   AQPA460CALL, --Direcci?n completa y detallada Datos adicionales del Receptor
                   AQPA460URB, --Urbanizacion o Zona   Datos adicionales del Receptor
                   AQPA460DEP, --Departamento Datos adicionales del Receptor
                   AQPA460PRV, --Provincia   Datos adicionales del Receptor
                   AQPA460DST, --Distrito Datos adicionales del Receptor
                   AQPA460CPAI, --C?digo del Pa?s  Datos adicionales del Receptor
                   AQPA460ITEM, --N?mero de orden del Item ENComprobanteDetalle 
                   AQPA460PNETU, --Unidad de medida de los bienes vendidos por item (UN/ECE rec 20) ENComprobanteDetalle 
                   AQPA460CANTF, --Cantidad de unidades vendidas pot item (Q)  ENComprobanteDetalle 
                   AQPA460TOTAL, --Importe monetario que es el total de la l?nea de detalle, incluyendo variaciones de precio (subvenciones, cargos o descuentos) pero sin impuestos.  ENComprobanteDetalle 
                   AQPA460DETE, --Codigo de identificaci?n de Onerosidad del Item ENComprobanteDetalle 
                   AQPA460CTPR, --Codigo de tipo de importe de afectacion ENComprobanteDetalle 
                   AQPA460VVUN, --Valores de venta unitarios por item (VU) no incluye impuestos  ENComprobanteDetalle 
                   AQPA460VVUIG, --Precio de Venta Unitario (Incluye impuestos)  ENComprobanteDetalle 
                   AQPA460DESC, -- Descripcion del producto ENComprobanteDetalle 
                   AQPA460MFUN, --Multi Descripcion,  puede tener varias desccripciones ENComprobanteDetalle 
                   AQPA460PRVIT, --Es el precio de venta ENComprobanteDetalle 
                   AQPA460MEDEM, --Unidad medida del emisor ENComprobanteDetalle 
                   AQPA460CSUNA, --C?digo producto establecido por Sunat   ENComprobanteDetalle 
                   AQPA460CPGS1, --C?digo de producto GS1  ENComprobanteDetalle 
                   AQPA460ITITM, --Impuesto total del item ENComprobanteDetalle 
                   AQPA460IMPTB, --Importe total de un tributo para este item Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460IMPEX, ---Importe expl?cito a tributar ( = Tasa Porcentaje * Base Imponible)   Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460AFIGV, --Afectaci?n del IGV  Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460SISC, --Sistema de ISC  (01=Especifico; 02= al valor; 03=PV al p?blico)  Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460CODTB, --Identificaci?n del tributo seg?n cat?logo SUNAT Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460DSTRB, --Nombre del Tributo (IGV, IVAP, ISC)  Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460CODUN, --C?digo del Tipo de Tributo (UN/ECE 5153) Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460MBIM, --Monto base del impuesto Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460TAIMP, --Tasa aplicada del impuesto  Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460CDLEY, --Codigo de la Leyenda Utilizado para Leyendas
                   AQPA460TELEY, --Texto de la leyenda  Utilizado para Leyendas
                   AQPA460TEXT1, --Texto libre 1 : Producto  Informaci?n adicional para la visualizacion de representaciones impresas, antes definido por el integrador.
                   AQPA460TEXT2, --Texto libre 2 : N?mero de Cr?dito Informaci?n adicional para la visualizacion de representaciones impresas, antes definido por el integrador.
                   AQPA460TRECV, --Correo del receptor Utilizado para enviar correos adicionales con copia al Correo del Receptor, ingresado en ENComprobante.Correo
                   AQPA460TEMPL, --C?digo de Tipo de Plantilla  Utilizado para enviar correos adicionales con copia al Correo del Receptor, ingresado en ENComprobante.Correo
                   AQPA460SUBJE, --Asunto del correo Utilizado para enviar correos adicionales con copia al Correo del Receptor, ingresado en ENComprobante.Correo
                   AQPA460VPCVA, --Placa del vehiculo Informaci?n adicional del item
                   AQPA460NEXP, --N?mero de Expediente Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460CIND, --C?digo de indicador  Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460NPART, --N?mero de Partida Registral  Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460NCONT, --N?mero de contrato  Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460FOTRC, --Fecha de Otorgo de cr?dito   Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460CDISN, --C?digo de Ubigeo   Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460DIREH, --Direcci?n   Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460URBH, --Urbanizaci?n Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460PRVH, --Provincia   Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460DSTH, --Distrito   Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460DEPTH, --Departamento Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460MTOTAL, --Monto total Gravado (Sin impuesto)  Informaci?n de gravada                           
                   AQPA460BAIMP, --Base del impuesto  IGV del Gravado
                   AQPA460MTIMP, --Monto total solo del impuesto   IGV del Gravado
                   AQPA460PCIMA, --Porcentaje del impuesto aplicado  IGV del Gravado
                   AQPA460BSIMP, --Base del impuesto Otros impuestos del Gravado
                   AQPA460VAIMP, --Monto total solo del impuesto  Otros impuestos del Gravado
                   AQPA460MTINF, --Monto total Inafecto  Informaci?n de inafecto
                   AQPA460MTGRT, --Monto total Gratuito  Informaci?n de gratuito
                   AQPA460BSIMPS, --Base del impuesto Impuestos del Gratuito
                   AQPA460MTOTI, --Monto total de impuestos Impuestos del Gratuito
                   AQPA460PGC, --mod@abr 20180824
                   AQPA460MOD, --mod@abr 20180824  
                   AQPA460SUC, --mod@abr 20180824 
                   AQPA460TRX, --mod@abr 20180824
                   AQPA460REL, --mod@abr 20180824
                   AQPA460ORE, --mod@abr 20180824
                   AQPA460DOCU, --2023.07.18 dcastro 
                   AQPA460FECHA --2023.09.07
                   )
                
                Values
                  (lv_tipemp, --AQPA460TDOC,  ok
                   lv_ruc, --AQPA460RUCC,  ok
                   lv_rzn, --AQPA460RSOC,  ok
                   lv_ubg, --AQPA460CDIS,  ok
                   lv_NCOM, --AQPA460NCOM,  ok
                   lv_CALLE, --AQPA460CALLE  ok
                   lv_urb, --AQPA460URBA,  ok
                   lv_DEPA, --AQPA460DEPA,  ok
                   lv_PROV, --AQPA460PROV,  ok
                   lv_DIST, --AQPA460DIST,  ok
                   lv_TELF, --AQPA460TELF,  ok
                   lv_WEB, --AQPA460WEB,   ok
                   lv_CPAIS, --AQPA460CPAIS  ok
                   lc_codsunat, --lv_CESUN,        --AQPA460CESUN
                   p.aqpa463serie, --AQPA460SERI,  ok
                   p.aqpa463corre, --AQPA460NUM,   ok
                   p.aqpa463hfcon, --AQPA460FEMI,  ok
                   lv_codtipo, --AQPA460TCOMF  ok
                   lv_tipomda, --AQPA460MONE,  ok
                   lv_correo, --AQPA460CORRR  ok
                   lv_glosa, --AQPA460MGLO,  ok
                   lv_COMA, --AQPA460COMA,  ok
                   lv_TPLA, --AQPA460TPLA,  ok
                   lv_tipoope, --AQPA460TOPE,  ok
                   lv_TPLCO, --AQPA460TPLCO  ok
                   lv_CLOG, --AQPA460CLOG,
                   lv_codtdoc, --AQPA460TDOCR  ok
                   lv_pendoc, --AQPA460NRUC,  ok
                   lv_penom, --AQPA460RASOC  ok
                   pn_monto_total_1, --AQPA460IMPT,  ok
                   lv_hora, --AQPA460HEMI,  ok
                   ln_SIMC, --AQPA460SIMC,  ok
                   ln_SVITM, --AQPA460SVITM  ok
                   ln_SPVI, --AQPA460SPVI,  ok
                   lv_TXML, --AQPA460TXML,  ok
                   lv_ubgCli, --AQPA460CDIST,  ok
                   lv_sngc13dir, --AQPA460CALL,   ok
                   lv_urb, --AQPA460URB,    ok
                   lv_depnom1, --AQPA460DEP,    ok
                   lv_locnom1, --AQPA460PRV,    ok
                   lv_fst071dsc1, --AQPA460DST,    ok
                   lv_cpai, --AQPA460CPAI,   ok
                   ln_nroitem, --AQPA460ITEM,   ok
                   lv_PNETU, --AQPA460PNETU,  ok
                   ln_cant, --AQPA460CANTF,  ok
                   ln_mtoconce, --AQPA460TOTAL,  ok
                   lc_oneroso, --AQPA460DETE,   ok
                   lv_CTPR, --AQPA460CTPR,   ok
                   ln_mtoconce1, --AQPA460VVUN,   ok to number
                   ln_VVUIG, --AQPA460VVUIG,  ok
                   lv_desconce, --AQPA460DESC,   ok
                   lv_infpredio, --AQPA460MFUN,   ok
                   ln_PRVIT, --AQPA460PRVIT,  ok
                   lv_MEDEM, --AQPA460MEDEM,  ok
                   lv_CSUNA, --AQPA460CSUNA,  ok
                   lv_CPGS1, --AQPA460CPGS1,  ok
                   ln_ITITM, --AQPA460ITITM,  ok
                   ln_IMPTB, --AQPA460IMPTB,  ok
                   ln_IMPEX, --AQPA460IMPEX,  ok
                   lv_afecigv, --AQPA460AFIGV,  ok
                   lv_SISC, --AQPA460SISC,   ok
                   lv_idtrbsunat, --AQPA460CODTB,  ok
                   lv_nomtrbsunat, --AQPA460DSTRB,  ok
                   lv_codun, --AQPA460CODUN,  ok
                   ln_MBIM, --AQPA460MBIM,   ok
                   ln_TAIMP, --AQPA460TAIMP,  ok
                   ln_CDLEY, --AQPA460CDLEY,  ok
                   lv_TELEY, --AQPA460TELEY,  ok
                   lv_TEXT1, --AQPA460TEXT1,  ok
                   lv_TEXT2, --AQPA460TEXT2,  ok
                   lv_TRECV, --AQPA460TRECV,  ok
                   lv_TEMPL, --AQPA460TEMPL,  ok
                   lv_SUBJE, --AQPA460SUBJE,  ok
                   lv_VPCVA, --AQPA460VPCVA,  ok
                   lv_NEXP, --AQPA460NEXP,   ok
                   lv_CIND, --,        --AQPA460CIND,   ok
                   nvl(lv_partida, ' '), --G74.3  --AQPA460NPART,  ok
                   nvl(lv_NCONT, ' '), -- G74.4 NUMERO CONTRATO                AQPA460NCONT,  ok 
                   ld_fecoto, --G74.5  FECHA OTORGAMIENTO CREDITO   AQPA460FOTRC,  ok
                   nvl(lv_cdisn, ' '), --G74.6  Ubigeo                        AQPA460CDISN,  ok
                   nvl(lv_direccionH, ' '), --G74.7                           AQPA460DIREH,  ok
                   nvl(lv_urbaH, ' '), --G74.8                                 AQPA460URBH,   ok
                   nvl(lv_provH, ' '), --G74.9                                AQPA460PRVH,   ok
                   nvl(lv_distH, ' '), --G74.10                                AQPA460DSTH,   ok
                   nvl(lv_dptoH, ' '), --AQPA460DEPTH,  ok
                   ln_MTOTAL, --AQPA460MTOTAL  ok
                   ln_BAIMP, --AQPA460BAIMP,  ok
                   ln_MTIMP, --AQPA460MTIMP,  ok
                   ln_PCIMA, --AQPA460PCIMA,  ok
                   ln_BSIMP, --AQPA460BSIMP,  ok
                   ln_VAIMP, --AQPA460VAIMP,  ok
                   ln_MTINF, --AQPA460MTINF,  ok
                   ln_MTGRT, --AQPA460MTGRT,  ok
                   ln_BSIMPS, --AQPA460BSIMPS  ok
                   ln_MTOTI, --AQPA460MTOTI   ok
                   P.AQPA463PGCOD, --mod@abr 20180824
                   P.AQPA463HCMOD, --mod@abr 20180824
                   P.AQPA463HSUCOR, --mod@abr 20180824 
                   P.AQPA463HTRAN, --mod@abr 20180824
                   P.AQPA463HNREL, --mod@abr 20180824 
                   P.AQPA463TXOREN, --mod@abr 20180824
                   trim(lv_pendoc), --AQPA460DOCU,  2023.07.18 se agrego documento sin espacios
                   p.aqpa463hfcon
                   );
              
                commit;
              Exception
                when others then
                
                  lc_coderr := sqlcode;
                  lc_msgerr := sqlerrm;
                
                  insert into aqpa460E
                    (aqpa460eserie,
                     aqpa460ecorr,
                     aqpa460epgcod,
                     aqpa460emod,
                     aqpa460esucorend,
                     aqpa460etran,
                     aqpa460erel,
                     aqpa460econ,
                     aqpa460etip,
                     Aqpa460eacoe,
                     Aqpa460eamsge)
                  
                  values
                    (p.aqpa463serie,
                     p.aqpa463corre,
                     p.aqpa463pgcod,
                     p.aqpa463hcmod,
                     p.aqpa463hsucor,
                     p.aqpa463htran,
                     p.aqpa463hnrel,
                     p.aqpa463hfcon,
                     
                     'S',
                     lc_coderr,
                     lc_msgerr);
                  commit;
              END;
              commit;
              ln_MTOTAL := 0;
              ln_BAIMP  := 0;
              ln_MTIMP  := 0;
              ln_PCIMA  := 0;
              ln_BSIMP  := 0;
              ln_VAIMP  := 0;
              ln_MTINF  := 0;
              ln_MTGRT  := 0;
              ln_BSIMPS := 0;
              ln_MTOTI  := 0;
            
            end if;
          end if;
        end if;
      
      ------------------------------------------------------------------------------------------------------------- 
      end loop;
    
      ----insert cabecera de factura aqpa465 
      begin
        -- Call the procedure
        pq_cr_factura_electronica.sp_cr_cabecera_facturaIGV1(
                                  ln_aqpa463hfcon, 
                                  ln_aqpa463pgcod,
                                  ln_aqpa463hcmod, 
                                  ln_aqpa463hsucor,
                                  ln_aqpa463htran, 
                                  ln_aqpa463hnrel 
                                   );
      
      end;
    
    end;
  
  exception
    when others then
      null;
    
  end sp_cr_Det_Factura_IGV1;
  
 procedure sp_cr_Cabecera_facturaIGV1(pd_pgfape in date,
                                AQPA463PGCOD  in number,
                                AQPA463HCMOD  in number,
                                AQPA463HSUCOR in number,
                                AQPA463HTRAN  in number,
                                AQPA463HNREL  in number) is
  
    pc_aqpa465hash varchar2(250) := '';
  
    cursor aqpa463 is
    
      select distinct (b.aqpa463pgcod),
                      (b.aqpa463hcmod),
                      (b.aqpa463hsucor),
                      (b.aqpa463htran),
                      (b.aqpa463hnrel),
                      (b.aqpa463hcord),
                      (b.aqpa463hfcon),
                      (b.aqpa463serie),
                      (b.aqpa463corre)
        from aqpa463 b
       where b.aqpa463hfcon = pd_pgfape
         AND b.aqpa463pgcod = aqpa463pgcod 
         AND b.aqpa463hcmod = aqpa463hcmod 
         AND b.aqpa463hsucor =aqpa463hsucor
         AND b.aqpa463htran = aqpa463htran 
         AND b.aqpa463hnrel = aqpa463hnrel ;
         
  
    lc_flag char(1);
  
  begin
    begin
    
      for p in aqpa463 loop
      
        --si no existe registro insertar
        begin
          select 'S'
            into lc_flag
            from aqpa465 b
           where b.aqpa465serie = p.aqpa463serie
             and b.aqpa465corr = p.aqpa463corre
             and b.aqpa465pgcod = p.aqpa463pgcod
             and b.aqpa465mod = p.aqpa463hcmod
             and b.aqpa465sucor = p.aqpa463hsucor
             and b.aqpa465tran = p.aqpa463htran
             and b.aqpa465rel = p.aqpa463hnrel
             and b.aqpa465con = p.aqpa463hfcon;
        exception
          when others then
            lc_flag := 'N';
        end;
      
        if nvl(lc_flag, 'N') = 'N' then
        
          insert into aqpa465
            (aqpa465serie,
             aqpa465corr,
             aqpa465pgcod,
             aqpa465mod,
             aqpa465sucor,
             aqpa465tran,
             aqpa465rel,
             aqpa465con,
             aqpa465hash)
          values
            (p.aqpa463serie,
             p.aqpa463corre,
             p.aqpa463pgcod,
             p.aqpa463hcmod,
             p.aqpa463hsucor,
             p.aqpa463htran,
             p.aqpa463hnrel,
             p.aqpa463hfcon,
             pc_aqpa465hash);
        
          commit;
        end if;
      
      end loop;

    end;
  
  end sp_cr_Cabecera_facturaIGV1;

  Procedure Sp_cr_calculaTotal1(pd_fecpro in date) is
  
    cursor registros is
      select a.aqpa460seri,
             a.aqpa460num,
             sum(AQPA460TOTAL + AQPA460ITITM) AQPA460TOTAL
        from aqpa460 a, aqpa465 b
       where a.aqpa460femi = pd_fecpro
         and a.aqpa460seri = b.aqpa465serie
         and a.aqpa460num = b.aqpa465corr
         and (b.aqpa465mod, b.aqpa465tran) in
             (select k.tp1nro1, k.tp1nro2
                from fst198 k
               where k.tp1cod = 1
                 and k.tp1cod1 = 11120
                 and k.tp1corr1 = 3
                 and k.tp1corr2 = 1
                 and tp1corr3 > 0)
       group by a.aqpa460seri, a.aqpa460num;
  
    lv_desmda varchar2(30);
    ln_mda    number(4);
    lv_TELEY  varchar2(200);
    result    character(100);
  
  begin
  
    for i in registros loop
    
      begin
        select distinct a.aqpa463mda
          into ln_mda
          from aqpa463 a
         where a.aqpa463serie = i.aqpa460seri
           and a.aqpa463corre = i.aqpa460num;
      exception
        when too_many_rows then
          begin
            select distinct a.aqpa463mda
              into ln_mda
              from aqpa463 a
             where a.aqpa463serie = i.aqpa460seri
               and a.aqpa463corre = i.aqpa460num
               and rownum = 1;
          exception
            when others then
              null;
          end;
        when others then
          null;
      end;
      --texto moneda  
      begin
        select trim(a.tp1desc)
          into lv_desmda
          from fst198 a
         where a.tp1cod = 1
           and a.tp1cod1 = 11120
           and a.tp1corr1 = 2
           and a.tp1corr2 = 5
           and a.tp1corr3 >= 1
           and a.tp1nro1 = ln_mda;
      exception
        when others then
          null;
      end;
    
      begin
      
        result := pq_cr_factura_electronica.dintex(i.AQPA460TOTAL);
      end;
      lv_TELEY := trim(result) || ' ' || lv_desmda;
    
      update aqpa460 a
         set a.AQPA460IMPT  = i.AQPA460TOTAL,
             a.aqpa460SPVI  = i.AQPA460TOTAL,
             a.aqpa460vvuig = i.AQPA460TOTAL,
             a.aqpa460teley = lv_TELEY,
             a.aqpa460prvit = i.AQPA460TOTAL
       where a.aqpa460seri = i.aqpa460seri
         and a.aqpa460num = i.aqpa460num;
      commit;
    
    end loop;
  
  end Sp_cr_calculaTotal1;

--------------------------------------------------------------------------
procedure sp_actualizar_fecha(pd_fecpro in date) is

cursor lisaqpa465(ld_fecha in date) is
select /*+all_rows */ distinct aqpa465serie  SERIE, aqpa465corr NUMERO , aqpa465con FECHA 
from aqpa460 a, aqpa465 b where a.AQPA460SERI = b.aqpa465serie
and a.AQPA460NUM = b.aqpa465corr and a.aqpa460femi = ld_fecha and  ( a.aqpa460docu is null or a.aqpa460fecha is null ); 

cursor lisaqpa466(ld_fecha in date) is
select  /*+all_rows */ distinct aqpa466serie SERIE, aqpa466corr NUMERO, aqpa466con FECHA 
from aqpa460 a, aqpa466 b where a.AQPA460SERI = b.aqpa466serie
and a.AQPA460NUM = b.aqpa466corr and a.aqpa460femi = ld_fecha and ( a.aqpa460docu is null or a.aqpa460fecha is null);

ln_cant number := 0;

BEGIN
        for i in lisaqpa465(pd_fecpro) loop
              ln_cant :=  ln_cant + 1;
              update aqpa460 a 
                set AQPA460DOCU = trim(a.aqpa460nruc),
                    AQPA460FECHA = i.FECHA
                where AQPA460SERI =  i.SERIE
                  and AQPA460NUM =  i.NUMERO;

              if ln_cant >= 50000 then
                  ln_cant := 1;
                  commit;
              end if ;       
              
        end loop;
        commit;

        for i in lisaqpa466(pd_fecpro) loop
              ln_cant :=  ln_cant + 1;
              update aqpa460 a 
                set AQPA460DOCU = trim(a.aqpa460nruc),
                    AQPA460FECHA = i.FECHA
                where AQPA460SERI =  i.SERIE
                  and AQPA460NUM =  i.NUMERO;

              if ln_cant >= 100 then
                  ln_cant := 1;
                  commit;
              end if ;       
              
        end loop;
        COMMIT;
END sp_actualizar_fecha;
----------------------------------------------------------------
procedure sp_datos_campania (pd_fecha in date,
                             pn_cuenta in number,
                             pc_serie in varchar2,
                             pn_numero in number,
                             pn_emp in number,
                             pn_suc in number,
                             pn_mod in number,
                             pn_tra in number,
                             pn_rel in number,
                             pc_datos out varchar2
                            ) is

lc_codigo varchar2(50);
lc_tipo   varchar2(50);
lc_nombre varchar2(50);
lc_serie  varchar2(50);
pc_desc   varchar2(50);
lc_text   varchar2(1000);

begin
  ---retorna la transaccion
  begin
      select JAQN67COA
        into lc_codigo
    from JAQN67 j
    where  JAQN67CTA = pn_cuenta
    and JAQN67ENT = pd_fecha ;
  exception when others then
     lc_codigo := null;
  end;  

  if lc_codigo is not null then

    begin
      select upper(JAQN78NOP), upper(JAQN85NOM) ,upper(JAQN75SEA)
      into lc_tipo, lc_nombre, lc_serie
      from JAQN75 k, JAQN78 l, JAQN85 m
      where l.jaqn78cop =  k.JAQN75COP
      and l.jaqn78com = k.jaqn75com
      and m.jaqn85com = k.jaqn75com
      and  k.JAQN75COA = lc_codigo;
    exception when others then
       lc_codigo := null;    
    end; 
    
    if pn_mod  = 98 and pn_tra = 236 then
        lc_text := 'Nota Cargo - Transferencia gratuita - Entrega de obsequio - Campaña Ahorraton ';
    else  
        lc_text := 'Transferencia gratuita - Entrega de obsequio - Campaña Ahorraton ';
    end if;

    pc_datos := lc_text||trim(to_char(pd_fecha,'YYYY/MM/DD'))||' '||trim(lc_tipo) ||' '||trim(lc_nombre)||' '||trim(lc_serie);
  else
    pc_datos := null;  
  end if ;  

    pc_desc := trim(pc_serie)||'-'||trim(pn_numero);
    
    BEGIN
      UPDATE JAQN16 J
         SET J.JAQN16AC1 = pc_desc
       WHERE J.JAQN16EMP = pn_emp
         AND J.JAQN16SUC = pn_suc
         AND J.JAQN16MOD = pn_mod
         AND J.JAQN16TRA = pn_tra
         AND J.JAQN16NRE = pn_rel
         AND J.JAQN16FEC = pd_fecha;
        COMMIT; 
    EXCEPTION WHEN OTHERS THEN
          NULL;         
    END; 
  

                 
     
end sp_datos_campania;
----------------------------------------------------------------
procedure sp_datos_reporte ( pn_emp in number,
                             pn_suc in number,
                             pn_mod in number,
                             pn_tra in number,
                             pn_rel in number,
                             pd_fec in date
                            ) is


/*
Ingreso

&JAQN16COD -  Varchar(255) - Código entrega de premio 
&JAQN16EMP -  Numerico(3) - Empresa 
&JAQN16SUC -  Numerico(3) - Sucursal 
&JAQN16MOD -  Numerico(3) - Modulo 
&JAQN16TRA -  Numerico(3) - Transacción 
&JAQN16NRE -  Numerico(4) - Numero de relación
&JAQN16FEC-  Date - Fecha

Variables de Salida

&NUMEROVou -  Varchar(255) - Numero de voucher


*/
pc_numero varchar2(255);

begin
  ---retorna el comprobante
  begin
     select distinct a.aqpa465serie ||'-'|| trim(a.aqpa465corr)
        into pc_numero
        from aqpa465 a, aqpa460 b
        where b.aqpa460seri = a.aqpa465serie
        and b.aqpa460num = a.aqpa465corr
        and a.aqpa465pgcod = pn_emp 
        and a.aqpa465sucor = pn_suc 
        and a.aqpa465mod = pn_mod 
        and a.aqpa465tran = pn_tra 
        and a.aqpa465rel = pn_rel 
        and a.aqpa465con = pd_fec ;    
  exception when others then
     pc_numero := null;
  end; 
  
  if pc_numero is not null then
    BEGIN
      UPDATE JAQN16 J
         SET J.JAQN16AC1 = pc_numero
       WHERE J.JAQN16EMP = pn_emp
         AND J.JAQN16SUC = pn_suc
         AND J.JAQN16MOD = pn_mod
         AND J.JAQN16TRA = pn_tra
         AND J.JAQN16NRE = pn_rel
         AND J.JAQN16FEC = pd_fec;
        COMMIT; 
    EXCEPTION WHEN OTHERS THEN
          NULL;         
    END; 
  end if;     
     
end sp_datos_reporte;

Procedure sp_cr_cobroEfectivoTI(pn_pgcod  in number,
                                pn_hcmod  in number,
                                pn_hsucor in number,
                                pn_htran  in number,
                                pn_hnrel  in number,
                                pn_hfcon  in date,
                                pc_serie  in char,
                                pn_corr   in number,
                                pn_mto    out number) is
    cursor tipo is
      select trim(a.st171cpdsc) st171cpdsc
        from fst171 a
      -- where a.st171cpcod between 28 and 33;  
       where /* (a.st171cpcod between 28 and 33)
          or a.st171cpcod = 46 ; se comento*/ 
         ( (a.st171cpcod between 28 and 33) or a.st171cpcod = 46 
         or (a.st171cpcod between 50 and 65) --)  ---2023.10.01 se agrego
           or a.st171cpcod = 70  ---se agrego IGV   2023.10.13
          ) ;
  
    ln_mtoAux number(17, 2) := 0;
    ln_mtoAcu number(17, 2) := 0;
  begin
    for i in tipo loop
      ln_mtoAux := 0;
      begin
        select to_number(trim(a.aqpa463txtord), '99999999999999999.99') --to_number(trim(a.aqpa463txtord))
          into ln_mtoAux
          from aqpa463 a
         where a.aqpa463pgcod = pn_pgcod
           and a.aqpa463hcmod = pn_hcmod
           and a.aqpa463hsucor = pn_hsucor
           and a.aqpa463htran = pn_htran
           and a.aqpa463hnrel = pn_hnrel
           and a.aqpa463hfcon = pn_hfcon
           and a.aqpa463serie = pc_serie
           and a.aqpa463corre = pn_corr
           and trim(a.aqpa463hvchr) = i.st171cpdsc;
      exception
        when others then
          ln_mtoAux := 0;
      end;
    
      ln_mtoAcu := ln_mtoAcu + nvl(ln_mtoAux, 0);
    end loop;
  
    pn_mto := nvl(ln_mtoAcu, 0);
  end sp_cr_cobroEfectivoTI;
  -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --

---------------------------------------
procedure sp_cr_Envia_Factura(pc_Serie  in varchar2,
                              pn_numero in number
                              ) is
                               
lc_cesun varchar2(4);
ld_fecha date;
lc_flag   char(1);
lc_error  varchar2(3000);
lc_codigo varchar2(3000);

BEGIN

      begin
          
          pq_ar_facturacion_e.pr_ar_main(pn_serie       => pc_Serie,
                                         pn_nro         => pn_numero,
                                         pv_flag_error  => lc_flag,
                                         pv_error       => lc_error,
                                         pv_codigo_hash => lc_codigo);
      exception when others then
         null;
      end;  

    --mandar a sunat
     begin
      pq_ar_facturacion_e.pr_ar_get_masivo_xml_pdf;
    end;
    
END sp_cr_Envia_Factura; 
                           
  -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
   Procedure Sp_cr_calculaTotal2(PD_FECCON in date,
                                PN_AQPA463PGCOD  in number,
                                PN_AQPA463HCMOD  in number,
                                PN_AQPA463HSUCOR in number,
                                PN_AQPA463HTRAN  in number,
                                PN_AQPA463HNREL  in number,
                                pn_monto out number) is
  
         
  begin
  
  
    begin
      select sum(f.HCIMP1)
        into pn_monto
        from fsh016 f
       where f.PGCOD = PN_AQPA463PGCOD
         and f.HCMOD = PN_AQPA463HCMOD
         and f.HSUCOR = PN_AQPA463HSUCOR
         and f.HTRAN = PN_AQPA463HTRAN
         and f.HNREL = PN_AQPA463HNREL
         and f.hfcon = PD_FECCON --ld_fec
         and f.hcord in (3,10); --ordinal
    exception
      when others then
        pn_monto := 0;
    end;
  

    
 
  end Sp_cr_calculaTotal2;

   
procedure sp_cr_Detalle_Fact_CIGV( 
                                   pc_serie       in char,
                                   pn_correlativo in number) is
  
    pc_fecha    varchar2(80);
    lv_codtdocC varchar2(1); --05/04/2023 dcastro 
  
    cursor aqpa463 is
    
      select *
        from aqpa463 b
       where b.aqpa463serie = pc_serie --comentar despues
         and b.aqpa463corre = pn_correlativo
       order by b.aqpa463hnrel asc, b.aqpa463txoren asc;
  
    lc_coderr char(100);
    lc_msgerr char(1000);
  
    ln_cta           number(9);
    lc_hor           char(8);
    ld_fec           date;
    lc_flg           char(1) := 'N';
    pn_pais          number;
    pn_monto_total_1 number(12, 2) := 0;
    result           character(100);
    pd_pgfape2       date;
    ln_mda           number(4);
    ln_nroitem       number(12) := 0;
    ln_cant          number(12, 10);
    lc_codpla        char(3);
    ln_docemp        number(2);
    pv_tdoc          char(25);
    lc_sistemi       char(6);
  
    lv_destiptrb varchar2(6);
    ln_MONTO     number;
  
    lc_contrato varchar2(50);
    lv_tipemp   varchar2(1);
    lv_ruc      varchar2(11);
    lv_rzn      varchar2(1500);
    lv_ubg      varchar2(6);
    lv_NCOM     varchar2(1500);
    lv_CALLE    varchar2(200);
    --lv_URBA        varchar2(25);
    lv_DEPA  varchar2(100);
    lv_PROV  varchar2(30);
    lv_DIST  varchar2(30);
    lv_TELF  varchar2(20);
    lv_WEB   varchar2(100);
    lv_CPAIS varchar2(2);
    --lv_CESUN       varchar2(4);
    lv_codtipo      varchar2(2);
    lv_tipomda      varchar2(3);
    lv_correo       varchar2(100);
    lv_glosa        varchar2(30);
    lv_COMA         varchar2(20);
    lv_TPLA         varchar2(3);
    lv_tipoope      varchar2(4);
    lv_TPLCO        varchar2(3);
    lv_CLOG         varchar2(3);
    lv_codtdoc      varchar2(1);
    lc_pendoc       char(12);
    lv_pendoc       varchar2(15);
    lv_penom        varchar2(1500);
    lv_hora         varchar2(8);
    ln_SIMC         number(12, 2) := 0;
    ln_SVITM        number(12, 2) := 0;
    ln_SPVI         number(12, 2) := 0;
    lv_TXML         varchar2(3);
    lv_ubgCli       varchar2(6);
    lv_sngc13dir    varchar2(500);
    lv_urb          varchar2(100);
    lv_fst071dsc1   varchar2(500);
    lv_locnom1      varchar2(500);
    lv_depnom1      varchar2(500);
    lv_cpai         varchar2(2);
    lv_PNETU        varchar2(3); ------------
    lc_oneroso      varchar2(1);
    ln_mtoconce     number; --(12,10):= 0;
    ln_mtoconce_ant number; --(12,10):= 0;
    ln_VVUIG        number; --(12):= 0;
    lv_desconce     varchar2(500);
    lv_infpredio    varchar2(500);
    ln_PRVIT        number(15, 2) := 0;
    lv_MEDEM        varchar2(50);
    lv_CSUNA        varchar2(8);
    lv_CPGS1        varchar2(14);
    ln_ITITM        number(12, 2) := 0; ---2018.10.19 
    ln_IMPTB        number(12, 2) := 0;
    ln_IMPEX        number(12, 2) := 0;
    lv_afecigv      varchar2(2);
    lv_SISC         varchar2(2);
    lv_idtrbsunat   varchar2(4);
    lv_nomtrbsunat  varchar2(6);
    lv_codun        varchar2(3);
    ln_MBIM         number(12, 2) := 0;
    ln_TAIMP        number(12, 2) := 0; --2018.10.19
    ln_CDLEY        number(4) := 0;
    lv_TELEY        varchar2(200);
    lv_TEXT1        varchar2(1000);
    lv_TEXT2        varchar2(1000);
    lv_TRECV        varchar2(1000);
    lv_TEMPL        varchar2(3);
    lv_SUBJE        varchar2(100);
    lv_VPCVA        varchar2(15);
    lv_NEXP         varchar2(10);
    lv_CIND         varchar2(1);
    lv_partida      varchar2(50);
    lv_NCONT        varchar2(50);
    lv_fecoto       varchar2(10);
    ld_fecoto       date;
    lv_cdisn        varchar2(6);
    lv_direccionH   varchar2(100);
    lv_urbaH        varchar2(50);
    lv_dptoH        varchar2(50);
    lv_provH        varchar2(50);
    lv_distH        varchar2(500);
    ln_MTOTAL       number(12, 2) := 0;
    ln_BAIMP        number(12, 2) := 0;
    ln_MTIMP        number(12, 2) := 0;
    ln_PCIMA        number(12, 2) := 0;
    ln_BSIMP        number(12, 2) := 0;
    ln_VAIMP        number(12, 2) := 0;
    ln_MTINF        number(12, 2) := 0;
    ln_MTGRT        number(12, 2) := 0;
    ln_BSIMPS       number(12, 2) := 0;
    ln_MTOTI        number(12, 2) := 0;
    ln_petdoc       number(2);
    lv_CTPR         varchar(2);
    lv_rzn1         varchar2(30);
    lv_rzn2         varchar2(30);
    lc_codsunat     varchar2(4);
  
    lc_nomcaja char(70);
    lc_nom1    char(30);
    lc_nom2    char(30);
  
    ln_item number(12);
  
    ln_mtoDifer number(17, 2);
    ln_mtoRedon number(17, 2);
  
    ld_fecSis date; --mod@abr 20180709
  
    lc_existe char(1) := 'N'; --mod@abr 20180824
  
    lv_sngc13dirFin varchar2(500); --mod@abr 20180905
  
    ln_guiaCP number; --2018.10.10
    lv_desmda varchar2(30); --2018.10.18
    lc_indGratuita char(1); -- 2023.10.10 dcastro indicador transferencia gratuita
    lc_NotaDebito  char(1); -- 2023.10.10 dcastro indicador nota debito
    lv_doc_ori char(2); -- 2023.10.10 dcastro indicador nota debito
    ln_mtoconce1 number; -- 2023.10.10 dcastro
    ln_mtoImpuesto number;
    
    
    
    
  begin
    begin
    
      for p in aqpa463 loop
      
        --mod@abr 20180824
        lc_existe := 'N';
        Begin
          select 'S'
            into lc_existe
            from aqpa460 a
           where a.aqpa460seri = p.aqpa463serie
             and a.aqpa460num = p.aqpa463corre
             and a.aqpa460ore = P.AQPA463TXOREN
             and rownum = 1;
        exception
          when others then
            lc_existe := 'N';
        end;
        --mod@abr 20180824
        if lc_existe = 'N' then
          --Pq_Cr_Factura_Electronica./*sp_cr_cobroEfectivo1*/
          Pq_Cr_Factura_Electronica.sp_cr_cobroEfectivoTI(p.aqpa463pgcod,
                                                         p.aqpa463hcmod,
                                                         p.aqpa463hsucor,
                                                         p.aqpa463htran,
                                                         p.aqpa463hnrel,
                                                         p.aqpa463hfcon,
                                                         p.aqpa463serie,
                                                         p.aqpa463corre,
                                                         pn_monto_total_1);
        
          --validar concepto 
          begin
            select 'S'
              into lc_flg
              from fst198 a
             where a.tp1cod = 1
               and a.tp1cod1 = 11120
               and a.tp1corr1 = 1
               and a.tp1corr2 = 3
               and a.tp1corr3 >= 1
               and a.tp1nro1 = p.aqpa463txoren - 100;
          exception
            when others then
              lc_flg := 'N';
          end;
        
          --obtener cuenta moneda hora fecha
          ln_cta := p.aqpa463cta;
          ln_mda := p.aqpa463mda;
        
          begin
            select a.ithora, a.itfcon
              into lc_hor, ld_fec
              from fsd015 a
             where a.pgcod = p.aqpa463pgcod
               and a.itmod = p.aqpa463hcmod
               and a.itsuc = p.aqpa463hsucor
               and a.ittran = p.aqpa463htran
               and a.itnrel = p.aqpa463hnrel;
          exception
            when others then
              null;
          end;
        
          /*2018.10.12
                 
          begin
          
             result := pq_cr_factura_electronica.dintex(pn_monto_total_1);
          end;
          */
        
          ----------Obtener codigo de sunat
          begin
            select lpad(a.tp1nro2, 4, '0')
              into lc_codsunat
              from fst198 a
             where a.tp1cod = 1
               and a.tp1cod1 = 11120
               and a.tp1corr1 = 1
               and a.tp1corr2 = 500
               and a.tp1nro1 = p.aqpa463hsucor;
          exception
            when others then
              null;
          end;
        
          begin
            -- Call the procedure
            pq_cr_factura_electronica.sp_fecha_sys(pc_fecha); --dni
          end;
        
          if lc_flg = 'N' then
            --inserte conceptos de deuda como fila
          
            pq_cr_factura_electronica.sp_cr_Dif_Red(pc_AQPA465PGCOD    => p.aqpa463pgcod,
                                                    pc_AQPA465MOD      => p.aqpa463hcmod,
                                                    pc_AQPA465SUCOREND => p.aqpa463hsucor,
                                                    pc_AQPA465TRAN     => p.aqpa463htran,
                                                    pc_AQPA465REL      => p.aqpa463hnrel,
                                                    pd_AQPA465CON      => p.aqpa463hfcon,
                                                    pn_dif             => ln_mtoDifer,
                                                    pn_red             => ln_mtoRedon);
          
            ln_mtoconce_ant := to_number(trim(p.aqpa463txtord),
                                         '99999999999999999.99'); --20180622
          
            if p.aqpa463txoren - 100 = 18 then
              ln_mtoconce := to_number(ln_mtoconce_ant) -
                             nvl(ln_mtoDifer, 0) - nvl(ln_mtoRedon, 0);
            else
              ln_mtoconce := to_number(ln_mtoconce_ant); ---verficar 222 
            end if;
          
            if ln_mtoconce <> 0 then
            
              --datos persona
              begin
              
                pq_cr_factura_electronica.sp_num_documento(ln_cta,
                                                           lc_pendoc,
                                                           lv_penom,
                                                           pv_tdoc,
                                                           pn_pais,
                                                           ln_petdoc,
                                                           pd_pgfape2);
              end;
            
              --datos direccion cliente
              begin
                -- Call the procedure
                pq_cr_factura_electronica.sp_dir_cliente(lc_pendoc,
                                                         ln_petdoc,
                                                         pn_pais,
                                                         lv_sngc13dir,
                                                         lv_fst071dsc1,
                                                         lv_locnom1,
                                                         lv_depnom1,
                                                         lv_ubgCli); ---dni  pn_pendoc
              end;
            
              --Codigo del Tipo de Comprobante
            
              --2018.10.10
              if substr(p.aqpa463serie, 1, 1) = 'F' then
                ln_guiaCP := 1;
              elsif substr(p.aqpa463serie, 1, 1) = 'B' then
                ln_guiaCP := 3;
              else
                ln_guiaCP := null;
              end if;
              --2018.10.10    
            
              begin
                select '0' || to_char(a.tp1nro1)
                  into lv_codtipo
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 7
                   and a.tp1corr3 = ln_guiaCP; --2018.10.10 se modifico codigo de guia para tipo comprobante
              exception
                when others then
                  null;
              end;
            
              --Codigo tipo moneda
              begin
                select trim(a.tp1desc)
                  into lv_tipomda
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 8
                   and a.tp1corr3 >= 1
                   and a.tp1nro1 = ln_mda;
              exception
                when others then
                  null;
              end;
            
              /*              --Codigo tipo documento cliente
                           begin
                             select to_char(a.tp1nro1)
                               into lv_codtdoc
                               from fst198 a
                              where a.tp1cod = 1
                                and a.tp1cod1 = 11120
                                and a.tp1corr1 = 1
                                and a.tp1corr2 = 4
                                and a.tp1nro2 = ln_petdoc;
                           exception
                             when others then
                               null;
                           end;
              */
              --Codigo tipo documento cliente
              begin
                select to_char(a.tp1nro1), substr(trim(TP1DESC), -1, 1)
                  into lv_codtdoc, lv_codtdocC
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 4
                   and a.tp1nro2 = ln_petdoc;
              exception
                when others then
                  null;
              end;
            
              --05/04/2023 dcastro se agrego nuevo tipo documento PTP
              if lv_codtdoc = 3 then
                lv_codtdoc := lv_codtdocC;
              end if;
              --05/04/2023 dcastro se agrego nuevo tipo documento PTP
            
              --Correo del cliente
              lv_correo := null;
              begin
                select substr(a.pextxt, 1, INSTR(a.pextxt, '\', 1) - 1)
                  into lv_correo
                  from fsx001 a
                 where a.pepais = pn_pais
                   and a.petdoc = ln_petdoc
                   and a.pendoc = lc_pendoc
                   and a.txcod = 0
                   and rownum = 1 --- 2021/11/11 dcastro se agrego condicion
                 order by a.pexren desc;
              exception
                when others then
                  null;
              end;
            
              --nro item
              ln_item := 0;
              begin
                select max(a.aqpa460item)
                  into ln_item
                  from aqpa460 a
                 where a.aqpa460seri = p.aqpa463serie
                   and a.aqpa460num = p.aqpa463corre;
              exception
                when too_many_rows then
                  begin
                    select max(a.aqpa460item)
                      into ln_item
                      from aqpa460 a
                     where a.aqpa460seri = p.aqpa463serie
                       and a.aqpa460num = p.aqpa463corre
                       and rownum = 1;
                  exception
                    when others then
                      null;
                  end;
                when no_data_found then
                  ln_item := 0;
                when others then
                  null;
              end;
              ln_nroitem := nvl(ln_item, 0) + 1;
            
              --monto conceptos
              --  ln_mtoconce := to_number(replace(trim(p.aqpa463txtord),'.',','));
            
              --       ln_mtoconce_ant:= round(trim(p.aqpa463txtord),2);
            
              --descripcion conceptos
              lv_desconce := trim(p.aqpa463hvchr);
         
               ---2023.09.20 dcastro campaña ahorraton
              lc_indGratuita := 'N'; 
              begin
                  select 'S' --si existe es transferencia gratuita
                  into lc_indGratuita
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120-- for update
                   and a.tp1corr1 = 41
                   and a.tp1corr2 > 0
                   and a.tp1nro1 = p.aqpa463hcmod
                   and a.tp1nro2 = p.aqpa463htran;
              exception when others then
                    lc_indGratuita := 'N'; 
              end;
              if lc_indGratuita = 'S' then ---p.aqpa463hcmod = 98 and p.aqpa463htran in (236, 779) then ---236
                begin
                    pq_cr_factura_electronica.sp_datos_campania(pd_fecha => p.aqpa463hfcon,
                                                                             pn_cuenta =>  p.aqpa463cta,
                                                                             pc_serie =>   p.aqpa463serie,
                                                                             pn_numero =>  p.aqpa463corre,
                                                                             pn_emp =>  p.aqpa463pgcod,
                                                                             pn_suc =>  p.aqpa463hsucor,
                                                                             pn_mod =>  p.aqpa463hcmod, 
                                                                             pn_tra =>  p.aqpa463htran,
                                                                             pn_rel =>  p.aqpa463hnrel,                                                                                                                                                          
                                                                             pc_datos => lv_desconce);
                end;
              end if;
              
               ---nota debito
              lc_NotaDebito := 'N'; 
              begin
                  select 'S' --si existe es transferencia gratuita
                  into lc_NotaDebito
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120-- for update
                   and a.tp1corr1 = 42
                   and a.tp1corr2 = 1
                   and a.tp1nro1 = p.aqpa463hcmod
                   and a.tp1nro2 = p.aqpa463htran;
              exception when others then
                    lc_NotaDebito := 'N'; 
              end;
              ---2023.09.20
   
            
              --Codigo de plantilla
              lc_codpla := 'EST';
            
              --- Sistema de Emicion 
              lc_sistemi := 'BANTOT';
            
              --Codigo tipo doc empresa
              begin
                select a.tp1nro1
                  into ln_docemp
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 4;
              exception
                when others then
                  null;
              end;
            
              begin
                select to_char(a.tp1nro1)
                  into lv_tipemp
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 4
                   and a.tp1corr3 >= 1
                   and a.tp1nro2 = ln_docemp;
              
              exception
                when others then
                  null;
              end;
              --ruc caja
              begin
                select trim(a.tp1desc)
                  into lv_ruc
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 1;
              exception
                when others then
                  null;
              end;
            
              --NOMBRE COMERCIAL caja
              begin
                select a.tp1desc
                  into lv_NCOM
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 5;
              exception
                when others then
                  null;
              end;
            
              --Ubigeo caja
              begin
                select trim(a.tp1desc)
                  into lv_ubg
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 6;
              exception
                when others then
                  null;
              end;
              ---------------------------------------campos parte 2
              ----------hora de transacion 
              begin
                select trim(a.aqpa463txtord)
                  into lv_hora
                  from aqpa463 a
                 where a.aqpa463pgcod = p.aqpa463pgcod
                   and a.aqpa463hcmod = p.aqpa463hcmod
                   and a.aqpa463hsucor = p.aqpa463hsucor
                   and a.aqpa463htran = p.aqpa463htran
                   and a.aqpa463hnrel = p.aqpa463hnrel
                   and a.aqpa463hfcon = p.aqpa463hfcon
                   and a.aqpa463serie = p.aqpa463serie
                   and a.aqpa463corre = p.aqpa463corre
                   and a.aqpa463txtord like '%:%';
              exception
                when others then
                  null;
              end;
            
              --mod@abr 20180907
              begin
                select pgfape into ld_fecSis from fst017 where pgcod = 1;
              exception
                when others then
                  null;
              end;
              if lv_hora is null then
              
                if ld_fecSis = p.aqpa463hfcon then
                
                  begin
                    select a.ithora
                      into lv_hora
                      from fsd015 a
                     where a.pgcod = p.aqpa463pgcod
                       and a.itsuc = p.aqpa463hsucor
                       and a.itmod = p.aqpa463hcmod
                       and a.ittran = p.aqpa463htran
                       and a.itnrel = p.aqpa463hnrel;
                  exception
                    when others then
                      null;
                  end;
                
                else
                  begin
                    select a.hhora
                      into lv_hora
                      from fsh015 a
                     where a.pgcod = p.aqpa463pgcod
                       and a.hsucor = p.aqpa463hsucor
                       and a.hcmod = p.aqpa463hcmod
                       and a.htran = p.aqpa463htran
                       and a.hnrel = p.aqpa463hnrel
                       and a.hfcon = p.aqpa463hfcon;
                  exception
                    when others then
                      null;
                  end;
                end if;
              
              end if;
              --mod@br 20180907
            
              --------tipo de operacion 
              begin
                select trim(a.tp1desc)
                  into lv_tipoope
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 11
                   and a.tp1corr3 = 1;
              exception
                when others then
                  null;
                
              end;
              -------Codigo de tipo de importe de afectacion
              Begin
                select to_char(a.tp1nro1)
                  into lc_oneroso
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 12
                   and a.tp1corr3 = 3;
              exception
                when others then
                  null;
              End;
            
              -----Afectaci?n del IGV  
              begin
                select to_char(a.tp1nro1)
                  into lv_afecigv
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 13
                   and a.tp1corr3 = 1;
              exception
                when others then
                  null;
                
              end;
            
              ---------Identificaci?n del tributo seg?n cat?logo SUNAT
              begin
                select to_char(a.tp1nro1), trim(a.tp1desc)
                  into lv_idtrbsunat, lv_nomtrbsunat
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 14
                   and a.tp1corr3 = 1;
              exception
                when others then
                  null;
              end; ---ojo
              ----------C?digo del Tipo de Tributo
              begin
                select trim(a.tp1desc)
                  into lv_destiptrb
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 14
                   and a.tp1corr3 = 2;
              exception
                when others then
                  null;
              end;
            
              ---Monto del descuento o recargo
              ln_MONTO := 0;
            
              -----------------Descripcion del pais 
              begin
                Select trim(a.tp1desc)
                  Into lv_CPAIS
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 15
                   and a.tp1corr3 = 1;
              exception
                when others then
                  null;
              end;
            
              ----------informacion del predio
              begin
                pq_cr_factura_electronica.sp_cr_detalle_predio(pc_aqpa463mod => p.aqpa463mod,
                                                               pc_aqpa463suc => p.aqpa463suc,
                                                               pc_aqpa463mda => p.aqpa463mda,
                                                               pc_aqpa463pap => p.aqpa463pap,
                                                               pc_aqpa463cta => p.aqpa463cta,
                                                               pc_aqpa463ope => p.aqpa463ope,
                                                               pc_aqpa463sbo => p.aqpa463sbo,
                                                               pc_aqpa463top => p.aqpa463top,
                                                               pc_partida    => lv_partida,
                                                               pc_contrato   => lc_contrato,
                                                               pc_direccion  => lv_direccionH,
                                                               pc_urba       => lv_urbaH,
                                                               pc_dpto       => lv_dptoH,
                                                               pc_prov       => lv_provH,
                                                               pc_dist       => lv_distH,
                                                               pc_ubigeo     => lv_cdisn);
              end;
            
              if lv_cdisn is null then
                --20180626
                lv_cdisn      := lv_ubgCli;
                lv_urbaH      := substr(lv_urb, 1, 25);
                lv_dptoH      := substr(lv_depnom1, 1, 30);
                lv_provH      := substr(lv_locnom1, 1, 30);
                lv_distH      := substr(lv_fst071dsc1, 1, 30);
                lv_direccionH := substr(lv_sngc13dir, 1, 100);
              end if;
            
              lc_contrato := lpad(to_char(p.aqpa463cta), 9, 0) ||
                             lpad(to_char(p.aqpa463mda), 3, 0) ||
                             lpad(to_char(p.aqpa463ope), 9, 0); --lv_text2; --numero credito
              lv_NCONT    := lc_contrato;
            
              ld_fecoto := pq_cr_factura_electronica.fn_fecha_desembolso(pc_aqpa463cta => p.aqpa463cta,
                                                                         pc_aqpa463ope => p.aqpa463ope);
            
              ld_fecoto := nvl(ld_fecoto, p.aqpa463hfcon);
              lv_fecoto := nvl(ld_fecoto, p.aqpa463hfcon);
            
              --agregar a info predio G74.1, G74.2
              lv_infpredio := '0' || '0' || lv_partida || '|' ||
                              lc_contrato || '|' || lv_fecoto || '|' ||
                              lv_direccionH || '|' || lv_urbaH || '|' ||
                              lv_provH || '|' || lv_distH || '|' ||
                              lv_dptoH;
                              
             -- lv_infpredio := null;            trim( a.AQPA460FECHA)||'|'||trim(AQPA460NCONT)||'|'||trim( AQPA460CALL)||'|'||trim(AQPA460PRVH)||'|'||trim( AQPA460DSTH)||'|'|| trim(AQPA460DEPTH ),    
              lv_pendoc    := lc_pendoc;
            
              --Pais del cliente
            
              begin
                select trim(a.tp1desc)
                  into lv_cpai
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 20
                   and a.tp1NRO1 = pn_pais;
              exception
                when others then
                  null;
              end;
            
              --Producto del credito
              begin
                select to_char(p.aqpa463mod) || '-' || trim(a.tonom)
                  into lv_TEXT1
                  from fst004 a
                 where a.modulo = p.aqpa463mod
                   and a.totope = p.aqpa463top;
              
              exception
                when others then
                  null;
              end;
            
              --direccion
              begin
                select to_char(a.tp1desc)
                  into lv_CALLE
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 2;
              
              exception
                when others then
                  null;
              end;
            
              --telefono
              begin
                select trim(to_char(a.tp1desc))
                  into lv_TELF
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 3;
              exception
                when others then
                  null;
              end;
            
              ---web de caja arequipa
              Begin
                select trim(a.tp1desc)
                  into lv_web
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 12;
              exception
                when others then
                  null;
              End;
            
              --departamento
              begin
                select to_char(a.tp1desc)
                  into lv_DEPA
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 7;
              
              exception
                when others then
                  null;
              end;
            
              --provincia
              begin
                select to_char(a.tp1desc)
                  into lv_PROV
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 8;
              
              exception
                when others then
                  null;
              end;
            
              --distrito
              begin
                select to_char(a.tp1desc)
                  into lv_DIST
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 9;
              
              exception
                when others then
                  null;
              end;
            
              --razon social
            
              begin
                select to_char(a.tp1desc)
                  into lv_rzn1
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 10;
              
              exception
                when others then
                  null;
              end;
            
              begin
                select to_char(a.tp1desc)
                  into lv_rzn2
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 11;
              
              exception
                when others then
                  null;
              end;
              lv_rzn := trim(lv_rzn1) || ' ' || trim(lv_rzn2);
            
        ----2023.10.30      pn_monto_total_1 := ln_mtoconce; --2018.10.10 en comisiones se agrego monto a todos los campos
            
              /* MONTO IGV */
              /* 2023.10.31
              begin
                pq_cr_factura_electronica.sp_cr_cobroigv(pn_pgcod  => p.aqpa463pgcod,
                                                         pn_hcmod  => p.aqpa463hcmod,
                                                         pn_hsucor => p.aqpa463hsucor,
                                                         pn_htran  => p.aqpa463htran,
                                                         pn_hnrel  => p.aqpa463hnrel,
                                                         pn_hfcon  => p.aqpa463hfcon,
                                                         pc_serie  => p.aqpa463serie,
                                                         pn_corr   => p.aqpa463corre,
                                                         pn_mto    => ln_mtoImpuesto);
              
              end;*/
              
              
                  --determinacion si la operacion tiene IGV
                  begin
                    select a.hcimp1
                      into ln_mtoImpuesto
                      from fsh016 a
                     where a.pgcod  = p.aqpa463pgcod
                       and a.hcmod  = p.aqpa463hcmod
                       and a.hsucor = p.aqpa463hsucor
                       and a.htran  = p.aqpa463htran
                       and a.hnrel  = p.aqpa463hnrel
                       and a.hfcon  = p.aqpa463hfcon
                       and a.hrubro in (2517030200001, 2527030200001);
                  exception
                    when others then
                      lc_flg := 'N';
                      null;
                    
                  end;
              /* MONTO IGV */
            
            
              ---2023.09.20 ahorraton importe debe ser 0
              lc_indGratuita := 'N'; 
              begin
                  select 'S' --si existe es transferencia gratuita
                  into lc_indGratuita
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120-- for update
                   and a.tp1corr1 = 41
                   and a.tp1corr2 > 0
                   and a.tp1nro1 = p.aqpa463hcmod
                   and a.tp1nro2 = p.aqpa463htran;
              exception when others then
                    lc_indGratuita := 'N'; 
              end;

              if lc_indGratuita = 'S' then ---p.aqpa463hcmod = 98 and p.aqpa463htran in (236, 779) then ---236
                pn_monto_total_1 := 0; --se comento total
                
                ln_mtoImpuesto   := 0;
                lv_idtrbsunat    := 9996; -- AQPA460CODTB   ---------Identificaci?n del tributo seg?n cat?logo SUNAT
                ln_CDLEY         := 1002;
                           
                  begin
                    pq_cr_factura_electronica.sp_cr_calculatotal2(pd_feccon => p.aqpa463hfcon,
                                                                  pn_aqpa463pgcod => p.aqpa463pgcod,
                                                                  pn_aqpa463hcmod => p.aqpa463hcmod,
                                                                  pn_aqpa463hsucor => p.aqpa463hsucor,
                                                                  pn_aqpa463htran => p.aqpa463htran,
                                                                  pn_aqpa463hnrel => p.aqpa463hnrel,
                                                                  pn_monto => ln_mtoconce);
                  end;
              
                  ln_mtoconce1 := ln_mtoconce;
                  ln_mtoconce      := 0;
              else 
                lv_idtrbsunat  := 1000; -- AQPA460CODTB   ---------Identificaci?n del tributo seg?n cat?logo SUNAT                
                ln_mtoconce1   := ln_mtoconce + ln_mtoImpuesto;
                ln_CDLEY       := 1000;  
                
               
              end if;
              
              

              
               if lc_NotaDebito = 'S' then ---p.aqpa463hcmod = 98 and p.aqpa463htran in (236, 779) then ---236

                lv_idtrbsunat    := 9998; -- AQPA460CODTB   ---------Nota Debito
                lv_doc_ori       := '03'; --aqpa460cmem,
                lv_codtipo       := '08'; --AQPA460TCOMF
               else
                lv_doc_ori       := null; --aqpa460cmem,
               end if; 
              --
            
              begin
              
                --result := pq_cr_factura_electronica.dintex(pn_monto_total_1);
                result := pq_cr_factura_electronica.dintex(ln_mtoconce1);
                
              end;


            
              lv_glosa := null;
              lv_TPLA  := 'EST';
              lv_TPLCO := 'EST';
              ln_SIMC  := null;
              ln_SVITM := ln_mtoconce1;
              ln_SPVI  := ln_mtoconce;
              lv_TXML  := '2.1';
              lv_urb   := null;
              lv_PNETU := 'NIU';
              ln_cant  := 1;
              lv_CTPR  := '01';
              ln_VVUIG := ln_mtoconce1;
              ln_PRVIT := ln_mtoconce;
              ln_MBIM  := ln_mtoconce; --null; 20180623
       ---verificar    AQPA460IMPT   pn_monto_total_1
       
              lv_MEDEM := 'UND';
              lv_CSUNA := '84121901';
              ln_ITITM := null;
              ln_IMPTB := null;
              ln_IMPEX := null;
              --lv_afecigv  := '9996';
              lv_SISC   := null;
              lv_codun  := 'FRE';
              
              ln_TAIMP  := null;
              
              lv_TELEY  := trim(result) || ' ' || lv_desmda; --2018.10.17  result;
              lv_TEXT2  := lpad(to_char(p.aqpa463cta), 9, 0) ||
                           lpad(to_char(p.aqpa463mda), 3, 0) ||
                           lpad(to_char(p.aqpa463ope), 9, 0);
              lv_TRECV  := lv_correo;
              lv_TEMPL  := 'EST';
              lv_SUBJE  := '0' || trim(lv_codtipo) || '-' || P.AQPA463SERIE || '-' ||
                           trim(to_char(P.AQPA463CORRE));
              lv_VPCVA  := null;
              lv_NEXP   := '0';
              lv_CIND   := '0';
              ln_MTOTAL := null;
              ln_BAIMP  := null;
              ln_MTIMP  := null;
              ln_PCIMA  := null;
              ln_BSIMP  := null;
              ln_VAIMP  := null;
              ln_MTINF  := null;---pn_monto_total_1;
              ln_MTGRT  := null;
              ln_BSIMPS := null;
              ln_MTOTI  := null;
              lv_CPGS1  := null;
              lv_COMA   := to_char(p.aqpa463hfcon, 'yymmdd') ||
                           lpad(to_char(p.aqpa463hsucor), 3, 0) ||
                           lpad(to_char(p.aqpa463hcmod), 3, 0) ||
                           lpad(to_char(p.aqpa463htran), 3, 0) ||
                           lpad(to_char(p.aqpa463hnrel), 4, 0);
            
 
              ln_SIMC         := ln_mtoImpuesto; --AQPA460SIMC   total impuesto se cambio d eposicion variable
              ln_MTIMP        := ln_mtoImpuesto;
              ln_IMPEX        := ln_mtoImpuesto;
              ln_ITITM        := ln_mtoImpuesto;
              ln_IMPTB        := ln_mtoImpuesto;
              lv_nomtrbsunat := 'IGV'; --AQPA460DSTRB  
              lv_codun       := 'VAT'; --AQPA460CODUN  
              ln_PCIMA       := 18.0;
              ln_TAIMP       := 18;              



------------------------
                ln_MTOTAL      := ln_mtoconce1;


                ln_SVITM  := ln_mtoconce;
                ln_PRVIT  := ln_mtoconce1;--AQPA460PRVIT  ln_mtoconce1;
              --  ln_MTOTI  := ln_mtoImpuesto;--AQPA460MTOTI	0
                ln_SPVI   := ln_mtoconce1; --AQPA460SPVI
              -- lv_infpredio  AQPA460MFUN	concatenar
                ln_MBIM     := ln_mtoconce; --AQPA460MBIM	=  AQPA460VVUN
                ln_MTOTAL   := ln_mtoconce; --AQPA460MTOTAL	=  AQPA460VVUN
                ln_BAIMP    := ln_mtoconce; --AQPA460BAIMP	=  AQPA460VVUN
                
     /*         
              AQPA460IMPT 6.90
              AQPA460SPVI 6.90
              AQPA460VVUIG  6.9
              AQPA460PRVIT  6.9
              AQPA460SVITM  5.85
              AQPA460TOTAL  5.85
              AQPA460VVUN 5.85
              AQPA460MBIM 5.85
              AQPA460MTOTAL 5.85
              AQPA460BAIMP  5.85
*/
                        
              if lc_indGratuita = 'S' then 

                lv_afecigv     := 10; --AQPA460AFIGV
                ln_VVUIG       := 0;
                ln_MTOTAL      := ln_mtoconce1;
                ln_BAIMP       := ln_mtoconce1;
                ln_SVITM       := ln_mtoconce1;
                ln_MBIM        := ln_mtoconce1;
                lv_tipoope     := '0101';
                
                ln_PRVIT  := ln_mtoconce1;--AQPA460PRVIT  ln_mtoconce1;
                lv_TELEY  := 'TRANSFERENCIA GRATUITA DE UN BIEN Y/O SERVICIO PRESTADO GRATUITAMENTE';--AQPA460TELEY	TRANSFERENCIA GRATUITA DE UN BIEN Y/O SERVICIO PRESTADO GRATUITAMENTE
                lv_TEXT1  := null;--AQPA460TEXT1	nulo
                lv_TEXT2  := null;--AQPA460TEXT2	nulo
                ln_MTGRT  := ln_mtoconce1;--AQPA460MTGRT	123
                ln_BSIMPS := ln_mtoconce1;--AQPA460BSIMPS	123
                ln_MTOTI  := ln_mtoImpuesto;--AQPA460MTOTI	0
                ln_SPVI   := ln_mtoconce1; --AQPA460SPVI
 
              else
                lv_afecigv := 10; 

               -- lv_infpredio  AQPA460MFUN	concatenar
              /*  ln_MBIM     := ln_mtoconce1; --AQPA460MBIM	=  AQPA460VVUN
                ln_MTOTAL   := ln_mtoconce1; --AQPA460MTOTAL	=  AQPA460VVUN
                ln_BAIMP    := ln_mtoconce1; --AQPA460BAIMP	=  AQPA460VVUN
               */ lv_desconce := 'IGV';
 
               
              end if;             


             ----------------------datos caja
              ---razon social de caja arequipa
              Begin
              
                select a.tp1desc
                  into lc_nom1
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 10;
              exception
                when others then
                  null;
              End;
            
              ---razon social de caja arequipa
              Begin
                select a.tp1desc
                  into lc_nom2
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 11;
              exception
                when others then
                  null;
              End;
            
              lc_nomcaja := trim(lc_nom1) || trim(lc_nom2);
            
              --mod@abr 20180903 modificacion de ubigeo TEMPORAL
              lv_sngc13dirFin := trim(lv_sngc13dir) || ' - ' ||
                                 trim(lv_fst071dsc1) || ' - ' ||
                                 trim(lv_locnom1) || ' - ' ||
                                 trim(lv_depnom1);
              lv_depnom1      := null;
              lv_locnom1      := null;
              lv_fst071dsc1   := null;
            
              --mod@abr 20180903 modificacion de ubigeo TEMPORAL
            
              --mod@abr 20180905
              if lv_correo is null then
                lv_correo := 'Reportefactele@cajaarequipa.pe';
              end if;
            
              if lv_TRECV is null then
                lv_TRECV := 'Reportefactele@cajaarequipa.pe';
              end if;
              --mod@abr 20180905
            
              --2018.10.17 ---2018.12.26
              if ln_cta = 999999999 or trim(ln_cta) = 99 or ln_cta = 0 then
                --inicio valida cuenta cliente  2018.10.17
                lv_codtdoc := 1;
                lv_pendoc  := '00000000';
                lv_penom   := 'Clientes Varios';
              End if;
            
/*              --              if P.AQPA463HCMOD = 30 and P.AQPA463HTRAN in (977, 978) then  22/07/2021
              if P.AQPA463HCMOD = 30 and
                 P.AQPA463HTRAN in (977, 978, 405, 984, 986) then
                ---30/405  22/07/2021
                ---si es igv bantotal                      --se agrego 984,986  20221029
                lv_afecigv := 17; --se agrego concepto 978 26122018
              end if;*/
            
              --2018.10.17
            
              --2018.12.26
              lv_penom := replace(lv_penom, '&', '');
              --2018.12.26
            
    
              ------insert detalle de factura
              BEGIN
                insert into AQPA460
                  (AQPA460TDOC, --Codigo del Tipo de Documento de Identidad oENEmpresa
                   AQPA460RUCC, --N?mero de documento de identidad del emisor oENEmpresa
                   AQPA460RSOC, --Apellidos y nombres o denominaci?n o raz?n social oENEmpresa
                   AQPA460CDIS, --Codigo de UBIGEO oENEmpresa
                   AQPA460NCOM, --Nombre Comercial oENEmpresa
                   AQPA460CALLE, --Direcci?n completa y detallada oENEmpresa
                   AQPA460URBA, --Urbanizacion o Zona  oENEmpresa
                   AQPA460DEPA, --Departamento, expresado textualmente  oENEmpresa
                   AQPA460PROV, --Provincia, expresarlo textualmente   oENEmpresa
                   AQPA460DIST, --Distrito, expresarlo textualmente oENEmpres
                   AQPA460TELF, --Telefono de la Empresa Emisora oENEmpres
                   AQPA460WEB, --Pagina Web del Emisor oENEmpres           
                   AQPA460CPAIS, --Codigo del Pais del Emisor oENEmpres
                   AQPA460CESUN, --C?digo del establecimiento de Sunat  oENEmpres
                   AQPA460SERI, --Serie del comprobante.  Datos del Comprobante
                   AQPA460NUM, --Numero Correlativo del comprobante. Datos del Comprobante
                   AQPA460FEMI, --Fecha de Emision del Comprobante Datos del Comprobante
                   AQPA460TCOMF, --Codigo del Tipo de Comprobante Datos del Comprobante
                   AQPA460MONE, --Codigo del Tipo de Moneda Datos del Comprobante
                   AQPA460CORRR, --El correo electr?nico del Receptor  Datos del Comprobante
                   AQPA460MGLO, --Multiples Informaci?n adicional u observacion del comprobante.  Datos del Comprobante
                   AQPA460COMA, --Numero Interno del Comprobante Datos del Comprobante
                   AQPA460TPLA, --Tiplo de Plantilla  Datos del Comprobante
                   AQPA460TOPE, --C?digo de Tipo de operaciones Datos del Comprobante
                   AQPA460TPLCO, --C?digo de plantilla de correo  Datos del Comprobante
                   AQPA460CLOG, --C?digo del tipo de Logo Datos del Comprobante
                   AQPA460TDOCR, --Codigo del tipo de documento de identificaci?n del Receptor Datos del Comprobante
                   AQPA460NRUC, --N?mero de documento de identificaci?n Datos del Comprobante
                   AQPA460RASOC, --Apellidos y nombres o denominaci?n o raz?n social Datos del Comprobante
                   AQPA460IMPT, --Importe total  a pagar Datos del Comprobante
                   AQPA460HEMI, --Hora de Emisi?n  Datos del Comprobante
                   AQPA460SIMC, --Suma de todos los impuestos del comprobante.  Datos del Comprobante
                   AQPA460SVITM, --Suma del valor de venta total de todos los items   Datos del Comprobante
                   AQPA460SPVI, --Suma de los precios de venta total de todos los items  Datos del Comprobante
                   AQPA460TXML, -- Indica el tipo de XML que se generar? Datos del Comprobante
                   --  no va para factura   --AQPA460SDREF, --Serie documento al que se aplica la nota. ENComprobanteMotivoDocumento
                   --  no va para factura   --AQPA460NDREF, --Numero  documento al que se aplica la nota.  ENComprobanteMotivoDocumento
                   AQPA460CMEM, --  no va para factura    --AQPA460CMEM,  --C?digo por el cual se emite la nota.  ENComprobanteMotivoDocumento
                   ---  no va para factura  --AQPA460SUST,  --Sustento ENComprobanteMotivoDocumentoSustento
                   --  no va para factura     AQPA460SERIE, --Serie del comprobante referenciado. Referencia a un comprobante
                   --  no va para factura     AQPA460NRO,   --N?mero del comprobante referenciado Referencia a un comprobante
                   ---  no va para factura   --AQPA460TCOMP, --C?digo del tipo de comprobante.  Referencia a un comprobante
                   ---  no va para factura  --AQPA460FDREF, --Fecha de emisi?n del comprobante referenciado. Referencia a un comprobante  
                   AQPA460CDIST, --C?digo de UBIGEO Datos adicionales del Receptor
                   AQPA460CALL, --Direcci?n completa y detallada Datos adicionales del Receptor
                   AQPA460URB, --Urbanizacion o Zona   Datos adicionales del Receptor
                   AQPA460DEP, --Departamento Datos adicionales del Receptor
                   AQPA460PRV, --Provincia   Datos adicionales del Receptor
                   AQPA460DST, --Distrito Datos adicionales del Receptor
                   AQPA460CPAI, --C?digo del Pa?s  Datos adicionales del Receptor
                   AQPA460ITEM, --N?mero de orden del Item ENComprobanteDetalle 
                   AQPA460PNETU, --Unidad de medida de los bienes vendidos por item (UN/ECE rec 20) ENComprobanteDetalle 
                   AQPA460CANTF, --Cantidad de unidades vendidas pot item (Q)  ENComprobanteDetalle 
                   AQPA460TOTAL, --Importe monetario que es el total de la l?nea de detalle, incluyendo variaciones de precio (subvenciones, cargos o descuentos) pero sin impuestos.  ENComprobanteDetalle 
                   AQPA460DETE, --Codigo de identificaci?n de Onerosidad del Item ENComprobanteDetalle 
                   AQPA460CTPR, --Codigo de tipo de importe de afectacion ENComprobanteDetalle 
                   /*ok */
                   AQPA460VVUN, --Valores de venta unitarios por item (VU) no incluye impuestos  ENComprobanteDetalle 
                   /*campos probl*/
                   AQPA460VVUIG, --Precio de Venta Unitario (Incluye impuestos)  ENComprobanteDetalle 
                   AQPA460DESC, -- Descripcion del producto ENComprobanteDetalle 
                   AQPA460MFUN, --Multi Descripcion,  puede tener varias desccripciones ENComprobanteDetalle 
                   AQPA460PRVIT, --Es el precio de venta ENComprobanteDetalle 
                   AQPA460MEDEM, --Unidad medida del emisor ENComprobanteDetalle 
                   AQPA460CSUNA, --C?digo producto establecido por Sunat   ENComprobanteDetalle 
                   AQPA460CPGS1, --C?digo de producto GS1  ENComprobanteDetalle 
                   AQPA460ITITM, --Impuesto total del item ENComprobanteDetalle 
                   AQPA460IMPTB, --Importe total de un tributo para este item Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460IMPEX, ---Importe expl?cito a tributar ( = Tasa Porcentaje * Base Imponible)   Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460AFIGV, --Afectaci?n del IGV  Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460SISC, --Sistema de ISC  (01=Especifico; 02= al valor; 03=PV al p?blico)  Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   /*ojo*/
                   AQPA460CODTB, --Identificaci?n del tributo seg?n cat?logo SUNAT Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460DSTRB, --Nombre del Tributo (IGV, IVAP, ISC)  Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460CODUN, --C?digo del Tipo de Tributo (UN/ECE 5153) Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460MBIM, --Monto base del impuesto Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460TAIMP, --Tasa aplicada del impuesto  Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460CDLEY, --Codigo de la Leyenda Utilizado para Leyendas
                   AQPA460TELEY, --Texto de la leyenda  Utilizado para Leyendas
                   AQPA460TEXT1, --Texto libre 1 : Producto  Informaci?n adicional para la visualizacion de representaciones impresas, antes definido por el integrador.
                   AQPA460TEXT2, --Texto libre 2 : N?mero de Cr?dito Informaci?n adicional para la visualizacion de representaciones impresas, antes definido por el integrador.
                   AQPA460TRECV, --Correo del receptor Utilizado para enviar correos adicionales con copia al Correo del Receptor, ingresado en ENComprobante.Correo
                   AQPA460TEMPL, --C?digo de Tipo de Plantilla  Utilizado para enviar correos adicionales con copia al Correo del Receptor, ingresado en ENComprobante.Correo
                   AQPA460SUBJE, --Asunto del correo Utilizado para enviar correos adicionales con copia al Correo del Receptor, ingresado en ENComprobante.Correo
                   AQPA460VPCVA, --Placa del vehiculo Informaci?n adicional del item
                   AQPA460NEXP, --N?mero de Expediente Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460CIND, --C?digo de indicador  Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460NPART, --N?mero de Partida Registral  Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460NCONT, --N?mero de contrato  Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460FOTRC, --Fecha de Otorgo de cr?dito   Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460CDISN, --C?digo de Ubigeo   Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460DIREH, --Direcci?n   Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460URBH, --Urbanizaci?n Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460PRVH, --Provincia   Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460DSTH, --Distrito   Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460DEPTH, --Departamento Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460MTOTAL, --Monto total Gravado (Sin impuesto)  Informaci?n de gravada                           
                   AQPA460BAIMP, --Base del impuesto  IGV del Gravado
                   AQPA460MTIMP, --Monto total solo del impuesto   IGV del Gravado
                   AQPA460PCIMA, --Porcentaje del impuesto aplicado  IGV del Gravado
                   AQPA460BSIMP, --Base del impuesto Otros impuestos del Gravado
                   AQPA460VAIMP, --Monto total solo del impuesto  Otros impuestos del Gravado
                   AQPA460MTINF, --Monto total Inafecto  Informaci?n de inafecto
                   AQPA460MTGRT, --Monto total Gratuito  Informaci?n de gratuito
                   AQPA460BSIMPS, --Base del impuesto Impuestos del Gratuito
                   AQPA460MTOTI, --Monto total de impuestos Impuestos del Gratuito
                   AQPA460PGC, --mod@abr 20180824
                   AQPA460MOD, --mod@abr 20180824  
                   AQPA460SUC, --mod@abr 20180824 
                   AQPA460TRX, --mod@abr 20180824
                   AQPA460REL, --mod@abr 20180824
                   AQPA460ORE, --mod@abr 20180824
                   AQPA460DOCU --2023.07.18 dcastro 
                   )
                
                Values
                  (lv_tipemp, --AQPA460TDOC,  ok
                   lv_ruc, --AQPA460RUCC,  ok
                   lv_rzn, --AQPA460RSOC,  ok
                   lv_ubg, --AQPA460CDIS,  ok
                   lv_NCOM, --AQPA460NCOM,  ok
                   lv_CALLE, --AQPA460CALLE  ok
                   lv_urb, --AQPA460URBA,  ok
                   lv_DEPA, --AQPA460DEPA,  ok
                   lv_PROV, --AQPA460PROV,  ok
                   lv_DIST, --AQPA460DIST,  ok
                   lv_TELF, --AQPA460TELF,  ok
                   lv_WEB, --AQPA460WEB,   ok
                   lv_CPAIS, --AQPA460CPAIS  ok
                   lc_codsunat, --lv_CESUN,        --AQPA460CESUN
                   p.aqpa463serie, --AQPA460SERI,  ok
                   p.aqpa463corre, --AQPA460NUM,   ok
                   p.aqpa463hfcon, --AQPA460FEMI,  ok
                   lv_codtipo, --AQPA460TCOMF  ok
                   lv_tipomda, --AQPA460MONE,  ok
                   lv_correo, --AQPA460CORRR  ok
                   lv_glosa, --AQPA460MGLO,  ok
                   lv_COMA, --AQPA460COMA,  ok
                   lv_TPLA, --AQPA460TPLA,  ok
                   lv_tipoope, --AQPA460TOPE,  ok
                   lv_TPLCO, --AQPA460TPLCO  ok
                   lv_CLOG, --AQPA460CLOG,
                   lv_codtdoc, --AQPA460TDOCR  ok
                   lv_pendoc, --AQPA460NRUC,  ok
                   lv_penom, --AQPA460RASOC  ok
    ln_mtoconce1,      ---         pn_monto_total_1, --AQPA460IMPT,  ok
                   lv_hora, --AQPA460HEMI,  ok
                   ln_SIMC, --AQPA460SIMC,  ok
                   ln_SVITM, --AQPA460SVITM  ok
                   ln_SPVI, --AQPA460SPVI,  ok
                   lv_TXML, --AQPA460TXML,  ok
                   --AQPA460SDREF, --Serie documento al que se aplica la nota. ENComprobanteMotivoDocumento
                   --AQPA460NDREF, --Numero  documento al que se aplica la nota.  ENComprobanteMotivoDocumento
                   --AQPA460CMEM,  --C?digo por el cual se emite la nota.  ENComprobanteMotivoDocumento
                   lv_doc_ori, --     no va para factura--      lc_sustento,  --Sustento ENComprobanteMotivoDocumentoSustento
                   --AQPA460SERIE, --Serie del comprobante referenciado. Referencia a un comprobante
                   --AQPA460NRO,   --N?mero del comprobante referenciado Referencia a un comprobante
                   --AQPA460TCOMP, --C?digo del tipo de comprobante.  Referencia a un comprobante
                   --AQPA460FDREF, --Fecha de emisi?n del comprobante referenciado. Referencia a un comprobante  
                   lv_ubgCli, --AQPA460CDIST,  ok
                   lv_sngc13dir, --AQPA460CALL,   ok
                   lv_urb, --AQPA460URB,    ok
                   lv_depnom1, --AQPA460DEP,    ok
                   lv_locnom1, --AQPA460PRV,    ok
                   lv_fst071dsc1, --AQPA460DST,    ok
                   lv_cpai, --AQPA460CPAI,   ok
                   ln_nroitem, --AQPA460ITEM,   ok
                   lv_PNETU, --AQPA460PNETU,  ok
                   /*ok*/
                   ln_cant, --AQPA460CANTF,  ok
                   ln_mtoconce, --AQPA460TOTAL,  ok---revisar
                   lc_oneroso, --AQPA460DETE,   ok
                   lv_CTPR, --AQPA460CTPR,   ok
                   ln_mtoconce, --AQPA460VVUN,   ok to number  ---2023.10.10 se modifico
                   ln_VVUIG, --AQPA460VVUIG,  ok
                   lv_desconce, --AQPA460DESC,   ok
                   lv_infpredio, --AQPA460MFUN,   ok
                   ln_PRVIT, --AQPA460PRVIT,  ok
                   lv_MEDEM, --AQPA460MEDEM,  ok
                   lv_CSUNA, --AQPA460CSUNA,  ok
                   lv_CPGS1, --AQPA460CPGS1,  ok
                   ln_ITITM, --AQPA460ITITM,  ok
                   ln_IMPTB, --AQPA460IMPTB,  ok
                   ln_IMPEX, --AQPA460IMPEX,  ok
                   lv_afecigv, --AQPA460AFIGV,  ok
                   lv_SISC, --AQPA460SISC,   ok
                   lv_idtrbsunat, --AQPA460CODTB,  ok
                   lv_nomtrbsunat, --AQPA460DSTRB,  ok
                   lv_codun, --AQPA460CODUN,  ok
                   ln_MBIM, --AQPA460MBIM,   ok
                   ln_TAIMP, --AQPA460TAIMP,  ok
                   ln_CDLEY, --AQPA460CDLEY,  ok
                   lv_TELEY, --AQPA460TELEY,  ok
                   lv_TEXT1, --AQPA460TEXT1,  ok
                   lv_TEXT2, --AQPA460TEXT2,  ok
                   lv_TRECV, --AQPA460TRECV,  ok
                   lv_TEMPL, --AQPA460TEMPL,  ok
                   lv_SUBJE, --AQPA460SUBJE,  ok
                   lv_VPCVA, --AQPA460VPCVA,  ok
                   lv_NEXP, --AQPA460NEXP,   ok
                   lv_CIND, --,        --AQPA460CIND,   ok
                   nvl(lv_partida, ' '), --G74.3  --AQPA460NPART,  ok
                   nvl(lv_NCONT, ' '), -- G74.4 NUMERO CONTRATO                AQPA460NCONT,  ok 
                   ld_fecoto, --G74.5  FECHA OTORGAMIENTO CREDITO   AQPA460FOTRC,  ok
                   nvl(lv_cdisn, ' '), --G74.6  Ubigeo                        AQPA460CDISN,  ok
                   nvl(lv_direccionH, ' '), --G74.7                           AQPA460DIREH,  ok
                   nvl(lv_urbaH, ' '), --G74.8                                 AQPA460URBH,   ok
                   nvl(lv_provH, ' '), --G74.9                                AQPA460PRVH,   ok
                   nvl(lv_distH, ' '), --G74.10                                AQPA460DSTH,   ok
                   nvl(lv_dptoH, ' '), --AQPA460DEPTH,  ok
                   ln_MTOTAL, --AQPA460MTOTAL  ok
                   ln_BAIMP, --AQPA460BAIMP,  ok
                   ln_MTIMP, --AQPA460MTIMP,  ok
                   ln_PCIMA, --AQPA460PCIMA,  ok
                   ln_BSIMP, --AQPA460BSIMP,  ok
                   ln_VAIMP, --AQPA460VAIMP,  ok
                   ln_MTINF, --AQPA460MTINF,  ok
                   ln_MTGRT, --AQPA460MTGRT,  ok
                   ln_BSIMPS, --AQPA460BSIMPS  ok
                   ln_MTOTI, --AQPA460MTOTI   ok
                   P.AQPA463PGCOD, --mod@abr 20180824
                   P.AQPA463HCMOD, --mod@abr 20180824
                   P.AQPA463HSUCOR, --mod@abr 20180824 
                   P.AQPA463HTRAN, --mod@abr 20180824
                   P.AQPA463HNREL, --mod@abr 20180824 
                   P.AQPA463TXOREN, --mod@abr 20180824
                   trim(lv_pendoc) --AQPA460DOCU,  2023.07.18 se agrego documento sin espacios
                   );
              
                commit;
              Exception
                when others then
                
                  lc_coderr := sqlcode;
                  lc_msgerr := sqlerrm;
                
                  insert into aqpa460E
                    (aqpa460eserie,
                     aqpa460ecorr,
                     aqpa460epgcod,
                     aqpa460emod,
                     aqpa460esucorend,
                     aqpa460etran,
                     aqpa460erel,
                     aqpa460econ,
                     aqpa460etip,
                     Aqpa460eacoe,
                     Aqpa460eamsge)
                  
                  values
                    (p.aqpa463serie,
                     p.aqpa463corre,
                     p.aqpa463pgcod,
                     p.aqpa463hcmod,
                     p.aqpa463hsucor,
                     p.aqpa463htran,
                     p.aqpa463hnrel,
                     p.aqpa463hfcon,
                     
                     'S',
                     lc_coderr,
                     lc_msgerr);
                  commit;
              END;
            
              ln_MTOTAL := 0;
              ln_BAIMP  := 0;
              ln_MTIMP  := 0;
              ln_PCIMA  := 0;
              ln_BSIMP  := 0;
              ln_VAIMP  := 0;
              ln_MTINF  := 0;
              ln_MTGRT  := 0;
              ln_BSIMPS := 0;
              ln_MTOTI  := 0;
            
            end if;
          end if;
        
        end if;
      
      ------------------------------------------------------------------------------------------------------------- 
      end loop;
    
      
    end;
  
  exception
    when others then
      null;
      --mod@abr 20180622 ---LOG DE ERRORES
    /* insert into aqpa460E(aqpa460serie,
              aqpa460corr,
              aqpa460pgcod,
              aqpa460mod,
              aqpa460sucorend,
              aqpa460tran,
              aqpa460rel,
              aqpa460con,
              aqpa460tip)
    values(pc_AQPA465SERIE ,
           pc_AQPA465CORR  ,
           pc_AQPA465PGCOD ,
           pc_AQPA465MOD   ,
           pc_AQPA465SUCOREND,
           pc_AQPA465TRAN    ,
           pc_AQPA465REL    , 
           pc_AQPA465CON,
           'I'      );
    
    commit;   */
    --mod@abr 20180622
  
  end sp_cr_Detalle_Fact_CIGV;  
 
procedure sp_cr_Detalle_Factura_IGV0(pd_pgfape in date) is
  
    pc_fecha varchar2(80);
  
    lv_codtdocC varchar2(1); --05/04/2023 dcastro 
  
    cursor aqpa463 is
    
      select *
        from aqpa463 b
       where b.aqpa463hfcon = pd_pgfape
         and (b.aqpa463hcmod, b.aqpa463htran) in
             (select k.tp1nro1, k.tp1nro2
                from fst198 k
               where k.tp1cod = 1
                 and k.tp1cod1 = 11120
                 and k.tp1corr1 = 3
                 and k.tp1corr2 = 1
                 and tp1corr3 > 0)
      
       order by b.aqpa463hnrel asc, b.aqpa463txoren asc;
  
    lc_coderr char(100);
    lc_msgerr char(1000);
  
    ln_cta           number(9);
    lc_hor           char(8);
    ld_fec           date;
    lc_flg           char(1) := 'N';
    pn_pais          number;
    pn_monto_total_1 number(12, 2) := 0;
    result           character(100);
    pd_pgfape2       date;
    ln_mda           number(4);
    ln_nroitem       number(12) := 0;
    ln_cant          number(12, 10);
    lc_codpla        char(3);
    ln_docemp        number(2);
    pv_tdoc          char(25);
    lc_sistemi       char(6);
  
    lc_contrato varchar2(50);
    lv_tipemp   varchar2(1);
    lv_ruc      varchar2(11);
    lv_rzn      varchar2(1500);
    lv_ubg      varchar2(6);
    lv_NCOM     varchar2(1500);
    lv_CALLE    varchar2(200);
  
    lv_DEPA  varchar2(100);
    lv_PROV  varchar2(30);
    lv_DIST  varchar2(30);
    lv_TELF  varchar2(20);
    lv_WEB   varchar2(100);
    lv_CPAIS varchar2(2);
  
    lv_codtipo    varchar2(2);
    lv_tipomda    varchar2(3);
    lv_correo     varchar2(100);
    lv_glosa      varchar2(30);
    lv_COMA       varchar2(20);
    lv_TPLA       varchar2(3);
    lv_tipoope    varchar2(4);
    lv_TPLCO      varchar2(3);
    lv_CLOG       varchar2(3);
    lv_codtdoc    varchar2(1);
    lc_pendoc     char(12);
    lv_pendoc     varchar2(15);
    lv_penom      varchar2(1500);
    lv_hora       varchar2(8);
    ln_SIMC       number(12, 2) := 0;
    ln_SVITM      number(12, 2) := 0;
    ln_SPVI       number(12, 2) := 0;
    lv_TXML       varchar2(3);
    lv_ubgCli     varchar2(6);
    lv_sngc13dir  varchar2(500);
    lv_urb        varchar2(100);
    lv_fst071dsc1 varchar2(500);
    lv_locnom1    varchar2(500);
    lv_depnom1    varchar2(500);
    lv_cpai       varchar2(2);
    lv_PNETU      varchar2(3);
    lc_oneroso    varchar2(1);
    ln_mtoconce   number;
  
    ln_VVUIG       number;
    lv_desconce    varchar2(500);
    lv_infpredio   varchar2(500);
    ln_PRVIT       number(15, 2) := 0;
    lv_MEDEM       varchar2(50);
    lv_CSUNA       varchar2(8);
    lv_CPGS1       varchar2(14);
    ln_ITITM       number(12, 2) := 0;
    ln_IMPTB       number(12, 2) := 0;
    ln_IMPEX       number(12, 2) := 0;
    lv_afecigv     varchar2(2);
    lv_SISC        varchar2(2);
    lv_idtrbsunat  varchar2(4);
    lv_nomtrbsunat varchar2(6);
    lv_codun       varchar2(3);
    ln_MBIM        number(12, 2) := 0;
    ln_TAIMP       number(8, 5) := 0;
    ln_CDLEY       number(4) := 0;
    lv_TELEY       varchar2(200);
    lv_TEXT1       varchar2(1000);
    lv_TEXT2       varchar2(1000);
    lv_TRECV       varchar2(1000);
    lv_TEMPL       varchar2(3);
    lv_SUBJE       varchar2(100);
    lv_VPCVA       varchar2(15);
    lv_NEXP        varchar2(10);
    lv_CIND        varchar2(1);
    lv_partida     varchar2(50);
    lv_NCONT       varchar2(50);
    ld_fecoto      date;
    lv_cdisn       varchar2(6);
    lv_direccionH  varchar2(100);
    lv_urbaH       varchar2(50);
    lv_dptoH       varchar2(50);
    lv_provH       varchar2(50);
    lv_distH       varchar2(500);
    ln_MTOTAL      number(12, 2) := 0;
    ln_BAIMP       number(12, 2) := 0;
    ln_MTIMP       number(12, 2) := 0;
    ln_PCIMA       number(9, 2) := 0;
    ln_BSIMP       number(12, 2) := 0;
    ln_VAIMP       number(12, 2) := 0;
    ln_MTINF       number(12, 2) := 0;
    ln_MTGRT       number(12, 2) := 0;
    ln_BSIMPS      number(12, 2) := 0;
    ln_MTOTI       number(12, 2) := 0;
    ln_petdoc      number(2);
    lv_CTPR        varchar(2);
    lv_rzn1        varchar2(30);
    lv_rzn2        varchar2(30);
    lc_codsunat    varchar2(4);
  
    lc_nomcaja char(70);
    lc_nom1    char(30);
    lc_nom2    char(30);
  
    ln_item number(12);
  
    ld_fecSis date;
  
    lc_existe char(1) := 'N';
  
    lv_sngc13dirFin varchar2(500);
  
    ln_guiaCP      number;
    ln_mtoImpuesto number;
    lv_desmda      varchar2(30);
  
    ln_mtoTotal  number(12, 2) := 0;
    lc_serie_Ant char(4);
    lc_corr_Ant  number(8);
  
    lc_exis460 char(1);
    lc_indGratuita char(1); -- 2023.10.10 dcastro indicador transferencia gratuita
    ln_mtoconce1  number(12, 2) := 0; --2023.10.10
  
  begin
    begin
    
      for p in aqpa463 loop
      
        lc_existe := 'N';
        Begin
          select 'S'
            into lc_existe
            from aqpa460 a
           where a.aqpa460seri = p.aqpa463serie
             and a.aqpa460num = p.aqpa463corre
             and a.aqpa460ore = P.AQPA463TXOREN
             and rownum = 1;
        exception
          when others then
            lc_existe := 'N';
        end;
      
        if lc_existe = 'N' then
        
          --validar concepto 
          begin
            select 'S'
              into lc_flg
              from fst198 a
             where a.tp1cod = 1
               and a.tp1cod1 = 11120
               and a.tp1corr1 = 1
               and a.tp1corr2 = 3
               and a.tp1corr3 >= 1
               and a.tp1nro1 = p.aqpa463txoren - 100;
          exception
            when others then
              lc_flg := 'N';
          end;
  
          --2023.10.01
          if lc_flg = 'S' and p.aqpa463txoren = 170  then
             lc_flg := 'N';
          end if;
          --2023.10.01
          
          
          --obtener cuenta moneda hora fecha
          ln_cta := p.aqpa463cta;
          ln_mda := p.aqpa463mda;
        
          begin
            select a.ithora, a.itfcon
              into lc_hor, ld_fec
              from fsd015 a
             where a.pgcod = p.aqpa463pgcod
               and a.itmod = p.aqpa463hcmod
               and a.itsuc = p.aqpa463hsucor
               and a.ittran = p.aqpa463htran
               and a.itnrel = p.aqpa463hnrel;
          exception
            when others then
              null;
          end;
        
          ----------Obtener codigo de sunat
          begin
            select lpad(a.tp1nro2, 4, '0')
              into lc_codsunat
              from fst198 a
             where a.tp1cod = 1
               and a.tp1cod1 = 11120
               and a.tp1corr1 = 1
               and a.tp1corr2 = 500
               and a.tp1nro1 = p.aqpa463hsucor;
          exception
            when others then
              null;
          end;
        
          begin
            -- Call the procedure
            pq_cr_factura_electronica.sp_fecha_sys(pc_fecha);
          end;
        
          if lc_flg = 'N' then
            --inserte conceptos de deuda como fila
          
            ln_mtoconce := to_number(trim(p.aqpa463txtord),
                                     '99999999999999999.99');
          
            --2023.10.01   
                                             
           /* begin
                  pq_cr_factura_electronica.sp_cr_cobroefectivoTI(pn_pgcod => p.aqpa463pgcod,
                                                                 pn_hcmod => p.aqpa463hcmod,
                                                                 pn_hsucor => p.aqpa463hsucor,
                                                                 pn_htran => p.aqpa463htran,
                                                                 pn_hnrel => p.aqpa463hnrel,
                                                                 pn_hfcon => p.aqpa463hfcon,
                                                                 pc_serie => p.aqpa463serie,
                                                                 pn_corr => p.aqpa463corre,
                                                                 pn_mto => ln_mtoconce);
            end;*/

           begin
                  pq_cr_factura_electronica.sp_cr_cobroefectivo(pn_pgcod => p.aqpa463pgcod,
                                                                 pn_hcmod => p.aqpa463hcmod,
                                                                 pn_hsucor => p.aqpa463hsucor,
                                                                 pn_htran => p.aqpa463htran,
                                                                 pn_hnrel => p.aqpa463hnrel,
                                                                 pn_hfcon => p.aqpa463hfcon,
                                                                 pc_serie => p.aqpa463serie,
                                                                 pn_corr => p.aqpa463corre,
                                                                 pn_mto => ln_mtoconce);
            end;                        
          
            if ln_mtoconce <> 0 then
            
              --datos persona
              begin
              
                pq_cr_factura_electronica.sp_num_documento(ln_cta,
                                                           lc_pendoc,
                                                           lv_penom,
                                                           pv_tdoc,
                                                           pn_pais,
                                                           ln_petdoc,
                                                           pd_pgfape2);
              end;
            
              --datos direccion cliente
              begin
                -- Call the procedure
                pq_cr_factura_electronica.sp_dir_cliente(lc_pendoc,
                                                         ln_petdoc,
                                                         pn_pais,
                                                         lv_sngc13dir,
                                                         lv_fst071dsc1,
                                                         lv_locnom1,
                                                         lv_depnom1,
                                                         lv_ubgCli); ---dni  pn_pendoc
              end;
            
              --Codigo del Tipo de Comprobante
            
              if substr(p.aqpa463serie, 1, 1) = 'F' then
                ln_guiaCP := 1;
              elsif substr(p.aqpa463serie, 1, 1) = 'B' then
                ln_guiaCP := 3;
              else
                ln_guiaCP := null;
              end if;
            
              begin
                select '0' || to_char(a.tp1nro1)
                  into lv_codtipo
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 7
                   and a.tp1corr3 = ln_guiaCP;
              exception
                when others then
                  null;
              end;
            
              --Codigo tipo moneda
              begin
                select trim(a.tp1desc)
                  into lv_tipomda
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 8
                   and a.tp1corr3 >= 1
                   and a.tp1nro1 = ln_mda;
              exception
                when others then
                  null;
              end;
            
              --texto moneda  
              begin
                select trim(a.tp1desc)
                  into lv_desmda
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 2
                   and a.tp1corr2 = 5
                   and a.tp1corr3 >= 1
                   and a.tp1nro1 = ln_mda;
              exception
                when others then
                  null;
              end;
            
              /*              --Codigo tipo documento cliente
                            begin
                              select to_char(a.tp1nro1)
                                into lv_codtdoc
                                from fst198 a
                               where a.tp1cod = 1
                                 and a.tp1cod1 = 11120
                                 and a.tp1corr1 = 1
                                 and a.tp1corr2 = 4
                                 and a.tp1nro2 = ln_petdoc;
                            exception
                              when others then
                                null;
                            end;
              */
              --Codigo tipo documento cliente
              begin
                select to_char(a.tp1nro1), substr(trim(TP1DESC), -1, 1)
                  into lv_codtdoc, lv_codtdocC
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 4
                   and a.tp1nro2 = ln_petdoc;
              exception
                when others then
                  null;
              end;
            
              --05/04/2023 dcastro se agrego nuevo tipo documento PTP
              if lv_codtdoc = 3 then
                lv_codtdoc := lv_codtdocC;
              end if;
              --05/04/2023 dcastro se agrego nuevo tipo documento PTP
            
              --Correo del cliente
              lv_correo := null;
              begin
                select substr(a.pextxt, 1, INSTR(a.pextxt, '\', 1) - 1)
                  into lv_correo
                  from fsx001 a
                 where a.pepais = pn_pais
                   and a.petdoc = ln_petdoc
                   and a.pendoc = lc_pendoc
                   and a.txcod = 0
                   and rownum = 1 --- 2021/11/11 dcastro se agrego condicion
                 order by a.pexren desc;
              exception
                when others then
                  null;
              end;
            
              --nro item
              ln_item := 0;
              begin
                select max(a.aqpa460item)
                  into ln_item
                  from aqpa460 a
                 where a.aqpa460seri = p.aqpa463serie
                   and a.aqpa460num = p.aqpa463corre;
              exception
                when too_many_rows then
                  begin
                    select max(a.aqpa460item)
                      into ln_item
                      from aqpa460 a
                     where a.aqpa460seri = p.aqpa463serie
                       and a.aqpa460num = p.aqpa463corre
                       and rownum = 1;
                  exception
                    when others then
                      null;
                  end;
                when no_data_found then
                  ln_item := 0;
                when others then
                  null;
              end;
              ln_nroitem := nvl(ln_item, 0) + 1;
            
              --descripcion conceptos
              lv_desconce := trim(p.aqpa463hvchr);
              
               ---2023.09.20 dcastro campaña ahorraton
             lc_indGratuita := 'N'; 
             begin
                  select 'S' --si existe es transferencia gratuita
                  into lc_indGratuita
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120-- for update
                   and a.tp1corr1 = 41
                   and a.tp1corr2 > 0
                   and a.tp1nro1 = p.aqpa463hcmod
                   and a.tp1nro2 = p.aqpa463htran;
              exception when others then
                    lc_indGratuita := 'N'; 
              end;
              if lc_indGratuita = 'S' then ---p.aqpa463hcmod = 98 and p.aqpa463htran in (236, 779) then ---236
                begin
                    pq_cr_factura_electronica.sp_datos_campania(pd_fecha =>  p.aqpa463hfcon,
                                                               pn_cuenta =>  p.aqpa463cta,
                                                               pc_serie =>   p.aqpa463serie,
                                                               pn_numero =>  p.aqpa463corre, 
                                                               pn_emp =>     p.aqpa463pgcod,
                                                               pn_suc =>     p.aqpa463hsucor,
                                                               pn_mod =>     p.aqpa463hcmod, 
                                                               pn_tra =>     p.aqpa463htran,
                                                               pn_rel =>     p.aqpa463hnrel,
                                                               pc_datos => lv_desconce);
                end;
              end if;

              ---2023.09.20

            
              --Codigo de plantilla
              lc_codpla := 'EST';
            
              --- Sistema de Emicion 
              lc_sistemi := 'BANTOT';
            
              --Codigo tipo doc empresa
              begin
                select a.tp1nro1
                  into ln_docemp
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 4;
              exception
                when others then
                  null;
              end;
            
              begin
                select to_char(a.tp1nro1)
                  into lv_tipemp
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 4
                   and a.tp1corr3 >= 1
                   and a.tp1nro2 = ln_docemp;
              
              exception
                when others then
                  null;
              end;
              --ruc caja
              begin
                select trim(a.tp1desc)
                  into lv_ruc
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 1;
              exception
                when others then
                  null;
              end;
            
              --NOMBRE COMERCIAL caja
              begin
                select a.tp1desc
                  into lv_NCOM
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 5;
              exception
                when others then
                  null;
              end;
            
              --Ubigeo caja
              begin
                select trim(a.tp1desc)
                  into lv_ubg
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 6;
              exception
                when others then
                  null;
              end;
              ---------------------------------------campos parte 2
              ----------hora de transacion 
              begin
                select trim(a.aqpa463txtord)
                  into lv_hora
                  from aqpa463 a
                 where a.aqpa463pgcod = p.aqpa463pgcod
                   and a.aqpa463hcmod = p.aqpa463hcmod
                   and a.aqpa463hsucor = p.aqpa463hsucor
                   and a.aqpa463htran = p.aqpa463htran
                   and a.aqpa463hnrel = p.aqpa463hnrel
                   and a.aqpa463hfcon = p.aqpa463hfcon
                   and a.aqpa463serie = p.aqpa463serie
                   and a.aqpa463corre = p.aqpa463corre
                   and a.aqpa463txtord like '%:%';
              exception
                when others then
                  null;
              end;
            
              begin
                select pgfape into ld_fecSis from fst017 where pgcod = 1;
              exception
                when others then
                  null;
              end;
              if lv_hora is null then
              
                if ld_fecSis = p.aqpa463hfcon then
                
                  begin
                    select a.ithora
                      into lv_hora
                      from fsd015 a
                     where a.pgcod = p.aqpa463pgcod
                       and a.itsuc = p.aqpa463hsucor
                       and a.itmod = p.aqpa463hcmod
                       and a.ittran = p.aqpa463htran
                       and a.itnrel = p.aqpa463hnrel;
                  exception
                    when others then
                      null;
                  end;
                
                else
                  begin
                    select a.hhora
                      into lv_hora
                      from fsh015 a
                     where a.pgcod = p.aqpa463pgcod
                       and a.hsucor = p.aqpa463hsucor
                       and a.hcmod = p.aqpa463hcmod
                       and a.htran = p.aqpa463htran
                       and a.hnrel = p.aqpa463hnrel
                       and a.hfcon = p.aqpa463hfcon;
                  exception
                    when others then
                      null;
                  end;
                end if;
              
              end if;
            
              -------Codigo de tipo de importe de afectacion
              Begin
                select to_char(a.tp1nro1)
                  into lc_oneroso
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 12
                   and a.tp1corr3 = 3;
              exception
                when others then
                  null;
              End;
            
              /* MONTO IGV */
              begin
                pq_cr_factura_electronica.sp_cr_cobroigv(pn_pgcod  => p.aqpa463pgcod,
                                                         pn_hcmod  => p.aqpa463hcmod,
                                                         pn_hsucor => p.aqpa463hsucor,
                                                         pn_htran  => p.aqpa463htran,
                                                         pn_hnrel  => p.aqpa463hnrel,
                                                         pn_hfcon  => p.aqpa463hfcon,
                                                         pc_serie  => p.aqpa463serie,
                                                         pn_corr   => p.aqpa463corre,
                                                         pn_mto    => ln_mtoImpuesto);
              
              end;
              /* MONTO IGV */
              
              ---2023.09.20 ahorraton importe debe ser 0
             lc_indGratuita := 'N'; 
             begin
                  select 'S' --si existe es transferencia gratuita
                  into lc_indGratuita
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120-- for update
                   and a.tp1corr1 = 41
                   and a.tp1corr2 > 0
                   and a.tp1nro1 = p.aqpa463hcmod
                   and a.tp1nro2 = p.aqpa463htran;
              exception when others then
                    lc_indGratuita := 'N'; 
              end;

              ln_mtoconce1 := ln_mtoconce;              
              if lc_indGratuita = 'S' then ---p.aqpa463hcmod = 98 and p.aqpa463htran in (236, 779) then ---236

                pn_monto_total_1 := 0; --se comento total
                ln_mtoconce      := 0;
                ln_mtoImpuesto   := 0;
                --AQPA460VVUN

                
                  begin
                    pq_cr_factura_electronica.sp_cr_calculatotal2(pd_feccon => p.aqpa463hfcon,
                                                                  pn_aqpa463pgcod => p.aqpa463pgcod,
                                                                  pn_aqpa463hcmod => p.aqpa463hcmod,
                                                                  pn_aqpa463hsucor => p.aqpa463hsucor,
                                                                  pn_aqpa463htran => p.aqpa463htran,
                                                                  pn_aqpa463hnrel => p.aqpa463hnrel,
                                                                  pn_monto => ln_mtoconce);
                  end;
              
                  ln_mtoconce1 := ln_mtoconce;
                  ln_SPVI := ln_mtoconce1;

              --2023.10.30 se agregó
              pn_monto_total_1 := ln_mtoconce + ln_mtoImpuesto;  --base imponible


              end if;
              
              --2023.09.20
            
              -----------------Descripcion del pais 
              begin
                Select trim(a.tp1desc)
                  Into lv_CPAIS
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 15
                   and a.tp1corr3 = 1;
              exception
                when others then
                  null;
              end;
            
              lv_partida    := null;
              lv_direccionH := null;
              lv_urbaH      := null;
              lv_dptoH      := null;
              lv_provH      := null;
              lv_distH      := null;
              lv_cdisn      := null;
            
              lc_contrato := lpad(to_char(p.aqpa463cta), 9, 0) ||
                             lpad(to_char(p.aqpa463mda), 3, 0) ||
                             lpad(to_char(p.aqpa463ope), 9, 0);
              lv_NCONT    := lc_contrato;
            
              lv_infpredio := null;
              lv_pendoc    := lc_pendoc;
            
              --Pais del cliente
            
              begin
                select trim(a.tp1desc)
                  into lv_cpai
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 20
                   and a.tp1NRO1 = pn_pais;
              exception
                when others then
                  null;
              end;
            
              --Producto del credito
              begin
                select to_char(p.aqpa463mod) || '-' || trim(a.tonom)
                  into lv_TEXT1
                  from fst004 a
                 where a.modulo = p.aqpa463mod
                   and a.totope = p.aqpa463top;
              
              exception
                when others then
                  null;
              end;
            
              --direccion
              begin
                select to_char(a.tp1desc)
                  into lv_CALLE
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 2;
              
              exception
                when others then
                  null;
              end;
            
              --telefono
              begin
                select trim(to_char(a.tp1desc))
                  into lv_TELF
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 3;
              exception
                when others then
                  null;
              end;
            
              Begin
                ---web de caja arequipa
                select trim(a.tp1desc)
                  into lv_web
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 12;
              exception
                when others then
                  null;
              End;
            
              --departamento
              begin
                select to_char(a.tp1desc)
                  into lv_DEPA
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 7;
              
              exception
                when others then
                  null;
              end;
            
              --provincia
              begin
                select to_char(a.tp1desc)
                  into lv_PROV
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 8;
              
              exception
                when others then
                  null;
              end;
            
              --distrito
              begin
                select to_char(a.tp1desc)
                  into lv_DIST
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 9;
              
              exception
                when others then
                  null;
              end;
            
              --razon social
            
              begin
                select to_char(a.tp1desc)
                  into lv_rzn1
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 10;
              
              exception
                when others then
                  null;
              end;
            
              begin
                select to_char(a.tp1desc)
                  into lv_rzn2
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr1 = 1
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 11;
              
              exception
                when others then
                  null;
              end;
              lv_rzn := trim(lv_rzn1) || ' ' || trim(lv_rzn2);
            
              --2023.10.01
---COMENTADO --revisar 2023.10.30              pn_monto_total_1 := ln_mtoconce + ln_mtoImpuesto;  --base imponible
            
              lv_glosa := null;
              lv_TPLA  := 'EST';
              lv_TPLCO := 'EST';
              lv_TXML  := '2.1';
              lv_urb   := null;
              lv_PNETU := 'NIU';
              ln_cant  := 1;
              lv_CTPR  := '01';
            
              ln_PRVIT := ln_mtoconce; ---precio venta unitario
              lv_MEDEM := 'UND';
              lv_CSUNA := '84121500';
              lv_SISC  := null;
              ln_MBIM  := ln_mtoconce;
              ln_CDLEY := 1000;
            
              lv_TEXT2   := lpad(to_char(p.aqpa463cta), 9, 0) ||
                            lpad(to_char(p.aqpa463mda), 3, 0) ||
                            lpad(to_char(p.aqpa463ope), 9, 0);
              lv_TRECV   := lv_correo;
              lv_TEMPL   := 'EST';
              lv_SUBJE   := '0' || trim(lv_codtipo) || '-' ||
                            P.AQPA463SERIE || '-' ||
                            trim(to_char(P.AQPA463CORRE));
              lv_VPCVA   := null;
              lv_NEXP    := '0';
              lv_CIND    := '0';
              ln_BSIMP   := null;
              ln_VAIMP   := null;
              ln_MTGRT   := null;
              ln_BSIMPS  := null;
              ln_MTOTI   := null;
              lv_CPGS1   := null;
              ln_MTINF   := null;
              lv_COMA    := to_char(p.aqpa463hfcon, 'yymmdd') ||
                            lpad(to_char(p.aqpa463hsucor), 3, 0) ||
                            lpad(to_char(p.aqpa463hcmod), 3, 0) ||
                            lpad(to_char(p.aqpa463htran), 3, 0) ||
                            lpad(to_char(p.aqpa463hnrel), 4, 0);
  --
        /*2023.10.01            ln_MTIMP   := ln_mtoImpuesto;
                    ln_IMPEX   := ln_mtoImpuesto;
                    ln_ITITM   := ln_mtoImpuesto;
                    ln_IMPTB   := ln_mtoImpuesto;
         */
              ln_PCIMA   := 18.0;
              ln_TAIMP   := 18;
              ln_MTOTAL  := ln_mtoconce;
              ln_BAIMP   := ln_mtoconce;
              ln_SVITM   := ln_mtoconce;
              lv_tipoope := '0101';
              --2023.10.01            ln_SIMC    := ln_mtoImpuesto; --AQPA460SIMC   total impuesto
              --lv_desconce    := 'IGV'; --AQPA460DESC 
              lv_afecigv     := 10; --AQPA460AFIGV
              --2023.10.01              lv_idtrbsunat  := 1000; -- AQPA460CODTB   ---------Identificaci?n del tributo seg?n cat?logo SUNAT
              lv_nomtrbsunat := 'IGV'; --AQPA460DSTRB  
              lv_codun       := 'VAT'; --AQPA460CODUN 
              ln_VVUIG       := 0;
            

              
              if lc_indGratuita = 'S' then ---p.aqpa463hcmod = 98 and p.aqpa463htran in (236, 779) then ---236
              --actualizando con valor
                ln_MTGRT         := ln_mtoconce;--AQPA460MTGRT	123
                ln_BSIMPS        := ln_mtoconce;--AQPA460BSIMPS	123
                --actualizando a 0 monto concepto
                ln_mtoconce      := 0;
                ln_mtoImpuesto   := 0;
                lv_idtrbsunat    := 9996; -- AQPA460CODTB   ---------Identificaci?n del tributo seg?n cat?logo SUNAT
                ln_CDLEY         := 1002;
                lv_TELEY         := 'TRANSFERENCIA GRATUITA DE UN BIEN Y/O SERVICIO PRESTADO GRATUITAMENTE';--AQPA460TELEY	TRANSFERENCIA GRATUITA DE UN BIEN Y/O SERVICIO PRESTADO GRATUITAMENTE
                lv_TEXT1         := null;--AQPA460TEXT1	nulo
                lv_TEXT2         := null;--AQPA460TEXT2	nulo
                ln_MTOTI         := ln_mtoImpuesto;--AQPA460MTOTI	0

             else 
                lv_idtrbsunat  := 1000; -- AQPA460CODTB   ---------Identificaci?n del tributo seg?n cat?logo SUNAT                
---2023.10.30 se comento                lv_afecigv := 17;
              end if;

              ln_SIMC    := ln_mtoImpuesto; --AQPA460SIMC   total impuesto se cambio d eposicion variable
              ln_MTIMP   := ln_mtoImpuesto;
              ln_IMPEX   := ln_mtoImpuesto;
              ln_ITITM   := ln_mtoImpuesto;
              ln_IMPTB   := ln_mtoImpuesto;
              
              
              ---2023.10.01
            
              ----------------------datos caja
              Begin
                ---razon social de caja arequipa
                select a.tp1desc
                  into lc_nom1
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 10;
              exception
                when others then
                  null;
              End;
            
              Begin
                ---razon social de caja arequipa
                select a.tp1desc
                  into lc_nom2
                  from fst198 a
                 where a.tp1cod = 1
                   and a.tp1cod1 = 11120
                   and a.tp1corr2 = 6
                   and a.tp1corr3 = 11;
              exception
                when others then
                  null;
              End;
            
              lc_nomcaja := trim(lc_nom1) || trim(lc_nom2);
            
              lv_sngc13dirFin := trim(lv_sngc13dir) || ' - ' ||
                                 trim(lv_fst071dsc1) || ' - ' ||
                                 trim(lv_locnom1) || ' - ' ||
                                 trim(lv_depnom1);
              lv_depnom1      := null;
              lv_locnom1      := null;
              lv_fst071dsc1   := null;
            
              if lv_correo is null then
                lv_correo := 'Reportefactele@cajaarequipa.pe';
              end if;
            
              if lv_TRECV is null then
                lv_TRECV := 'Reportefactele@cajaarequipa.pe';
              end if;
            
              ------insert detalle de factura
              BEGIN
                insert into AQPA460
                  (AQPA460TDOC, --Codigo del Tipo de Documento de Identidad oENEmpresa
                   AQPA460RUCC, --N?mero de documento de identidad del emisor oENEmpresa
                   AQPA460RSOC, --Apellidos y nombres o denominaci?n o raz?n social oENEmpresa
                   AQPA460CDIS, --Codigo de UBIGEO oENEmpresa
                   AQPA460NCOM, --Nombre Comercial oENEmpresa
                   AQPA460CALLE, --Direcci?n completa y detallada oENEmpresa
                   AQPA460URBA, --Urbanizacion o Zona  oENEmpresa
                   AQPA460DEPA, --Departamento, expresado textualmente  oENEmpresa
                   AQPA460PROV, --Provincia, expresarlo textualmente   oENEmpresa
                   AQPA460DIST, --Distrito, expresarlo textualmente oENEmpres
                   AQPA460TELF, --Telefono de la Empresa Emisora oENEmpres
                   AQPA460WEB, --Pagina Web del Emisor oENEmpres           
                   AQPA460CPAIS, --Codigo del Pais del Emisor oENEmpres
                   AQPA460CESUN, --C?digo del establecimiento de Sunat  oENEmpres
                   AQPA460SERI, --Serie del comprobante.  Datos del Comprobante
                   AQPA460NUM, --Numero Correlativo del comprobante. Datos del Comprobante
                   AQPA460FEMI, --Fecha de Emision del Comprobante Datos del Comprobante
                   AQPA460TCOMF, --Codigo del Tipo de Comprobante Datos del Comprobante
                   AQPA460MONE, --Codigo del Tipo de Moneda Datos del Comprobante
                   AQPA460CORRR, --El correo electr?nico del Receptor  Datos del Comprobante
                   AQPA460MGLO, --Multiples Informaci?n adicional u observacion del comprobante.  Datos del Comprobante
                   AQPA460COMA, --Numero Interno del Comprobante Datos del Comprobante
                   AQPA460TPLA, --Tiplo de Plantilla  Datos del Comprobante
                   AQPA460TOPE, --C?digo de Tipo de operaciones Datos del Comprobante
                   AQPA460TPLCO, --C?digo de plantilla de correo  Datos del Comprobante
                   AQPA460CLOG, --C?digo del tipo de Logo Datos del Comprobante
                   AQPA460TDOCR, --Codigo del tipo de documento de identificaci?n del Receptor Datos del Comprobante
                   AQPA460NRUC, --N?mero de documento de identificaci?n Datos del Comprobante
                   AQPA460RASOC, --Apellidos y nombres o denominaci?n o raz?n social Datos del Comprobante
                   AQPA460IMPT, --Importe total  a pagar Datos del Comprobante
                   AQPA460HEMI, --Hora de Emisi?n  Datos del Comprobante
                   AQPA460SIMC, --Suma de todos los impuestos del comprobante.  Datos del Comprobante
                   AQPA460SVITM, --Suma del valor de venta total de todos los items   Datos del Comprobante
                   AQPA460SPVI, --Suma de los precios de venta total de todos los items  Datos del Comprobante
                   AQPA460TXML, -- Indica el tipo de XML que se generar? Datos del Comprobante
                   AQPA460CDIST, --C?digo de UBIGEO Datos adicionales del Receptor
                   AQPA460CALL, --Direcci?n completa y detallada Datos adicionales del Receptor
                   AQPA460URB, --Urbanizacion o Zona   Datos adicionales del Receptor
                   AQPA460DEP, --Departamento Datos adicionales del Receptor
                   AQPA460PRV, --Provincia   Datos adicionales del Receptor
                   AQPA460DST, --Distrito Datos adicionales del Receptor
                   AQPA460CPAI, --C?digo del Pa?s  Datos adicionales del Receptor
                   AQPA460ITEM, --N?mero de orden del Item ENComprobanteDetalle 
                   AQPA460PNETU, --Unidad de medida de los bienes vendidos por item (UN/ECE rec 20) ENComprobanteDetalle 
                   AQPA460CANTF, --Cantidad de unidades vendidas pot item (Q)  ENComprobanteDetalle 
                   AQPA460TOTAL, --Importe monetario que es el total de la l?nea de detalle, incluyendo variaciones de precio (subvenciones, cargos o descuentos) pero sin impuestos.  ENComprobanteDetalle 
                   AQPA460DETE, --Codigo de identificaci?n de Onerosidad del Item ENComprobanteDetalle 
                   AQPA460CTPR, --Codigo de tipo de importe de afectacion ENComprobanteDetalle 
                   AQPA460VVUN, --Valores de venta unitarios por item (VU) no incluye impuestos  ENComprobanteDetalle 
                   AQPA460VVUIG, --Precio de Venta Unitario (Incluye impuestos)  ENComprobanteDetalle 
                   AQPA460DESC, -- Descripcion del producto ENComprobanteDetalle 
                   AQPA460MFUN, --Multi Descripcion,  puede tener varias desccripciones ENComprobanteDetalle 
                   AQPA460PRVIT, --Es el precio de venta ENComprobanteDetalle 
                   AQPA460MEDEM, --Unidad medida del emisor ENComprobanteDetalle 
                   AQPA460CSUNA, --C?digo producto establecido por Sunat   ENComprobanteDetalle 
                   AQPA460CPGS1, --C?digo de producto GS1  ENComprobanteDetalle 
                   AQPA460ITITM, --Impuesto total del item ENComprobanteDetalle 
                   AQPA460IMPTB, --Importe total de un tributo para este item Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460IMPEX, ---Importe expl?cito a tributar ( = Tasa Porcentaje * Base Imponible)   Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460AFIGV, --Afectaci?n del IGV  Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460SISC, --Sistema de ISC  (01=Especifico; 02= al valor; 03=PV al p?blico)  Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460CODTB, --Identificaci?n del tributo seg?n cat?logo SUNAT Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460DSTRB, --Nombre del Tributo (IGV, IVAP, ISC)  Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460CODUN, --C?digo del Tipo de Tributo (UN/ECE 5153) Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460MBIM, --Monto base del impuesto Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460TAIMP, --Tasa aplicada del impuesto  Informaci?n acerca del importe total de un tipo particular de impuesto. Una repetici?n por IGV, ISC, IVAP.
                   AQPA460CDLEY, --Codigo de la Leyenda Utilizado para Leyendas
                   AQPA460TELEY, --Texto de la leyenda  Utilizado para Leyendas
                   AQPA460TEXT1, --Texto libre 1 : Producto  Informaci?n adicional para la visualizacion de representaciones impresas, antes definido por el integrador.
                   AQPA460TEXT2, --Texto libre 2 : N?mero de Cr?dito Informaci?n adicional para la visualizacion de representaciones impresas, antes definido por el integrador.
                   AQPA460TRECV, --Correo del receptor Utilizado para enviar correos adicionales con copia al Correo del Receptor, ingresado en ENComprobante.Correo
                   AQPA460TEMPL, --C?digo de Tipo de Plantilla  Utilizado para enviar correos adicionales con copia al Correo del Receptor, ingresado en ENComprobante.Correo
                   AQPA460SUBJE, --Asunto del correo Utilizado para enviar correos adicionales con copia al Correo del Receptor, ingresado en ENComprobante.Correo
                   AQPA460VPCVA, --Placa del vehiculo Informaci?n adicional del item
                   AQPA460NEXP, --N?mero de Expediente Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460CIND, --C?digo de indicador  Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460NPART, --N?mero de Partida Registral  Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460NCONT, --N?mero de contrato  Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460FOTRC, --Fecha de Otorgo de cr?dito   Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460CDISN, --C?digo de Ubigeo   Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460DIREH, --Direcci?n   Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460URBH, --Urbanizaci?n Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460PRVH, --Provincia   Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460DSTH, --Distrito   Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460DEPTH, --Departamento Informaci?n adicional  a nivel de ?tem -  Gastos intereses hipotecarios primera vivienda
                   AQPA460MTOTAL, --Monto total Gravado (Sin impuesto)  Informaci?n de gravada                           
                   AQPA460BAIMP, --Base del impuesto  IGV del Gravado
                   AQPA460MTIMP, --Monto total solo del impuesto   IGV del Gravado
                   AQPA460PCIMA, --Porcentaje del impuesto aplicado  IGV del Gravado
                   AQPA460BSIMP, --Base del impuesto Otros impuestos del Gravado
                   AQPA460VAIMP, --Monto total solo del impuesto  Otros impuestos del Gravado
                   AQPA460MTINF, --Monto total Inafecto  Informaci?n de inafecto
                   AQPA460MTGRT, --Monto total Gratuito  Informaci?n de gratuito
                   AQPA460BSIMPS, --Base del impuesto Impuestos del Gratuito
                   AQPA460MTOTI, --Monto total de impuestos Impuestos del Gratuito
                   AQPA460PGC, --mod@abr 20180824
                   AQPA460MOD, --mod@abr 20180824  
                   AQPA460SUC, --mod@abr 20180824 
                   AQPA460TRX, --mod@abr 20180824
                   AQPA460REL, --mod@abr 20180824
                   AQPA460ORE, --mod@abr 20180824
                   AQPA460DOCU --2023.07.18 dcastro 
                   )
                
                Values
                  (lv_tipemp, --AQPA460TDOC,  ok
                   lv_ruc, --AQPA460RUCC,  ok
                   lv_rzn, --AQPA460RSOC,  ok
                   lv_ubg, --AQPA460CDIS,  ok
                   lv_NCOM, --AQPA460NCOM,  ok
                   lv_CALLE, --AQPA460CALLE  ok
                   lv_urb, --AQPA460URBA,  ok
                   lv_DEPA, --AQPA460DEPA,  ok
                   lv_PROV, --AQPA460PROV,  ok
                   lv_DIST, --AQPA460DIST,  ok
                   lv_TELF, --AQPA460TELF,  ok
                   lv_WEB, --AQPA460WEB,   ok
                   lv_CPAIS, --AQPA460CPAIS  ok
                   lc_codsunat, --lv_CESUN,        --AQPA460CESUN
                   p.aqpa463serie, --AQPA460SERI,  ok
                   p.aqpa463corre, --AQPA460NUM,   ok
                   p.aqpa463hfcon, --AQPA460FEMI,  ok
                   lv_codtipo, --AQPA460TCOMF  ok
                   lv_tipomda, --AQPA460MONE,  ok
                   lv_correo, --AQPA460CORRR  ok
                   lv_glosa, --AQPA460MGLO,  ok
                   lv_COMA, --AQPA460COMA,  ok
                   lv_TPLA, --AQPA460TPLA,  ok
                   lv_tipoope, --AQPA460TOPE,  ok
                   lv_TPLCO, --AQPA460TPLCO  ok
                   lv_CLOG, --AQPA460CLOG,
                   lv_codtdoc, --AQPA460TDOCR  ok
                   lv_pendoc, --AQPA460NRUC,  ok
                   lv_penom, --AQPA460RASOC  ok
                   pn_monto_total_1, --AQPA460IMPT,  ok
                   lv_hora, --AQPA460HEMI,  ok
                   ln_SIMC, --AQPA460SIMC,  ok
                   ln_SVITM, --AQPA460SVITM  ok
                   ln_SPVI, --AQPA460SPVI,  ok
                   lv_TXML, --AQPA460TXML,  ok
                   lv_ubgCli, --AQPA460CDIST,  ok
                   lv_sngc13dir, --AQPA460CALL,   ok
                   lv_urb, --AQPA460URB,    ok
                   lv_depnom1, --AQPA460DEP,    ok
                   lv_locnom1, --AQPA460PRV,    ok
                   lv_fst071dsc1, --AQPA460DST,    ok
                   lv_cpai, --AQPA460CPAI,   ok
                   ln_nroitem, --AQPA460ITEM,   ok
                   lv_PNETU, --AQPA460PNETU,  ok
                   ln_cant, --AQPA460CANTF,  ok
                   ln_mtoconce, --AQPA460TOTAL,  ok
                   lc_oneroso, --AQPA460DETE,   ok
                   lv_CTPR, --AQPA460CTPR,   ok
                   ln_mtoconce1, --AQPA460VVUN,   ok to number
                   ln_VVUIG, --AQPA460VVUIG,  ok
                   lv_desconce, --AQPA460DESC,   ok
                   lv_infpredio, --AQPA460MFUN,   ok
                   ln_PRVIT, --AQPA460PRVIT,  ok
                   lv_MEDEM, --AQPA460MEDEM,  ok
                   lv_CSUNA, --AQPA460CSUNA,  ok
                   lv_CPGS1, --AQPA460CPGS1,  ok
                   ln_ITITM, --AQPA460ITITM,  ok
                   ln_IMPTB, --AQPA460IMPTB,  ok
                   ln_IMPEX, --AQPA460IMPEX,  ok
                   lv_afecigv, --AQPA460AFIGV,  ok
                   lv_SISC, --AQPA460SISC,   ok
                   lv_idtrbsunat, --AQPA460CODTB,  ok
                   lv_nomtrbsunat, --AQPA460DSTRB,  ok
                   lv_codun, --AQPA460CODUN,  ok
                   ln_MBIM, --AQPA460MBIM,   ok
                   ln_TAIMP, --AQPA460TAIMP,  ok
                   ln_CDLEY, --AQPA460CDLEY,  ok
                   lv_TELEY, --AQPA460TELEY,  ok
                   lv_TEXT1, --AQPA460TEXT1,  ok
                   lv_TEXT2, --AQPA460TEXT2,  ok
                   lv_TRECV, --AQPA460TRECV,  ok
                   lv_TEMPL, --AQPA460TEMPL,  ok
                   lv_SUBJE, --AQPA460SUBJE,  ok
                   lv_VPCVA, --AQPA460VPCVA,  ok
                   lv_NEXP, --AQPA460NEXP,   ok
                   lv_CIND, --,        --AQPA460CIND,   ok
                   nvl(lv_partida, ' '), --G74.3  --AQPA460NPART,  ok
                   nvl(lv_NCONT, ' '), -- G74.4 NUMERO CONTRATO                AQPA460NCONT,  ok 
                   ld_fecoto, --G74.5  FECHA OTORGAMIENTO CREDITO   AQPA460FOTRC,  ok
                   nvl(lv_cdisn, ' '), --G74.6  Ubigeo                        AQPA460CDISN,  ok
                   nvl(lv_direccionH, ' '), --G74.7                           AQPA460DIREH,  ok
                   nvl(lv_urbaH, ' '), --G74.8                                 AQPA460URBH,   ok
                   nvl(lv_provH, ' '), --G74.9                                AQPA460PRVH,   ok
                   nvl(lv_distH, ' '), --G74.10                                AQPA460DSTH,   ok
                   nvl(lv_dptoH, ' '), --AQPA460DEPTH,  ok
                   ln_MTOTAL, --AQPA460MTOTAL  ok
                   ln_BAIMP, --AQPA460BAIMP,  ok
                   ln_MTIMP, --AQPA460MTIMP,  ok
                   ln_PCIMA, --AQPA460PCIMA,  ok
                   ln_BSIMP, --AQPA460BSIMP,  ok
                   ln_VAIMP, --AQPA460VAIMP,  ok
                   ln_MTINF, --AQPA460MTINF,  ok
                   ln_MTGRT, --AQPA460MTGRT,  ok
                   ln_BSIMPS, --AQPA460BSIMPS  ok
                   ln_MTOTI, --AQPA460MTOTI   ok
                   P.AQPA463PGCOD, --mod@abr 20180824
                   P.AQPA463HCMOD, --mod@abr 20180824
                   P.AQPA463HSUCOR, --mod@abr 20180824 
                   P.AQPA463HTRAN, --mod@abr 20180824
                   P.AQPA463HNREL, --mod@abr 20180824 
                   P.AQPA463TXOREN, --mod@abr 20180824
                   trim(lv_pendoc) --AQPA460DOCU,  2023.07.18 se agrego documento sin espacios
                   );
              
                commit;
              Exception
                when others then
                
                  lc_coderr := sqlcode;
                  lc_msgerr := sqlerrm;
                  begin
                      insert into aqpa460E
                        (aqpa460eserie,
                         aqpa460ecorr,
                         aqpa460epgcod,
                         aqpa460emod,
                         aqpa460esucorend,
                         aqpa460etran,
                         aqpa460erel,
                         aqpa460econ,
                         aqpa460etip,
                         Aqpa460eacoe,
                         Aqpa460eamsge)
                      
                      values
                        (p.aqpa463serie,
                         p.aqpa463corre,
                         p.aqpa463pgcod,
                         p.aqpa463hcmod,
                         p.aqpa463hsucor,
                         p.aqpa463htran,
                         p.aqpa463hnrel,
                         p.aqpa463hfcon,
                         
                         'S',
                         lc_coderr,
                         lc_msgerr);
                      commit;
                   exception when others then--- 2023.10.01
                      null;
                   end; --- 2023.10.01
              END;
              commit;
              ln_MTOTAL := 0;
              ln_BAIMP  := 0;
              ln_MTIMP  := 0;
              ln_PCIMA  := 0;
              ln_BSIMP  := 0;
              ln_VAIMP  := 0;
              ln_MTINF  := 0;
              ln_MTGRT  := 0;
              ln_BSIMPS := 0;
              ln_MTOTI  := 0;
            
            end if;
          end if;
        end if;
      
      ------------------------------------------------------------------------------------------------------------- 
      end loop;
  
  
    
      ----insert cabecera de factura aqpa465 
      begin
        -- Call the procedure
        pq_cr_factura_electronica.sp_cr_cabecera_facturaIGV(pd_pgfape);
      
      end;
    
    end;
  
  exception
    when others then
      null;
    
  end sp_cr_Detalle_Factura_IGV0;   
  
 procedure sp_cr_Cabecera_facturaIGV0(pd_pgfape in date) is
  
    pc_aqpa465hash varchar2(250) := '';
  
    cursor aqpa463 is
    
      select distinct (b.aqpa463pgcod),
                      (b.aqpa463hcmod),
                      (b.aqpa463hsucor),
                      (b.aqpa463htran),
                      (b.aqpa463hnrel),
                      (b.aqpa463hcord),
                      (b.aqpa463hfcon),
                      (b.aqpa463serie),
                      (b.aqpa463corre)
        from aqpa463 b
       where b.aqpa463hfcon = pd_pgfape
         and (b.aqpa463hcmod, b.aqpa463htran) in
             (select k.tp1nro1, k.tp1nro2
                from fst198 k
               where k.tp1cod = 1
                 and k.tp1cod1 = 11120
                 and k.tp1corr1 = 3
                 and k.tp1corr2 = 1
                 and tp1corr3 > 0)
      
      ;
  
    lc_flag char(1);
  
  begin
    begin
    
      for p in aqpa463 loop
      
        --si no existe registro insertar
        begin
          select 'S'
            into lc_flag
            from aqpa465 b
           where b.aqpa465serie = p.aqpa463serie
             and b.aqpa465corr = p.aqpa463corre
             and b.aqpa465pgcod = p.aqpa463pgcod
             and b.aqpa465mod = p.aqpa463hcmod
             and b.aqpa465sucor = p.aqpa463hsucor
             and b.aqpa465tran = p.aqpa463htran
             and b.aqpa465rel = p.aqpa463hnrel
             and b.aqpa465con = p.aqpa463hfcon;
        exception
          when others then
            lc_flag := 'N';
        end;
      
        if nvl(lc_flag, 'N') = 'N' then
        
          insert into aqpa465
            (aqpa465serie,
             aqpa465corr,
             aqpa465pgcod,
             aqpa465mod,
             aqpa465sucor,
             aqpa465tran,
             aqpa465rel,
             aqpa465con,
             aqpa465hash)
          values
            (p.aqpa463serie,
             p.aqpa463corre,
             p.aqpa463pgcod,
             p.aqpa463hcmod,
             p.aqpa463hsucor,
             p.aqpa463htran,
             p.aqpa463hnrel,
             p.aqpa463hfcon,
             pc_aqpa465hash);
        
          commit;
          
            ---2023.07.18 dcastro
            update aqpa460 a
               set a.aqpa460fecha = p.aqpa463hfcon
             where a.aqpa460seri = p.aqpa463serie
               and a.aqpa460num = p.aqpa463corre;
            commit;
            --
          
            begin
              pq_cr_factura_electronica.sp_datos_reporte(pn_emp => p.aqpa463pgcod,
                                                          pn_suc => p.aqpa463hsucor,
                                                          pn_mod => p.aqpa463hcmod,
                                                          pn_tra => p.aqpa463htran,
                                                          pn_rel => p.aqpa463hnrel,
                                                          pd_fec => p.aqpa463hfcon
                                                          );
            end;
        
        end if;
 

      
      end loop;
      commit;
    end;
  
  end sp_cr_Cabecera_facturaIGV0;                             
  
end pq_cr_Factura_Electronica;
/

