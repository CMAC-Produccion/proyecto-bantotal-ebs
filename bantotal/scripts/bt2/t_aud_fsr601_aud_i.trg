CREATE OR REPLACE TRIGGER T_AUD_FSR601_AUD_I  AFTER INSERT ON FSR601  FOR EACH ROW    DECLARE	     RequestNumber VARCHAR2(50);      UserName VARCHAR2(50); 	  WrkstName VARCHAR2(50); 	  Server VARCHAR2(50); 	  Application VARCHAR2(50); 	  ProgramName VARCHAR2(50); 	  TransactionNumber VARCHAR2(50); 	  ConnectionId VARCHAR2(50);      ExistConData NUMBER;    BEGIN      SELECT sys_context('USERENV', 'SID') INTO ConnectionId FROM dual;      SELECT COUNT(*) INTO ExistConData FROM DBA_OBJECTS WHERE OWNER=sys_context( 'userenv', 'current_schema' ) AND OBJECT_TYPE = 'TABLE' AND OBJECT_NAME = 'CONDATA';      IF ExistConData > 0 THEN 		 SELECT MAX(Value) INTO RequestNumber FROM CONDATA WHERE Data ='REQUESTID'; 		 SELECT MAX(Value) INTO UserName FROM CONDATA WHERE Data ='USERID'; 		 SELECT MAX(Value) INTO WrkstName FROM CONDATA WHERE Data ='WRKST'; 		 SELECT MAX(Value) INTO Server FROM CONDATA WHERE Data ='SERVER'; 		 SELECT MAX(Value) INTO Application FROM CONDATA WHERE Data ='APPLICATION'; 		 SELECT MAX(Value) INTO ProgramName FROM CONDATA WHERE Data ='PROGRAM';      END IF;     RequestNumber := COALESCE(RequestNumber,'-1');     TransactionNumber := COALESCE(TransactionNumber,'-1');     ConnectionId := COALESCE(ConnectionId,'-1');     SELECT COALESCE(UserName,sys_context('USERENV', 'SESSION_USER'),'NOTDEFINED') INTO UserName FROM dual;     SELECT COALESCE(WrkstName,sys_context('USERENV', 'HOST'),'NOTDEFINED') INTO WrkstName FROM dual;     SELECT COALESCE(Server,sys_context('USERENV', 'SERVER_HOST'),'NOTDEFINED') INTO Server FROM dual;     SELECT COALESCE(Application,sys_context('USERENV', 'ACTION'),'NOTDEFINED') INTO Application FROM dual;     SELECT COALESCE(ProgramName,sys_context('USERENV', 'ACTION'),'NOTDEFINED') INTO ProgramName FROM dual;      INSERT INTO BANTPROD.AUD_FSR601_AUDIT ( AUD_new_PP3COD,AUD_new_PP3CORR,AUD_new_PP3CTA,AUD_new_PP3MDA,AUD_new_PP3MOD,AUD_new_PP3OPER,AUD_new_PP3PAP,AUD_new_PP3SBOP,AUD_new_PP3SUC,AUD_new_PP3TOPE,AUD_new_PP4COD,AUD_new_PP4CTA,AUD_new_PP4MDA,AUD_new_PP4MOD,AUD_new_PP4OPER,AUD_new_PP4PAP,AUD_new_PP4PARC,AUD_new_PP4SBOP,AUD_new_PP4SOBR,AUD_new_PP4SUC,AUD_new_PP4TOPE, AUD_FSR601_GuidKey ,AUD_FSR601_UOn,AUD_FSR601_UT ,AUD_FSR601_UBR ,AUD_FSR601_UBC ,AUD_FSR601_UBT ,AUD_FSR601_UBU ,AUD_FSR601_UBA ,AUD_FSR601_UBS ,AUD_FSR601_UBP ,AUD_FSR601_UBM ,AUD_FSR601_UAs  )      VALUES (:new.PP3COD,:new.PP3CORR,:new.PP3CTA,:new.PP3MDA,:new.PP3MOD,:new.PP3OPER,:new.PP3PAP,:new.PP3SBOP,:new.PP3SUC,:new.PP3TOPE,:new.PP4COD,:new.PP4CTA,:new.PP4MDA,:new.PP4MOD,:new.PP4OPER,:new.PP4PAP,:new.PP4PARC,:new.PP4SBOP,:new.PP4SOBR,:new.PP4SUC,:new.PP4TOPE, SYS_GUID(),SYSTIMESTAMP,SYSTIMESTAMP,RequestNumber,ConnectionId,TransactionNumber,UserName,Application,Server,ProgramName,WrkstName,'I'); END T_AUD_FSR601_AUD_I;
/

