CREATE OR REPLACE PROCEDURE AUD_C_X054029_AUDIT AS cnt NUMBER; BEGIN SELECT COUNT(*) INTO cnt FROM BANTPROD.AUD_X054029_AUDIT; IF( cnt > 0 ) THEN INSERT INTO BANTPROD.AUD004 (AUDMstTim, AUDMstId, AUDMstTbl, AUDMstKey, AUDMstTrn, AUDMstUsr, AUDMstWst, AUDMstPgm, AUDMstReq, AUDMstTyp, AUDMstCon, AUDMstApp, AUDMstSrv, AUDMstSes, AUDMstGrp, AUDMstLog, AUDMstCur, AUDMstSnt,AUDMstTic) SELECT AUD_X054029_UOn,AUD_X054029_GuidKey,'X054029',CONCAT( CONCAT( CONCAT( CONCAT( CONCAT( CONCAT( CONCAT( '|PGCOD=', RTRIM(COALESCE(AUD_old_PGCOD,AUD_new_PGCOD)) ),CONCAT( '|XPRECOCOD=', RTRIM(COALESCE(AUD_old_XPRECOCOD,AUD_new_XPRECOCOD)) ) ),CONCAT( '|XPREMOD=', RTRIM(COALESCE(AUD_old_XPREMOD,AUD_new_XPREMOD)) ) ),CONCAT( '|XPREMONEDA=', RTRIM(COALESCE(AUD_old_XPREMONEDA,AUD_new_XPREMONEDA)) ) ),CONCAT( '|XPREPAPEL=', RTRIM(COALESCE(AUD_old_XPREPAPEL,AUD_new_XPREPAPEL)) ) ),CONCAT( '|XPRETOPE=', RTRIM(COALESCE(AUD_old_XPRETOPE,AUD_new_XPRETOPE)) ) ),'|' ),AUD_X054029_UBT,AUD_X054029_UBU,AUD_X054029_UBM,AUD_X054029_UBP,AUD_X054029_UBR,AUD_X054029_UAs,AUD_X054029_UBC,AUD_X054029_UBA,AUD_X054029_UBS, '', 'BANTOTAL', '', '', '',AUD_X054029_UT FROM BANTPROD.AUD_X054029_AUDIT WHERE NOT EXISTS (SELECT * FROM BANTPROD.AUD004 WHERE AUDMstTim = AUD_X054029_UOn AND AUDMstId = AUD_X054029_GuidKey); INSERT INTO BANTPROD.AUD005 SELECT AUD_X054029_UOn,AUD_X054029_GuidKey,'PGCOD',AUD_old_PGCOD,AUD_new_PGCOD FROM BANTPROD.AUD_X054029_AUDIT WHERE NOT EXISTS (SELECT * FROM BANTPROD.AUD005 WHERE AUDMstTim = AUD_X054029_UOn AND AUDMstId = AUD_X054029_GuidKey AND AUDMstFld = 'PGCOD'); INSERT INTO BANTPROD.AUD005 SELECT AUD_X054029_UOn,AUD_X054029_GuidKey,'XPRECOBRA',AUD_old_XPRECOBRA,AUD_new_XPRECOBRA FROM BANTPROD.AUD_X054029_AUDIT WHERE NOT EXISTS (SELECT * FROM BANTPROD.AUD005 WHERE AUDMstTim = AUD_X054029_UOn AND AUDMstId = AUD_X054029_GuidKey AND AUDMstFld = 'XPRECOBRA'); INSERT INTO BANTPROD.AUD005 SELECT AUD_X054029_UOn,AUD_X054029_GuidKey,'XPRECOCOD',AUD_old_XPRECOCOD,AUD_new_XPRECOCOD FROM BANTPROD.AUD_X054029_AUDIT WHERE NOT EXISTS (SELECT * FROM BANTPROD.AUD005 WHERE AUDMstTim = AUD_X054029_UOn AND AUDMstId = AUD_X054029_GuidKey AND AUDMstFld = 'XPRECOCOD'); INSERT INTO BANTPROD.AUD005 SELECT AUD_X054029_UOn,AUD_X054029_GuidKey,'XPRECOIMP',AUD_old_XPRECOIMP,AUD_new_XPRECOIMP FROM BANTPROD.AUD_X054029_AUDIT WHERE NOT EXISTS (SELECT * FROM BANTPROD.AUD005 WHERE AUDMstTim = AUD_X054029_UOn AND AUDMstId = AUD_X054029_GuidKey AND AUDMstFld = 'XPRECOIMP'); INSERT INTO BANTPROD.AUD005 SELECT AUD_X054029_UOn,AUD_X054029_GuidKey,'XPREMOD',AUD_old_XPREMOD,AUD_new_XPREMOD FROM BANTPROD.AUD_X054029_AUDIT WHERE NOT EXISTS (SELECT * FROM BANTPROD.AUD005 WHERE AUDMstTim = AUD_X054029_UOn AND AUDMstId = AUD_X054029_GuidKey AND AUDMstFld = 'XPREMOD'); INSERT INTO BANTPROD.AUD005 SELECT AUD_X054029_UOn,AUD_X054029_GuidKey,'XPREMODIF',AUD_old_XPREMODIF,AUD_new_XPREMODIF FROM BANTPROD.AUD_X054029_AUDIT WHERE NOT EXISTS (SELECT * FROM BANTPROD.AUD005 WHERE AUDMstTim = AUD_X054029_UOn AND AUDMstId = AUD_X054029_GuidKey AND AUDMstFld = 'XPREMODIF'); INSERT INTO BANTPROD.AUD005 SELECT AUD_X054029_UOn,AUD_X054029_GuidKey,'XPREMONEDA',AUD_old_XPREMONEDA,AUD_new_XPREMONEDA FROM BANTPROD.AUD_X054029_AUDIT WHERE NOT EXISTS (SELECT * FROM BANTPROD.AUD005 WHERE AUDMstTim = AUD_X054029_UOn AND AUDMstId = AUD_X054029_GuidKey AND AUDMstFld = 'XPREMONEDA'); INSERT INTO BANTPROD.AUD005 SELECT AUD_X054029_UOn,AUD_X054029_GuidKey,'XPREPAPEL',AUD_old_XPREPAPEL,AUD_new_XPREPAPEL FROM BANTPROD.AUD_X054029_AUDIT WHERE NOT EXISTS (SELECT * FROM BANTPROD.AUD005 WHERE AUDMstTim = AUD_X054029_UOn AND AUDMstId = AUD_X054029_GuidKey AND AUDMstFld = 'XPREPAPEL'); INSERT INTO BANTPROD.AUD005 SELECT AUD_X054029_UOn,AUD_X054029_GuidKey,'XPRETOPE',AUD_old_XPRETOPE,AUD_new_XPRETOPE FROM BANTPROD.AUD_X054029_AUDIT WHERE NOT EXISTS (SELECT * FROM BANTPROD.AUD005 WHERE AUDMstTim = AUD_X054029_UOn AND AUDMstId = AUD_X054029_GuidKey AND AUDMstFld = 'XPRETOPE'); DELETE FROM AUD_X054029_AUDIT  WHERE  EXISTS (SELECT * FROM BANT
PROD.AUD004 WHERE AUDMstTim = AUD_X054029_UOn AND AUDMstId = AUD_X054029_GuidKey);  COMMIT ;END IF;END;
/

